/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:00:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.weixin.zxdk;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.wap.util.DateTools;

public final class myOutsideCheckinInfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.wap.util.DateTools");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE html>\r\n\r\n\r\n");

request.setCharacterEncoding("UTF-8");
String path = request.getContextPath();
String[][] result = (String[][]) request.getAttribute("result");

      out.write("\r\n<HEAD>\r\n\t<TITLE>外出考勤信息</TITLE>\r\n\t<META content=\"text/html; charset=UTF-8\" http-equiv=Content-Type>\r\n\t<META name=viewport content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;\">\r\n\t<META name=apple-touch-fullscreen content=YES>\r\n\t<META name=apple-mobile-web-app-capable content=no>\r\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\" />\r\n\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/wap2/commonImport.jsp", out, false);
      out.write("\r\n\t<link rel=\"stylesheet\" href=\"/jsoa/css/weixin/weixin_main.css\">\r\n\t<script type=\"text/javascript\" src=\"/jsoa/js/weixin/mobiscroll/js/jquery-1.9.1.min.js\" ></script>\r\n</HEAD>\r\n<script language=JavaScript>\r\n");

String loginType2017 = null==session.getAttribute("loginType") ? "" : session.getAttribute("loginType").toString();
if(!"weixin".equals(loginType2017)){
  out.print("window.history.forward(1);");
}

      out.write("\r\nvar readyFunc = function onBridgeReady() {\r\n\t\r\n\t// 关闭当前webview窗口 - closeWindow\r\n\tdocument.querySelector('#closeWindow').addEventListener('click',\r\n\t\t\tfunction(e) {\r\n\t\t\t\tWeixinJSBridge.invoke('closeWindow', {}, function(res) {\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t//隐藏顶部右侧的分享按钮\r\n\tWeixinJSBridge.call('hideOptionMenu');\r\n\t//隐藏底部的工具栏\r\n\tWeixinJSBridge.call('hideToolbar');\r\n}\r\n\r\nif (typeof WeixinJSBridge === \"undefined\") {\r\n\tif (document.addEventListener) {\r\n\t\tdocument.addEventListener('WeixinJSBridgeReady', readyFunc,\r\n\t\t\t\tfalse);\r\n\t} else if (document.attachEvent) {\r\n\t\tdocument.attachEvent('WeixinJSBridgeReady', readyFunc);\r\n\t\tdocument.attachEvent('onWeixinJSBridgeReady', readyFunc);\r\n\t}\r\n} else {\r\n\treadyFunc();\r\n}\r\n\r\n</script>\r\n\r\n\t<BODY>\r\n\t  \t<div class=\"form\">\r\n        \t<div class=\"item\">\r\n\t\t\t\t<div class=\"title\">打&nbsp;&nbsp;卡&nbsp;&nbsp;人:</div>\r\n\t\t\t\t<div class=\"content\" >\r\n\t\t\t\t\t<div class=\"info\">");
      out.print(session.getAttribute("userName").toString() );
      out.write("</div>\r\n\t\t\t\t</div>    \r\n\t        </div>\r\n\t\t\t<div class=\"item\">\r\n\t\t\t\t<div class=\"title\">打卡时间:</div>\r\n\t\t\t\t<div class=\"content\" >\r\n\t\t\t\t\t<div class=\"info\">");
      out.print(result[0][0]==null?"":result[0][0] );
      out.write("</div>\r\n\t\t\t\t</div>    \r\n\t        </div>\r\n\t        \r\n\t        <div class=\"item\">\r\n\t\t\t\t<div class=\"title\">地理位置:</div>\r\n\t\t\t\t<div class=\"content\">\r\n\t\t\t\t\t<div class=\"info\">");
      out.print(result[0][1] );
      out.write("</div>\r\n\t\t\t\t</div>    \r\n\t        </div>\r\n\t        \r\n\t        <div class=\"item\">\r\n\t\t\t\t<div class=\"title\">客户名称:</div>\r\n\t\t\t\t<div class=\"content\">\r\n\t\t\t\t\t<div class=\"info\">");
      out.print(result[0][5] );
      out.write("</div>\r\n\t\t\t\t</div>    \r\n\t        </div>\r\n\t        <div class=\"item\">\r\n\t\t\t\t<div class=\"title\">外出原因:</div>\r\n\t\t\t\t<div class=\"content\">\r\n\t\t\t\t\t<div class=\"info\">");
      out.print(result[0][7] );
      out.write("</div>\r\n\t\t\t\t</div>    \r\n\t        </div>\r\n\t\t\t<div class=\"item\">\r\n\t\t\t\t<div class=\"title\">备&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注:</div>\r\n\t\t\t\t<div class=\"content\" >\r\n\t\t\t\t\t<div class=\"info\" >");
      out.print(result[0][10] );
      out.write("&nbsp;</div>\r\n\t\t\t\t</div>    \r\n\t        </div>\r\n\t        \t<div class=\"item\">\r\n\t        \t<div class=\"title\">信息图像:</div>\r\n\t\t\t \t<div class=\"content\" align=\"left\">\r\n\t\t     \t\t<IMG alt=\"图片\" height=\"100px\" onclick=\"javascript:showHtmlObject('");
      out.print(result[0][2]==null || "0".equals(result[0][2]) || "(null)".equals(result[0][2])?"":result[0][2].substring(result[0][2].indexOf("weixinImage")+12, result[0][2].length()));
      out.write("','0','weixinImage');\" src=\"");
      out.print(result[0][2] );
      out.write("\" />\r\n                </div>\r\n        \t</div>\r\n\t\t</div>\r\n\t\t\r\n\t\t<!-- 按钮 -->\r\n\t\t<div class=\"footer\">\r\n\t  \t\t<div class=\"buttons\">\r\n\t  \t\t\t<div id=\"closeWindows\" class=\"button gray\" onclick=\"window.history.back();\">关闭</div>\r\n\t   \t\t</div>\r\n\t   \t</div>\r\n\t   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/weixin/workflow/daibanflow/weixinshowhtml.jsp", out, false);
      out.write("\r\n\t</BODY>\r\n</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
