/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:38:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.net.URLDecoder;

public final class weixinError_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.net.URLDecoder");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<!DOCTYPE html>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/wap2/commonImport.jsp", out, false);
      out.write('\r');
      out.write('\n');

if(null != request.getAttribute("idIsNull")){
	
      out.write("\r\n\t<SCRIPT type=\"text/javascript\">\r\n\tcloseWindow();\r\n\t</SCRIPT>\r\n\t");

} else{
	
      out.write("\r\n\t<HTML>\r\n\t\t<head>\r\n\t\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n\t\t\t<title>Error</title>\r\n\t\t\t<META name=\"viewport\" content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;\">\r\n\t\t\t<META name=\"apple-touch-fullscreen\" content=\"YES\">\r\n\t\t\t<META name=\"apple-mobile-web-app-capable\" content=\"no\">\r\n\t\t\t<style>\r\n\t\t\t.center {\r\n\t\t\t\twidth: 80%;\r\n\t\t\t\theight: 210px;\r\n\t\t\t\tborder: 1px solid #e5e5e5;\r\n\t\t\t\tborder-radius: 3px;\r\n\t\t\t\ttext-align: center;\r\n\t\t\t\tbackground: #fafafa;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t.center-01 {\r\n\t\t\t\twidth: 80%;\r\n\t\t\t\theight: 80px;\r\n\t\t\t\tline-height: 25px;\r\n\t\t\t\tfont-family: \"�����е���_GBK;\"\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t.center-02 {\r\n\t\t\t\twidth: 130px;\r\n\t\t\t\theight: 35px;\r\n\t\t\t\tbackground: #31a6fe;\r\n\t\t\t\tborder-radius: 3px;\r\n\t\t\t\tmargin: 20px auto;\r\n\t\t\t}\r\n\t\t\t</style>\r\n\t\t</head>\r\n\t\t<body>\r\n\t\t\t<div>\r\n\t\t\t\t<table style=\"width: 100%;height: 100%;\">\r\n\t\t\t\t\t<tr style=\"\">\r\n\t\t\t\t\t\t<td align=\"center\" valign=\"middle\" >\r\n\t\t\t\t\t\t\t<div class=\"center\">\r\n\t\t\t\t\t\t\t\t<div class=\"center-01\">");
      out.print(request.getAttribute("errInfo"));
      out.write("</div>\r\n\t\t\t\t\t\t\t\t<div class=\"center-02\" id=\"closeWindow\">\r\n\t\t\t\t\t\t\t\t\t<a href=\"javascript:void(0);\" \r\n\t\t\t\t\t\t\t\t\t\tstyle=\" color:#FFF; line-height:40px; list-style:none; font-size:16px; text-decoration:none\">Close</a>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t\t<script type=\"text/javascript\">\r\n\t\t\tvar readyFunc = function onBridgeReady() {\r\n\t\t\t\t\t// �رյ�ǰwebview���� - closeWindow\r\n\t\t\t\t\tdocument.querySelector('#closeWindow').addEventListener('click',\r\n\t\t\t\t\t\t\tfunction(e) {\r\n\t\t\t\t\t\t\t\tWeixinJSBridge.invoke('closeWindow', {}, function(res) {\r\n\t\t\t\t\t\t\t\t\tif(\"system:access_denied\" == res.err_msg){\r\n\t\t\t\t\t\t\t\t\t\tweixinMessageReminder(\"alert\", \"��ʾ��\", \"����΢�Ű汾�ݲ�֧��ֱ�ӹر�ҳ�棬��������΢��6.0.2�����ϰ汾��\", \"\");\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t//���ض����Ҳ�ķ���ť\r\n\t\t\t\t\tWeixinJSBridge.call('hideOptionMenu');\r\n\t\t\t\t\t//���صײ��Ĺ�����\r\n\t\t\t\t\tWeixinJSBridge.call('hideToolbar');\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\tif (typeof WeixinJSBridge === \"undefined\") {\r\n\t\t\t\tif (document.addEventListener) {\r\n\t\t\t\t\tdocument.addEventListener('WeixinJSBridgeReady', readyFunc, false);\r\n");
      out.write("\t\t\t\t} else if (document.attachEvent) {\r\n\t\t\t\t\tdocument.attachEvent('WeixinJSBridgeReady', readyFunc);\r\n\t\t\t\t\tdocument.attachEvent('onWeixinJSBridgeReady', readyFunc);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treadyFunc();\r\n\t\t\t}\r\n\t\t\t</script>\r\n\t\t</body>\r\n\t</html>\r\n\t");

}

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
