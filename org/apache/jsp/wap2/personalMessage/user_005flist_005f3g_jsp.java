/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:46:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.wap2.personalMessage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.sql.*;
import java.sql.*;

public final class user_005flist_005f3g_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.sql");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"DTD/xhtml1-strict.dtd\">\r\n\r\n\r\n\r\n");
 
request.setCharacterEncoding("UTF-8");
String org_id=request.getParameter("org_id");
String userIds=request.getParameter("userIds");
String userNames=request.getParameter("userNames");
String content = request.getParameter("content");
userNames= java.net.URLDecoder.decode(userNames,"utf-8"); 
String path = request.getContextPath();

      out.write("\r\n<HTML xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<HEAD>\r\n<TITLE>选择人员</TITLE>\r\n<META content=\"text/html; charset=UTF-8\" http-equiv=Content-Type>\r\n<META name=viewport content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;\">\r\n<META name=apple-touch-fullscreen content=YES>\r\n<META name=apple-mobile-web-app-capable content=no>\r\n<LINK rel=apple-touch-icon href=\"");
      out.print(path);
      out.write("/wap2/images/iphone.jpg\">\r\n<LINK rel=stylesheet type=text/css href=\"");
      out.print(path);
      out.write("/wap2/css/main_3g.css\">\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(path);
      out.write("/wap2/js/cookie.js\"></SCRIPT>\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(path);
      out.write("/wap2/js/util.js\"></SCRIPT>\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(path);
      out.write("/wap2/js/frost.js\"></SCRIPT>\r\n<META name=GENERATOR content=\"MSHTML 8.00.6001.19154\">\r\n</HEAD>\r\n");

DataSource ds = new com.js.util.util.DataSourceBase().getDataSource();
Connection conn=null;
Statement stmt=null;
ResultSet rs=null;
conn=ds.getConnection();
stmt=conn.createStatement();
String sql="select ouser.emp_id,oemp.empname from org_organization_user ouser,org_employee oemp "+
		"where oemp.emp_id=ouser.emp_id and ouser.org_id="+org_id+" and oemp.userisformaluser=1 and oemp.userisactive=1";
rs=stmt.executeQuery(sql);

      out.write("\r\n<body>\r\n<form action=\"");
      out.print(path);
      out.write("/wap2/personalMessage/org_list_3g.jsp\" name=\"fanhui\" method=\"post\">\r\n<input type=\"hidden\" name=\"userNames\" value=\"");
      out.print(userNames );
      out.write("\" />\r\n<input type=\"hidden\" name=\"userIds\" value=\"");
      out.print(userIds );
      out.write("\" />\r\n<input type=\"hidden\" name=\"content\" value=\"");
      out.print(content );
      out.write("\" />\r\n</form>\r\n\t\t<DIV id=top>\r\n           <SPAN id=lp><DIV class=btn_2><A href=\"");
      out.print(path);
      out.write("/wap2/index_3g.jsp\">桌面</A></DIV></SPAN>\r\n           <A class=btn_1 href=\"javascript:document.fanhui.submit();\">返回</A>\r\n       </DIV><br/>\r\n<center>\r\n<div align=\"center\">选择人员</div>\r\n<div class=\"wrap\">\r\n<form name=\"form1\" id=\"form1\" action=\"");
      out.print(path);
      out.write("/wap2/personalMessage/new_message_3g.jsp\" method=\"post\">\r\n<input type=hidden name=\"userNames\" id=\"selectNames\" value=\"");
      out.print(userNames );
      out.write("\"/>\r\n<input type=hidden name=\"userIds\" id=\"selectIds\" value=\"");
      out.print(userIds );
      out.write("\"/>\r\n<input type=hidden name=\"content\" value=\"");
      out.print(content);
      out.write("\"/>\r\n<select name=\"users\" id=\"users\"  multiple=\"true\" style=\"width:200px;\" >\r\n");
while(rs.next()){ 
      out.write("\r\n　　<option value=\"");
      out.print(rs.getString(1)+"$"+rs.getString(2) );
      out.write('"');
      out.write(' ');
      out.print((","+userIds).contains(","+rs.getString(1)+",")?"selected":"" );
      out.write(">\r\n\t");
      out.print(rs.getString(2) );
      out.write("</option>\r\n");
} 
      out.write("\r\n</select>\r\n");

rs.close();
stmt.close();
conn.close();

      out.write("<br/><br/>\r\n<input type=\"button\" class=\"button2\" value=\"选择\" onclick=\"selectUser();\" />\r\n<input type=\"button\" class=\"button2\" value=\"清空\" onclick=\"deleteUser();\" />\r\n</form>\r\n</div>\r\n</center>\r\n<script type=\"text/javascript\">\r\nfunction selectUser(){\r\n\tvar users = document.getElementById(\"users\").options;\r\n\tvar selectNames = \",\"+document.getElementById(\"selectNames\").value;\r\n\tvar selectIds = \",\"+document.getElementById(\"selectIds\").value;\r\n\tfor(var i=0;i<users.length;i++){\r\n\t\t\r\n\t\tif(users[i].selected){\r\n\t\t\tvar values = users[i].value.split(\"$\");\r\n\t\t\tif(selectIds.indexOf(\",\"+values[0]+\",\")<0){\r\n\t\t\t\tselectNames += values[1]+\",\";\r\n\t\t\t\tselectIds += values[0]+\",\";\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tvar values = users[i].value.split(\"$\");\r\n\t\t\tif(selectIds.indexOf(\",\"+values[0]+\",\")>=0){\r\n\t\t\t\tvar regName=new RegExp(\",\"+values[1]+\",\",\"g\"); //创建正则RegExp对象\r\n\t\t\t\tvar regId=new RegExp(\",\"+values[0]+\",\",\"g\"); //创建正则RegExp对象\r\n\t\t\t\tselectNames = selectNames.replace(regName, \",\");\r\n\t\t\t\tselectIds = selectIds.replace(regId, \",\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif(selectIds.substring(0,1)==\",\"){\r\n");
      out.write("\t\tdocument.getElementById(\"selectNames\").value=selectNames.substring(1, selectNames.length);\r\n\t\tdocument.getElementById(\"selectIds\").value=selectIds.substring(1, selectIds.length);\r\n\t}\r\n\tdocument.getElementById(\"users\").value=\"\";\r\n\tdocument.getElementById(\"form1\").submit();\r\n}\r\nfunction deleteUser(){\r\n\tvar users = document.getElementById(\"users\");\r\n\tusers.value=\"\";\r\n}\r\n</script>\r\n</body>\r\n</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
