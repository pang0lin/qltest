/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:58:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.weixin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class onLineTransitionPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);
String timestamp = request.getParameter("t");
String fileName = (String) request.getParameter("fileName");
String path = request.getParameter("path");
//是否刷新
Object checkPage = request.getSession().getAttribute("onLineTransition_"+timestamp);
if(checkPage==null){
	String officeObj=com.js.util.util.BASE64.BASE64EncoderNoBR(fileName+"&&"+path);
	String year="0000";
	if(fileName!=null && fileName.length()>6 && "_".equals(fileName.substring(4,5))){
		year = fileName.substring(0,4);
	}
	String fileNameNoPrefix=fileName.substring(0,fileName.lastIndexOf("."))+"_wechattemp";
	String showurl="/jsoa/upload/"+year+"/"+path+"/"+fileNameNoPrefix+"/"+fileNameNoPrefix+".html";
	String showurl1="/jsoa/upload/"+path+"/"+fileNameNoPrefix+"/"+fileNameNoPrefix+".html";
	request.getSession().setAttribute("onLineTransition_"+timestamp,"1");


      out.write("\r\n<HTML>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\">\r\n<title>微信/APP/WAP附件转换</title>\r\n<script type=\"text/javascript\" src=\"/jsoa/js/jquery-1.4.2.min.js\"></script>\r\n<script type=\"text/javascript\">\r\n$(document).ready(function(){\r\n\t$.ajax({\r\n\t\ttype : \"post\",\r\n\t\tasync: true,\r\n\t\turl : \"/jsoa/weixin/onLineTransitionPageAjax.jsp?");
      out.print(officeObj);
      out.write("\",\r\n\t\tdata : \"\" ,\r\n\t\tsuccess : function(returnData){\r\n\t\t\tif($.trim(returnData)==\"t\"){\r\n\t\t\t\tlocation.href=\"");
      out.print(showurl);
      out.write("\";\r\n\t\t\t}else if($.trim(returnData)==\"t1\"){\r\n\t\t\t\tlocation.href=\"");
      out.print(showurl1);
      out.write("\";\r\n\t\t\t}else{\r\n\t\t\t\t$(\"#showInfo\").val(\"转换失败（或文件暂不支持预览），请稍后重试！\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\t\terror: function(){\r\n\t\t\t$(\"#showInfo\").val(\"转换失败（或文件暂不支持预览），请稍后重试！\");\r\n\t\t}\r\n\t\t\r\n\t});\r\n});\r\n \r\n\r\n</script>\r\n</head>\r\n<body>\r\n <p style=\"text-indent:2em; padding:0px; margin:80px 30px;\" ><span id=\"showInfo\" style=\"color: blue;\">正在格式转换中···</span></p>\r\n</body>\r\n</HTML>\r\n");
}else{
	request.getSession().removeAttribute("onLineTransition_"+timestamp);

      out.write("\r\n<HTML>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\">\r\n<title>·</title>\r\n<script type=\"text/javascript\">\r\nwindow.history.go(-1);\r\n</script>\r\n</head>\r\n</HTML>\r\n");
}
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
