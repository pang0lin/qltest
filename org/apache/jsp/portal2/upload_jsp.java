/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:40:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.portal2;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import org.apache.commons.fileupload.FileItem;
import com.jsupload.upload.*;
import com.js.system.util.SysSetupReader;
import com.jsupload.upload.SmartUpload;

public final class upload_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.jsupload.upload");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.jsupload.upload.SmartUpload");
    _jspx_imports_classes.add("org.apache.commons.fileupload.FileItem");
    _jspx_imports_classes.add("com.js.system.util.SysSetupReader");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n");
      com.jsupload.upload.SmartUpload mySmartUpload = null;
      mySmartUpload = (com.jsupload.upload.SmartUpload) _jspx_page_context.getAttribute("mySmartUpload", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (mySmartUpload == null){
        mySmartUpload = new com.jsupload.upload.SmartUpload();
        _jspx_page_context.setAttribute("mySmartUpload", mySmartUpload, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n\r\n<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");

Calendar cal = Calendar.getInstance();
String year = cal.get(Calendar.YEAR)+"";//年
request.setCharacterEncoding("GBK"); 
String domainId=session.getAttribute("domainId").toString();
int fileSize=0;
String attachSizeLimit=SysSetupReader.getInstance().getAttachLimit(domainId);
if(!attachSizeLimit.startsWith("1")){
	Map map = (Map) session.getAttribute("ftpMap");
	String fileSizeLimitAll="0";//默认限制大小
	if(map != null && map.get("FileSizeLimitAll") != null){
	    fileSizeLimitAll = map.get("FileSizeLimitAll").toString();//配置文件限制大小
	    if(fileSizeLimitAll.startsWith("1")){//是否限制，1：限制；0，不限制
	        fileSize=Integer.parseInt(fileSizeLimitAll.substring(1));
	    }
	  }
}else{
   fileSize=Integer.parseInt(attachSizeLimit.substring(1));
}
String fileSizeMsg="";
if(fileSize/1000000>0){
    fileSizeMsg=String.valueOf(fileSize/(1024*1024))+"MB";
}else if(fileSize/1000>0){
    fileSizeMsg=String.valueOf(fileSize/1024)+"KB";
}else{
    fileSizeMsg=String.valueOf(fileSize)+"字节";
}
	String url=request.getRequestURL().toString();
	//System.out.println("url:"+request.getRemoteAddr());
	url=url.substring(0,url.lastIndexOf("portal2"));
	url="";

	String modId="";
	String retString="";
	String fileName="";
	String fileExt="";  
	String filePath; 
	String myRandom=""; 
	mySmartUpload.initialize(request);
	List fileList=new ArrayList();
    try
    {
    	fileList=mySmartUpload.getFileList();
    }
    catch(Exception e) 
    {
    	out.println("<div style=\"witdh:100%;height:100%;\" class=\"docBox\">");
    	out.println("<center style=\"padding-top:100px;\">");
    	out.println("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">");
    	out.println("<tr>");
    	out.println("<td width=\"60\"><img src=\"/jsoa/images/errorFace_excel.gif\"/></td>");
    	out.println("<td width=\"220\"><font color=\"#FF0000\">ERROR:上传失败！文件尺寸超过规定大小:"+fileSizeMsg+"</font></td>");
    	out.println("</tr>");
    	out.println("<tr>");
    	out.println("<td>&nbsp;</td>");
    	out.println("<td align=\"center\" valign=\"middle\" height=\"65\"><input type=\"button\" class=\"btnButton2font\" onclick=\"javascript:history.back(-1);\" value='返回重试'></input></td>");
    	out.println("</tr>");
    	out.println("</table>");
    	out.println("</center>");
    	out.println("</div>");
    	return;
    }
    int upLoadAllFileSize=0;
    String [] banType=SmartUpload.banType;
	for (int j=0;j<fileList.size();j++)
	{
		FileItem fileItem=(FileItem)fileList.get(j);
		
		if(fileItem.isFormField())//果如是非上传控件
    	{
    		String filedName=fileItem.getFieldName();
    		String filedContent=fileItem.getString();
    		if("modId".equalsIgnoreCase(filedName))
    		{
    			modId=new String(filedContent.getBytes(),"GBK");
    		}
    	}
    	else if(!fileItem.isFormField())//如果是<input type="file">
		{
			String fileNameTemp=fileItem.getName();
    		for(int i=0;i<banType.length;i++)
    		{
    			if(fileNameTemp.endsWith(banType[i]))
   				{
   					fileItem.delete();
   					out.println("<script>alert('上传失败！非法文件类型！');history.back(-1);</script>");
   					return;
   				}
    		}
			upLoadAllFileSize+=fileItem.getSize();//上传总大小
		}
	}
	if(upLoadAllFileSize==0)
    {
    	out.println("<div style=\"witdh:100%;height:100%;\" class=\"docBox\">");
    	out.println("<center style=\"padding-top:100px;\">");
    	out.println("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">");
    	out.println("<tr>");
    	out.println("<td width=\"60\"><img src=\"/jsoa/images/errorFace_excel.gif\"/></td>");
    	out.println("<td width=\"220\"><font color=\"#FF0000\">ERROR:上传失败！请选择非空文件上传！</font></td>");
    	out.println("</tr>");
    	out.println("<tr>");
    	out.println("<td>&nbsp;</td>");
    	out.println("<td align=\"center\" valign=\"middle\" height=\"65\"><input type=\"button\" class=\"btnButton2font\" onclick=\"javascript:history.back(-1);\" value='返回重试'></input></td>");
    	out.println("</tr>");
    	out.println("</table>");
    	out.println("</center>");
    	out.println("</div>");
    	return;
    }
	FileItem fileItem=(FileItem)fileList.get(0);//获取上传文件
    fileName=fileItem.getName();//获取上传文件名
    if(!"".equals(fileName)&&null!=fileName)
    {
    	fileName=fileName.substring(fileName.lastIndexOf("\\") + 1);
   		fileExt=fileName.substring(fileName.lastIndexOf(".") + 1);//获取上传文件扩展名
    }
    if (fileName.length() > 50)//文件名太长
					{
						fileName = fileName.substring(0, 40);//截断
						fileName+="~1."+	fileExt;
					} 
	try 
	{		
		 myRandom=new com.js.util.util.Random().getFileRandomName();
		
		myRandom=year+"_"+myRandom;
		String saveName=myRandom+"."+fileExt;
		filePath=request.getSession().getServletContext().getRealPath("/")+"upload/"+year+"/customdesktop/";
        mySmartUpload.saveAs(fileItem,filePath + saveName);//保存文件
		
		retString="上传成功!";

	} 
	catch (Exception e)
	{ 
		retString="上传失败!";
	}
	System.out.println(retString);

      out.write('\r');
      out.write('\n');

//发送上传地址
String sendMode="";
String fileExtLower=fileExt.toLowerCase();
if(fileExtLower.equals("jpg")|| fileExtLower.equals("gif")|| fileExtLower.equals("bmp") || fileExtLower.equals("png")){
	sendMode="<img src='/jsoa/upload/"+year+"/customdesktop/"+myRandom+"."+fileExt+"' width='200' height='150'>";

}
else if(fileExtLower.equals("swf")){
	sendMode="<object classid='clsid:D27CDB6E-AE6D-11cf-96B8-444553540000' 	codebase='http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0' width='200' height='150'>"+
			  "<param name='movie' value='/jsoa/upload/"+year+"/customdesktop/"+myRandom+"."+fileExt+"'>"+
			  "<param name='quality' value='high'>"+
			  "<embed src='/jsoa/upload/"+year+"/customdesktop/"+myRandom+"."+fileExt+"' quality='high' pluginspage='http://www.macromedia.com/go/getflashplayer' type='application/x-shockwave-flash' width='600' height='420'></embed></object>";
}else if(fileExtLower.equals("flv")){
	sendMode="<object classid='clsid:D27CDB6E-AE6D-11cf-96B8-444553540000' codebase='http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0' width='200' height='150'>"+
			"<param name='quality' value='high'>"+
			"<param name='allowFullScreen' value='true' />"+
			"<param name='movie' value='/jsoa/portal2/player/flv.swf'>"+
			"<param name='FlashVars' value='vcastr_file=/jsoa/upload/"+year+"/customdesktop/"+myRandom+"."+fileExt+"'>"+
			
			"<embed src='/jsoa/portal2/player/flv.swf' flashvars='vcastr_file=/jsoa/upload/"+year+"/customdesktop/"+myRandom+"."+fileExt+"' allowFullScreen='true' quality='high' pluginspage='http://www.macromedia.com/go/getflashplayer' type='application/x-shockwave-flash' width='200' height='150'></embed>"+
			"</object> ";			
	
}
else if(fileExtLower.equals("avi")){
	sendMode="<object classid='clsid:22d6f312-b0f6-11d0-94ab-0080c74c7e95' width='220' height='180'>"+
			"<param name='showstatusbar' value='1'>"+
			"<param name='filename' value='/jsoa/upload/"+year+"/customdesktop/"+myRandom+"."+fileExt+"'>"+
			"<embed src='/jsoa/upload/"+year+"/customdesktop/"+myRandom+"."+fileExt+"'></embed>"+
			"</object>";
}

      out.write("\r\n<SCRIPT LANGUAGE=\"JavaScript\">\r\n<!--\r\n\tvar img=\"<div align='center'>");
      out.print(sendMode);
      out.write("</div>\";\r\n\tparent.document.getElementById(\"divRet");
      out.print(modId);
      out.write("\").innerHTML=img;\r\n\tparent.document.all.fileUrl.value=img;\r\n\r\n//-->\r\n</SCRIPT>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
