/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:58:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.weixin.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class weixinshowimage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

String loginType = null==session.getAttribute("loginType") ? "weixin" : session.getAttribute("loginType").toString();

      out.write("\r\n\t\t<style type=\"text/css\">\r\n\t\t#imageBody {\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 100%;\r\n\t\t\tdisplay: none;\r\n\t\t\tposition: fixed;\r\n\t\t\ttop: 0;\r\n\t\t\tleft: 0;\r\n\t\t\tbackground: #fff;\r\n\t\t\tz-index: 100;\r\n\t\t}\r\n\t\t#imageBody #imageContent {\r\n\t\t\twidth: 98%;\r\n\t\t\toverflow: auto;\r\n\t\t\tbackground: #eee;\r\n\t\t\tmargin: 0 auto;\r\n\t\t\ttext-align: center;\r\n\t\t}\r\n\t\t#imageBody #imageButtons .imageButton {\r\n\t\t\tbackground: #09f;\r\n\t\t\tline-height: 39px;\r\n\t\t\theight: 39px;\r\n\t\t\tfont-size: 16px;\r\n\t\t\tfont-weight: 300;\r\n\t\t\tdisplay: block;\r\n\t\t\ttext-decoration: none;\r\n\t\t\t-webkit-box-flex: 1;\r\n\t\t\t-webkit-flex: 1;\r\n\t\t\tflex: 1;\r\n\t\t\tborder-radius: 5px;\r\n\t\t\t-webkit-border-radius: 5px;\r\n\t\t\t-moz-border-radius: 5px;\r\n\t\t\tmargin: 8px;\r\n\t\t\tcolor: #fff;\r\n\t\t}\r\n\t\t</style>\r\n\t\t");

		if("wap".equals(loginType)){
			
      out.write("\r\n\t\t\t<style>\n\t\t\t#imageBody #imageButtons {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 55px;\r\n\t\t\t\ttext-align: center;\r\n\t\t\t\twhite-space: nowrap;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tdispaly: -webkit-flex;\r\n\t\t\t\tdisplay: -webkit-box;\r\n\t\t\t\tbackground: #999;\r\n\t\t\t}\n\t\t\t</style>\r\n\t\t\t");

		} else{
			
      out.write("\r\n\t\t\t<style>\n\t\t\t#imageBody #imageButtons {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 55px;\r\n\t\t\t\ttext-align: center;\r\n\t\t\t\twhite-space: nowrap;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tdispaly: -webkit-flex;\r\n\t\t\t\tdisplay: -webkit-box;\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tleft: 0;\r\n\t\t\t\tbottom: 0;\r\n\t\t\t\tbackground: #999;\r\n\t\t\t}\n\t\t\t</style>\r\n\t\t\t");

		}
		
      out.write("\r\n\t\t<script language=\"javascript\">\r\n\t\t// 获取窗口尺寸\r\n\t    var windowHeightImage = $(window).height();\r\n  \t\tvar windowWidthImage = $(window).width();\r\n  \t\t\r\n  \t\twindowHeightImage -= 60;\r\n  \t\twindowWidthImage -= 10;\r\n\t\tfunction hiddenImageBody(){\r\n\t\t\t$(\"#imageBody\").hide();\r\n\t\t\t$(\"#imageButtons\").html(\"\");\r\n\t\t\t$(\"#imageContent\").html(\"\");\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// 文档转html代码显示\r\n\t\t// fileName 文件上传后，数据库中保存的文件名\r\n\t\t// name 文件后缀名\r\n\t\t// path 文件路径\r\n\t \tfunction showImageFromat(url){\r\n\t\t\tif(url!=null && url!=''){\r\n\t  \t  \t\t$(\"#imageContent\").height(windowHeightImage + 5);\r\n\t\t\t\tvar butString=\"\";\r\n\t\t\t\tif(url!=null){\t\r\n\t\t\t\t\t// 显示图片\r\n\t\t  \t  \t\tshowImageWeixin(0, url);\r\n\t\t\t        butString += \"<div class=\\\"imageButton\\\" onclick=\\\"showImageWeixin(1, '\" + url + \"')\\\">原图</div>\";\r\n\t\t\t        butString += \"<div class=\\\"imageButton\\\" onclick=\\\"showImageWeixin(0, '\" + url + \"')\\\">全屏</div>\";\r\n\t\t\t        butString += \"<div class=\\\"imageButton\\\" onclick=\\\"hiddenImageBody()\\\" style=\\\"background: #efefef; color: #000;\\\">关闭</div>\";\r\n\t\t\t        $(\"#imageButtons\").html(butString);\r\n");
      out.write("\t\t\t\t    $(\"#imageBody\").show();\r\n\t\t\t\t}else{\r\n\t\t\t        weixinMessageReminder(\"alert\", \"提示：\", \"文件未找到！\",\"\");\r\n\t\t\t    }\r\n\t\t\t}   \r\n\t\t}\r\n\t \t\r\n\t \tfunction showImageWeixin(type, url){\r\n\t \t\tvar image = new Image();\r\n\t \t\timage.src = url;\r\n\t \t\tvar imageWidth = image.width;\r\n\t \t\tvar imageHeight = image.height;\r\n\t \t\tvar imgHtml = \"\";\r\n\t \t\tif(0 == type){\t// 全图\r\n\t  \t  \t\t// 比较文件尺寸和窗口尺寸的比值，确定图片显示尺寸\r\n\t  \t  \t\tvar wl = imageWidth / windowWidthImage;\r\n\t  \t  \t\tvar hl = imageHeight / windowHeightImage;\r\n\t  \t  \t\tif(wl > hl){\t// 宽比大于高比时，设置图片宽度\r\n\t  \t  \t\t\timgHtml = \"<a id='demo' href='\" + url + \"'  target='_blank'> <img src='\" + url + \"' width='\" + windowWidthImage + \"' /></a>\";\r\n\t  \t  \t\t} else{\t// 否则设置图片高度\r\n\t  \t  \t\t\timgHtml = \"<a id='demo' href='\" + url + \"'  target='_blank'>  <img src='\" + url + \"' height='\" + windowHeightImage + \"' /> </a>\";\r\n\t  \t  \t\t}\r\n\t \t\t} else if(1 == type){\t// 原图\r\n\t \t\t\timgHtml = \"<a id='demo' href='\" + url + \"'  target='_blank'><img src='\" + url + \"' /></a>\";\r\n\t \t\t}\r\n\t \t\t$(\"#imageContent\").html(imgHtml);\r\n\t \t}\r\n");
      out.write("\t\t</script>\r\n\t\r\n\t    <div id=\"imageBody\">\r\n\t    \t<div id=\"imageContent\"></div>\r\n\t    \t<div id=\"imageButtons\"></div>\r\n\t    </div>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
