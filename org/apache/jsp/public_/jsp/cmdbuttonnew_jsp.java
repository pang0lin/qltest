/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:57:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.public_.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.*;
import java.text.*;
import java.io.*;
import java.lang.*;
import com.js.lang.Resource;

public final class cmdbuttonnew_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("java.lang");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.lang.Resource");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<script>\r\n\r\nfunction setMoveButton(){\t\r\n\tvar m=document.getElementById(\"cmdBarFrame\");\r\n\tvar mW=document.getElementById(\"commandBar\").offsetWidth-m.offsetWidth;\r\n\tvar sW=m.scrollLeft;\r\n\tif(sW <= 0){\r\n\t\t//document.all.btnMoveLeft.style.filter=\"gray()\";\r\n\t\tdocument.all.btnMoveLeft.style.visibility =\"hidden\";\r\n\t}else{\r\n\t\t//document.all.btnMoveLeft.style.filter=\"\";\r\n\t\tdocument.all.btnMoveLeft.style.visibility =\"visible\";\r\n\t}\r\n\r\n\tif(sW<mW){\r\n\t\t//document.all.btnMoveRight.style.filter=\"\";\r\n\t\tdocument.all.btnMoveRight.style.visibility =\"visible\";\r\n\t}else{\r\n\t\t//document.all.btnMoveRight.style.filter=\"gray()\";\r\n\t\tdocument.all.btnMoveRight.style.visibility =\"hidden\";\r\n\t}\r\n} \r\n\r\nfunction menuMoveRight(){\r\n\tvar m=document.getElementById(\"cmdBarFrame\");\r\n\tvar mW=document.getElementById(\"commandBar\").offsetWidth-m.offsetWidth;\r\n\tvar sW=m.scrollLeft;\r\n\r\n\tif(sW<mW){\r\n        sW+=200;\r\n\t}\r\n    if(sW>mW){\r\n\t\tsW=mW\r\n\t}\r\n\tm.scrollLeft=sW;\r\n\tsetMoveButton();\r\n}\r\n\r\nfunction menuMoveLeft(){\r\n\tvar m=document.getElementById(\"cmdBarFrame\");\r\n");
      out.write("\tvar mW=0;\r\n\tvar sW=m.scrollLeft;\r\n\tif(sW>mW){\r\n        sW-=200;\r\n\t}\r\n    if(sW<mW){sW=mW}\r\n\tm.scrollLeft=sW;\r\n\tsetMoveButton();\r\n}\r\n\r\n\r\nfunction loadMenu(){\r\n\tvar w=document.body.offsetWidth;\r\n\tvar m=document.getElementById(\"cmdBarFrame\");\r\n\tm.style.width=(w-80)+\"px\";\r\n\tsetMoveButton();\r\n}\r\nfunction execCmd(strCmd){\r\n\t\tif (strCmd.indexOf(\"link:\") == 0){\r\n\t\t\twindow.location.href = strCmd.substr(5);\r\n\t\t}else {\r\n\t\t\tif (strCmd.indexOf(\"js:\") == 0) {\r\n\t\t\t\teval(strCmd.substr(3));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twindow.location.href = strCmd;\r\n\t\t\t}\r\n\t\t}\r\n}\r\n</script>\r\n\r\n\r\n");

String localcmd = session.getAttribute("org.apache.struts.action.LOCALE").toString();

      out.write("\r\n\r\n");

String strButton=request.getParameter("button");
if(strButton!=null && strButton.trim().length()>0){
	String[] cmdButtons=strButton.split(",");

	Hashtable buttons = new Hashtable();
	//¸ñÊ½£ºÎÄ±¾,ËµÃ÷,Í¼±ê,ÊÇ·ñÓÐÐ§,¿í¶È,¶¯×÷
	buttons.put("Close",Resource.getValue(localcmd,"filetransact","file.close")+","+Resource.getValue(localcmd,"filetransact","file.close")+",/jsoa/images/toolbar/close.gif,true,10,js:cmdClose()");
	buttons.put("Send",Resource.getValue(localcmd,"filetransact","file.send")+","+Resource.getValue(localcmd,"filetransact","file.send")+",/jsoa/images/toolbar/send.gif,true,10,js:cmdSend()");
	buttons.put("End",Resource.getValue(localcmd,"workflow","workflow.newactivitybuttonend")+","+Resource.getValue(localcmd,"workflow","workflow.newactivitybuttonend")+",/jsoa/images/toolbar/end.gif,true,10,js:cmdEnd()");
	buttons.put("EndAutoReturn",Resource.getValue(localcmd,"workflow","workflow.newactivitybuttonend")+","+Resource.getValue(localcmd,"workflow","workflow.newactivitybuttonend")+",/jsoa/images/toolbar/end.gif,true,10,js:cmdEndAutoReturn()");
	buttons.put("EndOnlyComp",Resource.getValue(localcmd,"workflow","workflow.newactivitybuttonend")+","+Resource.getValue(localcmd,"workflow","workflow.newactivitybuttonend")+",/jsoa/images/toolbar/end.gif,true,10,js:cmdEndOnlyComp()");
	buttons.put("Save","±£´æ²Ý¸å,±£´æ²Ý¸å,/jsoa/images/toolbar/save.gif,true,10,js:cmdSave()");
	buttons.put("SaveFirst",Resource.getValue(localcmd,"workflow","workflow.newactivitybuttonsavefirst")+","+Resource.getValue(localcmd,"workflow","workflow.newactivitybuttonsavefirst")+",/jsoa/images/toolbar/end.gif,true,10,js:cmdSaveFirst()");
	buttons.put("Toreceive","×ªÊÕÎÄ,×ªÊÕÎÄ,/jsoa/images/toolbar/toreceive.gif,true,10,js:cmdToreceive()");
	buttons.put("Toselfdept","×ª±¾²¿ÃÅ,×ª±¾²¿ÃÅ,/jsoa/images/toolbar/toselfdept.gif,true,10,js:cmdToselfdept()");
	buttons.put("Back",Resource.getValue(localcmd,"workflow","workflow.newactivitybuttonback")+","+Resource.getValue(localcmd,"workflow","workflow.newactivitybuttonback")+",/jsoa/images/toolbar/back.gif,true,10,js:cmdBack()");
	buttons.put("Undo",Resource.getValue(localcmd,"workflow","workflow.newactivitybuttonundo")+","+Resource.getValue(localcmd,"workflow","workflow.newactivitybuttonundo")+",/jsoa/images/toolbar/undo.gif,true,10,js:cmdUndo()");
	buttons.put("Wait",Resource.getValue(localcmd,"workflow","workflow.newactivitybuttonwait")+","+Resource.getValue(localcmd,"workflow","workflow.newactivitybuttonwait")+",/jsoa/images/toolbar/wait.gif,true,10,js:cmdWait()");
	buttons.put("Feedback",Resource.getValue(localcmd,"workflow","workflow.newactivitybuttonfeedback")+","+Resource.getValue(localcmd,"workflow","workflow.newactivitybuttonfeedback")+",/jsoa/images/toolbar/feedback.gif,true,10,js:cmdFeedback()");
	buttons.put("Return",Resource.getValue(localcmd,"workflow","workflow.newactivitybuttonreturn")+","+Resource.getValue(localcmd,"workflow","workflow.newactivitybuttonreturn")+",/jsoa/images/toolbar/return.gif,true,10,js:cmdReturn()");
	buttons.put("Tran",Resource.getValue(localcmd,"workflow","workflow.newactivitybuttontran")+","+Resource.getValue(localcmd,"workflow","workflow.newactivitybuttontran")+",/jsoa/images/toolbar/tran.gif,true,10,js:cmdTran()");
	buttons.put("Delete",Resource.getValue(localcmd,"workflow","workflow.newactivitybuttondelete")+","+Resource.getValue(localcmd,"workflow","workflow.newactivitybuttondelete")+",/jsoa/images/toolbar/delete.gif,true,10,js:cmdDelete()");
	buttons.put("Print",Resource.getValue(localcmd,"workflow","workflow.newactivitybuttonprint")+","+Resource.getValue(localcmd,"workflow","workflow.newactivitybuttonprint")+",/jsoa/images/toolbar/print.gif,true,10,js:cmdPrint()");

	buttons.put("Writetext","Æð²ÝÕýÎÄ,Æð²ÝÕýÎÄ,/jsoa/images/toolbar/writetext.gif,true,10,js:cmdWritetext()");
	buttons.put("Readtext","ÅúÔÄÕýÎÄ,ÅúÔÄÕýÎÄ,/jsoa/images/toolbar/readtext.gif,true,10,js:cmdReadtext()");
	buttons.put("Viewtext","²é¿´ÕýÎÄ,²é¿´ÕýÎÄ,/jsoa/images/toolbar/viewtext.gif,true,10,js:cmdViewtext()");
	buttons.put("Textmanager","ÕýÎÄ¹ÜÀí,ÕýÎÄ¹ÜÀí,/jsoa/images/toolbar/textmanager.gif,true,10,js:cmdTextmanager()");
	buttons.put("Imptext","ÒýÈëÕýÎÄ,ÒýÈëÕýÎÄ,/jsoa/images/toolbar/imptext.gif,true,10,js:cmdImptext()");
    buttons.put("Savefile","Éú³ÉÕýÊ½ÎÄ¼þ,Éú³ÉÕýÊ½ÎÄ¼þ,/jsoa/images/toolbar/savefile.gif,true,10,js:cmdSavefile()");
	buttons.put("Viewacc","²é¿´¸½¼þ,²é¿´¸½¼þ,/jsoa/images/toolbar/viewacc.gif,true,10,js:cmdViewacc()");
	buttons.put("Manageracc","¸½¼þ¹ÜÀí,¸½¼þ¹ÜÀí,/jsoa/images/toolbar/manageracc.gif,true,10,js:cmdManageracc()");
	buttons.put("Printcomm","´òÓ¡ÔÄ°ìµ¥,´òÓ¡ÔÄ°ìµ¥,/jsoa/images/toolbar/printcomm.gif,true,10,js:cmdPrintcomm()");
	buttons.put("Document","¹éµµ,¹éµµ,/jsoa/images/toolbar/document.gif,true,10,js:cmdDocument()");
	buttons.put("Code","±àºÅ,±àºÅ,/jsoa/images/toolbar/code.gif,true,10,js:cmdCode()");
	buttons.put("Selfsend",Resource.getValue(localcmd,"filetransact","file.review")+","+Resource.getValue(localcmd,"filetransact","file.review")+",/jsoa/images/toolbar/selfsend.gif,true,10,js:cmdSelfsend()");
	buttons.put("Addperson","Ôö¼ÓÅúÔÄÈË,Ôö¼ÓÅúÔÄÈË,/jsoa/images/toolbar/addperson.gif,true,10,js:cmdAddperson()");
	buttons.put("DirectSend","Ö±½Ó·¢ËÍ,Ö±½Ó·¢ËÍ,/jsoa/images/toolbar/selfsend.gif,true,10,js:cmdDirectSend()");

    buttons.put("Viewread","²é¿´´«ÔÄ,²é¿´´«ÔÄ,/jsoa/images/toolbar/seeread.gif,true,10,js:cmdViewread()");

	buttons.put("Saveclose","±£´æÍË³ö,±£´æÍË³ö,/jsoa/images/toolbar/end.gif,true,10,js:cmdSaveclose()");
	buttons.put("Sendclose","·Ö·¢,·Ö·¢,/jsoa/images/toolbar/documentSend.gif,true,10,js:cmdSendclose()");
	buttons.put("Printtext","´òÓ¡ÕýÎÄ,´òÓ¡ÕýÎÄ,/jsoa/images/toolbar/printcomm.gif,true,10,js:cmdPrinttext()");

	int num=0;
	String[] cmdButton=null;
	for(int i=0;i<cmdButtons.length;i++){
		if(buttons.containsKey(cmdButtons[i])){
	      cmdButton=((String) buttons.get(cmdButtons[i])).split(",");


      out.write("\r\n   <div class=\"cmdMenu\" style=\"float:left\" onclick=\"execCmd('");
      out.print(cmdButton[5]);
      out.write("')\" onmouseover=\"this.className='cmdMenuOver'\" onmouseout=\"this.className='cmdMenu'\">\r\n      <SAPN title=\"");
      out.print(cmdButton[1]);
      out.write("\"><img src=\"");
      out.print(cmdButton[2]);
      out.write("\" align='top' class=\"cmdButtonIco\">");
      out.print(cmdButton[0]);
      out.write("</span>\r\n   </div>\r\n");

		}
	}

}

      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
