/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:02:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.iWebRevision_jsp.Signature;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.*;
import java.text.*;
import java.util.*;
import java.sql.*;
import DBstep.iDBManager2000.*;

public final class SignatureList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("DBstep.iDBManager2000");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=gb2312");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n<html>\r\n<head>\r\n<title>印签管理</title>\r\n<link rel='stylesheet' type='text/css' href='../Test.css'>\r\n<script language=\"javascript\">\r\nfunction ConfirmDel(FileUrl){\r\n\tif (confirm('是否确定删除该印签！')){\r\n\t\tlocation.href=FileUrl;\r\n\t}\r\n}\r\n\r\nfunction DoMenu(MenuValue){\r\n    location.href=MenuValue;\r\n    return true;\r\n}\r\n</script>\r\n</head>\r\n<body bgcolor=\"#ffffff\">\r\n<div align=\"center\"><font size=4 color=ff0000>印签管理</font></div>\r\n<hr size=1>\r\n<br>\r\n<table border=0  cellspacing='0' cellpadding='0' width=100% align=center class=TBStyle>\r\n\t<tr>\r\n\t\t<td colspan=2 class=\"TDTitleStyle\" nowrap>\r\n\t\t  <input type=button name=\"Add\" value=\"增加印签\"  onclick=\"javascript:location.href='SignatureAddFrm.jsp'\">\r\n\t\t  <input type=button name=\"Return\" value=\"返 回\"  onclick=\"javascript:location.href='../DocumentList.jsp';\">\r\n\t\t</td>\r\n\t\t<td colspan=3 class=\"TDTitleStyle\">&nbsp;</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td nowrap align=center class=\"TDTitleStyle\" height=\"26\">编号</td>\r\n\t\t<td nowrap align=center class=\"TDTitleStyle\">用户名称</td>\r\n\t\t<td nowrap align=center class=\"TDTitleStyle\">印签名称</td>\r\n");
      out.write("\t\t<td nowrap align=center class=\"TDTitleStyle\">印签类型</td>\r\n\t\t<td nowrap align=center class=\"TDTitleStyle\">操作</td>\r\n\t</tr>\r\n\t");

          DBstep.iDBManager2000 DbaObj=new DBstep.iDBManager2000();
           if (DbaObj.OpenConnection())
           {
             try
             {
               ResultSet result=DbaObj.ExecuteQuery("select SignatureID,UserName,MarkName,MarkType from Signature order by SignatureID desc") ;
               while ( result.next() )
               {
                String mSignatureID=result.getString("SignatureID");
        
      out.write("\r\n\t<tr>\r\n\t\t<td class=\"TDStyle\">");
      out.print(result.getString("SignatureID"));
      out.write("&nbsp;</td>\r\n\t\t<td class=\"TDStyle\">");
      out.print(result.getString("UserName"));
      out.write("&nbsp;</td>\r\n\t\t<td class=\"TDStyle\">");
      out.print(result.getString("MarkName"));
      out.write("&nbsp;</td>\r\n\t\t<td class=\"TDStyle\">");
      out.print(result.getString("MarkType"));
      out.write("&nbsp;</td>\r\n\t\t<td class=\"TDStyle\" width=148 nowrap>\r\n\t\t\t<input type=button onclick=\"javascript:location.href='SignatureEditFrm.jsp?SignatureID=");
      out.print(mSignatureID);
      out.write("';\" name=\"Edit\" value=\" 修 改 \">\r\n\t\t\t<input type=button onclick=\"javascript:ConfirmDel('SignatureDel.jsp?SignatureID=");
      out.print(mSignatureID);
      out.write("');\" name=\"Del\" value=\" 删 除 \">\r\n\t\t</td>\r\n\t</tr>\r\n\t");

              }
          result.close() ;
             }
             catch(Exception e)
             {
               System.out.println(e.toString());
             }
             DbaObj.CloseConnection() ;
           }
           else
           {
             out.println("OpenDatabase Error") ;
           }

        
      out.write("\r\n</table>\r\n</body>\r\n</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
