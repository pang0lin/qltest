/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:42:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.workplan;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.util.*;
import com.js.util.util.DateHelper;
import com.js.oa.workplan.po.WorkplanPO;

public final class workplan_005fmodify_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-nested.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-tiles.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-logic.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-html.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-template.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-bean.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.oa.workplan.po.WorkplanPO");
    _jspx_imports_classes.add("com.js.util.util.DateHelper");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fhtml_005fhtml;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fhtml_005fhtml = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fhtml_005fhtml.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);

WorkplanPO po=(WorkplanPO)request.getAttribute("workplan");

String workplanId=request.getParameter("workplanId");
String leaderName=po.getLeaderName();
String workType=po.getWorkType();
String workPlace=po.getWorkPlace();
String workStatus=po.getWorkStatus();
Date workDate=po.getWorkDate();
String description=po.getDescription();




      out.write("\r\n\r\n");
      //  html:html
      org.apache.struts.taglib.html.HtmlTag _jspx_th_html_005fhtml_005f0 = (org.apache.struts.taglib.html.HtmlTag) _005fjspx_005ftagPool_005fhtml_005fhtml.get(org.apache.struts.taglib.html.HtmlTag.class);
      boolean _jspx_th_html_005fhtml_005f0_reused = false;
      try {
        _jspx_th_html_005fhtml_005f0.setPageContext(_jspx_page_context);
        _jspx_th_html_005fhtml_005f0.setParent(null);
        int _jspx_eval_html_005fhtml_005f0 = _jspx_th_html_005fhtml_005f0.doStartTag();
        if (_jspx_eval_html_005fhtml_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n<head>\r\n<title>修改信息</title>\r\n<script language=\"javascript\" src=\"/jsoa/js/checkForm.js\"></script>\r\n<script src=\"js/js.js\" language=\"javascript\"></script>\r\n<SCRIPT language=\"javascript\" src=\"/jsoa/js/checkText.js\"></SCRIPT>\r\n<link href=\"/jsoa/skin/");
            out.print(session.getAttribute("skin"));
            out.write("/style-");
            out.print(session.getAttribute("browserVersion"));
            out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n\r\n<link href=\"/jsoa/style/cssmain.css\" rel=\"stylesheet\" type=\"text/css\">\r\n</head>\r\n\r\n<body leftmargin=\"0\" topmargin=\"0\" onload=\"initTable();\"  class=\"MainFrameBox Pupwin\">\r\n<form name=\"frm\" action=\"/jsoa/WorkplanAction.do?action=modifysave\"  method=\"post\">\r\n<table width=\"100%\" height=\"100%\" border=\"0\" cellpadding=\"1\" cellspacing=\"0\" class=\"docBoxNoPanel\">\r\n  <tr>\r\n    <td  valign=\"top\">\r\n\t\t\t<table width=\"100%\" border=\"0\" cellpadding=\"5\" cellspacing=\"1\">\t\r\n\t\t\t\t<input type=\"hidden\" name=\"workplanId\" id=\"workplanId\" value=\"");
            out.print(workplanId );
            out.write("\" /> \t\r\n\t\t\t\t<tr>\r\n\t\t\t\t  <td width=\"5%\" nowrap>&nbsp;姓名：</td>\r\n\t\t\t\t  <td width=\"20%\" nowrap>");
            out.print(leaderName );
            out.write("</td>\t\t\t\t \r\n\t\t\t\t  <td width=\"5%\" nowrap>时间:</td>\r\n\t\t\t\t  <td nowrap>");
            out.print(DateHelper.date2String(workDate));
            out.write("\r\n\t\t\t\t  \t\t\t\t  \r\n\t\t\t\t  </td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t  <td nowrap>&nbsp;类型：</td>\r\n\t\t\t\t  <td nowrap>\r\n\t\t\t\t  \t<select name=\"workType\">\r\n\t\t\t\t  \t");
if(po.getWorkType().equals("上午")){ 
            out.write("\r\n\t\t\t\t  \t\t<option value=\"上午\" selected=\"selected\">上午</option>\r\n\t\t\t\t  \t\t");
}else{ 
            out.write("\r\n\t\t\t\t  \t\t<option value=\"下午\">下午</option>\r\n\t\t\t\t  \t\t");
} 
            out.write("\r\n\t\t\t\t  \t</select>\r\n\t\t\t\t  </td>\t\t\t\t \r\n\t\t\t\t  <td nowrap>状态:</td>\r\n\t\t\t\t  <td nowrap>\r\n\t\t\t\t  \t<select name=\"workStatus\">\r\n\t\t\t\t  \t\t");

				  		List list=(List)request.getAttribute("workStatusList");
				  		Object[] obj;
				  		if(list!=null && list.size()>0){
				  			for(int i=0;i<list.size();i++){
				  			obj=(Object[])list.get(i);
				  		
            out.write("\r\n\t\t\t\t  \t\t<option value=\"");
            out.print(obj[1]);
            out.write('"');
            out.write('>');
            out.print(obj[1]);
            out.write("</option>\r\n\t\t\t\t  \t\t");
}
				  		}
            out.write("\r\n\t\t\t\t  \t</select>\t  \r\n\t\t\t\t  </td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t  <td nowrap>&nbsp;地点：</td>\r\n\t\t\t\t  <td colspan=\"3\" nowrap><input type=\"text\" class=\"inputText\" style=\"width:500px;\" name=\"workPlace\" id=\"workplace\" value=\"");
            out.print(workPlace==null?"":workPlace );
            out.write("\"></td>\t\t\t\t\t  \t\t\t\t  \r\n\t\t\t\t  </td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t  <td nowrap>&nbsp;描述：</td>\r\n\t\t\t\t  <td colspan=\"3\" nowrap><input type=\"text\" class=\"inputText\" style=\"width:500px;\" name=\"description\" id=\"description\" value=\"");
            out.print(description==null?"":description );
            out.write("\"></td>\t\t\t\t  \t\t\t\t  \r\n\t\t\t\t \r\n\t\t\t\t</tr>\r\n\t\t  </table>\r\n\t\t<br/>\r\n\t\t<table width=\"100%\" border=\"0\">\t\t\r\n\t\t\t<tr>\r\n\t\t\t  <td>\r\n\t\t\t    <input type=\"button\" class=\"btnButton4font\" style=\"cursor:pointer\" onClick=\"saveClose();\" value=\"保存退出\"/>\t\t  \t\t\t\r\n\t\t\t\t<input type=\"button\" class=\"btnButton2font\" style=\"cursor:pointer\" onClick=\"frm.reset();\" value=\"重置\"/>\r\n\t\t\t\t<input type=\"button\" class=\"btnButton2font\" style=\"cursor:pointer\" onClick=\"javascript:window.close();\" value=\"退出\"/>\r\n\t\t\t  </td>\r\n\t\t\t</tr>\r\n\t\t</table>\r\n\t</td>\r\n  </tr>\r\n</table>\r\n</form>\r\n</body>\r\n\r\n");
            int evalDoAfterBody = _jspx_th_html_005fhtml_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_html_005fhtml_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fhtml_005fhtml.reuse(_jspx_th_html_005fhtml_005f0);
        _jspx_th_html_005fhtml_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_html_005fhtml_005f0, _jsp_getInstanceManager(), _jspx_th_html_005fhtml_005f0_reused);
      }
      out.write("\r\n<script src=\"/jsoa/js/util.js\"></script>\r\n<script>\r\nfunction saveClose(){\r\n\tdocument.frm.submit();\r\n}\r\n</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
