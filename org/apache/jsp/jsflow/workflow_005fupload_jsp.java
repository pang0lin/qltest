/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:07:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsflow;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.jsupload.upload.*;
import java.util.*;
import org.apache.commons.fileupload.FileItem;
import com.jsupload.upload.SmartUpload;
import com.js.system.util.SysSetupReader;

public final class workflow_005fupload_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.jsupload.upload");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.jsupload.upload.SmartUpload");
    _jspx_imports_classes.add("org.apache.commons.fileupload.FileItem");
    _jspx_imports_classes.add("com.js.system.util.SysSetupReader");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n");
      com.jsupload.upload.SmartUpload myUpload = null;
      myUpload = (com.jsupload.upload.SmartUpload) _jspx_page_context.getAttribute("myUpload", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (myUpload == null){
        myUpload = new com.jsupload.upload.SmartUpload();
        _jspx_page_context.setAttribute("myUpload", myUpload, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n\r\n\r\n<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<script language=\"javascript\">\r\n<!--\r\nfunction insertTable(fieldName,fileName,saveName){\r\n    var tableObj = eval(\"opener.document.all.\" + fieldName + \"_tab\");\r\n\r\n    tableObj.insertRow();\r\n    var rowNum = tableObj.rows.length - 1;\r\n    var newNode = tableObj.rows(rowNum);\r\n    newNode.bgColor = \"#FFFFFF\";\r\n    newNode.bordercolor = \"#999999\";\r\n    for(var j = 0; j < 2; j ++){\r\n        newNode.insertCell();\r\n    }\r\n    newNode.cells(0).height = \"22\";\r\n    newNode.cells(0).innerHTML = fileName + \"<input type='hidden' name='\" + fieldName + \"_fileName' value='\" + fileName + \"'><input type='hidden' name='\" + fieldName + \"_saveName' value='\" + saveName +\"'>\";\r\n    newNode.cells(1).align = \"center\";\r\n    newNode.cells(1).innerHTML = \"<img src=\\\"images/del.gif\\\" alt=\\\"删除\\\" style=\\\"cursor:pointer\\\" onclick=\\\"deleteRow(\" + rowNum + \",'\" + fieldName + \"','\" + saveName + \"');\\\">\" +\r\n    \"<input type=hidden name=tableRow value=\" + rowNum + \">\";\r\n}\r\n//-->\r\n</script>\r\n");

request.setCharacterEncoding("GBK"); 
String domainId=session.getAttribute("domainId").toString();
int fileSize=0;
String attachSizeLimit=SysSetupReader.getInstance().getAttachLimit(domainId);
if(!attachSizeLimit.startsWith("1")){
	Map map = (Map) session.getAttribute("ftpMap");
	String fileSizeLimitAll="0";//默认限制大小
	if(map != null && map.get("FileSizeLimitAll") != null){
	    fileSizeLimitAll = map.get("FileSizeLimitAll").toString();//配置文件限制大小
	    if(fileSizeLimitAll.startsWith("1")){//是否限制，1：限制；0，不限制
	        fileSize=Integer.parseInt(fileSizeLimitAll.substring(1));
	    }
	  }
}else{
   fileSize=Integer.parseInt(attachSizeLimit.substring(1));
}
String fileSizeMsg="";
if(fileSize/1000000>0){
    fileSizeMsg=String.valueOf(fileSize/(1024*1024))+"MB";
}else if(fileSize/1000>0){
    fileSizeMsg=String.valueOf(fileSize/1024)+"KB";
}else{
    fileSizeMsg=String.valueOf(fileSize)+"字节";
}
String fieldName = request.getParameter("fieldName");
String upload = request.getParameter("upload");
if(upload != null){
    String filePath="";
    String saveName="";
    String fileName="";
    String fileExt="";
    String myRandom="";
    
    myUpload.initialize(request);
    List fileList=new ArrayList();
    try
    {
    	fileList=myUpload.getFileList();
    }
    catch(Exception e) 
    {
    	out.println("<div style=\"witdh:100%;height:100%;\" class=\"docBox\">");
    	out.println("<center style=\"padding-top:100px;\">");
    	out.println("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">");
    	out.println("<tr>");
    	out.println("<td width=\"60\"><img src=\"/jsoa/images/errorFace_excel.gif\"/></td>");
    	out.println("<td width=\"220\"><font color=\"#FF0000\">ERROR:上传失败！文件尺寸超过规定大小:"+fileSizeMsg+"</font></td>");
    	out.println("</tr>");
    	out.println("<tr>");
    	out.println("<td>&nbsp;</td>");
    	out.println("<td align=\"center\" valign=\"middle\" height=\"65\"><input type=\"button\" class=\"btnButton2font\" onclick=\"javascript:history.back(-1);\" value='返回重试'></input></td>");
    	out.println("</tr>");
    	out.println("</table>");
    	out.println("</center>");
    	out.println("</div>");
    	return;
    }
    int upLoadAllFileSize=0;
    String [] banType=SmartUpload.banType;
	for (int j=0;j<fileList.size();j++)
	{
		FileItem fileItem=(FileItem)fileList.get(j);
		if(!fileItem.isFormField())//如果是<input type="file">
		{
			String fileNameTemp=fileItem.getName();
    		for(int i=0;i<banType.length;i++)
    		{
    			if(fileNameTemp.endsWith(banType[i]))
   				{
   					fileItem.delete();
   					out.println("<script>alert('上传失败！非法文件类型！');history.back(-1);</script>");
   					return;
   				}
    		}
			upLoadAllFileSize+=fileItem.getSize();//上传总大小
		}
	}
	if(upLoadAllFileSize==0)
    {
    	out.println("<div style=\"witdh:100%;height:100%;\" class=\"docBox\">");
    	out.println("<center style=\"padding-top:100px;\">");
    	out.println("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">");
    	out.println("<tr>");
    	out.println("<td width=\"60\"><img src=\"/jsoa/images/errorFace_excel.gif\"/></td>");
    	out.println("<td width=\"220\"><font color=\"#FF0000\">ERROR:上传失败！请选择非空文件上传！</font></td>");
    	out.println("</tr>");
    	out.println("<tr>");
    	out.println("<td>&nbsp;</td>");
    	out.println("<td align=\"center\" valign=\"middle\" height=\"65\"><input type=\"button\" class=\"btnButton2font\" onclick=\"javascript:history.back(-1);\" value='返回重试'></input></td>");
    	out.println("</tr>");
    	out.println("</table>");
    	out.println("</center>");
    	out.println("</div>");
    	return;
    }
   	for (int j=0;j<fileList.size();j++){
        myRandom=new com.js.util.util.Random().getRandom();
        FileItem fileItem=(FileItem)fileList.get(j);//获取上传文件
        // 忽略空的上传控件和简单form字段而不是上传域的文件域(<input type="text" />等)
	   	if (fileItem.getSize()<=0|| fileItem.isFormField()) 
	   	{
		   	continue;
	   	}
        fileName=fileItem.getName();//获取上传文件名
        if(!"".equals(fileName)&&null!=fileName)
        {	
        	fileName=fileName.substring(fileName.lastIndexOf("\\") + 1);
        	fileExt=fileName.substring(fileName.lastIndexOf(".") + 1);//获取上传文件扩展名
        }
        
        if (fileName.length() > 50)//文件名太长
					{
						fileName = fileName.substring(0, 40);//截断
						fileName+="~1."+	fileExt;
					} 
        
        filePath=request.getSession().getServletContext().getRealPath("/")+"upload/workflow/";
        myUpload.saveAs(fileItem,filePath + fileName);//保存文件
    }

    
      out.write("\r\n    <script language=\"javascript\">\r\n    <!--\r\n    insertTable('");
      out.print(fieldName);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(fileName);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(saveName);
      out.write("');\r\n    //-->\r\n    </script>\r\n    ");

}

      out.write("\r\n<html>\r\n<head>\r\n<title>上传附件</title>\r\n<script language=\"javascript\" src=\"/jsoa/js/checkForm.js\"></script>\r\n</head>\r\n<body bgcolor=\"E8ECED\">\r\n<br>\r\n<P align=\"center\"><font color=\"#3366CC\">请选择要上传的文件</font></p>\r\n");

java.util.Map sysMap = com.js.system.util.SysSetupReader.getInstance().getSysSetupMap(session.getAttribute("domainId").toString());
if(sysMap != null && sysMap.get("附件上传") != null && sysMap.get("附件上传").toString().equals("0")){
    //ftp
    Map map = (Map) session.getAttribute("ftpMap");
    String mode = request.getParameter("mode");
    String path = request.getParameter("path")==null?"workflow":request.getParameter("path");
    String tableName = request.getParameter("tableName");
    String fileNames = request.getParameter("fileName");
    String saveNames = request.getParameter("saveName");
    String fileType = request.getParameter("fileType");
    String fileCountLimit="0";
    String fileSizeLimit="0";
    String fileSizeLimitAll="110240000";


int fileNum;
int fileMaxSize;
if(request.getParameter("fileMaxNum")!=null && !"null".equals(request.getParameter("fileMaxNum"))){
	fileNum=Integer.parseInt(request.getParameter("fileMaxNum"));
}else{
	fileNum=0;
}

if(request.getParameter("fileMaxSize")!=null && !"null".equals(request.getParameter("fileMaxSize"))){
	fileMaxSize=Integer.parseInt(request.getParameter("fileMaxSize"));
}else{
	fileMaxSize=0;
}

if(fileNum>0){
	fileCountLimit="1"+fileNum;
}
if(fileMaxSize>0){
	fileSizeLimitAll="1"+fileMaxSize;
}

String saveName = "";
String fileName = "";
String fileSuffix = "";

if(fileType != null && !fileType.equals("")){
	if(fileType.indexOf(",") >= 0){
		fileType = fileType.replace(',', '|');
	}
	fileType = "1" + fileType;
}else{
	fileType = "2exe|jsp|asp|cmd|ocx|com|dll";
}

      out.write("\r\n<TABLE width=\"80%\" align=\"center\" border=0>\r\n\t<CENTER>\r\n\t<TR>\r\n\t\t<TD align=\"center\"><object\r\n\t\t\tclassid=\"clsid:89AF7F33-300E-4AFB-8DEA-D375FCE398B4\"\r\n\t\t\tid=\"ActiveFormX1\" width=\"407\" height=\"52\" codebase=\"P.cab#version=1,0,30,0\">\r\n\t\t\t<param name=\"filecountlimit\" value=\"");
      out.print(fileCountLimit);
      out.write("\">\r\n\t\t\t<param name=\"filesizelimit\" value=\"");
      out.print(fileSizeLimit);
      out.write("\">\r\n\t\t\t<param name=\"filesizelimitall\" value=\"");
      out.print(fileSizeLimitAll);
      out.write("\">\r\n\t\t\t<param name=\"filterext\" value=\"");
      out.print(fileType);
      out.write("\">\r\n\t\t\t<param name=\"Visible\" value=\"0\">\r\n\t\t\t<param name=\"AutoScroll\" value=\"0\">\r\n\t\t\t<param name=\"AutoSize\" value=\"0\">\r\n\t\t\t<param name=\"AxBorderStyle\" value=\"0\">\r\n\t\t\t<param name=\"Caption\" value=\"ActiveFormX\">\r\n\t\t\t<param name=\"Color\" value=\"15592680\">\r\n\t\t\t<param name=\"Font\" value=\"宋体\">\r\n\t\t\t<param name=\"KeyPreview\" value=\"0\">\r\n\t\t\t<param name=\"PixelsPerInch\" value=\"96\">\r\n\t\t\t<param name=\"PrintScale\" value=\"1\">\r\n\t\t\t<param name=\"Scaled\" value=\"0\">\r\n\t\t\t<param name=\"DropTarget\" value=\"0\">\r\n\t\t\t<param name=\"HelpFile\" value>\r\n\t\t\t<param name=\"DoubleBuffered\" value=\"0\">\r\n\t\t\t<param name=\"Enabled\" value=\"-1\">\r\n\t\t\t<param name=\"Cursor\" value=\"0\">\r\n\t\t\t<param name=\"ftphost\" value=\"");
      out.print(map.get("server"));
      out.write("\">\r\n\t\t\t<param name=\"ftpport\" value=\"");
      out.print(map.get("port"));
      out.write("\">\r\n\t\t\t<param name=\"ftpuser\" value=\"");
      out.print(map.get("user"));
      out.write("\">\r\n\t\t\t<param name=\"ftppwd\" value=\"");
      out.print(map.get("password"));
      out.write("\">\r\n\t\t\t<param name=\"ftpfile\" value=\"\">\r\n\t\t\t<param name=\"ftpupdfile\" value=\"\">\r\n\t\t\t<param name=\"dddd\" value=\"");
      out.print(map.get("ddd"));
      out.write("\">\r\n\t\t\t<param name=\"curpath\" value=\"");
      out.print(path);
      out.write("\">\r\n\t\t</object></TD>\r\n\t</TR>\r\n\t<tr>\r\n\t\t<td><input type=\"hidden\" name=\"allFileLimitedSize\" value=\"0\">\r\n\t\t</td>\r\n\t</tr>\r\n\t<TR>\r\n\t\t<TD align=\"center\"><INPUT NAME=\"button\" VALUE=\"上传\"\r\n\t\t\tonclick=\"javascript:upload()\" TYPE=\"button\"> &nbsp;&nbsp;<INPUT\r\n\t\t\tNAME=\"reset\" VALUE=\"重置\" TYPE=\"reset\"></TD>\r\n\t</TR>\r\n\t<tr>\r\n\t\t<td>&nbsp;</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td align=\"center\"><input type=\"hidden\" name=\"fileRealName\" value=\"\">\r\n\t\t<input type=\"hidden\" name=\"fileSaveName\" value=\"\"> <!--<img src=\"/jsoa/images/boder_left.gif\" hspace=\"5\" vspace=\"5\" id=\"preview\" >-->\r\n\t\t</td>\r\n\t</tr>\r\n\t</CENTER>\r\n</TABLE>\r\n<script language=\"javascript\">\r\nfunction upload(){\r\n/*\r\n    var fileSizeLimitAll=\"");
      out.print(fileSizeLimitAll);
      out.write("\";\r\n\tfileSizeLimitAll=fileSizeLimitAll.substring(1);\r\n\tvar oriSize=opener.window.document.all.allAttachSize.value;\r\n\tif(\"0\"==oriSize){\r\n\t\tdocument.all.allFileLimitedSize.value=fileSizeLimitAll;\r\n\t}else{\r\n\t\tdocument.all.allFileLimitedSize.value=(fileSizeLimitAll-oriSize);\r\n\t}\r\n\r\n\r\n\t//上传之前判断大小是否超过已经剩余的上传空间\r\n\tvar remainSpace=document.all.allFileLimitedSize.value;\r\n\r\n\t//本次上传的附件大小\r\n\tvar currentSize=0;\r\n\tvar thisAttachSizeTmp=document.ActiveFormX1.getfilesize();\r\n\tvar thisAttachArr;\r\n\tif(thisAttachSizeTmp.indexOf(\"|\")>=0){\r\n\t\tthisAttachArr=thisAttachSizeTmp.split(\"|\");\r\n\t\tfor(var i=0;i<thisAttachArr.length;i++){\r\n\t\t\tcurrentSize=(thisAttachArr[i]*1)+currentSize;\r\n\t\t}\r\n\t}else{\r\n\t\tcurrentSize=thisAttachSizeTmp;\r\n\t}\r\n\r\n\tif((remainSpace-currentSize)<0){\r\n\t\talert(\"您的上传空间已经不足,请删除部分已选附件!\");\r\n\t\twindow.close();\r\n\t\treturn;\r\n\t}*/\r\n    var tmpReturn = document.ActiveFormX1.startupload();\r\n\t//alert(tmpReturn);\r\n\r\n\t/*\r\n\t    tmpReturn的返回值有\r\n\t        LINKFAIL    ：连接失败\r\n\t\t\tNOFILE      :没有待上传文件\r\n\t\t\tOK          :上传完毕\r\n\t*/\r\n\tif(tmpReturn==\"OK\"){\r\n");
      out.write("            var saveNameTmp=document.ActiveFormX1.getnewfile();\r\n            var fileNameTmp=document.ActiveFormX1.getoldfile();\r\n            if(saveNameTmp.indexOf(\"|\")>=0){\r\n\t\tvar saveNameArr=saveNameTmp.split(\"|\");\r\n\t\tvar fileNameArr=fileNameTmp.split(\"|\");\r\n\t\tfor(var i=0;i<saveNameArr.length;i++){\r\n                    var tmp = fileNameArr[i];\r\n                    if(tmp.indexOf(\"\\\\\") >= 0){\r\n                        var tmpArr = tmp.split(\"\\\\\");\r\n                        tmp = tmpArr[tmpArr.length - 1];\r\n                    }\r\n                    //alert(tmp);\r\n                    //insertTable(saveNameArr[i],fileNameArr[i],thisAttachArr[i]);\r\n                    insertTable('");
      out.print(fieldName);
      out.write("', tmp, saveNameArr[i]);\r\n\t\t}\r\n            }else{\r\n                var tmp = fileNameTmp;\r\n                if(tmp.indexOf(\"\\\\\") >= 0){\r\n                    var tmpArr = tmp.split(\"\\\\\");\r\n                    tmp = tmpArr[tmpArr.length - 1];\r\n                }\r\n                //alert(tmp);\r\n                insertTable('");
      out.print(fieldName);
      out.write("', tmp, saveNameTmp);\r\n                //insertTable(saveNameTmp,fileNameTmp,thisAttachSize);\r\n            }\r\n\r\n\t\tgetReset();\r\n\t\t//window.close();\r\n\t}else{\r\n\t\talert(\"上传失败\");\r\n\t}\r\n}\r\n//重置\r\nfunction getReset(){\r\n    document.ActiveFormX1.setreset();\r\n}\r\n</script>\r\n");

}else{
    //http

      out.write("\r\n<table width=\"80%\" align=\"center\" border=\"0\">\r\n<form enctype=\"multipart/form-data\" name=\"frm\" action=\"workflow_upload.jsp?fieldName=");
      out.print(fieldName);
      out.write("&upload=true\" method=\"post\" onsubmit=\"return upload();\">\r\n    <tr>\r\n        <td><input type=\"file\" name=\"fileName\" size=\"30\" ></td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;</td>\r\n    </tr>\r\n    <tr>\r\n        <td align=\"center\">\r\n            <input type=\"submit\" value=\"上传\" name=\"submit\">&nbsp;&nbsp;\r\n            <input type=\"button\" value=\"关闭\" name=\"button\" onclick=\"window.close();\">\r\n        <td>\r\n    </tr>\r\n</form>\r\n</table>\r\n<script language=\"javascript\">\r\n<!--\r\nfunction upload(){\r\n    if(textIsEmpty(document.all.fileName)){\r\n    \talert(\"请选择附件！\");\r\n    \treturn false;\r\n    }\r\n}\r\n//-->\r\n</script>\r\n");

}
      out.write("\r\n</body>\r\n</html>\r\n<script src=\"/jsoa/js/util.js\"></script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
