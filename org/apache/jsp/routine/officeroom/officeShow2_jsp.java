/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:48:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.routine.officeroom;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.oa.routine.officeroom.bean.OfficeRoomEJBBean;
import com.js.util.util.BrowserJudge;
import java.util.*;
import java.text.*;
import com.js.lang.Resource;

public final class officeShow2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-nested.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-tiles.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-logic.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-html.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-template.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-bean.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.lang.Resource");
    _jspx_imports_classes.add("com.js.oa.routine.officeroom.bean.OfficeRoomEJBBean");
    _jspx_imports_classes.add("com.js.util.util.BrowserJudge");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);

	String local = session.getAttribute("org.apache.struts.action.LOCALE").toString();
	DateFormat fmt = DateFormat.getDateInstance(DateFormat.FULL,Locale.CHINA);
	OfficeRoomEJBBean officeRoomEJBBean=new OfficeRoomEJBBean();
	List officeList =(List)request.getAttribute("officeList");
	List buildList =(List)request.getAttribute("buildList");
	Map map_f=null;
	Map map_s=null;
	Map map_t=null;
	int j=0;

      out.write("\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=GBK\">\r\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" /> \r\n<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<script src=\"js/js.js\" language=\"javascript\"></script>\r\n<link rel=stylesheet type=\"text/css\" href=\"/jsoa/public/date_picker/DateObject2.css\">\r\n<script language=\"JavaScript\" src=\"/jsoa/js/resource/");
      out.print(local);
      out.write("/CommonResource.js\" type=\"text/javascript\"></script>\r\n\r\n<title>中国科学院数学院</title> \r\n<META HTTP-EQUIV=\"Refresh\" content=\"600\"> \r\n<style type=\"text/css\"> \r\nhtml {height: auto;} \r\nbody {height: auto;margin: 0;padding: 0;} \r\n#map_canvas {width:100%;height: 100%;position: absolute;} \r\n@media print {#map_canvas {height: 1250px;}} \r\n</style> \r\n\r\n<script type=\"text/javascript\" src=\"http://api.go2map.com/maps/js/api_v2.0.js\"></script>\r\n<script type=\"text/javascript\">\r\n /** \r\n  * 事件侦听处理、添加标记、信息窗 \r\n  * 点击5个标记可以看到信息窗中有五个单词，连成的一条信息。 \r\n  */\r\nvar map; \r\nfunction initialize() { \r\n  //var latLng = new sogou.maps.LatLng(39.98197,116.32457); \r\n  var myOptions = { \r\n    zoom: 17, \r\n    center: new sogou.maps.LatLng(39.98197,116.32457),\r\n    mapTypeId: sogou.maps.MapTypeId.EDUSHIMAP //初始化为三维地图\r\n  } \r\n  \r\n  map = new sogou.maps.Map(document.getElementById(\"map_canvas\"), myOptions); \r\n  setMark();\r\n} \r\n \r\nfunction setMark (){\r\n\t\r\n\t  //添加3个点到地图上 \r\n\t  var southWest = new sogou.maps.LatLng(39.98299,116.32457); \r\n\t  var northEast = new sogou.maps.LatLng(39.98116211,116.3259823333); \r\n");
      out.write("\t  var bounds = new sogou.maps.LatLngBounds(southWest,northEast); \r\n\t  //设置地图，使其与指定范围相符。 \r\n\t  map.fitBounds(bounds); \r\n\t  var lngSpan = northEast.lng() - southWest.lng(); \r\n\t  var latSpan = northEast.lat() - southWest.lat(); \r\n\t  \r\n\t  var buildLB=\"\";//单元楼名称-01\r\n\t  var buildLBID=\"\";//单元楼ID-01\r\n\t  var buildLBAdminName=\"\";//管理员-01\r\n\t  var buildLBCount=\"\";//楼层数量-01\r\n\t  var officeLBCount=\"\";//房间数量-01\r\n\t  \r\n\t  \r\n\t  var buildSY=\"\";//单元楼名称-02\r\n\t  var buildSYID=\"\";//单元楼ID-02\r\n\t  var buildSYAdminName=\"\";//管理员-02\r\n\t  var buildSYCount=\"\";//楼层数量-02\r\n\t  var officeSYCount=\"\";//房间数量-02\r\n\t  \r\n\t  \r\n\t  var buildXD=\"\";//单元楼名称-03\r\n\t  var buildXDID=\"\";//单元楼ID-03\r\n\t  var buildXDAdminName=\"\";//管理员-03\r\n\t  var buildXDCount=\"\";//楼层数量-03\r\n\t  var officeXDCount=\"\";//房间数量-03\r\n\t  \r\n\t  ");

	  if(buildList!=null && buildList.size()>0){
		  int size=0;
		  if(buildList.size()>3){
			  size=3;
		  }else{
			  size=buildList.size();
		  }
	  for(int i=0;i<size;i++){
		  Object[] objects=(Object[])buildList.get(i);
	  
      out.write("\r\n\t  ");
if(i==0){
      out.write("\r\n\t   buildLB='");
      out.print(objects[1]);
      out.write("';\r\n\t   buildLBID='");
      out.print(objects[0]);
      out.write("';\r\n\t   buildLBCount='");
      out.print(objects[3]);
      out.write("';\r\n\t   buildLBAdminName='");
      out.print(objects[4]);
      out.write("';\r\n\t   ");

	   boolean flagLB=false;
	    List lb=officeRoomEJBBean.getListBuildNumber(objects[0]+"","","");
	     map_f=officeRoomEJBBean.getBuildBasic(objects[0]+"","");
	   flagLB= officeRoomEJBBean.getBuildApplayIsTrue(objects[0]+"");
	   
      out.write("\r\n\t   officeLBCount=");
      out.print(lb.size());
      out.write(";\r\n\t   \r\n\t   ");
 if(!flagLB){
      out.write("\r\n\t   \r\n\t\tvar imageLB = new sogou.maps.MarkerImage('/jsoa/images/yellowW.gif', \r\n\t\t\t    // 标记图标宽20像素，高32像素 \r\n\t\t\t    new sogou.maps.Size(30, 30), \r\n\t\t\t    // 原点在图片左上角，设为(0,0) \r\n\t\t\t    new sogou.maps.Point(0,0), \r\n\t\t\t    new sogou.maps.Point(2, 30) \r\n\t\t\t   ); \r\n\t   \r\n\t\t");
}else{
      out.write("\r\n\t\t\r\n\t\tvar imageLB = new sogou.maps.MarkerImage('/jsoa/images/blueW.gif', \r\n\t\t\t    // 标记图标宽20像素，高32像素 \r\n\t\t\t    new sogou.maps.Size(30, 30), \r\n\t\t\t    // 原点在图片左上角，设为(0,0) \r\n\t\t\t    new sogou.maps.Point(0,0), \r\n\t\t\t    new sogou.maps.Point(2, 30) \r\n\t\t\t   ); \r\n\t\t\r\n\t\t");
}
      out.write("\r\n\t   \r\n\t   \r\n\t   ");
}
      out.write("\r\n\t   \r\n\t   ");
if(i==1){
      out.write("\r\n\t   \r\n\t   \r\n\t   buildSY='");
      out.print(objects[1]);
      out.write("';\r\n\t   buildSYID='");
      out.print(objects[0]);
      out.write("';\r\n\t  \r\n\t   buildSYCount='");
      out.print(objects[3]);
      out.write("';\r\n\t   buildSYAdminName='");
      out.print(objects[4]);
      out.write("';\r\n\t   ");

	    boolean flagSY=false;
	   flagSY= officeRoomEJBBean.getBuildApplayIsTrue(objects[0]+"");
	   List SY=officeRoomEJBBean.getListBuildNumber(objects[0]+"","","");
	   map_s=officeRoomEJBBean.getBuildBasic(objects[0]+"","");
	   
      out.write("\r\n\t   officeSYCount=");
      out.print(SY.size());
      out.write(";\r\n\t   \r\n\t   \r\n\t   ");
 if(!flagSY){
      out.write("\r\n\t   \r\n\t\tvar imageSY = new sogou.maps.MarkerImage('/jsoa/images/yellowW.gif', \r\n\t\t\t    // 标记图标宽20像素，高32像素 \r\n\t\t\t    new sogou.maps.Size(30, 30), \r\n\t\t\t    // 原点在图片左上角，设为(0,0) \r\n\t\t\t    new sogou.maps.Point(0,0), \r\n\t\t\t    new sogou.maps.Point(2, 30) \r\n\t\t\t   ); \r\n\t   \r\n\t\t");
}else{
      out.write("\r\n\t\t\r\n\t\tvar imageSY = new sogou.maps.MarkerImage('/jsoa/images/blueW.gif', \r\n\t\t\t    // 标记图标宽20像素，高32像素 \r\n\t\t\t    new sogou.maps.Size(30, 30), \r\n\t\t\t    // 原点在图片左上角，设为(0,0) \r\n\t\t\t    new sogou.maps.Point(0,0), \r\n\t\t\t    new sogou.maps.Point(2, 30) \r\n\t\t\t   ); \r\n\t\t\r\n\t\t");
}
      out.write("\r\n\t   \r\n\t   \r\n\t   \r\n\t   \r\n\t   ");
}
      out.write("\r\n\t   \r\n\t   ");
if(i==2){
      out.write("\r\n\t   \r\n\t   buildXD='");
      out.print(objects[1]);
      out.write("';\r\n\t   buildXDID='");
      out.print(objects[0]);
      out.write("';\r\n\t   \r\n\t   buildXDCount='");
      out.print(objects[3]);
      out.write("';\r\n\t   buildXDAdminName='");
      out.print(objects[4]);
      out.write("';\r\n\t   ");

	   boolean flagXD=false;
	   flagXD= officeRoomEJBBean.getBuildApplayIsTrue(objects[0]+"");
	   List XD=officeRoomEJBBean.getListBuildNumber(objects[0]+"","","");
	   map_t=officeRoomEJBBean.getBuildBasic(objects[0]+"","");
	   
      out.write("\r\n\t   officeXDCount=");
      out.print(XD.size());
      out.write(";\r\n\t   \r\n\t   ");
 if(!flagXD){
      out.write("\r\n\t   \r\n\t\tvar imageXD = new sogou.maps.MarkerImage('/jsoa/images/yellowW.gif', \r\n\t\t\t    // 标记图标宽20像素，高32像素 \r\n\t\t\t    new sogou.maps.Size(30, 30), \r\n\t\t\t    // 原点在图片左上角，设为(0,0) \r\n\t\t\t    new sogou.maps.Point(0,0), \r\n\t\t\t    new sogou.maps.Point(2, 30) \r\n\t\t\t   ); \r\n\t   \r\n\t\t");
}else{
      out.write("\r\n\t\t\r\n\t\tvar imageXD = new sogou.maps.MarkerImage('/jsoa/images/blueW.gif', \r\n\t\t\t    // 标记图标宽20像素，高32像素 \r\n\t\t\t    new sogou.maps.Size(30, 30), \r\n\t\t\t    // 原点在图片左上角，设为(0,0) \r\n\t\t\t    new sogou.maps.Point(0,0), \r\n\t\t\t    new sogou.maps.Point(2, 30) \r\n\t\t\t   ); \r\n\t\t\r\n\t\t");
}
      out.write("\r\n\t   \r\n\t   ");
}
      out.write("\r\n\t\t\r\n\t ");
}}
      out.write("\r\n\t    //1:\r\n\t\tvar locationLB = new sogou.maps.LatLng(39.983599,116.325299); \r\n\t \r\n\t \r\n\t\r\n\t \r\n\t \r\n\t   //alert(southWest.lat() + latSpan * Math.random()+\"----\"+southWest.lng() + lngSpan * Math.random());  \r\n\t    var markerLB = new sogou.maps.Marker({position:locationLB,map: map,icon:imageLB}); \r\n\t    var j = 0 + 1; \r\n\t    markerLB.setTitle(buildLB); \r\n\t    var messageLB=\"管&nbsp;理&nbsp;员&nbsp;：\"+buildLBAdminName;\r\n\t    messageLB+=\"</br>\";\r\n\t    messageLB+=\"楼&nbsp;层&nbsp;数&nbsp;：\"+buildLBCount;\r\n\t    messageLB+=\"</br>\";\r\n\t    messageLB+=\"房&nbsp;间&nbsp;数&nbsp;：\"+officeLBCount;\r\n\t    messageLB+=\"</br>\";\r\n\t    ");
if(map_f!=null){
      out.write("\r\n\t    messageLB+=\"全部占用&nbsp;：\"+");
      out.print(map_f.get("applayAllUse"));
      out.write(";\r\n\t    messageLB+=\"</br>\";\r\n\t    messageLB+=\"部分占用&nbsp;：\"+");
      out.print(map_f.get("applayPathUse"));
      out.write(";\r\n\t    messageLB+=\"</br>\";\r\n\t    messageLB+=\"未&nbsp;占&nbsp;用&nbsp;：\"+");
      out.print(map_f.get("applayNoUse"));
      out.write(";\r\n\t    ");
}
      out.write("\r\n\t    attachSecretMessage(markerLB, messageLB); \r\n\t    \r\n\t    \r\n\t    //2:\r\n\t\tvar locationSY = new sogou.maps.LatLng(39.984199,116.325899); \r\n\t    var markerSY = new sogou.maps.Marker({position:locationSY,map: map,icon:imageSY}); \r\n\t    var j = 1 + 1; \r\n\t    var messageSY=\"管&nbsp;理&nbsp;员&nbsp;：\"+buildSYAdminName;\r\n\t    messageSY+=\"</br>\";\r\n\t    messageSY+=\"楼&nbsp;层&nbsp;数&nbsp;：\"+buildSYCount;\r\n\t    messageSY+=\"</br>\";\r\n\t    messageSY+=\"房&nbsp;间&nbsp;数&nbsp;：\"+officeSYCount;\r\n\t    messageSY+=\"</br>\";\r\n\t    ");
if(map_s!=null){
      out.write("\r\n\t    messageSY+=\"全部占用&nbsp;：\"+");
      out.print(map_s.get("applayAllUse"));
      out.write(";\r\n\t    messageSY+=\"</br>\";\r\n\t    messageSY+=\"部分占用&nbsp;：\"+");
      out.print(map_s.get("applayPathUse"));
      out.write(";\r\n\t    messageSY+=\"</br>\";\r\n\t    messageSY+=\"未&nbsp;占&nbsp;用&nbsp;：\"+");
      out.print(map_s.get("applayNoUse"));
      out.write(";\r\n\t    ");
}
      out.write("\r\n\t    markerSY.setTitle(buildSY); \r\n\t    attachSecretMessage(markerSY, messageSY); \r\n\t    \r\n\t    \r\n\t    //3:\r\n\t\tvar locationXD = new sogou.maps.LatLng(39.981199,116.325599); \r\n\t    var markerXD = new sogou.maps.Marker({position:locationXD,map: map,icon:imageXD}); \r\n\t    var j = 1 + 1; \r\n\t    markerXD.setTitle(buildXD); \r\n\t    var messageXD=\"<div >管&nbsp;理&nbsp;员&nbsp;：\"+buildXDAdminName+\"</div>\";\r\n\t  \r\n\t    messageXD+=\"<div>楼&nbsp;层&nbsp;数&nbsp;：\"+buildXDCount+\"</div>\";\r\n\t   \r\n\t    messageXD+=\"<div>房&nbsp;间&nbsp;数&nbsp;：\"+officeXDCount+\"</div>\";\r\n\t    ");
if(map_s!=null){
      out.write("\r\n\t    messageXD+=\"<div>全部占用&nbsp;：\"+");
      out.print(map_t.get("applayAllUse"));
      out.write("+\"</div>\";\r\n\t   \r\n\t    messageXD+=\"<div>部分占用&nbsp;：\"+");
      out.print(map_t.get("applayAllUse"));
      out.write("+\"</div>\";\r\n\t   \r\n\t    messageXD+=\"<div>未&nbsp;占&nbsp;用&nbsp;：\"+");
      out.print(map_t.get("applayAllUse"));
      out.write("+\"</div>\";\r\n\t    ");
}
      out.write("\r\n\t    attachSecretMessage(markerXD, messageXD); \r\n\t  \r\n\t\r\n}\r\n// 点击3个标记可以看到五个单词连成的一条信息 \r\nfunction attachSecretMessage(marker, message) { \r\n  //var message = [\"房间数：38 占用:12/38\",\"房间数：68,占用:12/68\",\"房间数：72,占用:12/72\"]; \r\n  var infowindow = new sogou.maps.InfoWindow( \r\n      { \r\n    \t  content: message \r\n      }); \r\n  \r\n  infowindow.setSize(350,350);\r\n  \r\n  sogou.maps.event.addListener(marker, 'click', function() { \r\n    infowindow.open(map,marker); \r\n  }); \r\n} \r\n</script>\r\n</head> \r\n<body onload=\"initialize();\" onresize=\"resizeWin(600,400);\" > \r\n  <div id=\"map_canvas\"></div> \r\n</body> \r\n</html>\r\n\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
