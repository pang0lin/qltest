/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:59:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.weixin.workflow.eform;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class selectUser_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

String loginType=session.getAttribute("loginType").toString();
String margin_top="50px";
String heightw="130";
if("weixin".equals(loginType)){
	margin_top="3px";
	heightw="80";
}

      out.write("\r\n<link rel=\"stylesheet\" href=\"/jsoa/css/weixin/search.css\">\r\n\t\t<style type=\"text/css\">\r\n\t\t* { padding: 0; margin: 0;}\r\n\t\tbody { font-size: 14px; font-family: \"微软雅黑\";}\r\n\t\t#select {\r\n\t\t\tborder: 1px solid #ccc;\r\n\t\t\tposition: fixed;\r\n\t\t\ttop: 0;\r\n\t\t\tleft: 0;\r\n\t\t\tbackground: #fff;\r\n\t\t\tz-index: 5;\r\n\t\t\tmargin: 0;\r\n\t\t\tpadding: 0;\r\n\t\t\tborder-radius: 5px;\r\n\t\t\t-webkit-border-radius: 5px;\r\n\t\t\t-moz-border-radius: 5px;\r\n\t\t\tbox-shadow: 0 0 100px #fff;\r\n\t\t\tdisplay: none;\r\n\t\t\toverflow: hidden;\r\n\t\t}\r\n\t\t#select #selList {\r\n\t\t\twidth: 100%;\r\n\t\t\tmargin: 0;\r\n\t\t\toverflow: auto;\r\n\t\t\tbackground: #fff;\r\n\t\t}\r\n\t\t#select #selList .listHead {\r\n\t\t\tfont-size: 18px;\r\n\t\t\tpadding: 10px 20px;\r\n\t\t\ttext-align: center;\r\n\t\t\tborder-bottom: 1px solid #ccc;\r\n\t\t}\r\n\t\t#select #selList .children {\r\n\t\t\tborder-top: 1px solid #ccc;\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\t\t#select #selList .item {\r\n\t\t\tpadding: 5px 0 5px 20px;\r\n\t\t\tborder-bottom: 1px solid #ccc;\r\n\t\t}\r\n\t\t#select #choose {\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 40px;\r\n\t\t\ttext-align: center;\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tdisplay: flex;\r\n");
      out.write("\t\t\tdispaly: -webkit-flex;\r\n\t\t\tdisplay: -webkit-box;\r\n\t\t\tposition: absolute;\r\n\t\t\tleft: 0;\r\n\t\t\tbottom: 5px;\r\n\t\t}\r\n\t\t#select #choose .listButton {\r\n\t\t\tbackground: #efefef;\r\n\t\t\ttext-align: center;\r\n\t\t\twidth: 100%;\r\n\t\t\tborder: 1px solid #ccc;\r\n\t\t\theight: 40px;\r\n\t\t\tline-height: 40px;\r\n\t\t\t-webkit-box-flex: 1;\r\n\t\t\t-webkit-flex: 1;\r\n\t\t\tflex: 1;\r\n\t\t\tborder-radius: 5px;\r\n\t\t\t-webkit-border-radius: 5px;\r\n\t\t\t-moz-border-radius: 5px;\r\n\t\t}\r\n\t\t#select #selList a { text-decoration: none; color: #000;}\r\n\t\t\r\n\t\t</style>\r\n  \t\t");
      out.write("\r\n\t\t\r\n\t\t<!-- 弹出列表层 -->\r\n\t\t<div id=\"select\">\r\n\t\t<div class=\"sousuo-01\" style=\"margin-top:");
      out.print(margin_top);
      out.write("\">\r\n\t\t\t<input type=\"hidden\" id=\"keyword\" name=\"keyword\" />\r\n\t\t\t<input type=\"text\" id=\"keys\" name=\"keys\" value=\"\" placeholder=\"请输入姓名,多个姓名之间用逗号隔开\" />\r\n\t\t\t<div class=\"sousuo-11\" onclick=\"javascript:submitForm();\"><img src=\"/jsoa/images/weixin/ss.png\"></div>\r\n\t\t</div>\r\n\t  \t\t<div id=\"selList\"></div>\r\n\t  \t\t<div id=\"choose\"></div>\r\n  \t\t</div>\r\n  \t\t");
      out.write("\r\n  \t\t<script type=\"text/javascript\">\r\n\r\n  \t\tfunction hideKeyboard(selId, selName, accounts, selType, selFrom, showType, range, func, parentId){\r\n  \t\t\t\r\n\t\t\t//关闭输入法\r\n \t     \t$(\"#title\").css(\"ime-mode\",\"disabled\");\r\n \t     \t$(\"#content\").css(\"ime-mode\",\"disabled\");\r\n \t     \tsetTimeout(\"showSelectUsers('\" + selId + \"', '\" + selName + \"', '\" + accounts + \"', '\" + selType + \"', '\" \r\n \t         \t+ selFrom + \"', '\" + showType + \"', '\" + range + \"', '\" + func + \"', '\" + parentId + \"')\", 1000);\r\n  \t      \r\n  \t\t}\r\n  \t\t\r\n\t\tvar selIds = \"\", selNames = \"\", selAccounts = \"\", selFroms = \"\", c = \"\", selTypes = \"\", showTypes = \"\", count=0;\r\n\t\tvar timer;\r\n\t\tvar dif = false;\r\n\t\tvar objIndex=0;\r\n\t\t// selId 选择的人员ID赋值控件的ID\r\n\t\t// selName 选择的人员名称赋值控件的ID\r\n\t\t// accounts 选择的人员登录名称赋值控件的ID\r\n\t\t// selType 0：单选；1：多选\r\n\t\t// selFrom 查询对象，user：用户；organization：组织\r\n\t\t// showType 显示方式，\r\n\t\t// \t\t\torgPerson：组织用户；\r\n\t\t//\t\t\tprivatePerson：个人联系人\r\n\t\t//\t\t\tpublicPerson：公共联系人\r\n\t\t//\t\t\tgroupPerson：人员分组\r\n\t\t//\t\t\tzhiWu：职务人员\r\n\t\t//\t\t\tgangWei：岗位人员\r\n\t\t//\t\t\tdownEmp：下属人员\r\n");
      out.write("\t\t//\t\t\tcustomer：客户列表\r\n\t\t//\t\t\tproject：项目人员\r\n\t\t// range 权限范围\r\n\t\t// func 点击确定按钮需要执行的操作\r\n\t\t// parentId 查询结果要追加的divID，初始是为selList\r\n\t\t\r\n\t\t// 运行结果\r\n\t\t// 1、单选时：只返回选择的人员或组织的ID、名称（、登录名）\r\n\t\t// 2、多选时：人员ID字符串格式：$id$$id$···；组织ID字符串格式：*id**id*···，名字（登录名）字符串格式：name,name,···\r\n\t\tfunction showSelectUsers(selId, selName, accounts, selType, selFrom, showType, range, func, parentId,obj){\r\n\t\t\tif(obj){\r\n\t\t\t\tvar objs=document.getElementsByName(obj.name);\r\n\t\t\t\tfor(var i=0;i<objs.length;i++){\r\n\t\t\t\t\tif(objs[i]==obj){\r\n\t\t\t\t\t\tobjIndex=i;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tobjIndex=-1;\r\n\t\t\t}\r\n\t\t\t// 判断当前打开选择页面是否与上次不同，不同时，重新加载页面选项\r\n\t\t\tif(selFroms!=selFrom || selTypes!=selType || showTypes!=showType){\r\n\t\t\t\tdif = true;\r\n\t\t\t}\r\n\t\t\tselIds = selId;\r\n\t\t\tselNames = selName;\r\n\t\t\tselAccounts = accounts;\r\n\t\t\tselFroms = selFrom;\r\n\t\t\tselTypes = selType;\r\n\t\t\tshowTypes = showType;\r\n\t\t\tvar para=selId+\",\"+objIndex;\r\n\t\t\t\r\n\t\t\t// 设置定时执行设置弹出层的大小，解决部分手机软键盘未关闭时弹出层大小设置异常问题\r\n\t\t\ttimer = setTimeout(\"setSize();loadItems('\" + selType + \"', '\" + selFrom + \"', '\" + showType \r\n");
      out.write("\t\t\t\t\t+ \"', '\" + range + \"', '\" + func+ \"', '\" + parentId + \"','\"+para+\"')\", 300);\r\n\t\t\t//loadItems(selType, selFrom, showType, range, func, parentId);\r\n\t\t}\r\n\t\t\r\n\t\t// 加载子级项\r\n\t\tfunction loadItems(selType, selFrom, showType, range, func, parentId,para){\r\n\t\t\tif(\"organization\" == selFroms) c = \"*\";\r\n\t\t\tif(\"user\" == selFroms) c = \"$\";\r\n\t\t\t\r\n\t\t\t// 按钮组\r\n\t\t\tvar buttonsHTML = \"<div class=\\\"listButton\\\" onclick=\\\"quit()\\\">取消</div>\";\r\n\t\t\tbuttonsHTML += \"<div class=\\\"listButton\\\" onclick=\\\"clearSel()\\\">清除</div>\";\r\n\t\t\tif(objIndex==\"-1\"){\r\n\t\t\t\tbuttonsHTML += \"<div class=\\\"listButton\\\" onclick=\\\"getSelectUsers();\" + func + \"\\\">确定</div>\";\r\n\t\t\t}else{\r\n\t\t\t\tbuttonsHTML += \"<div class=\\\"listButton\\\" onclick=\\\"getSelectUsers();\" + func+\"('\"+para+\"')\" + \"\\\">确定</div>\";\r\n\t\t\t}\r\n\t\t\t$(\"#\" + parentId).empty();\r\n\t\t\tvar html = $(\"#\" + parentId).html();\r\n\t\t\tif(dif || \"\"==html){\r\n\t\t\t\tvar data;\r\n\t\t\t\tif(objIndex==\"-1\"){\r\n\t\t\t\t\tdata= \"selFrom=\" + selFrom + \"&selType=\" + selType + \"&showType=\" + showType + \"&range=\" + range + \"&parentId=\" + parentId;\r\n");
      out.write("\t\t\t\t}else{\r\n\t\t\t\t\tdata= \"selFrom=\" + selFrom + \"&selType=\" + selType + \"&showType=\" + showType + \"&range=\" + range + \"&parentId=\" + parentId+\"&para=\"+para;\r\n\t\t\t\t}\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\ttype : \"post\",\r\n\t\t\t\t\turl : \"/jsoa/weiXinCommonAction.do?action=selectOrgOrUser\",\r\n\t\t\t\t\tasync : false,\r\n\t\t\t\t\tdata: data,\r\n\t\t\t\t\tdataType : \"text\",\r\n\t\t\t\t\tsuccess : function(returnHTML){\r\n\t\t\t\t\t\t$(\"#\" + parentId).html(returnHTML);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(objIndex==\"-1\"){\r\n\t\t\t\t\t\t\tif(\"\" == $(\"#choose\").html()){\r\n\t\t\t\t\t\t\t\t$(\"#choose\").html(buttonsHTML);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t$(\"#choose\").html(buttonsHTML);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar userIds = $(\"#\" + selIds).val();\t// 已选择人员的ID\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 已选择人员不为空时，遍历人员input，将已选择的人员选中\r\n\t\t\t\t\t\tif(null!=userIds && \"\"!=userIds){\r\n\t\t\t\t\t\t\tvar ins = $(\"#\" + parentId + \" input[name='users']\");\r\n\t\t\t\t\t\t\tvar id;\r\n\t\t\t\t\t\t\tfor(var i=0; i<ins.length; i++){\r\n\t\t\t\t\t\t\t\tid = ins[i].id.split(\"_\")[1];\r\n\t\t\t\t\t\t\t\tuserIds = c + userIds + c;\r\n\t\t\t\t\t\t\t\tif(userIds.indexOf(c + id + c) >= 0) ins[i].checked = \"checked\";\r\n\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror : function(XMLHttpRequest, textStatus, errorThrown){ },\r\n\t\t\t\t\tcomplete : function(XHR, TS){ XHR = null; setTimeout(\"setSize();\", 500);}\r\n\t\t\t\t});\r\n\t\t\t\tdif = false;\r\n\t\t\t}\r\n\t\t\t// 显示选择列表\r\n\t\t\tif(\"selList\" != parentId) $(\"#\" + parentId).toggle();\r\n\t\t\t$(\"#select\").show();\r\n\t\t}\r\n\t\t\r\n\t\t// 设置弹出层的大小和位置\r\n  \t\tfunction setSize(){\r\n  \t  \t\tvar wHeight = $(window).height();\r\n  \t  \t\tvar wWidth = $(window).width();\r\n  \t  \t\t$(\"#select\").height(wHeight);\r\n  \t  \t\t$(\"#select\").width(wWidth - 2);\r\n  \t  \t\t$(\"#selList\").height(wHeight - ");
      out.print(heightw);
      out.write(");\r\n  \t  \t\t// 清除定时器\r\n\t\t\tclearTimeout(timer);\r\n  \t  \t\t//var _top = $(window).scrollTop();\r\n  \t  \t\t//var _left = $(window).scrollLeft();\r\n  \t  \t\t//$(\"#select\").css(\"top\", _top);\r\n  \t  \t\t//$(\"#select\").css(\"left\", _left);\r\n  \t\t}\r\n\t\t\r\n\t\t// 窗口滚动事重新设置弹出层的位置\r\n  \t\t//$(window).scroll(function(){setSize();});\r\n  \t\t\r\n  \t\t// 获取选择项的值\r\n  \t\tfunction getSelectUsers(){\r\n  \t\t\tvar ins = $(\"input[name='users']:checked\");\r\n\t\t\tvar ids = \"\", names = \"\", accounts = \"\", tempId = \"\";\r\n\t\t\tvar reg = new RegExp(\",+\",\"gm\");\r\n\t\t\tvar selectedIds = $(\"#\" + selIds).val();\r\n\t\t\t//if(null!=selectedIds && \"\"!=selectedIds) selectedIds = c + selectedIds + c;\r\n\t\t\tvar selectedNames = $(\"#\" + selNames).val();\r\n\t\t\tvar selectedAccounts = $(\"#\" + selAccounts).val();\r\n\t\t\t\r\n\t\t\t// 单选或选择组织时，将已选清空（防止组织选择后又选择子级组织）\r\n\t\t\tif(\"0\"==selTypes || \"organization\"==selFroms){\r\n\t\t\t\tselectedIds = \"\";\r\n\t\t\t\tselectedNames = \"\";\r\n\t\t\t\tselectedAccounts = \"\";\r\n\t\t\t}\r\n\t\t\tfor(var i=0; i<ins.length; i++){\r\n\t\t\t\ttempId = c + ins[i].id.split(\"_\")[1] + c;\r\n\t\t\t\tif(selectedIds.indexOf(tempId) < 0){\r\n");
      out.write("\t\t\t\t\tids += tempId;\r\n\t\t\t\t\tnames += \",\" + ins[i].value.split(\"&\")[0] + \",\";\r\n\t\t\t\t\taccounts += null==ins[i].value.split(\"&\")[1] || \"null\"==ins[i].value.split(\"&\")[1] ? \"\" : \",\" + ins[i].value.split(\"&\")[1] + \",\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// 去掉字符串开始和结尾的符号，多个选择项中的重复符号替换成一个\r\n\t\t\tif(null!=ids && \"\"!=ids && \"0\"==selTypes){\r\n\t\t\t\tids = ids.substring(1, ids.length - 1 + parseInt(selTypes));\r\n\t\t\t\t//if(\"$\" == c) ids = ids.replace(\"$$\", \"$\");\r\n\t\t\t\t//if(\"*\" == c) ids = ids.replace(\"\\*\\*\", \"\\*\");\r\n\t\t\t}\r\n\t\t\tif(null!=names && \"\"!=names){\r\n\t\t\t\tnames = names.substring(1, names.length - 1 + parseInt(selTypes));\r\n\t\t\t\tnames = names.replace(reg, \",\");\r\n\t\t\t}\r\n\t\t\tif(null!=accounts && \"\"!=accounts){\r\n\t\t\t\taccounts = accounts.substring(1, accounts.length - 1 + parseInt(selTypes));\r\n\t\t\t\taccounts = accounts.replace(reg, \",\");\r\n\t\t\t}\r\n\t\t\t// 把取到的字符串赋值给页面控件\r\n\t\t\tids = selectedIds + ids;\r\n\t\t\tnames = selectedNames + names;\r\n\t\t\taccounts = selectedAccounts + accounts;\r\n\t\t\tif(objIndex==\"-1\"){\r\n\t\t\t\tif(null!=selIds && \"\"!=selIds) $(\"#\" + selIds).val(ids);\r\n\t\t\t\tif(null!=selNames && \"\"!=selNames) $(\"#\" + selNames).val(names);\r\n");
      out.write("\t\t\t\tif(null!=selAccounts && \"\"!=selAccounts) $(\"#\" + selAccounts).val(accounts);\r\n\t\t\t}else{\r\n\t\t\t\tif(null!=selIds && \"\"!=selIds) document.getElementsByName(selIds)[objIndex].value=ids; \r\n\t\t\t\tif(null!=selNames && \"\"!=selNames) document.getElementsByName(selNames)[objIndex].value=names;\r\n\t\t\t\tif(null!=selAccounts && \"\"!=selAccounts) document.getElementsByName(selAccounts)[objIndex].value=accounts;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// 隐藏列表层\r\n\t\t\tquit();\r\n  \t\t}\r\n  \t\t// 清空选择项\r\n  \t\tfunction clearSel(){\r\n  \t\t\tvar ins = $(\"input[name='users']\");\r\n  \t\t\tfor(var i=0; i<ins.length; i++){\r\n\t\t\t\tins[i].checked = \"\";\r\n\t\t\t}\r\n  \t\t\t// 清除已选\r\n  \t\t\t$(\"#\" + selIds).val(\"\");\r\n\t\t\t$(\"#\" + selNames).val(\"\");\r\n\t\t\t$(\"#\" + selAccounts).val(\"\");\r\n  \t\t}\r\n  \t\t// 取消选择，关闭层\r\n  \t\tfunction quit(){\r\n  \t\t\t$(\"#select\").hide();\r\n  \t\t\t// 退出选择界面时清空列表信息，下次选择时重新加载\r\n  \t\t\t//$(\"#selList\").html(\"\");\r\n  \t\t}\r\n\r\n\t\t//全选\r\n\t\tfunction selectUser(obj){\r\n\t\t\tvar checks = document.getElementsByName(obj.id);\r\n\t\t\tfor(var i=0; i<checks.length; i++){\r\n\t\t\t\tchecks[i].checked = obj.checked;\r\n\t\t\t}\r\n");
      out.write("\t\t}\r\n\t\t\r\n\t\t//验证是否全选\r\n\t\tfunction checkSelect(key){\r\n\t\t\tvar checks = document.getElementsByName(key);\r\n\t\t\tvar checkP = document.getElementById(key);\r\n\t\t\tvar count = 0;\r\n\t\t\tfor(var i=0; i<checks.length; i++){\r\n\t\t\t\tif(checks[i].checked) count++;\r\n\t\t\t}\r\n\t\t\tif(count == checks.length) {\r\n\t\t\t\tcheckP.checked = true;\r\n\t\t\t} else{\r\n\t\t\t\tcheckP.checked = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// 多选组织时，如果父级组织选中，则隐藏子组织\r\n\t\tfunction checkChild(obj, childId){\r\n\t\t\tif(obj.checked){\r\n\t\t\t\t$(\"#\" + childId).html(\"\");\r\n\t\t\t\t$(\"#\" + childId).hide();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// 多选组织中，显示子组织时，设置父级组织不选中\r\n\t\tfunction clearThis(id){\r\n\t\t\t$(\"#\" + id).prop(\"checked\", false);\r\n\t\t}\r\n\t\tfunction submitForm(){\r\n\t\t\tvar nameStr=document.getElementById(\"keys\").value;\r\n\t\t\ttimer = setTimeout(\"setSize();loadItemsByNameStr('\" + nameStr + \"','selList')\", 300);\r\n\t\t}\r\n\t\tfunction loadItemsByNameStr(nameStr,parentId){\r\n\t\t\tvar c = \"$\";\r\n\t\t\t// 按钮组\r\n\t\t\tvar buttonsHTML = \"<div class=\\\"listButton\\\" onclick=\\\"quit()\\\">取消</div>\";\r\n\t\t\tbuttonsHTML += \"<div class=\\\"listButton\\\" onclick=\\\"clearSel()\\\">清除</div>\";\r\n");
      out.write("\t\t\tbuttonsHTML += \"<div class=\\\"listButton\\\" onclick=\\\"getSelectUsers();loadUser();\\\">确定</div>\";\r\n\t\r\n\t\t\tvar html = \"\";\r\n\t\t\t$(\"#\" + parentId).empty();\r\n\t\t\t html = $(\"#\" + parentId).html();\r\n\t\t\tvar data;\r\n\t\t\t\tdata= \"nameStr=\"+nameStr;\r\n\t\t\t$.ajax({\r\n\t\t\t\ttype : \"post\",\r\n\t\t\t\turl : \"/jsoa/weiXinCommonAction.do?action=selectOrgOrUserByName\",\r\n\t\t\t\tasync : false,\r\n\t\t\t\tdata: data,\r\n\t\t\t\tdataType : \"text\",\r\n\t\t\t\tsuccess : function(returnHTML){\r\n\t\t\t\t\t$(\"#\" + parentId).html(returnHTML);\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t$(\"#choose\").html(buttonsHTML);\r\n\t\t\t\t\tvar userIds = $(\"#\" + selIds).val();\t// 已选择人员的ID\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 已选择人员不为空时，遍历人员input，将已选择的人员选中\r\n\t\t\t\t\tif(null!=userIds && \"\"!=userIds){\r\n\t\t\t\t\t\tvar ins = $(\"#\" + parentId + \" input[name='users']\");\r\n\t\t\t\t\t\tvar id;\r\n\t\t\t\t\t\tfor(var i=0; i<ins.length; i++){\r\n\t\t\t\t\t\t\tid = ins[i].id.split(\"_\")[1];\r\n\t\t\t\t\t\t\tuserIds = c + userIds + c;\r\n\t\t\t\t\t\t\tif(userIds.indexOf(c + id + c) >= 0) ins[i].checked = \"checked\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror : function(XMLHttpRequest, textStatus, errorThrown){ },\r\n");
      out.write("\t\t\t\tcomplete : function(XHR, TS){ XHR = null; setTimeout(\"setSize();\", 500);}\r\n\t\t\t\t});\r\n\t\t\t// 显示选择列表\r\n\t\t\tif(\"selList\" != parentId) $(\"#\" + parentId).toggle();\r\n\t\t\t$(\"#select\").show();\r\n\t\t}\r\n  \t\t</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
