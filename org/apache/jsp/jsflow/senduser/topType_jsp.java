/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:08:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsflow.senduser;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class topType_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=gbk");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

String webapp=request.getContextPath(); //
String empEmail=request.getParameter("condition");
String inputType=request.getParameter("inputType");
String formTemp=request.getParameter("formAttr");
String allowId=request.getParameter("formAttr1");
String range=request.getParameter("range");

String display=request.getParameter("display");
String type=request.getParameter("type");//部门、个人、公共
String orgInput=request.getParameter("orgInputType").toString();

if("yes".equals(inputType)){
  inputType="yes";
}else{
  inputType="no";
}

/******** dingfy add select flowactivity *******************/
java.util.List activityList = new java.util.ArrayList();
String processType=request.getParameter("processType");
String stepType=request.getParameter("stepType");
String firstAct=request.getParameter("firstAct");

String tableId=request.getParameter("tableId");
String recordId=request.getParameter("recordId");


      out.write("\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n<html>\r\n<head>\r\n<style type=\"text/css\">\r\n  body {font-size:12px;}\r\n</style>\r\n</head>\r\n<script type=\"text/javascript\">\r\nvar queryType='0';\r\nfunction setType(obj){\r\n  queryType=obj;\r\n   var url=\"/jsoa/selectObj.do?method=setType&formAttr1=");
      out.print(allowId);
      out.write("&orgInputType=");
      out.print(orgInput);
      out.write("&single=");
      out.print(inputType);
      out.write("&condition=");
      out.print(empEmail);
      out.write("&range=");
      out.print(range);
      out.write("&type=\";\r\n   if(obj==0){\r\n     orgTreeBar.action=url+\"orgPerson\";\r\n   }if(obj==1){\r\n     orgTreeBar.action=url+\"groupPerson\";\r\n   }if(obj==2){\r\n      orgTreeBar.action=url+\"privatePerson\";\r\n   }if(obj==3){\r\n      orgTreeBar.action=url+\"publicPerson\";\r\n   }\r\n     document.getElementById(obj).checked=true;\r\n     var d=document.getElementsByName('radioType');\r\n     for(var i=0;i<d.length;i++){\r\n        if(d[i].value!=obj){\r\n          document.getElementById(d[i].value).checked=false;\r\n        }\r\n     }\r\n     orgTreeBar.target=\"leftTopFrame\";\r\n     orgTreeBar.submit();\r\n }\r\n \r\n function init(){\r\n    window.parent.rightFrame.init();\r\n }\r\n \r\n function doQuery(){\r\n  var text=orgTreeBar.queryText.value;\r\n  if(text!=null&&text!=''){\r\n     orgTreeBar.action=\"/jsoa/selectObj.do?method=doQueryUser&type=");
      out.print(type);
      out.write("&allowId=");
      out.print(allowId);
      out.write("&inputType=");
      out.print(inputType);
      out.write("&condition=");
      out.print(empEmail);
      out.write("&queryType=\"+queryType+\"&text=\"+text;\r\n     orgTreeBar.target=\"leftBottonFrame\";\r\n     orgTreeBar.submit();\r\n   }else{\r\n      alert('请输入查询条件！');\r\n      return false;\r\n   }\r\n }\r\n</script>\r\n\r\n<body  bgcolor=\"#FDF8D6\" topmargin=\"0\" leftmargin=\"0\" rightmargin=\"0\" bottommargin=\"0\">\r\n<form name=\"orgTreeBar\" method=\"post\">\r\n   \t<table width=\"408\" height=\"48\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" id=\"table5\">\r\n         <tr style=\"display:none\">\r\n\t\t\t \r\n\t\t\t  <td id=\"department\" style=\"font-size:12px;\">\r\n\t\t\t  ");
if(display.indexOf("org")>=0){ 
      out.write("\r\n\t\t\t   &nbsp;<input type=\"radio\" name=\"radioType\" id=\"0\" value='0' ");
      out.print(type.equals("orgPerson")?"checked":"");
      out.write(" onClick=\"setType(this.value);\">部门\r\n\t\t\t   ");
}if(display.indexOf("group")>=0){
      out.write("\r\n\t\t\t   \t   <input id=\"1\" name=\"radioType\" value='1' ");
      out.print(type.equals("groupPerson")?"checked":"");
      out.write(" type=\"radio\" onClick=\"setType(this.value)\">组\r\n\t\t\t   ");
}if(display.indexOf("private")>=0){ 
      out.write("\r\n\t\t\t\t  <input id=\"2\" name=\"radioType\" value='2' ");
      out.print(type.equals("privatePerson")?"checked":"");
      out.write(" type=\"radio\" onClick=\"setType(this.value)\">个人\t\t   \r\n\t\t\t   ");
}if(display.indexOf("public")>=0){
      out.write("\r\n\t\t\t   \t <input id=\"3\" name=\"radioType\" value='3' ");
      out.print(type.equals("publicPerson")?"checked":"");
      out.write(" type=\"radio\" onClick=\"setType(this.value)\">公共\r\n\t\t\t   ");
} if(orgInput.indexOf("only")<0){
      out.write("\r\n                 <input type=\"text\" name=\"queryText\" size=\"8\">&nbsp;&nbsp;<input type=\"button\" size=\"8\" value=\"查询\" onClick=\"doQuery()\">\t\t\t   \r\n\t\t\t   ");
} 
      out.write("\r\n\t\t\t  </td>\r\n\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t \r\n\t\t\t  <td id=\"department\" style=\"font-size:12px;\" width=\"50%\">\r\n\t\t\t  &nbsp;下一结点：\r\n\t\t\t  <select>\r\n\t\t\t    \r\n\t\t\t  </select>\r\n\t\t\t  </td>\r\n\t\t\t  <td id=\"department\" style=\"font-size:12px;\" width=\"50%\">\r\n\t\t\t  &nbsp;办理方式：\r\n\t\t\t  <select>\r\n\t\t\t     <option value=\"actId\">并发</option>\r\n\t\t\t     <option value=\"actId\">串发</option>\r\n\t\t\t  </select>\r\n\t\t\t  </td>\r\n\r\n\t\t\t</tr>\r\n </table>\r\n</form>\r\n</body>\r\n</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
