/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:45:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.relproject;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.oa.relproject.po.ProNotePO;
import java.text.SimpleDateFormat;

public final class note_005fload_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-logic.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-html.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.oa.relproject.po.ProNotePO");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);

ProNotePO proNotePO=new ProNotePO();
proNotePO=(ProNotePO)request.getAttribute("notePO");
SimpleDateFormat dateFormat = new SimpleDateFormat( "MM-dd HH:mm");

      out.write("\r\n<head>\r\n<title>项目留言详细</title>\r\n<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<script src=\"/jsoa/js/js.js\" language=\"javascript\"></script>\r\n<link rel=stylesheet type=\"text/css\" href=\"/jsoa/public/date_picker/DateObject2.css\">\r\n");
if(request.getAttribute("close")!=null){ 
      out.write("\r\n<script type=\"text/javascript\">\r\nalert(\"项目留言修改成功!\");\r\nopener.location.reload();\r\nwindow.close();\r\n</script>");
} 
      out.write("\r\n</head>\r\n<body leftmargin=\"0\" topmargin=\"0\" class=\"MainFrameBox Pupwin\" >\r\n<form action=\"/jsoa/ProNoteAction.do?flag=update\" method=\"post\" id=\"form1\" name=\"form1\">\r\n<input type=\"hidden\" name=\"noteId\" id=\"noteId\" value=\"");
      out.print(proNotePO.getId() );
      out.write("\" />\r\n<table width=\"100%\" height=\"100%\" border=\"0\" cellpadding=\"10\" cellspacing=\"0\" class=\"docBoxNoPanel\"> \r\n  <tr>\r\n     <td valign=\"top\">\r\n          <table width=\"100%\" border=\"0\" cellpadding=\"1\" cellspacing=\"0\">\r\n             <tr>\r\n             <td>留言人：</td><td>");
      out.print(proNotePO.getEmpName());
      out.write("</td>\r\n             </tr>\r\n              <tr>\r\n             <td>留言时间：</td><td>");
      out.print(dateFormat.format(proNotePO.getSendTime()));
      out.write("</td>\r\n             </tr>\r\n              <tr>\r\n                   <td width=\"10%\" nowrap=\"nowrap\" valign=\"top\">项目留言：</td>\r\n                   <td width=\"80%\">                      \r\n\t\t\t\t\t\t<textarea name=\"content\" id=\"content\" rows=\"7\" cols=\"42\" style=\"width:99%\">");
      out.print(proNotePO.getContent());
      out.write("</textarea>\t\r\n                   </td>\r\n                   <td width=\"10%\" valign=\"bottom\" nowrap></td>\r\n               </tr> \r\n               <tr><td height=\"36\" colspan=\"3\" valign=\"bottom\">\r\n               ");
if(request.getParameter("update")!=null){ 
      out.write("\r\n                   <input type=\"button\"  class=\"btnButton2font\" onclick=\"javascript:submit()\" value=\"保存\"/>");
} 
      out.write("\r\n                   <button class=\"btnButton2font\" onclick=\"javascript:window.close()\">退出</button></td>                   \r\n               </tr>\t\t\t\t\t \r\n\t        </table>\t       \r\n       </td>\r\n    </tr>\r\n</table>\r\n</form>\r\n</body>\r\n<script src=\"/jsoa/js/util.js\"></script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
