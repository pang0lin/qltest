/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:45:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.wap2;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.qq.weixin.mp.config.pojo.Menu;
import com.qq.weixin.mp.config.pojo.ViewMenu;
import com.qq.weixin.mp.config.pojo.ComplexMenu;
import com.qq.weixin.mp.pojo.AppRoom;
import com.qq.weixin.mp.config.pojo.App;
import java.util.List;

public final class footer_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.qq.weixin.mp.pojo.AppRoom");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.qq.weixin.mp.config.pojo.Menu");
    _jspx_imports_classes.add("com.qq.weixin.mp.config.pojo.ComplexMenu");
    _jspx_imports_classes.add("com.qq.weixin.mp.config.pojo.ViewMenu");
    _jspx_imports_classes.add("com.qq.weixin.mp.config.pojo.App");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n");

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
String divWidth="33%";
if("WebApp".equals(session.getAttribute("logDevice")) || null!=session.getAttribute("html5Page")){
	divWidth="25%";
}

List<App> apps = AppRoom.getApps();

      out.write("\r\n\r\n<!DOCTYPE html>\r\n<html>\r\n\t<head>\r\n\t\t<base href=\"");
      out.print(basePath);
      out.write("\">\r\n\t    <title>移动办公系统</title>\r\n\t    <meta content=\"text/html; charset=UTF-8\" http-equiv=Content-Type>\r\n\t\t<meta name=viewport content=\"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=0\">\r\n\t\t<meta name=apple-touch-fullscreen content=YES>\r\n\t\t<meta name=apple-mobile-web-app-capable content=no>\r\n\t\t<meta http-equiv=\"pragma\" content=\"no-cache\">\r\n\t\t<meta http-equiv=\"cache-control\" content=\"no-cache\">\r\n\t\t<meta http-equiv=\"expires\" content=\"0\">\r\n\t</head>\r\n\r\n\t<body>\r\n\t\t<div class=\"bottom\">\r\n\t\t\t<a href=\"wap2/index.jsp\">\r\n\t\t\t\t<div class=\"bottom-01\" style=\"width:");
      out.print(divWidth);
      out.write(";\">\r\n\t\t\t        <ul>\r\n\t\t\t   \t\t\t<li class=\"bottom-01-1\">\r\n\t\t\t   \t\t\t\t");

			   				if(null == request.getParameter("appBh")){
			   					
      out.write("<img src=\"wap2/images/sy2.png\">");

			   				} else{
			   					
      out.write("<img src=\"wap2/images/sy1.png\">");

			   				}
			   				
      out.write("\r\n\t\t\t   \t\t\t\t<p>首页</p>\r\n\t\t\t   \t\t\t</li>\r\n\t\t\t        </ul>\r\n\t\t        </div>\r\n\t        </a>\r\n\t\t\t");

			for(App app : apps){
				if("txl".equals(app.getAppbh())){
					
      out.write("\r\n\t\t       \t\t<a href=\"wap2/subMenu.jsp?appBh=");
      out.print(app.getAppbh() );
      out.write("\" hidefocus>\r\n\t\t\t\t\t\t<div class=\"bottom-01\" style=\"width:");
      out.print(divWidth);
      out.write(";\">\r\n\t\t\t\t\t        <ul>\r\n\t\t\t\t\t       \t\t<li>\r\n\t\t\t\t\t       \t\t\t");

					       			if(null!=request.getParameter("appBh") && "txl".equals(request.getParameter("appBh"))){
					       				
      out.write("<img src=\"wap2/images/txl2.png\">");

					       			} else{
					       				
      out.write("<img src=\"wap2/images/txl1.png\">");

					       			}
					       			
      out.write("\r\n\t\t\t\t\t       \t\t\t<p>");
      out.print(app.getAppname() );
      out.write("</p>\r\n\t\t\t\t\t       \t\t</li>\r\n\t\t\t\t\t        </ul>\r\n\t\t\t\t        </div>\r\n\t\t       \t\t</a>\r\n\t\t\t\t\t");

				} else if("dbsx".equals(app.getAppbh())){	// 查询显示我的代办
					List<Menu> menus = app.getMenu();
					for(Menu menu : menus){
	    				if(menu instanceof ComplexMenu){
	    					ComplexMenu cm = (ComplexMenu) menu;
	    					List<Menu> ms = cm.getSubMenu();
	    					if(null!=ms && ms.size()>0){
	    						for(Menu m : ms){
	    							if(m instanceof ViewMenu){
	    								ViewMenu vm = (ViewMenu) m;
	    								if("B1".equals(vm.getMenuId())){
		    								
      out.write("\r\n\t\t\t\t\t\t\t\t       \t\t<a href=\"wap2/mainPage.jsp?appBh=");
      out.print(app.getAppbh() );
      out.write("&menuId=");
      out.print(vm.getMenuId() );
      out.write("&back=1\" hidefocus>\r\n\t\t\t    \t\t\t\t\t\t\t\t<div class=\"bottom-01\" style=\"width:");
      out.print(divWidth);
      out.write(";\">\r\n\t\t\t\t\t\t\t\t\t\t\t        <ul>\r\n\t\t\t\t\t\t\t\t\t\t\t       \t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t       \t\t<img src=\"wap2/images/dbsx1.png\"><p>");
      out.print(vm.getName() );
      out.write("</p>\r\n\t\t\t\t\t\t\t\t\t\t\t       \t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t        </ul>\r\n\t\t\t\t\t\t\t\t\t\t        </div>\r\n\t\t\t\t\t\t\t\t       \t\t</a>\r\n\t\t    \t\t\t\t\t\t\t\t");

		    								break;
	    								}
	    							}
	    						}
	    					}
	    				}
	    			}
				}
			}
			
			if((null!=session.getAttribute("logDevice") && "WebApp".equals(session.getAttribute("logDevice").toString())) 
					|| null!=session.getAttribute("html5Page")){
				
      out.write("\r\n\t\t\t\t<!-- 登录页面：/jsoa/quitappnoprompt.command -->\r\n\t\t\t\t<!-- 退出程序：/jsoa/quitapp.command -->\r\n\t\t\t\t<a href=\"/jsoa/quitappnoprompt.command\">\r\n\t\t\t\t\t<div class=\"bottom-01\" style=\"width:");
      out.print(divWidth);
      out.write(";\">\r\n\t\t\t\t        <ul>\r\n\t\t\t\t       \t\t<li>\r\n\t\t\t\t\t       \t\t<img src=\"wap2/images/dbsx1.png\"><p>退出</p>\r\n\t\t\t\t       \t\t</li>\r\n\t\t\t\t        </ul>\r\n\t\t\t        </div>\r\n\t       \t\t</a>\r\n\t\t\t\t");

			}
			
      out.write("\r\n\t\t</div>\r\n\t</body>\r\n</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
