/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:44:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.dcq;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class feedbackMeeting_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

String fileId = request.getParameter("fileId");
String fileType = request.getParameter("fileType");
if(null==fileId || "".equals(fileId) || "undefined".equals(fileId)){
	
      out.write("\r\n\t<script type=\"text/javascript\">\r\n\talert(\"参数信息错误。\");\r\n\twindow.close();\r\n\t</script>\r\n\t");

}

      out.write("\r\n<!-- 会议通知接收反馈，流程办理过程中反馈，公文办理表单页面 -->\r\n<!DOCTYPE HTML>\r\n<html>\r\n\t<head>\r\n\t    <base href=\"");
      out.print(basePath);
      out.write("\">\r\n\t    <title>会议通知反馈</title>\r\n\t    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=gbk\">\r\n\t\t<meta http-equiv=\"pragma\" content=\"no-cache\">\r\n\t\t<meta http-equiv=\"cache-control\" content=\"no-cache\">\r\n\t\t<meta http-equiv=\"expires\" content=\"0\">\r\n\t\t<link href=\"skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n\t</head>\r\n\r\n\t<body>\r\n    \t<div style=\"width: 90%; margin: 10px auto; text-align: center;\">\r\n\t\t\t<input type=\"hidden\" id=\"fileId\" value=\"");
      out.print(fileId );
      out.write("\">\r\n\t\t\t<table border=\"0\" width=\"100%\">\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td colspan=\"2\" align=\"center\"><h2>信息反馈</h2></td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th align=\"right\">姓名：</th>\r\n\t\t\t\t\t<td align=\"left\">\r\n\t\t\t\t\t\t<textarea id=\"feedbackName\" rows=\"3\" cols=\"50\" readonly=\"readonly\"></textarea>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th align=\"right\">职位：</th>\r\n\t\t\t\t\t<td align=\"left\">\r\n\t\t\t\t\t\t<textarea id=\"feedbackDuty\" rows=\"3\" cols=\"50\" readonly=\"readonly\"></textarea>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th align=\"right\">电话号码：</th>\r\n\t\t\t\t\t<td align=\"left\">\r\n\t\t\t\t\t\t<textarea id=\"feedbackTel\" rows=\"3\" cols=\"50\" readonly=\"readonly\"></textarea>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th align=\"right\">备注：</th>\r\n\t\t\t\t\t<td align=\"left\">\r\n\t\t\t\t\t\t<textarea id=\"feedbackContent\" rows=\"4\" cols=\"50\"></textarea>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td colspan=\"2\" align=\"right\">\r\n\t\t\t\t\t\t<input type=\"button\" class=\"btnButton2Font\" value=\"提交\" onclick=\"submitFeed()\">\r\n\t\t\t\t\t\t<input type=\"button\" class=\"btnButton2Font\" value=\"关闭\" onclick=\"javascript:window.close();\">\r\n");
      out.write("\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t\t<script type=\"text/javascript\" src=\"/jsoa/eform/js/form.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"/jsoa/js/weixin/jquery-1.7.2.min.js\"></script>\r\n\t\t<script type=\"text/javascript\">\r\n\t\tvar oId = $(\"#fileId\").val();\r\n\t\t$(function(){\r\n\t\t\tvar sql = \"SELECT receive_text_field1,receive_text_field2,receivefile_docomment FROM doc_receivefile WHERE field19='\" + oId + \"'\";\r\n\t\t\tvar fields = \"feedbackName,feedbackDuty,feedbackTel\";\r\n\t\t\tsetUFormFieldValue(sql, fields, \"\", \"\");\r\n\t\t});\r\n\t\tfunction submitFeed(){\r\n\t\t\t$.post(\"/jsoa/businessShowAction.do?action=meetingFeedback\",{\r\n\t\t\t\toid : oId,\r\n\t\t\t\tfn : encodeURI($(\"#feedbackName\").val()),\r\n\t\t\t\tfd : encodeURI($(\"#feedbackDuty\").val()),\r\n\t\t\t\tft : encodeURI($(\"#feedbackTel\").val()),\r\n\t\t\t\tfb : encodeURI($(\"#feedbackContent\").val())\r\n\t\t\t}, function(returnData){\r\n\t\t\t\tif(\"success\" == returnData){\r\n\t\t\t\t\talert(\"信息反馈成功。\");\r\n\t\t\t\t\t// 隐藏反馈信息按钮\r\n\t\t\t\t\twindow.opener.document.getElementById(\"meeting\").style.display = \"none\";\r\n\t\t\t\t\twindow.close();\r\n");
      out.write("\t\t\t\t} else{\r\n\t\t\t\t\talert(\"信息反馈失败。\");\r\n\t\t\t\t}\r\n\t\t\t}, \"text\");\r\n\t\t}\r\n\t\t</script>\r\n\t</body>\r\n</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
