/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:48:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.routine.boardroom;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class boardroomWeekInfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);

List<String[][]> weekList = (List<String[][]>)request.getAttribute("weekList");
String boradRoomName = request.getParameter("boardRoomName")+"";

//String[] weekShow = new String[]{"一","二","三","四","五","六","日"};
String boardRoomId = request.getParameter("boardRoomId")+"";
String a_year = new Date().getYear()+"";
String a_month = (new Date().getMonth()+1)+"";
String a_day = new Date().getDate()+"";
String beginDate = request.getParameter("beginDate")==null?"":request.getParameter("beginDate").replace("/","-");
if(!"".equals(beginDate)){
	String[] beginDateStrs = beginDate.split("-");
	a_year = beginDateStrs[0];
	a_month = beginDateStrs[1];
	a_day = beginDateStrs[2];
}
Map<String,String> weekShow = new HashMap<String,String>();
weekShow.put("1","日");
weekShow.put("2","一");
weekShow.put("3","二");
weekShow.put("4","三");
weekShow.put("5","四");
weekShow.put("6","五");
weekShow.put("7","六");

      out.write("\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n<html>\r\n\t<head>\r\n\t    <title>");
      out.print(boradRoomName );
      out.write("会议室一周安排</title>\r\n\t    <link rel=stylesheet type=\"text/css\" href=\"/jsoa/public/date_picker/DateObject2.css\">\r\n\t    <SCRIPT language=javascript src=\"/jsoa/public/date_picker/DateObject.js\"></SCRIPT>\r\n\t\t<SCRIPT language=javascript src=\"/jsoa/public/date_picker/DatePicker.js\"></SCRIPT>\r\n\t\t<SCRIPT language=javascript src=\"/jsoa/public/date_picker/tree.js\"></SCRIPT>\r\n\t\t<SCRIPT language=javascript src=\"/jsoa/public/date_picker/editlib.js\"></SCRIPT>\r\n\t</head>\r\n\t<body>\r\n\t\t<center><p style=\"font-size:20px;\"><b>\r\n\t\t");
if(request.getAttribute("flag")!=null){ 
      out.print(request.getAttribute("weekBeginDate")+"" );
      out.write("\r\n\t\t");
}else{ 
      out.print(request.getAttribute("weekBeginDate")+"" );
      out.write('-');
      out.print(request.getAttribute("weekEndDate")+"" );
} 
      out.write("\r\n\t\t\t\t");
      out.print(boradRoomName );
      out.write("会议室（教室）使用情况</b></p></center>\r\n\t    <table width=\"800px\" id=\"detailTable\" borderColor=\"#000000\" borderColorDark=\"#e1e1e1\" \r\n\t    \t\t\tborder=\"1\" cellSpacing=\"0\" cellPadding=\"1\" align=\"center\">\r\n\t    <tr height=\"40px\"><td width=\"80px\" align=\"center\"><b>星期</b></td>\r\n\t    <td width=\"120px\" align=\"center\" nowrap=\"nowrap\"><b>时段</b></td>\r\n\t    <td width=\"520px\" align=\"center\"><b>报告题目</b></td>\r\n\t    <td width=\"80px\" align=\"center\"><b>联系人</b></td></tr>\r\n\t    ");
for(int i=0;i<weekList.size();i++){ 
	    	String[][] weekInfo = weekList.get(i);
	    	for(int j=0;j<weekInfo.length;j++){
      out.write("\r\n\t    \t<tr height=\"40px\">\r\n\t    \t\t");
if(j==0){
      out.write("<td align=\"center\" rowspan=\"");
      out.print(weekInfo.length );
      out.write('"');
      out.write('>');
      out.print(weekShow.get(weekInfo[j][6]) );
      out.write("</td>");
} 
      out.write("\r\n\t\t    \t<td align=\"center\"><b>");
      out.print(("null".equals(weekInfo[j][0]+"") || "".equals(weekInfo[j][0]))?"&nbsp;":weekInfo[j][0] );
      out.write("</b></td>\r\n\t\t    \t<td align=\"center\" style=\"padding:3px 10px 3px 10px;word-break:break-all\">\r\n\t    \t\t");
      out.print(("null".equals(weekInfo[j][1]+"") || "".equals(weekInfo[j][1]))?"&nbsp;":weekInfo[j][1] );
      out.write("</td>\r\n\t    \t\t<td align=\"center\">");
      out.print(("null".equals(weekInfo[j][2]+"") || "".equals(weekInfo[j][2]))?"&nbsp;":weekInfo[j][2] );
      out.write("</td>\r\n\t    \t</tr>\t\r\n\t    ");
}} 
      out.write("\r\n\t    </table>\r\n\t    <center id=\"menuShow\"><p>\r\n\t    <script language=javascript>\r\n\t\t\tvar dtpDate = createDatePicker(\"selectDate\",");
      out.print(a_year);
      out.write(',');
      out.print(a_month);
      out.write(',');
      out.print(a_day);
      out.write(");\r\n\t    </script>\r\n\t    <input type=\"button\" value=\"所选日期所在周\" onclick=\"goPageSelect('1');\" />\r\n\t    <input type=\"button\" value=\"所选日期安排\" onclick=\"goPageSelect('2');\" />\r\n\t    <input type=\"button\" value=\"上一周\" onclick=\"goPage('");
      out.print(request.getAttribute("lastBeginDate")+"" );
      out.write("');\" />\r\n\t    <input type=\"button\" value=\"下一周\" onclick=\"goPage('");
      out.print(request.getAttribute("nextBeginDate")+"" );
      out.write("');\" />\r\n\t    <input type=\"button\" value=\"打印\" onclick=\"printPage();\" />\r\n\t    </p></center>\r\n\t</body>\r\n\t<script type=\"text/javascript\">\r\n\t\tfunction goPage(dateStr){\r\n\t\t\tlocation.href=\"/jsoa/BoardRoomAction.do?action=boardRoomWeekShow&boardRoomId=");
      out.print(boardRoomId );
      out.write("&boardRoomName=");
      out.print(boradRoomName );
      out.write("&beginDate=\"+dateStr;\r\n\t\t}\r\n\t\tfunction printPage(){\r\n\t\t\tdocument.getElementById(\"menuShow\").style.display=\"none\";\r\n\t\t\twindow.print();\r\n\t\t\twindow.close();\r\n\t\t}\t\r\n\t\tfunction goPageSelect(flag){\r\n\t\t\tvar dateStr = document.getElementById(\"selectDate\").value.replace(/\\//g,\"-\");\r\n\t\t\tlocation.href=\"/jsoa/BoardRoomAction.do?action=boardRoomWeekShow&boardRoomId=");
      out.print(boardRoomId );
      out.write("&boardRoomName=");
      out.print(boradRoomName );
      out.write("&beginDate=\"+dateStr+\"&flag=\"+flag;\r\n\t\t}\r\n\t</script>\r\n</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
