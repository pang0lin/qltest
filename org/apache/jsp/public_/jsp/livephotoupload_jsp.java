/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:58:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.public_.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.jsupload.upload.*;
import com.js.util.util.*;
import java.util.*;
import org.apache.commons.fileupload.FileItem;
import com.js.system.util.SysSetupReader;
import com.jsupload.upload.SmartUpload;
import com.js.util.util.ImageUtil;

public final class livephotoupload_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.jsupload.upload");
    _jspx_imports_packages.add("com.js.util.util");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.jsupload.upload.SmartUpload");
    _jspx_imports_classes.add("com.js.util.util.ImageUtil");
    _jspx_imports_classes.add("org.apache.commons.fileupload.FileItem");
    _jspx_imports_classes.add("com.js.system.util.SysSetupReader");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n");
      com.jsupload.upload.SmartUpload myUpload = null;
      myUpload = (com.jsupload.upload.SmartUpload) _jspx_page_context.getAttribute("myUpload", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (myUpload == null){
        myUpload = new com.jsupload.upload.SmartUpload();
        _jspx_page_context.setAttribute("myUpload", myUpload, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n\r\n\r\n<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");

request.setCharacterEncoding("GBK"); 
Calendar cal = Calendar.getInstance();
String year = cal.get(Calendar.YEAR)+"";//年
String yearSub=year.substring(2, 4);
String domainId=session.getAttribute("domainId").toString();
int fileSize=0;
String attachSizeLimit=SysSetupReader.getInstance().getAttachLimit(domainId);
if(!attachSizeLimit.startsWith("1")){
	Map map = (Map) session.getAttribute("ftpMap");
	String fileSizeLimitAll="0";//默认限制大小
	if(map != null && map.get("FileSizeLimitAll") != null){
	    fileSizeLimitAll = map.get("FileSizeLimitAll").toString();//配置文件限制大小
	    if(fileSizeLimitAll.startsWith("1")){//是否限制，1：限制；0，不限制
	        fileSize=Integer.parseInt(fileSizeLimitAll.substring(1));
	    }
	  }
}else{
   fileSize=Integer.parseInt(attachSizeLimit.substring(1));
}
String fileSizeMsg="";
if(fileSize/1000000>0){
    fileSizeMsg=String.valueOf(fileSize/(1024*1024))+"MB";
}else if(fileSize/1000>0){
    fileSizeMsg=String.valueOf(fileSize/1024)+"KB";
}else{
    fileSizeMsg=String.valueOf(fileSize)+"字节";
}
  String path=request.getParameter("path");
  String del=request.getParameter("del");
  String hiddenName=request.getParameter("hiddenName");
  String visualName=request.getParameter("visualName");
  String isEmp = request.getParameter("isEmp");
  if(isEmp == null){
     isEmp = "0";
  }
  String filePath="";
  String mode=request.getParameter("mode");
  if(mode==null) mode="normal";
  if("yes".equals(del)){
	  //删除原来的附件
  }
  if(mode.equals("add")){
	  String fileName="";
	  String fileExt="";
	  String saveName="";
	  myUpload.initialize(request);
	  List fileList=new ArrayList();
	  try
	  {
 			fileList=myUpload.getFileList();
	  }
	  catch(Exception e) 
	  {
	    	out.println("<div style=\"witdh:100%;height:100%;\" class=\"docBox\">");
	    	out.println("<center style=\"padding-top:100px;\">");
	    	out.println("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">");
	    	out.println("<tr>");
	    	out.println("<td width=\"60\"><img src=\"/jsoa/images/errorFace_excel.gif\"/></td>");
	    	out.println("<td width=\"220\"><font color=\"#FF0000\">ERROR:上传失败！文件尺寸超过规定大小:"+fileSizeMsg+"</font></td>");
	    	out.println("</tr>");
	    	out.println("<tr>");
	    	out.println("<td>&nbsp;</td>");
	    	out.println("<td align=\"center\" valign=\"middle\" height=\"65\"><input type=\"button\" class=\"btnButton2font\" onclick=\"javascript:history.back(-1);\" value='返回重试'></input></td>");
	    	out.println("</tr>");
	    	out.println("</table>");
	    	out.println("</center>");
	    	out.println("</div>");
	    	return;
	  }
	  	int upLoadAllFileSize=0;
	  	String [] banType=SmartUpload.banType;
		for (int j=0;j<fileList.size();j++)
		{
			FileItem fileItem=(FileItem)fileList.get(j);
			if(!fileItem.isFormField())//如果是<input type="file">
			{
				String fileNameTemp=fileItem.getName();
	    		for(int i=0;i<banType.length;i++)
	    		{
	    			if(fileNameTemp.endsWith(banType[i]))
	   				{
	   					fileItem.delete();
	   					out.println("<script>alert('上传失败！非法文件类型！');history.back(-1);</script>");
	   					return;
	   				}
	    		}
				upLoadAllFileSize+=fileItem.getSize();//上传总大小
			}
		}
		if(upLoadAllFileSize==0)
	    {
	    	out.println("<div style=\"witdh:100%;height:100%;\" class=\"docBox\">");
	    	out.println("<center style=\"padding-top:100px;\">");
	    	out.println("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">");
	    	out.println("<tr>");
	    	out.println("<td width=\"60\"><img src=\"/jsoa/images/errorFace_excel.gif\"/></td>");
	    	out.println("<td width=\"220\"><font color=\"#FF0000\">ERROR:上传失败！请选择非空文件上传！</font></td>");
	    	out.println("</tr>");
	    	out.println("<tr>");
	    	out.println("<td>&nbsp;</td>");
	    	out.println("<td align=\"center\" valign=\"middle\" height=\"65\"><input type=\"button\" class=\"btnButton2font\" onclick=\"javascript:history.back(-1);\" value='返回重试'></input></td>");
	    	out.println("</tr>");
	    	out.println("</table>");
	    	out.println("</center>");
	    	out.println("</div>");
	    	return;
	    }
	  for (int j=0;j<fileList.size();j++)
	  {
		  	String myRandom=new com.js.util.util.Random().getFileRandomName();
		  	FileItem fileItem=(FileItem)fileList.get(j);//获取上传文件
		  	// 忽略空的上传控件和简单form字段而不是上传域的文件域(<input type="text" />等)
		   	if (fileItem.getSize()<=0|| fileItem.isFormField()) 
		   	{
			   	continue;
		   	}
      		fileName=fileItem.getName();//获取上传文件名
    		if(!"".equals(fileName)&&null!=fileName)
        	{
        		fileName=fileName.substring(fileName.lastIndexOf("\\") + 1);
        		fileExt=fileName.substring(fileName.lastIndexOf(".") + 1);//获取上传文件扩展名
        	}
    		if (fileName.length() > 50)//文件名太长
			{
				fileName = fileName.substring(0, 40);//截断	
				fileName+="~1."+fileExt;
			}
	       	
    		//path=yearSub+"/"+path;
    		
		   	filePath=request.getSession().getServletContext().getRealPath("/")+"upload/"+year+"/"+path+"/";
		   	saveName=year+"_"+myRandom+"."+fileExt;
		   	
			myUpload.saveAs(fileItem,filePath + saveName);//保存文件
			//如果是人事管理中的照片，则在同一目录下生成一个压缩过的照片
			if("1".equals(isEmp) && "jpg".equalsIgnoreCase(fileExt)){
			    String newFileName = year+"_"+myRandom+"_64."+fileExt;
			    ImageUtil imgUtil = new ImageUtil(filePath + saveName,filePath + newFileName);
			    imgUtil.resizeFix(64, 64);
			}
	  }
	  
      out.write("\r\n\t  <SCRIPT LANGUAGE=\"JavaScript\">\r\n\t\t  <!--\r\n\t\t  alert(\"附件上传成功！\");\r\n\t\t  opener.document.all.");
      out.print(visualName);
      out.write(".value = \"");
      out.print(fileName);
      out.write("\";\r\n\t\t  opener.document.all.");
      out.print(hiddenName);
      out.write(".value = \"");
      out.print(saveName);
      out.write("\";\r\n\t\t  window.close();\r\n\t\t  //-->\r\n\t  </SCRIPT>\r\n\t  ");

  }

      out.write("\r\n<HTML>\r\n<HEAD><TITLE>上传附件</TITLE></HEAD>\r\n<BODY class=\"MainFrameBox Pupwin\">\r\n\r\n<TABLE width=\"100%\" height=\"100%\" valign=\"top\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"padding-left:10px;\" class=\"docBoxNoPanel\">\r\n\r\n\r\n<FORM ENCTYPE = \"multipart/form-data\" NAME =\"frm\" ACTION = \"livephotoupload.jsp?path=");
      out.print(path);
      out.write("&mode=add&hiddenName=");
      out.print(hiddenName);
      out.write("&visualName=");
      out.print(visualName);
      out.write("&isEmp=");
      out.print(isEmp );
      out.write("\"\r\n    METHOD=\"POST\" onsubmit=\"javascript:return check();\">\r\n  <tr>\r\n     <td  style=\"font-size:15px;color:#003366;padding-top:8px;\">\r\n     <b>上传本地文件</b>\r\n     </td>\r\n  </tr>\r\n  <TR valign=\"top\" style=\"padding-top:12px;\">\r\n     <TD align=\"left\"><div>请选择您要上传的文件</div><INPUT  type=\"file\" name=\"photo\" size=\"40\" value=\"\"></TD>\r\n  </TR>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <TR>\r\n     <TD align=\"left\"><INPUT NAME=\"submit\" VALUE=\"上传\" TYPE=\"submit\">\r\n\t     &nbsp;&nbsp;<INPUT NAME=\"reset\" VALUE=\"重置\" TYPE=\"reset\">\r\n     </TD>\r\n  </TR>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td align=\"center\">\r\n      <!--<img src=\"/jsoa/images/boder_left.gif\" hspace=\"5\" vspace=\"5\" id=\"preview\" >-->\r\n    </td>\r\n  </tr>\r\n</FORM>\r\n</CENTER>\r\n</TABLE>\r\n</BODY>\r\n</HTML>\r\n<script language=\"javascript\">\r\nvar img=null;\r\nfunction check(){\r\n    if(document.all.photo.value==\"\"){\r\n        alert(\"请选择上传附件!\");\r\n        return false;\r\n    }\r\n    try{\r\n        if(img) img.removeNode(true);\r\n        img=document.createElement(\"img\");\r\n        img.style.position=\"absolute\";\r\n");
      out.write("        img.style.visibility=\"hidden\";\r\n        if(document.all){\r\n        img.attachEvent(\"onreadystatechange\",orsc);        \r\n        img.attachEvent(\"onerror\",oe);\r\n        document.body.insertAdjacentElement(\"beforeend\",img);\r\n        }else{\r\n        img.addEventListener(\"readystatechange\",orsc,false);        \r\n        img.addEventListener(\"error\",oe,false);        \r\n        }\r\n        \r\n        var fileValue=document.all.photo.value;\r\n        img.src=fileValue;\r\n        fileValue=fileValue.toLowerCase();\r\n        fileValue=fileValue.substring(fileValue.lastIndexOf(\".\")+1);\r\n        if(\"jpg,gif,bmp,png\".indexOf(fileValue)>=0){\r\n            var fileOffsetWidth=img.offsetWidth;\r\n            var fileOffsetHeight=img.offsetHeight;\r\n        }else{\r\n            alert(\"您只能上传jpg,gif,bmp,png等格式的图片!\");\r\n            return false;\r\n        }\r\n    }catch(e){\r\n        alert(e);\r\n    }\r\n}\r\nfunction oe()\r\n{\r\n}\r\nfunction orsc()\r\n{\r\n    if(img.readyState!=\"complete\")return false;\r\n}\r\n</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
