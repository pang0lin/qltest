/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:58:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.weixin.personalMessage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import com.js.oa.chat.po.ChatPO;
import com.js.oa.chat.po.ChatAttachPO;
import com.js.util.util.HTMLEncoding;

public final class weixin_005fmessageInfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.oa.chat.po.ChatPO");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.js.util.util.HTMLEncoding");
    _jspx_imports_classes.add("com.js.oa.chat.po.ChatAttachPO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n");

String path = request.getContextPath();
String basePath = request.getContextPath();
String beginIndex = null!=request.getParameter("beginIndex") ? request.getParameter("beginIndex").toString() : "";
request.setCharacterEncoding("UTF-8");
ChatPO po=(ChatPO)request.getAttribute("chatPO");
String name=(String)request.getAttribute("name");
String userAccounts=(String)request.getAttribute("userAccounts");
String formUserAccounts = request.getParameter("formUserAccounts");
String messageFrom = null!=request.getParameter("from") ? request.getParameter("from") : "";
List<ChatAttachPO> chatAttachList = null!=request.getAttribute("chatAttachList") ? (List<ChatAttachPO>) request.getAttribute("chatAttachList") : null;
boolean currentUserIsSender = null!=po.getSenderId() && null!=session.getAttribute("userId") && po.getSenderId().equals(session.getAttribute("userId"));

      out.write("\r\n<!DOCTYPE html>\r\n<HTML>\r\n\t<HEAD>\r\n\t\t<TITLE>消息内容</TITLE>\r\n\t\t<META content=\"text/html; charset=UTF-8\" http-equiv=Content-Type>\r\n\t\t<META name=viewport content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;\">\r\n\t\t<META name=apple-touch-fullscreen content=YES>\r\n\t\t<META name=apple-mobile-web-app-capable content=no>\r\n\r\n\t\t<link rel=\"stylesheet\" href=\"/jsoa/css/weixin/weixin_zsgl.css\">\r\n\t\t");

		String loginType2017 = null==session.getAttribute("loginType") ? "" : session.getAttribute("loginType").toString();
		if(!"weixin".equals(loginType2017)){
		  out.print("<script type=\"text/javascript\">window.history.forward(1);</script>");
		}
		
      out.write("\r\n\t\t<style type=\"text/css\">\r\n\t\ta { text-decoration: none;}\r\n\t\t</style>\r\n\t</head>\r\n\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/wap2/commonImport.jsp", out, false);
      out.write("\r\n\t<body onload=\"setHeader('javascript:window.history.back();','消息内容');\" class=\"wapcss\">\r\n    \t<div class=\"form\">\r\n    \t\t<div style=\"margin-top: 15px;\">\r\n\t\t\t\t<span style=\"float: left; margin-left: 5px;\">");
      out.print(po.getChatTime().toString().replace(".0", ""));
      out.write("</span>\r\n\t\t\t\t<span style=\"float: right; margin-right: 5px;\">\r\n\t\t\t\t\t");

					if(currentUserIsSender){	// 如果当前用户是发送者，消息接收人可能是多个，显示详情
						
      out.write("\r\n\t\t\t\t\t\t<a href=\"javascript:void(0);\" onclick=\"showInfo(this)\" style=\"text-decoration: none;\">详情</a>\r\n\t\t\t\t\t\t");

					} else{	//	如果当前人是接受者，消息发送人只有一个，直接显示发送人的姓名
						
      out.print(name);

					}
					
      out.write("\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n    \t\t<div class=\"zsgllineitem\"></div>\r\n    \t\t");

    		// 如果当前用户是发送者，消息接收人可能是多个，显示详情
    		if(currentUserIsSender){
    			
      out.write("\r\n    \t\t\t<div id=\"information\" style=\"display: none; background: #efefef;\">\r\n\t        \t<div class=\"item\" style=\"padding: 0;\">\r\n\t\t\t\t\t<div class=\"title\">发送至：</div>\r\n\t\t\t     \t<div class=\"content\">\r\n\t\t\t     \t\t<div class=\"info\">");
      out.print(po.getChatTo() );
      out.write("</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"zsgllineitem\"></div>\r\n    \t\t</div>\r\n    \t\t\t");

    		}
    		
      out.write("\r\n    \t\t\r\n      \t\t<div class=\"item\">\r\n      \t\t\t");
      out.write("\r\n             \t<div class=\"content\">\r\n               \t\t<textarea rows=\"6\" readonly=\"readonly\">");
      out.print(po.getChatContent());
      out.write("</textarea>\r\n             \t</div>\r\n          \t</div>\r\n          \t\r\n          \t");

          	if(null!=chatAttachList && chatAttachList.size()>0){
          		
      out.write("\r\n\t          \t<div class=\"item\">\r\n\t          \t\t<div class=\"title\">附件：</div>\r\n\t\t\t     \t<div class=\"content\" style=\"clear: left; margin-left: 20px;\">\r\n\t\t\t     \t\t<div class=\"info\">\r\n\t\t\t\t\t\t\t");

						   	for(ChatAttachPO chatAttach : chatAttachList){
						   		out.print("<a href=\"javascript:void(0);\" onclick=\"showHtmlObject('" 
						   			+ chatAttach.getFileSaveName() + "', '0', 'chat')\">" 
						   			+ chatAttach.getFileName() + "</a><br />");
						   	}
		                    
      out.write("\r\n\t\t\t\t    \t</div>\r\n\t\t\t\t\t</div>\r\n\t          \t</div>\r\n          \t\t");

          	}
          	
      out.write("\r\n\t\t</div>\r\n\r\n   \t\t<!-- 按钮 -->\r\n\t\t<div class=\"footer\">\r\n\t      \t<div class=\"buttons\">\r\n\t\t   \t\t");

		   		if(!currentUserIsSender || "1".equals(messageFrom)){	// 当前用户不是消息发送人或者消息是从已收消息中打开时，显示回复功能
		   			
      out.write("\r\n\t\t    \t\t<!-- 回复 -->\r\n\t\t\t\t\t<form style=\"width: 100%; height: 100%;\" name=\"form1\" action=\"");
      out.print(path);
      out.write("/weixin/personalMessage/weixin_replyAccess.jsp\" method=\"post\">\r\n\t\t\t\t\t\t<div class=\"input\">\r\n\t\t                   \t<input type=\"hidden\" name=\"userNames\" value=\"");
      out.print(name);
      out.write("\"/>\r\n\t\t\t        \t\t<input type=\"hidden\" name=\"chatId\" value=\"");
      out.print(po.getChatId());
      out.write("\"/>\r\n\t\t\t\t\t\t\t<input type=\"hidden\" name=\"toIDs\" value=\"");
      out.print(po.getSenderId() );
      out.write("\"/>\r\n\t\t\t\t\t\t\t<input type=\"hidden\" name=\"beginIndex\" value=\"");
      out.print(beginIndex );
      out.write("\"/>\r\n\t\t\t\t\t\t\t<input type=\"hidden\" name=\"from\" value=\"");
      out.print(messageFrom );
      out.write("\">\r\n\t\t\t\t\t\t\t<input type=\"text\" id=\"contents\" name=\"contents\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"replyDiv\">\r\n\t\t\t\t\t\t\t<div class=\"reply\" onclick=\"javascript:save();\">回复</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t   \t\t\t");

			    } else{
			    	
      out.write("\r\n\t\t\t    \t<div class=\"button\" onclick=\"weixinMessageReminder('confirm', '提示：', '确定要删除本条消息吗？', 'del()')\">删除</div>\r\n\t\t\t    \t<div class=\"button gray\" onclick=\"javascript:window.history.back();\">返回</div>\r\n\t\t\t    \t");

			    }
			    
      out.write("\r\n\t\t\t</div>\r\n\t\t</div>\r\n   \t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/weixin/common/weixin_messageReminders.jsp", out, false);
      out.write("\r\n   \t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/weixin/workflow/daibanflow/weixinshowhtml.jsp", out, false);
      out.write("\r\n\t</body>\r\n\t<script type=\"text/javascript\">\r\n\tfunction save(){\r\n\t\tvar con = $.trim($(\"#contents\").val());\r\n\t\tif(\"\" == con){\r\n\t\t\tweixinMessageReminder(\"alert\", \"提示：\", \"请填写回复内容！\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tdocument.form1.submit();\r\n\t}\r\n\tfunction del(){\r\n\t\tlocation.href = \"");
      out.print(path);
      out.write("/weixin/personalMessage/weixin_replyAccess.jsp?action=del&beginIndex=");
      out.print(beginIndex );
      out.write("&chatId=");
      out.print(po.getChatId() );
      out.write("&from=");
      out.print(messageFrom );
      out.write("\";\r\n\t}\r\n\tfunction showInfo(obj){\r\n\t\tvar infoDiv = document.getElementById(\"information\");\r\n\t\tif(infoDiv.style.display == \"none\"){\r\n\t\t\tinfoDiv.style.display = \"block\";\r\n\t\t\tobj.innerHTML = \"隐藏\";\r\n\t\t} else{\r\n\t\t\tinfoDiv.style.display = \"none\";\r\n\t\t\tobj.innerHTML = \"详情\";\r\n\t\t}\r\n\t}\r\n\t</script>\r\n</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
