/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:08:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.iWebOfficeSign.Signature;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.*;
import java.text.*;
import java.util.*;
import java.sql.*;
import DBstep.iDBManager2000.*;

public final class SignatureAddFrm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("DBstep.iDBManager2000");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=gb2312");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);
 
      out.write("\r\n<html>\r\n<head>\r\n<title>签章管理</title>\r\n<link rel='stylesheet' type='text/css' href='../test.css'>\r\n<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<script language=javascript>\r\nfunction Check(theForm){\r\n\tif (theForm.MarkName.value == \"\"){\r\n\t\talert(\"请输入印签名.\");\r\n\t\ttheForm.MarkName.focus();\r\n\t\treturn (false);\r\n\t}\r\n\tif(theForm.MarkFile.value == \"\"){\r\n\t\talert(\"请上传签章文件\");\r\n\t\t\treturn false;\r\n\t}\r\n\tif(theForm.MarkFile.value != \"\"){\r\n\t\tvar fileName = theForm.MarkFile.value.toUpperCase();\r\n\t\tvar fileType1 = fileName.substring(fileName.length-3, fileName.length);\r\n        var fileType2 = fileName.substring(fileName.length-4, fileName.length);\r\n\t\tif(fileType1=='BMP' || fileType1=='JPG' || fileType1=='GIF' || fileType1=='PNG' || fileType2=='JPEG'){\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\talert(\"只能上传图片\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn (true);\r\n}\r\n</Script>\r\n</head>\r\n<SCRIPT language=\"javascript\" src=\"/jsoa/js/openEndow.js\"></SCRIPT>\r\n<body bgcolor=\"#ffffff\">\r\n<div align=\"center\"><font size=4 color=\"ff0000\">签章管理〖增加签章〗</font></div>\r\n<hr size=1 width=99% align=right>\r\n<br>\r\n<form name=\"webform\" method=\"post\" enctype=\"multipart/form-data\" action=\"SignatureAdd.jsp\" onsubmit=\"return Check(this)\">\r\n");
      out.write("<table border=0  cellspacing='0' cellpadding='0' width=98% align=right class=TBStyle>\r\n<tr>\r\n  <td nowrap align=center class=\"TDTitleStyle\" width=64>用户名称</td>\r\n  <td class=\"TDStyle\" width=\"90%\"><input type=\"text\" name=\"UserName\" size=\"50\" maxlength=\"32\" class=\"IptStyle\" value=\"\"></td>\r\n</tr>\r\n<tr>\r\n  <td nowrap align=center class=\"TDTitleStyle\" width=64>密码输入</td>\r\n  <td class=\"TDStyle\" width=\"90%\"><input type=\"password\" name=\"PassWord\" size=\"50\" maxlength=\"32\" class=\"IptStyle\" value=\"\"></td>\r\n</tr>\r\n<tr>\r\n  <td nowrap align=center class=\"TDTitleStyle\" width=64>签章名称</td>\r\n  <td class=\"TDStyle\" width=\"90%\"><input type=\"text\" name=\"MarkName\" size=\"50\" maxlength=\"32\" class=\"IptStyle\" value=\"\"></td>\r\n</tr>\r\n<tr>\r\n  <td nowrap align=center class=\"TDTitleStyle\" width=64>签章文件</td>\r\n  <td class=\"TDStyle\"><input type=\"file\" name=\"MarkFile\" size=\"50\" maxlength=\"60\" class=\"IptStyle\"  onblur=\"showImg(this);\" ></td>\r\n</tr>\r\n\r\n<tr> \r\n  <td nowrap align=center class=\"TDTitleStyle\" width=64>所属用户</td>\r\n  <td class=\"TDStyle\">\r\n     <input type=\"text\" name=\"belongUserName\" id=\"belongUserName\" style=\"width:99%\" maxlength=\"32\" class=\"inputText\" title=\"请点击选择\"  onclick=\"openEndow('belongUserId','belongUserName',document.all.belongUserId.value,document.all.belongUserName.value,'user','yes','userorggroup','");
      out.print(session.getAttribute("grantRange"));
      out.write("');\"></textarea>&nbsp;\r\n     <input type=hidden name=belongUserId id=belongUserId >\r\n  </td>\r\n</tr>\r\n<tr> \r\n  <td nowrap align=center class=\"TDTitleStyle\" width=64>使用范围</td>\r\n  <td class=\"TDStyle\">\r\n     <textarea  cols=110 rows=8 readonly=true name=useName id=useName class=\"inputTextarea\" title=\"请点击选择\"  onclick=\"openEndow('useId','useName',document.all.useId.value,document.all.useName.value,'user','no','userorggroup','");
      out.print(session.getAttribute("grantRange"));
      out.write("');\"></textarea>&nbsp;<input type=hidden name=useId id=useId>\r\n  </td>\r\n</tr>\r\n<tr>\r\n  <td colspan=2 class=\"TDTitleStyle\" nowrap>\r\n    <input type=submit name=\"Save\" value=\"保 存\">\r\n    <input type=reset name=\"Reset\" value=\"重 填\">\r\n    <input type=button name=\"Return\" value=\"返 回\"  onclick=\"javascript:history.back();\">\r\n  </td>\r\n</tr>\r\n</table>\r\n<center>\r\n<div id=\"imgShowDiv\" style=\" width:200px;position:absolute;top:322px;left:40%\">&nbsp;\r\n</div></center>\r\n</form>\r\n<input type=\"hidden\" id=\"filePath\" value=\"\">\r\n<script type=\"text/javascript\">\r\nString.prototype.endWith=function(str){      \r\n\treturn new RegExp(str+\"$\").test(this);        \r\n}\r\nfunction showImg(obj){\r\n\tif(obj.value!=\"\"){\r\n\t\tvar imgPath = obj.value.toLowerCase();\r\n\t\tif(imgPath.endWith(\".jpg\") || imgPath.endWith(\".bmp\") || imgPath.endWith(\".png\") || imgPath.endWith(\".gif\") || imgPath.endWith(\".jpeg\")){\r\n\t\t\tdocument.getElementById(\"imgShowDiv\").innerHTML=\"<img src='\"+obj.value+\"' style='width:200px;' />\";\r\n\t\t}else{\r\n\t\t\tif(document.getElementById(\"filePath\").value!=obj.value){\r\n");
      out.write("\t\t\t\talert(\"文件格式不正确，签章只支持bmp,jpg,png,gif,jpeg格式文件\");\r\n\t\t\t}\r\n\t\t\tdocument.getElementById(\"imgShowDiv\").innerHTML=\"&nbsp;\";\r\n\t\t}\r\n\t\tdocument.getElementById(\"filePath\").value = obj.value;\r\n\t}\r\n}\r\n\r\n</script>\r\n</body>\r\n</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
