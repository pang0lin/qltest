/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:50:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.setup;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class systemmanager_005flogo_005fall_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-logic.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n");


response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);


String webapp=request.getContextPath();
List showBranchList=(List)request.getAttribute("showAllogo");

      out.write("\r\n<html>\r\n\t<head>\r\n\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=GBK\">\r\n\t\t<title>单位logo管理</title>\r\n\t\t<link href=\"skin/blue/style.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n\t\t<script src=\"/jsoa/js/imenu.js\"></script>\r\n\t\t<script src=\"/jsoa/js/util.js\"></script>\r\n\t\t<!--[if IE 6]>\r\n\t\t\t<script type=\"text/javascript\" src=\"js/DD_belatedPNG.js\"></script>\r\n\t\t\t<script type=\"text/javascript\">\r\n\t\t\t\tDD_belatedPNG.fix('.IE6PNG');\r\n\t\t\t</script>\r\n\t\t<![endif]-->\r\n\t\t<script language=\"javascript\">\r\n\t\t  var wleft=window.screenLeft;\r\n\t      var wtop=window.screenTop-96;\r\n\t      function MM_openBrWindow(theURL) {\r\n\t\t\t  location.href=theURL\r\n\t\t  }\r\n\t\t</script>\r\n\t</head>\r\n<body class=\"MainFrameBox\">\r\n<table width=\"100%\" border=0 cellpadding=\"0\" cellspacing=\"0\">\r\n<tr>\r\n<td>\r\n<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"listTable outTopline\">\r\n  \r\n   <tr>\r\n    <td width=\"15%\" class=\"listTableHead\">所属单位</td>\r\n    <td width=\"10%\" class=\"listTableHead\">Logo</td>\r\n    <td width=\"10%\" class=\"listTableHead\">显示Logo</td>\r\n");
      out.write("\t<td width=\"15%\" class=\"listTableHead\">单位名称</td>\r\n\t<td width=\"10%\" class=\"listTableHead\">显示单位名称</td>\r\n    <td width=\"15%\" class=\"listTableHead\">名称颜色</td>\r\n    <td width=\"5%\" class=\"listTableHeadLast\" nowrap> 处理 </td>\r\n  </tr>\r\n    ");
String logo = webapp;
    String listClass="listTableLine1";
	if(com.js.util.config.SystemCommon.getUseClusterServer()==1){
		logo=com.js.util.config.SystemCommon.getClusterServerUrl();
	}
	if(showBranchList!=null){ 
		for(int i=0;i<showBranchList.size();i++){
			String[] o=(String[])showBranchList.get(i);
			listClass="listTableLine1";
    		if(i%2 != 0){listClass="listTableLine2";}
    		//l.logo_id,l.logo_path,l.orgId,o.orgname,l.BAK_STRING1,l.company_color,l.isdisplay_company_name,l.isdisplay_logo 
      out.write("\r\n    \t<tr>\r\n    \t <td class=\"");
      out.print(listClass);
      out.write('"');
      out.write(' ');
      out.write('>');
      out.print(o[3] );
      out.write("&nbsp;</td>\r\n    \t   \r\n    \t   ");

    	     String pathString="";
    	     pathString=logo+o[1] ;
	          if(o[1]!=null)
	          {
	        	  if(o[1].toString().substring(4,5).equals("_")){
	        		  pathString=logo+o[1];
	        	  }else{
	        		  pathString=logo+o[1].toString().replace("/upload/logo/", "/upload/0000/logo/");
	        	  }
	          }
    	   
    	   
      out.write("\r\n    \t \r\n\t\t  <td class=\"");
      out.print(listClass);
      out.write("\" ><img src=\"");
      out.print(pathString );
      out.write("\" width=\"115\" height=\"20\">&nbsp;</td>\r\n\t\t  \r\n\t\t  <td class=\"");
      out.print(listClass);
      out.write('"');
      out.write(' ');
      out.write('>');
      out.print(o[7] );
      out.write("&nbsp;</td>\r\n\t\t  <td class=\"");
      out.print(listClass);
      out.write('"');
      out.write(' ');
      out.write('>');
      out.print(o[8] );
      out.write("&nbsp;</td>\r\n\t\t  <td class=\"");
      out.print(listClass);
      out.write('"');
      out.write(' ');
      out.write('>');
      out.print(o[6] );
      out.write("&nbsp;</td>\r\n\t\t  <td class=\"");
      out.print(listClass);
      out.write('"');
      out.write(' ');
      out.write('>');
      out.print(o[5] );
      out.write("\r\n\t\t  <div id=\"colorDisplay\" style=\"vertical-align:middle;display:inline;line-height:15px;height:15px;width:15px;cursor:pointer;background-color:");
      out.print(o[5] );
      out.write("\">&nbsp;&nbsp;&nbsp;\r\n\t\t  </div>&nbsp;</td>\r\n\t\t  <td class=\"");
      out.print(listClass);
      out.write(" listTableLineLastTD\" nowrap><img style=\"cursor:pointer\" border=\"0\" src=\"images/modi.gif\" alt=\"修改\" onclick=\"MM_openBrWindow('/jsoa/logo.do?method=goBranchLogo&orgId=");
      out.print(o[2] );
      out.write("')\"/>&nbsp;\r\n\t\t  </td>\r\n\t</tr>\r\n    \t\t\r\n    \t\t\r\n\t ");
}
	}
	
      out.write("\r\n\t</table>\r\n\t</td>\r\n </tr>\r\n </table>\r\n</body>\r\n</html>\r\n\r\n    \r\n\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
