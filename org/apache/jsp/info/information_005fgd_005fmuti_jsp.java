/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:55:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.info;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class information_005fgd_005fmuti_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GB2312");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=GB2312\">\r\n<title>Insert title here</title>\r\n</head>\r\n<body>\r\n");

    String recordId = request.getParameter("recordId");
	if(recordId!=null){
		if(recordId.endsWith(",")){
			recordId=recordId.substring(0,recordId.length()-1);
		}
	}

	response.setHeader("Cache-Control","no-cache");
	
    String[] records = recordId.split(",");    
    for(int i=0;i<records.length;i++){
        String info = records[i];
        String[] infos = info.split("-");
        StringBuffer openURL=new StringBuffer("/jsoa/InformationAction.do?action=openInfo&channelId=");
		openURL.append(infos[1])
			 .append("&informationId=").append(infos[0])
			 .append("&channelName=").append(infos[2])
			 .append("&orgId=").append(infos[3])
			 .append("&userChannelName=").append(infos[4])
			 .append("&checkdepart=").append(infos[5])
			 .append("&redHead=").append(infos[6])
			 .append("&informationType=").append(infos[7])
			 .append("&channelType=").append(infos[8])
			 .append("&gd=2");
	
      out.write("\r\n\t\t<iframe src=\"\" name=\"Ifr");
      out.print(infos[0] );
      out.write("\" id=\"Ifr");
      out.print(infos[0] );
      out.write("\"></iframe>\r\n        <!--  <iframe src=\"");
      out.print(openURL.toString());
      out.write("\"></iframe>  -->\r\n     ");
 
    } 

      out.write("\r\n</body>\r\n</html>\r\n<script>\r\nvar recordIds=\"");
      out.print(recordId);
      out.write("\";\r\n\r\nvar recordArr=recordIds.split(\",\");\r\nvar recordLen=recordArr.length;\r\nfor(var i=0;i<recordArr.length;i++){\r\n\tvar recordId=recordArr[i];\t\r\n\tsetTimeout(\"guidang('\"+recordId+\"',\"+(i+1)+\")\",i*8000);\r\n\t\r\n}\r\n\r\nfunction guidang(recordId,flag){\r\n\tparent.removeObj();\r\n\tparent.sAlert(\"正在归档第\"+flag+\"个文件,请不要离开此页面！\");\t\r\n\tvar infoURL=\"/jsoa/InformationAction.do?action=openInfo&channelId=\";\r\n\r\n\tvar infos=recordId.split(\"-\");\r\n\t\r\n\tinfoURL+=infos[1];\r\n\tinfoURL+=\"&informationId=\"+infos[0];\r\n\tinfoURL+=\"&channelName=\"+infos[2];\r\n\tinfoURL+=\"&orgId=\"+infos[3];\r\n\tinfoURL+=\"&userChannelName=\"+infos[4];\r\n\tinfoURL+=\"&checkdepart=\"+infos[5];\r\n\tinfoURL+=\"&redHead=\"+infos[6];\r\n\tinfoURL+=\"&informationType=\"+infos[7];\r\n\tinfoURL+=\"&channelType=\"+infos[8];\r\n\tinfoURL+=\"&gd=2\";\r\n\r\n\tdocument.getElementById(\"Ifr\"+infos[0]).src=infoURL;\r\n\t\r\n\tif(flag==recordLen){\r\n\t\tsetTimeout(\"guidangend()\",8000);\r\n\t}\r\n}\r\nfunction guidangend(){\r\n\talert(\"归档结束！\");\r\n\tparent.removeObj();\r\n\tparent.location.reload();\r\n}\r\n</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
