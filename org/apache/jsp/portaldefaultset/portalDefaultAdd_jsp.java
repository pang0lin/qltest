/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:08:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.portaldefaultset;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import java.util.Calendar;

public final class portalDefaultAdd_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Calendar");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);

      out.write("\r\n<html>\r\n<head>\r\n<title>新增</title>\r\n<link href=\"/jsoa/style/cssmain.css\" rel=\"stylesheet\" type=\"text/css\">\r\n<script language=\"javascript\" src=\"/jsoa/js/openEndow.js\"></script>\r\n<script language=\"javascript\" src=\"/jsoa/js/checkForm.js\"></script>\r\n<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<script src=\"/jsoa/js/js.js\" language=\"javascript\"></script>\r\n\r\n</head>\r\n<body class=\"MainFrameBox Pupwin\" onLoad=\"resizeWin(630,530);init();\" >\r\n<table width=\"100%\" height=\"100%\" border=\"0\" cellpadding=\"10\" cellspacing=\"0\" class=\"docBoxNoPanel\">\r\n  <tr>\r\n    <td valign=\"top\">\r\n\t\t<div id=\"docinfo0\" style=\"display:;\">\r\n\t\t\t<table width=\"100%\" border=\"0\" cellpadding=\"2\" cellspacing=\"1\">\r\n\t\t\t\t<form action=\"/jsoa/CustomDeskUrlAction.do?action=defaultportalsave\" name=\"form\" method=\"post\">\r\n\t\t\t\t<input type=\"hidden\" id=\"con\" value=\" \"/>\r\n\t\t\t\t<input type=\"hidden\" id=\"done\" value=\" \"/>\r\n                 <tr >\r\n\t\t\t\t  <td width=\"90\" height=\"25\">选择门户&nbsp;<label class=\"mustFillcolor\">*</label>：</td>\r\n\t\t\t\t  <td>\r\n\t\t\t\t\t <select id=\"portalId\" name=\"portalId\" style=\"width:10%\">\r\n\t\t\t\t\t   <option value=\"\">--请选择--</option>\r\n\t\t\t\t\t  ");

					    if(request.getAttribute("list")!=null){
						  List list = (List)request.getAttribute("list");
						  for(int i = 0 ;i<list.size();i++){
						  Object []obj = (Object[])list.get(i);
					   
      out.write("\r\n\t\t\t\t\t     <option value=\"");
      out.print(obj[0]+"&&"+obj[1]);
      out.write('"');
      out.write('>');
      out.print(obj[1]);
      out.write("</option>\r\n\t\t\t\t\t   ");
}
					    }
      out.write("\r\n\t\t\t\t\t  </select>\t\t  \r\n\t\t\t\t  </td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr id=\"tr2\">\r\n\t\t\t\t   <td height=\"25\">使用范围<label class=\"mustFillcolor\"> *</label>：</td>\r\n\t\t\t\t   <td>\r\n\t\t\t\t\t  <textarea id=\"viewRangeName\" name=\"viewRangeName\" rows=\"4\" style=\"width:400px;cursor:pointer\"  readonly=\"true\" onclick=\"openEndow('userOrgGroup','viewRangeName','','','userorg','no','userorg','')\" title=\"请点击选择\" /></textarea>\r\n\t\t\t\t\t  <input type=\"hidden\" name=\"userOrgGroup\" id=\"userOrgGroup\"/>\r\n\t\t\t\t\t  <input type=\"hidden\" name=\"grantRange\" id=\"grantRange\" value=\"");
      out.print(session.getAttribute("grantRange"));
      out.write("\">\t\t \r\n\t\t\t\t   </td>\r\n\t\t\t\t</tr>\r\n                <input type=\"hidden\" name=\"flag\">\r\n\t\t\t\t</form>\r\n\t\t  </table>\r\n\t\t</div>\r\n\t\t<br/>\r\n\t\t<table width=\"100%\" border=\"0\">\r\n\t\t<tr>\r\n\t\t  <td>\r\n\t\t    <button class=\"btnButton4font\" id=\"saveAndExit\" style=\"cursor:pointer\" onClick=\"javascript:saveClose();\">保存退出</button>\r\n\t\t\t<button class=\"btnButton2font\" style=\"cursor:pointer\" onClick=\"window.close();\">退出</button>\r\n\t\t  </td>\r\n\t\t</tr>\r\n\t\t</table>\r\n\t</td>\r\n  </tr>\r\n</table>\r\n\r\n\r\n</body>\r\n\r\n</html>\r\n<script language=\"javascript\">\r\n\r\nfunction init() {\r\n   ");
if("1".equals(request.getAttribute("flag")+"")){
      out.write("\r\n    var hhref=\"/jsoa/CustomDeskUrlAction.do?action=listdefault\";\r\n    opener.location.href= hhref ;\r\n    window.close();\r\n   ");
}
      out.write("\r\n}\r\n\r\n\r\n//保存退出\r\nfunction saveClose() {\r\n     var portalId=document.all.portalId.value;\r\n\tif(portalId==\"\"){\r\n\t\talert(\"门户选择为空!\");\r\n\t\treturn false;\r\n\t}\r\n\tvar userOrgGroup=document.all.userOrgGroup.value;\r\n\tif(userOrgGroup==\"\"){\r\n\t\talert(\"范围不能为空!\");\r\n\t\treturn false;\r\n\t} \r\n     \r\n    document.form.submit();\r\n}\r\nfunction fob(){\r\n    setButtonDisabled('saveAndExit',false);\r\n    setButtonDisabled('saveAndContinue',false);\r\n}\r\n\r\nString.prototype.trim = function() {\r\n\treturn this.replace(/(^ +| +$)/, \"\");\r\n}\r\n</script>\r\n\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
