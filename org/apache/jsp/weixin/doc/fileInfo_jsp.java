/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:00:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.weixin.doc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import java.util.List;
import com.js.wap.util.WorkDealWith;

public final class fileInfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.js.wap.util.WorkDealWith");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n");

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
String loginType = null!=session.getAttribute("loginType") ? session.getAttribute("loginType").toString() : "";
String recordId = request.getParameter("editId");
String tableId = request.getParameter("tableId");

      out.write("\r\n\r\n");

	String backEvent = "javascript:closeWindow();";
	if("wap".equals(loginType) && null!=request.getParameter("isMessage")){
		backEvent = "javascript:loadURL();";
	}
	List<String[]> fieldInfo = new ArrayList<String[]>();
	String title = "发文";
	System.out.println(request.getParameter("flag") + "::recordId=" + recordId + "::tableId=" + tableId);
	if("GWGL-FWGL".equals(request.getParameter("flag"))){	// 发文
		fieldInfo = new WorkDealWith().getSendFile(recordId, tableId);
	} else if("GWGL-SWGL".equals(request.getParameter("flag"))){	// 收文
		fieldInfo = new WorkDealWith().getReceiveList(recordId, tableId);
		title = "收文";
	}
	
      out.write("\r\n<!-- \r\n收发文归档知识管理后查看\r\n -->\r\n<!DOCTYPE HTML>\r\n<html>\r\n\t<head>\r\n\t\t<base href=\"");
      out.print(basePath);
      out.write("\">\r\n\t\t<META content=\"text/html; charset=UTF-8\" http-equiv=Content-Type>\r\n\t\t<META name=viewport content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=1;\">\r\n\t\t<META name=\"apple-touch-fullscreen\" content=\"YES\">\r\n\t\t<META name=\"apple-mobile-web-app-capable\" content=\"no\">\r\n\t\t<META name=GENERATOR content=\"MSHTML 8.00.6001.19154\">\r\n\t\t<title>");
      out.print(title );
      out.write("</title>\r\n\t\t<meta http-equiv=\"pragma\" content=\"no-cache\">\r\n\t\t<meta http-equiv=\"cache-control\" content=\"no-cache\">\r\n\t\t<meta http-equiv=\"expires\" content=\"0\">\r\n\t\t<style type=\"text/css\">\r\n\t\t* { padding: 0; margin: 0;}\r\n\t\t</style>\r\n\t</head>\r\n\t\r\n\t<body onload=\"setHeader('");
      out.print(backEvent );
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(title );
      out.write("');\" class=\"paddingTop\">\r\n\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/wap2/commonImport.jsp", out, false);
      out.write("\r\n\t\t");

		if("wap".equals(loginType) && null!=request.getParameter("isMessage")){
			
      out.write("\r\n\t\t\t<div id=\"mainpage_navdiv\" class=\"top\" >\r\n\t\t    \t<a id=\"mainpage_backurl\" href=\"");
      out.print(backEvent );
      out.write("\">\r\n\t\t    \t\t<img width=\"20\" height=\"15\" src=\"/jsoa/wap2/images/topfh.png\" style=\"margin-top: 14px;\">\r\n\t\t    \t</a>\r\n\t\t    \t<p id=\"mainpage_title\">");
      out.print(title );
      out.write("</p>\r\n\t    \t</div>\r\n\t\t\t");

		}
		
      out.write("\r\n\t\t<div id=\"formBody\" class=\"form\" style=\"padding-bottom: 80px;\">\r\n\t\t\t");

			String[] temp;
			for(int i=0; i<fieldInfo.size(); i++){
	     		temp = fieldInfo.get(i);
	     		if(temp[1] != null){
		     		
      out.write(" \t\r\n\t\t     \t\t<div class=\"item\">\r\n\t\t\t\t\t\t<div class=\"title\">");
      out.print(temp[1] );
      out.write("：</div>\r\n\t\t\t\t\t\t<div class=\"content\">\r\n\t\t\t\t\t\t\t<div class=\"info\">\r\n\t\t\t\t\t\t\t\t");

								String tempString = temp[6]==null ? "" : temp[6];
								if(tempString.indexOf("查看正文") > 0){
									tempString = tempString.substring(tempString.indexOf("href=\"") + 6);
									tempString = tempString.substring(0, tempString.indexOf("\""));
									tempString = tempString.substring(tempString.lastIndexOf("/") + 1);
									
      out.write("\r\n\t\t\t\t\t\t\t\t\t<a href=\"javascript:void(0);\" onclick=\"showHtmlObject('");
      out.print(tempString );
      out.write("', '0', 'govdocumentmanager')\">查看正文</a>\r\n\t\t\t\t\t\t\t\t\t");

								} else{
									
      out.write("\r\n\t\t\t\t\t\t\t\t\t");
      out.print((temp[6]==null ? "" : temp[6]).replace("@@curUser@@",session.getAttribute("userName") + "")
										.replace("@@curOrg@@",session.getAttribute("orgName") + "") );
      out.write("\r\n\t\t\t\t\t\t\t\t\t");

								}
								
      out.write("\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t");

				}
	     	}
			
      out.write("\r\n\t\t</div>\r\n\t\t<div class=\"footer\">\r\n\t      \t<div class=\"buttons\">\r\n\t          \t<div id=\"closeWindow\" class=\"button gray\" onclick=\"");
      out.print(backEvent );
      out.write("\">关闭</div>\r\n\t      \t</div>\r\n\t    </div>\r\n\t    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/weixin/workflow/daibanflow/weixinshowhtml.jsp", out, false);
      out.write("\r\n\t</body>\r\n</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
