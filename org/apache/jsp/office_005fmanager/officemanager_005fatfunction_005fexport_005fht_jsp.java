/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:02:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.office_005fmanager;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.system.vo.usermanager.EmployeeVO;
import java.text.DateFormat;
import java.util.Locale;

public final class officemanager_005fatfunction_005fexport_005fht_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-logic.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.system.vo.usermanager.EmployeeVO");
    _jspx_imports_classes.add("java.util.Locale");
    _jspx_imports_classes.add("java.text.DateFormat");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fscope_005fname_005fid;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fscope_005fname_005fid = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fscope_005fname_005fid.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("application/vnd.ms-excel;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n<html>\r\n<head>\r\n    <title>导出</title>\r\n</head>\r\n<body>\r\n<table border=\"1\">\r\n    <tr>\r\n        <td align=\"center\"><b>姓名</b></td>\r\n        <td align=\"center\"><b>英文名</b></td>\r\n        <td align=\"center\"><b>生日</b></td>\r\n\r\n        <td align=\"center\"><b>性别</b></td>\r\n        <td align=\"center\"><b>籍贯</b></td>\r\n\r\n        <td align=\"center\"><b>政治面貌</b></td>\r\n        <td align=\"center\"><b>民族</b></td>\r\n        <td align=\"center\"><b>身份证号</b></td>\r\n        <td align=\"center\"><b>婚姻状况</b></td>\r\n        <td align=\"center\"><b>身高</b></td>\r\n        <td align=\"center\"><b>血型</b></td>\r\n        <td align=\"center\"><b>体重</b></td>\r\n        <td align=\"center\"><b>学历</b></td>\r\n        <td align=\"center\"><b>毕业学校</b></td>\r\n        <td align=\"center\"><b>所学专业</b></td>\r\n        <td align=\"center\"><b>毕业日期</b></td>\r\n        <td align=\"center\"><b>职称系列</b></td>\r\n        <td align=\"center\"><b>职称级别</b></td>\r\n        <td align=\"center\"><b>职称资格</b></td>\r\n        <td align=\"center\"><b>职称取得日期</b></td>\r\n        <td align=\"center\"><b>证书编号</b></td>\r\n");
      out.write("        <td align=\"center\"><b>现聘用职称</b></td>\r\n        <td align=\"center\"><b>其他任职资格</b></td>\r\n\r\n        <td align=\"center\"><b>入司日期</b></td>\r\n        <td align=\"center\"><b>入职介绍人</b></td>\r\n        <td align=\"center\"><b>单位</b></td>\r\n        <td align=\"center\"><b>工号</b></td>\r\n        <td align=\"center\"><b>人员类型</b></td>\r\n        <td align=\"center\"><b>岗位</b></td>\r\n        <td align=\"center\"><b>行政级别</b></td>\r\n        <td align=\"center\"><b>技术级别</b></td>\r\n        <td align=\"center\"><b>薪资等级</b></td>\r\n        <td align=\"center\"><b>离职日期</b></td>\r\n        <td align=\"center\"><b>合同签订日期</b></td>\r\n        <td align=\"center\"><b>合同截止日期</b></td>\r\n        <td align=\"center\"><b>保险代码</b></td>\r\n        <td align=\"center\"><b>参保日期</b></td>\r\n\r\n        <td align=\"center\"><b>手机</b></td>\r\n        <td align=\"center\"><b>住宅电话</b></td>\r\n        <td align=\"center\"><b>电子邮件1</b></td>\r\n        <td align=\"center\"><b>电子邮件2</b></td>\r\n        <td align=\"center\"><b>电子邮件3</b></td>\r\n        <td align=\"center\"><b>网页地址</b></td>\r\n        <td align=\"center\"><b>国家</b></td>\r\n");
      out.write("        <td align=\"center\"><b>省/市/自治区</b></td>\r\n        <td align=\"center\"><b>市、县</b></td>\r\n        <td align=\"center\"><b>邮编</b></td>\r\n        <td align=\"center\"><b>家庭住址</b></td>\r\n        <td align=\"center\"><b>兴趣爱好</b></td>\r\n        <td align=\"center\"><b>工作异动</b></td>\r\n        <td align=\"center\"><b>教育经历</b></td>\r\n        <td align=\"center\"><b>工作经历</b></td>\r\n        <td align=\"center\"><b>培训经历</b></td>\r\n        <td align=\"center\"><b>家庭成员</b></td>\r\n    </tr>\r\n    ");
EmployeeVO empVO = null;
    Object[] empObj = null;
    String orgName = "";
    DateFormat df = DateFormat.getDateInstance(DateFormat.LONG, Locale.CHINESE);
      out.write("\r\n    ");
      //  logic:iterate
      org.apache.struts.taglib.logic.IterateTag _jspx_th_logic_005fiterate_005f0 = (org.apache.struts.taglib.logic.IterateTag) _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fscope_005fname_005fid.get(org.apache.struts.taglib.logic.IterateTag.class);
      boolean _jspx_th_logic_005fiterate_005f0_reused = false;
      try {
        _jspx_th_logic_005fiterate_005f0.setPageContext(_jspx_page_context);
        _jspx_th_logic_005fiterate_005f0.setParent(null);
        // /office_manager/officemanager_atfunction_export_ht.jsp(76,4) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_logic_005fiterate_005f0.setId("empList");
        // /office_manager/officemanager_atfunction_export_ht.jsp(76,4) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_logic_005fiterate_005f0.setName("empList");
        // /office_manager/officemanager_atfunction_export_ht.jsp(76,4) name = scope type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_logic_005fiterate_005f0.setScope("request");
        int _jspx_eval_logic_005fiterate_005f0 = _jspx_th_logic_005fiterate_005f0.doStartTag();
        if (_jspx_eval_logic_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          java.lang.Object empList = null;
          if (_jspx_eval_logic_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_logic_005fiterate_005f0);
          }
          empList = (java.lang.Object) _jspx_page_context.findAttribute("empList");
          do {
            out.write("\r\n        ");

        empObj = (Object[]) empList;
        empVO = (EmployeeVO) empObj[0];
        orgName = empObj[1]==null?"&nbsp;":empObj[1].toString();
            out.write("\r\n        <tr>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpName()==null?"&nbsp;":empVO.getEmpName());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpEnglishName()==null?"&nbsp;":empVO.getEmpEnglishName());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpBirth()==null?"&nbsp;":df.format(empVO.getEmpBirth()));
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpSex()==0?"男":"女");
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpNativePlace()==null?"&nbsp;":empVO.getEmpNativePlace());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpPolity()==null?"&nbsp;":empVO.getEmpPolity());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpNation()==null?"&nbsp;":empVO.getEmpNation());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpIdCard() == 0?"&nbsp;":(empVO.getEmpIdCard()+""));
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpIsMarriage()==0?"未婚":"已婚");
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpHeight()==0?"&nbsp;":(empVO.getEmpHeight()+""));
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpBloodType()==null?"&nbsp;":empVO.getEmpBloodType());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpWeight() == 0?"&nbsp;":(empVO.getEmpWeight()+""));
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpStudyExperience() == null?"&nbsp;":empVO.getEmpStudyExperience());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpDegree() == null?"&nbsp;":empVO.getEmpDegree());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpBusinessPhone() == null?"&nbsp;":empVO.getEmpBusinessPhone());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getGraduateDate() == null?"&nbsp;":df.format(empVO.getGraduateDate()));
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getPostTitleSeries() == null?"&nbsp;":empVO.getPostTitleSeries());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getPostLevel() == null?"&nbsp;":empVO.getPostLevel());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getPostCompetence() == null?"&nbsp;":empVO.getPostCompetence());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getPostGainTime() == null?"&nbsp;":df.format(empVO.getPostGainTime()));
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getCertifyNumber() == null?"&nbsp;":empVO.getCertifyNumber());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getCurrentPostTitle() == null?"&nbsp;":empVO.getCurrentPostTitle());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getOtherPostTitle() == null?"&nbsp;":empVO.getOtherPostTitle());
            out.write("</td>\r\n\r\n            <td align=\"left\">");
            out.print(empVO.getIntoCompanyDate() == null?"&nbsp;":df.format(empVO.getIntoCompanyDate()));
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getIntroducer() == null?"&nbsp;":empVO.getIntroducer());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(orgName);
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpNumber() == null?"&nbsp;":empVO.getEmpNumber());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpBusinessFax() == null?"&nbsp;":empVO.getEmpBusinessFax());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpPosition() == null?"&nbsp;":empVO.getEmpPosition());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print((empVO.getEmpDuty() == null || empVO.getEmpDuty().equals("0"))?"&nbsp;":empVO.getEmpDuty());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getTecLevel() == null?"&nbsp;":empVO.getTecLevel());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getSalaryLevel() == null?"&nbsp;":empVO.getSalaryLevel());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpFireDate() == null?"&nbsp;":df.format(empVO.getEmpFireDate()));
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getWorkPackStartDate() == null?"&nbsp;":df.format(empVO.getWorkPackStartDate()));
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getWorkPackEndDate() == null?"&nbsp;":df.format(empVO.getWorkPackEndDate()));
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getInsuranceNumber() == null?"&nbsp;":empVO.getInsuranceNumber());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getInsureDate() == null?"&nbsp;":df.format(empVO.getInsureDate()));
            out.write("</td>\r\n\r\n            <td align=\"left\">");
            out.print(empVO.getEmpMobilePhone() == null?"&nbsp;":empVO.getEmpMobilePhone());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpPhone() == null?"&nbsp;":empVO.getEmpPhone());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpEmail() == null?"&nbsp;":empVO.getEmpEmail());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpEmail2() == null?"&nbsp;":empVO.getEmpEmail2());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpEmail3() == null?"&nbsp;":empVO.getEmpEmail3());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpWebAddress() == null?"&nbsp;":empVO.getEmpWebAddress());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpCountry() == null?"&nbsp;":empVO.getEmpCountry());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpState() == null?"&nbsp;":empVO.getEmpState());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpCounty() == null?"&nbsp;":empVO.getEmpCounty());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpZipCode() == null?"&nbsp;":empVO.getEmpZipCode());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpAddress() == null?"&nbsp;":empVO.getEmpAddress());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpInterest() == null?"&nbsp;":empVO.getEmpInterest());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpDescribe() == null?"&nbsp;":empVO.getEmpDescribe());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpEducationExperience() == null?"&nbsp;":empVO.getEmpEducationExperience());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpWorkExperience() == null?"&nbsp;":empVO.getEmpWorkExperience());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getEmpTrainExperience() == null?"&nbsp;":empVO.getEmpTrainExperience());
            out.write("</td>\r\n            <td align=\"left\">");
            out.print(empVO.getFamilyMember() == null?"&nbsp;":empVO.getFamilyMember());
            out.write("</td>\r\n        </tr>\r\n    ");
            int evalDoAfterBody = _jspx_th_logic_005fiterate_005f0.doAfterBody();
            empList = (java.lang.Object) _jspx_page_context.findAttribute("empList");
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_logic_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_logic_005fiterate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fscope_005fname_005fid.reuse(_jspx_th_logic_005fiterate_005f0);
        _jspx_th_logic_005fiterate_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_logic_005fiterate_005f0, _jsp_getInstanceManager(), _jspx_th_logic_005fiterate_005f0_reused);
      }
      out.write("\r\n</table>\r\n</body>\r\n</html>\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
