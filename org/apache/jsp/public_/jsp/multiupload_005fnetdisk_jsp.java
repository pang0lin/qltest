/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:57:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.public_.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.jsupload.upload.*;
import java.util.Map;
import java.sql.*;
import javax.sql.DataSource;
import com.js.oa.netdisk.service.*;
import java.util.*;
import com.js.lang.Resource;

public final class multiupload_005fnetdisk_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.jsupload.upload");
    _jspx_imports_packages.add("com.js.oa.netdisk.service");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.lang.Resource");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("javax.sql.DataSource");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");


Map map = (Map) session.getAttribute("ftpMap");

String local = session.getAttribute("org.apache.struts.action.LOCALE").toString();
String mode = (String) request.getParameter("mode");
String path = (String) request.getParameter("path");
String tableName = (String) request.getParameter("tableName");
String fileNames = (String) request.getParameter("fileName");
String saveNames = (String) request.getParameter("saveName");
String fileType = (String) request.getParameter("fileType");
String currenid ="0";
if(request.getParameter("currenid")!=null && !"null".equals(request.getParameter("currenid"))){
  currenid=request.getParameter("currenid");
}

String fileidstring ="";
if(request.getParameter("fileidstring")!=null && !"null".equals(request.getParameter("fileidstring"))){
  fileidstring=request.getParameter("fileidstring");
}
String fileCountLimit="0";
String fileSizeLimit="0";
String fileSizeLimitAll="110240000";
if(map != null && map.get("FileSizeLimitAll") != null){
    fileSizeLimitAll = map.get("FileSizeLimitAll").toString();
}

int fileNum;
int fileMaxSize;
if(request.getParameter("fileMaxNum")!=null && !"null".equals(request.getParameter("fileMaxNum"))){
	fileNum=Integer.parseInt(request.getParameter("fileMaxNum"));
}else{
	fileNum=0;
}

if(request.getParameter("fileMaxSize")!=null && !"null".equals(request.getParameter("fileMaxSize"))){
	fileMaxSize=Integer.parseInt(request.getParameter("fileMaxSize"));
}else{
	fileMaxSize=0;
}
if(fileNum>0){
	fileCountLimit="1"+fileNum;
}
if(fileMaxSize>0){
	fileSizeLimitAll="1"+fileMaxSize;
}

String saveName = "";
String fileName = "";
String fileSuffix = "";

if(fileType != null && !fileType.equals("")){
	if(fileType.indexOf(",") >= 0){
		fileType = fileType.replace(',', '|');
	}
	fileType = "1" + fileType;
}else{
	fileType = "2exe|jsp|asp|cmd|ocx|com|dll";
}

String typedo="";
if(request.getParameter("typedo")!=null){
  typedo=request.getParameter("typedo");
}
if("addnew".equals(typedo)){
   String myRandom=request.getParameter("myRandom");
   fileName=request.getParameter("fileName");
   fileSuffix=request.getParameter("fileSuffix");
   String file_size=request.getParameter("file_size");



   String[] myRandom_tmp=myRandom.split(",");
   String[] filename_tmp=fileName.split(",");
   String[] fileSuffix_tmp=fileSuffix.split(",");
   String[] file_size_tmp=file_size.split(",");


   try{
	       for(int i=0;i<myRandom_tmp.length;i++){

		     List list=new ArrayList();
			 list.add(myRandom_tmp[i]);
			 list.add(filename_tmp[i]);
             list.add(fileSuffix_tmp[i]);
			 list.add(session.getAttribute("userName").toString());
			 list.add(session.getAttribute("userId").toString());
			 list.add(currenid);
			 list.add(String.valueOf(file_size_tmp[i]));
			 list.add(session.getAttribute("userAccount").toString());
			 list.add(fileidstring);
			 list.add(session.getAttribute("domainId").toString());

			 NetdiskBD netdiskBD=new NetdiskBD();
			 boolean result=false;
			 result=netdiskBD.saveupload(list);
		   }
		   }catch(Exception e){
			   e.printStackTrace();
		   }
}

      out.write("\r\n<HTML>\r\n<HEAD>\r\n<TITLE>");
      out.print(Resource.getValue(local, "common", "comm.attupload"));
      out.write("</TITLE>\r\n</HEAD>\r\n<style type=\"text/css\">\r\n</style>\r\n<SCRIPT language=\"javascript\" src=\"/jsoa/js/openEndow.js\"></SCRIPT>\r\n<SCRIPT language=\"javascript\" src=\"/jsoa/js/public.js\"></SCRIPT>\r\n<script src=\"/jsoa/js/js.js\" language=\"javascript\"></script>\r\n<BODY  bgcolor=\"E8ECED\" onLoad=\"resizeWin(550,250);\">\r\n<br>\r\n<div align=\"center\">\r\n<P><font color=\"#3366CC\">");
      out.print(Resource.getValue(local, "common", "comm.seluploadfile"));
      out.write("</font></p>\r\n</div>\r\n<TABLE width=\"100%\" align=\"center\" border=0>\r\n\t<CENTER>\r\n\t<TR>\r\n\t\t<TD align=\"center\"><object\r\n\t\t\tclassid=\"clsid:89AF7F33-300E-4AFB-8DEA-D375FCE398B4\"\r\n\t\t\tid=\"ActiveFormX1\" width=\"407\" height=\"52\" codebase=\"P.cab#version=1,0,30,0\">\r\n\t\t\t<param name=\"filecountlimit\" value=\"");
      out.print(fileCountLimit);
      out.write("\">\r\n\t\t\t<param name=\"filesizelimit\" value=\"");
      out.print(fileSizeLimit);
      out.write("\">\r\n\t\t\t<param name=\"filesizelimitall\" value=\"");
      out.print(fileSizeLimitAll);
      out.write("\">\r\n\t\t\t<param name=\"filterext\" value=\"");
      out.print(fileType);
      out.write("\">\r\n\r\n\t\t\t<param name=\"Visible\" value=\"0\">\r\n\t\t\t<param name=\"AutoScroll\" value=\"0\">\r\n\t\t\t<param name=\"AutoSize\" value=\"0\">\r\n\t\t\t<param name=\"AxBorderStyle\" value=\"0\">\r\n\t\t\t<param name=\"Caption\" value=\"ActiveFormX\">\r\n\t\t\t<param name=\"Color\" value=\"15592680\">\r\n\t\t\t<param name=\"Font\" value=\"宋体\">\r\n\t\t\t<param name=\"KeyPreview\" value=\"0\">\r\n\t\t\t<param name=\"PixelsPerInch\" value=\"96\">\r\n\t\t\t<param name=\"PrintScale\" value=\"1\">\r\n\t\t\t<param name=\"Scaled\" value=\"0\">\r\n\t\t\t<param name=\"DropTarget\" value=\"0\">\r\n\t\t\t<param name=\"HelpFile\" value>\r\n\t\t\t<param name=\"DoubleBuffered\" value=\"0\">\r\n\t\t\t<param name=\"Enabled\" value=\"-1\">\r\n\t\t\t<param name=\"Cursor\" value=\"0\">\r\n\t\t\t<param name=\"ftphost\" value=\"");
      out.print(map.get("server"));
      out.write("\">\r\n\t\t\t<param name=\"ftpport\" value=\"");
      out.print(map.get("port"));
      out.write("\">\r\n\t\t\t<param name=\"ftpuser\" value=\"");
      out.print(map.get("user"));
      out.write("\">\r\n\t\t\t<param name=\"ftppwd\" value=\"");
      out.print(map.get("password"));
      out.write("\">\r\n\t\t\t<param name=\"ftpfile\" value=\"\">\r\n\t\t\t<param name=\"ftpupdfile\" value=\"\">\r\n\t\t\t<param name=\"dddd\" value=\"");
      out.print(map.get("ddd"));
      out.write("\">\r\n\t\t\t<param name=\"curpath\" value=\"");
      out.print(path);
      out.write("\">\r\n\t\t</object></TD>\r\n\t</TR>\r\n\t<form name=\"form1\" action=\"/jsoa/public/jsp/multiupload_netdisk.jsp\" method=\"post\">\r\n\t  <input type=\"hidden\" name=\"myRandom\">\r\n\t  <input type=\"hidden\" name=\"fileName\">\r\n\t  <input type=\"hidden\" name=\"fileSuffix\">\r\n\t  <input type=\"hidden\" name=\"file_size\">\r\n\t  <input type=\"hidden\" name=\"typedo\">\r\n\t  <input type=\"hidden\" name=\"currenid\" value=\"");
      out.print(currenid);
      out.write("\">\r\n\t  <input type=\"hidden\" name=\"fileidstring\" value=\"");
      out.print(fileidstring);
      out.write("\">\r\n\t</form>\r\n\t<TR>\r\n\t\t<TD align=\"center\">\r\n\t\t<INPUT NAME=\"button\" VALUE=\"");
      out.print(Resource.getValue(local, "common", "comm.upquit"));
      out.write("\" TYPE=\"button\" onclick=\"upload('1')\"  class=\"btnButton4Font\">\r\n\t\t<INPUT NAME=\"button\" VALUE=\"");
      out.print(Resource.getValue(local, "common", "comm.upcontinue"));
      out.write("\" TYPE=\"button\" onclick=\"upload('0')\"  class=\"btnButton4Font\">\r\n\t\t<INPUT NAME=\"reset\" class=\"btnButton2font\" VALUE=\"");
      out.print(Resource.getValue(local, "common", "comm.reset"));
      out.write("\" TYPE=\"reset\">\r\n\t\t<INPUT class=\"btnButton2font\" onclick=\"javascript:window.close();\" VALUE=\"");
      out.print(Resource.getValue(local, "common", "comm.exit"));
      out.write("\" TYPE=\"button\">\r\n\t\t</TD>\r\n\t</TR>\r\n\t<tr>\r\n\t\t<td>&nbsp;</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td align=\"center\"><input type=\"hidden\" name=\"fileRealName\" value=\"\"><input type=\"hidden\" name=\"allFileLimitedSize\" value=\"0\">\r\n\t\t<input type=\"hidden\" name=\"fileSaveName\" value=\"\"> <!--<img src=\"/jsoa/images/boder_left.gif\" hspace=\"5\" vspace=\"5\" id=\"preview\" >-->\r\n\t\t</td>\r\n\t</tr>\r\n\t</CENTER>\r\n</TABLE>\r\n</BODY>\r\n</HTML>\r\n<script language=\"javascript\">\r\nfunction upload(tag){\r\n\tvar fileSizeLimitAll=\"");
      out.print(fileSizeLimitAll);
      out.write("\";\r\n\tfileSizeLimitAll=fileSizeLimitAll.substring(1);\r\n\tvar oriSize=opener.window.document.all.allAttachSize.value;\r\n\tif(\"0\"==oriSize){\r\n\t\tdocument.all.allFileLimitedSize.value=fileSizeLimitAll;\r\n\t}else{\r\n\t\tdocument.all.allFileLimitedSize.value=(fileSizeLimitAll-oriSize);\r\n\t}\r\n\r\n\r\n\t//上传之前判断大小是否超过已经剩余的上传空间\r\n\tvar remainSpace=document.all.allFileLimitedSize.value;\r\n\r\n\t//本次上传的附件大小\r\n\tvar currentSize=0;\r\n\tvar thisAttachSizeTmp=document.ActiveFormX1.getfilesize();\r\n\tvar thisAttachArr;\r\n\tif(thisAttachSizeTmp.indexOf(\"|\")>=0){\r\n\t\tthisAttachArr=thisAttachSizeTmp.split(\"|\");\r\n\t\tfor(var i=0;i<thisAttachArr.length;i++){\r\n\t\t\tcurrentSize=(thisAttachArr[i]*1)+currentSize;\r\n\t\t}\r\n\t}else{\r\n\t\tcurrentSize=thisAttachSizeTmp;\r\n\t}\r\n\r\n\tif((remainSpace-currentSize)<0){\r\n\t\talert(\"");
      out.print(Resource.getValue(local, "common", "comm.uploadspacelack"));
      out.write("\");\r\n\t\twindow.close();\r\n\t\treturn;\r\n\t}\r\n    var tmpReturn = document.ActiveFormX1.startupload();\r\n\t//alert(tmpReturn);\r\n    if(tmpReturn==\"NOFILE\"){\r\n        \treturn;\r\n    }\r\n\t/*\r\n\t    tmpReturn的返回值有\r\n\t        LINKFAIL    ：连接失败\r\n\t\t\tNOFILE      :没有待上传文件\r\n\t\t\tOK          :上传完毕\r\n\t*/\r\n\tif(tmpReturn==\"OK\"){\r\n\t\twriteParentPage();\r\n\t\tgetReset();\r\n\t\tif(tag==1){\r\n\t\t\twindow.close();\r\n\t\t}\r\n\t var tableName = \"infoPicTable\";\r\n\t var fileName = \"infoPicName\";\r\n\t var saveName = \"infoPicSaveName\";\r\n\t var path = \"netdisk\";\r\n\t var fileMaxSize = \"100000000\";\r\n\t var fileMaxNum = \"10\";\r\n\t //var fileType = \"jpg,gif,png,bmp,sql,txt,doc,JPG,GIF,PNG,BMP,SQL,TXT,DOC\";\r\n\t var fileType =\"\";\r\n\t var fileMaxWidth = 0;\r\n\t var fileMaxHeight = 0;\r\n\t var fileMinWidth = 0;\r\n\t var fileMinHeight = 0;\r\n\t currenid=\"");
      out.print(request.getParameter("currenid"));
      out.write("\";\r\n\t fileidstring=\"");
      out.print(request.getParameter("fileidstring"));
      out.write("\"; window.location.href=\"/jsoa/public/jsp/multiupload_netdisk.jsp?path=\"+path+\"&fileName=\"+fileName+\"&saveName=\"+saveName+\"&tableName=\"+tableName+\"&fileMaxSize=\"+fileMaxSize+\"&fileMaxNum=\"+fileMaxNum+\"&fileType=\"+fileType+\"&fileMinHeight=\"+fileMinHeight+\"&fileMinWidth=\"+fileMinWidth+\"&fileMaxHeight=\"+fileMaxHeight+\"&fileMaxWidth=\"+fileMaxWidth+\"&currenid=\"+ currenid +\"&fileidstring=\"+ fileidstring +\"\";\r\n\t}else{\r\n\t\talert(\"");
      out.print(Resource.getValue(local, "common", "comm.uploadfail"));
      out.write("\");\r\n\t}\r\n\r\n}\r\n//重置\r\nfunction getReset(){\r\n    document.ActiveFormX1.setreset();\r\n}\r\n\r\n//取得原文件组\r\nfunction getOldfile(){\r\n    document.all.fileRealName.value=document.ActiveFormX1.getoldfile();\r\n}\r\n\r\n//取得目标文件组\r\nfunction getNewfile(){\r\n\tdocument.all.fileSaveName.value=document.ActiveFormX1.getnewfile();\r\n}\r\n\r\n//取得文件大小\r\nfunction getFileSize(){\r\n    alert(document.ActiveFormX1.getfilesize());\r\n}\r\n\r\n//删除文件\r\nfunction delFile(){\r\n\r\n\tvar tmpReturn=document.ActiveFormX1.delfile(document.all.delfileinput.value);\r\n    alert(tmpReturn);\r\n    /*\r\n\t    tmpReturn的返回值有\r\n\t        LINKFAIL    ：连接失败\r\n\t\t\tNOFILE      :没有待上传文件\r\n\t\t\tFAIL:424234234.gif|4565657.jpg     :表示424234234.gif,4565657.jpg不存在或删除失败\r\n\t\t\tOK          :删除完毕\r\n\t*/\r\n}\r\n\r\nfunction writeParentPage(){\r\n\tvar saveNameTmp=document.ActiveFormX1.getnewfile();\r\n\tvar fileNameTmp=document.ActiveFormX1.getoldfile();\r\n    //剩余空间大小\r\n\tvar allFileMaxSize=document.all.allFileLimitedSize.value;\r\n\r\n\t//已经上传的附件的大小\r\n\tvar oriAttachSize=opener.window.document.all.allAttachSize.value;\r\n\r\n\t//本次上传的附件的大小\r\n");
      out.write("\tvar thisAttachSize=0;\r\n\tvar thisAttachSizeTmp=document.ActiveFormX1.getfilesize();\r\n\tvar thisAttachArr;\r\n\tif(thisAttachSizeTmp.indexOf(\"|\")>=0){\r\n\t\tthisAttachArr=thisAttachSizeTmp.split(\"|\");\r\n\t\tfor(var i=0;i<thisAttachArr.length;i++){\r\n\t\t\tthisAttachSize=(thisAttachArr[i]*1)+thisAttachSize;\r\n\t\t}\r\n\t}else{\r\n\t\tthisAttachSize=thisAttachSizeTmp;\r\n\t}\r\n\r\n\toriAttachSize=(oriAttachSize*1)+(thisAttachSize*1);\r\n\topener.window.document.all.allAttachSize.value=oriAttachSize;\r\n\r\n\t//计算还可以上传多大的附件\r\n\tallFileMaxSize=allFileMaxSize-oriAttachSize;\r\n\tdocument.all.allFileLimitedSize.value=allFileMaxSize;\r\n\r\n\tvar temps=document.ActiveFormX1.getoldfile();\r\n\tvar tempnow=temps.split(\"|\");\r\n\tvar tempnew=\"\";\r\n\tvar tmp=\"\";\r\n\tvar finallytemp=\"\";\r\n\tfor(var i=0;i<tempnow.length;i++){\r\n\t\ttempnew=tempnow[i].split(\"\\\\\");\r\n\t\ttmp=tempnew[tempnew.length-1];\r\n\t\tfinallytemp+=tmp+\",\";\r\n\t}\r\n\r\n\tvar temprandom=document.ActiveFormX1.getnewfile();\r\n\tvar tempr=temprandom.split(\"|\");\r\n\tvar tmprandom=\"\";\r\n\tvar tmprandomfinal=\"\";\r\n\tvar tempfileSuffix=\"\";\r\n\tfor(var i=0;i<tempr.length;i++){\r\n");
      out.write("\t\ttmprandom=tempr[i].split(\".\");\r\n\t\ttmprandomfinal+=tmprandom[0]+\",\";\r\n\t\ttempfileSuffix+=tmprandom[1]+\",\";\r\n\t}\r\n\r\n\r\n\tvar filesize=document.ActiveFormX1.getfilesize();\r\n\tvar filesize_tmp=filesize.split(\"|\");\r\n\tvar finallfilesize=\"\";\r\n\tfor(var i=0;i<filesize_tmp.length;i++){\r\n\t  finallfilesize+=filesize_tmp[i]+\",\";\r\n\t}\r\n\r\n\tif(finallytemp.substring(finallytemp.length-1,finallytemp.length)==\",\"){\r\n\t  finallytemp=finallytemp.substring(0,finallytemp.length-1);\r\n\t}\r\n\tif(tmprandomfinal.substring(tmprandomfinal.length-1,tmprandomfinal.length)==\",\"){\r\n\t  tmprandomfinal=tmprandomfinal.substring(0,tmprandomfinal.length-1);\r\n\t}\r\n\tif(tempfileSuffix.substring(tempfileSuffix.length-1,tempfileSuffix.length)==\",\"){\r\n\t  tempfileSuffix=tempfileSuffix.substring(0,tempfileSuffix.length-1);\r\n\t}\r\n\tif(finallfilesize.substring(finallfilesize.length-1,finallfilesize.length)==\",\"){\r\n\t  finallfilesize=finallfilesize.substring(0,finallfilesize.length-1);\r\n\t}\r\n\r\n    document.all.myRandom.value=tmprandomfinal;\r\n    document.all.fileName.value=finallytemp;\r\n");
      out.write("\tdocument.all.fileSuffix.value=tempfileSuffix;\r\n\tdocument.all.file_size.value=finallfilesize;\r\n\tdocument.all.typedo.value=\"addnew\";\r\n\r\n\t//alert(document.all.myRandom.value);\r\n    //alert(document.all.fileName.value);\r\n\t//alert(document.all.fileSuffix.value);\r\n\t//alert(document.all.file_size.value);\r\n\tform1.submit();\r\n\talert(\"");
      out.print(Resource.getValue(local, "common", "comm.upsuccess"));
      out.write("\");\r\n\twindow.opener.location.reload();\r\n}\r\n\r\n    //-->\r\n</script>\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
