/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:50:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.setup;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.system.vo.rightmanager.SimpleRightVO;
import com.js.system.manager.service.ManagerService;
import java.util.*;
import java.util.Hashtable;
import java.util.ArrayList;
import java.util.Enumeration;
import com.js.util.util.BrowserJudge;

public final class getrights_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-nested.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-tiles.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-logic.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-html.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-template.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-bean.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Enumeration");
    _jspx_imports_classes.add("com.js.system.vo.rightmanager.SimpleRightVO");
    _jspx_imports_classes.add("com.js.util.util.BrowserJudge");
    _jspx_imports_classes.add("com.js.system.manager.service.ManagerService");
    _jspx_imports_classes.add("java.util.Hashtable");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fscope_005fname_005fid;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fscope_005fname_005fid = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fscope_005fname_005fid.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");
  response.setHeader("Cache-Control","no-store");
    response.setHeader("Pragma","no-cache");
    response.setDateHeader ("Expires", 0);

      out.write("\r\n<script language=\"javascript\" src=\"/jsoa/js/openEndow.js\"></script>\r\n");

boolean bflag=true;
if(BrowserJudge.isOtherBrowser(request))bflag=false;
String sysManager=session.getAttribute("sysManager").toString();
String managerScope=request.getParameter("managerScope");
Hashtable myHt = new Hashtable();
List rightTypeList=new ArrayList();
List rightClass =new ArrayList();


SimpleRightVO myRight=null;
ArrayList myList=null;
String[] rightClassAndType;

if(request.getAttribute("rightList")!=null){
	rightClass=(List)request.getAttribute("rightClass");
	

      out.write("\r\n\r\n");
      //  logic:iterate
      org.apache.struts.taglib.logic.IterateTag _jspx_th_logic_005fiterate_005f0 = (org.apache.struts.taglib.logic.IterateTag) _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fscope_005fname_005fid.get(org.apache.struts.taglib.logic.IterateTag.class);
      boolean _jspx_th_logic_005fiterate_005f0_reused = false;
      try {
        _jspx_th_logic_005fiterate_005f0.setPageContext(_jspx_page_context);
        _jspx_th_logic_005fiterate_005f0.setParent(null);
        // /setup/getrights.jsp(40,0) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_logic_005fiterate_005f0.setId("right");
        // /setup/getrights.jsp(40,0) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_logic_005fiterate_005f0.setName("rightList");
        // /setup/getrights.jsp(40,0) name = scope type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_logic_005fiterate_005f0.setScope("request");
        int _jspx_eval_logic_005fiterate_005f0 = _jspx_th_logic_005fiterate_005f0.doStartTag();
        if (_jspx_eval_logic_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          java.lang.Object right = null;
          if (_jspx_eval_logic_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_logic_005fiterate_005f0);
          }
          right = (java.lang.Object) _jspx_page_context.findAttribute("right");
          do {
            out.write('\r');
            out.write('\n');

    myRight=(SimpleRightVO)right;
    if(myHt.get(myRight.getRightType())==null){
        if(!rightTypeList.contains(myRight.getRightType())){
        	rightClassAndType=new String[]{myRight.getRightType(),myRight.getRightClass()};
            //rightTypeList.add(myRight.getRightType());
        	rightTypeList.add(rightClassAndType);
        }
    	myList=new ArrayList();
    	myList.add(myRight);
    	myHt.put(myRight.getRightType(),myList);
    }else{
        /*if(!rightTypeList.contains(myRight.getRightType())){
            rightTypeList.add(myRight.getRightType());
        }*/
        myList=(ArrayList)myHt.get(myRight.getRightType());
        myList.add(myRight);
        myHt.put(myRight.getRightType(),myList);
    }

            out.write('\r');
            out.write('\n');
            int evalDoAfterBody = _jspx_th_logic_005fiterate_005f0.doAfterBody();
            right = (java.lang.Object) _jspx_page_context.findAttribute("right");
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_logic_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_logic_005fiterate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fscope_005fname_005fid.reuse(_jspx_th_logic_005fiterate_005f0);
        _jspx_th_logic_005fiterate_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_logic_005fiterate_005f0, _jsp_getInstanceManager(), _jspx_th_logic_005fiterate_005f0_reused);
      }
      out.write('\r');
      out.write('\n');

}
String selectRange = "";
String tmp = "";
String tmpName = "";

String[] oldRightId = null;
String[] oldRightType = null;
String[] oldRightScope = null;
String[] oldRightScopeDsp=null;

if(request.getAttribute("oldRightId") != null){
    oldRightId = (String[]) request.getAttribute("oldRightId"); //已经选择的权限ID
    oldRightType = (String[]) request.getAttribute("oldRightType");//已经选择的权限类型
    oldRightScope = (String[]) request.getAttribute("oldRightScope");//如果是自定义则有选定的权限范围IDs
    oldRightScopeDsp=(String[]) request.getAttribute("oldRightScopeDsp");//如果是自定义则有选定的权限范围显示名称s
}

      out.write("\r\n<p id=\"rightsList\">\r\n<table width=\"100%\" align=\"left\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n<tr ");
if(rightClass.size()<=0){ 
      out.write("style=\"display:none\"");
} 
      out.write(">\r\n    <td class=\"inlineBottomLine\">\r\n        ");

        for(int i=0;i<rightClass.size();i++){
        	tmp=rightClass.get(i).toString();
        	if(i==0){
        		tmpName="btnBQselected AlignLeft";        		
        	}else{
        		tmpName="btnBQ AlignLeft";
        	}
        
      out.write("\r\n        <div id=\"Panel2");
      out.print(i );
      out.write("\" name=\"Panel2");
      out.print(i );
      out.write("\" onclick=\"changePanle2('");
      out.print(i );
      out.write("')\" class=\"");
      out.print(tmpName );
      out.write('"');
      out.write('>');
      out.print(tmp );
      out.write("</div>\r\n        <div class=\"btnBQspace AlignLeft\"></div>\r\n        ");
}
      out.write("\r\n       \r\n    </td>\r\n</tr>\r\n");

java.util.Enumeration myEnum=myHt.keys();
int num1=0;
int num2=0;
int num3=0;
int classNum=-1;

StringBuffer selectAllStr;
boolean rowBegin=false;//标志每个权限要选择的第一个范围
boolean selectUser;
boolean showAll;
String myRightId;
String key,className,oldClassName="",rightCode,rightSelectType;
for(int typeNum=0;typeNum<rightTypeList.size();typeNum++){
    //key=(String)rightTypeList.get(typeNum);
    rightClassAndType=(String[])rightTypeList.get(typeNum);
    key=rightClassAndType[0];
    className=rightClassAndType[1];
    if(!oldClassName.equals(className)){
    	oldClassName=className;
    	//开始一个新的分类，若不是第一个分类则应打印表格结束标签 </table>
    	classNum++;
    	if(classNum>0){
    		out.println("</table></td></tr>");
    	}
    	out.print("<tr><td><table id=\"RightTable_"+classNum+"\" width=\"100%\" border=\"0\" align=\"left\" class=\"docBoxInnerPage\"");
    	if(classNum==0){
    		out.print(" style=\"display:\">");
    	}else{
    		out.print(" style=\"display:none\">");
    	}
    	
    }
    
    
    out.println("<tr><td nowrap><a style=\"cursor:pointer\" onclick=\"javascript:showRights("+num1+");\"><img src=\"/jsoa/images/tree_add.gif\">"+key+"</a></td></tr>");

    myList=(ArrayList)myHt.get(key);
    out.println("<tr><td><table id=\"showRight"+num1+"\" border=0>");
    for(int i=0;i<myList.size();i++){
        myRight=(SimpleRightVO)myList.get(i);        
        myRightId=myRight.getRightId().toString();
        rightCode=myRight.getRightCode();
        
        //显示权限类型名称及可选的权限类型
        out.println("<tr>");        
        out.println("<td width=\"75\" nowrap height=\"26\">&nbsp;&nbsp;"+myRight.getRightName());
        out.println("<input type=\"hidden\" name=\"rightId"+num2+"\" value=\""+myRightId+"\">");
        out.println("</td>");
        
        selectRange=myRight.getRightSelectRange();
        if(myRight.getRightHasScope()!=0){
        	//遍历已经选择过的权限，记录权限范围类型
        	rightSelectType="";
        	if(oldRightId != null){
                for( int j = 0; j < oldRightId.length; j ++){
                    if(oldRightId[j].equals(myRightId)){
                    	rightSelectType=oldRightType[j];
                        break;
                     }
                 }
            }
        	if(rightSelectType.equals("")){
        		rightSelectType="2";        		
        	}
        	
            selectUser=false;
            if(myRight.getRightHasScope()==2) selectUser=true;
            num3=0;
            //如果有权限范围
            String widths="60%";if(!bflag)widths="370";
            out.println("<td width=\""+widths+"\">");
            out.println("<input type=\"hidden\" name=\"rightId"+num2+"Scope"+num3+"\" value=\""+myRightId+"\">");
            rowBegin=false;
            if(selectRange.charAt(1)=='1'){
                //可以选择范围 "本人"
                out.println("<input type=\"radio\" name=\"rightScopeType"+num2+"\" value=\"1\"  ");
                
                if("1".equals(rightSelectType)){
                	out.println("checked");
                	rowBegin=true;
                }
                out.println("onclick=\"javascript:showRightScope(this,"+num2+");\">本人");
            }
            if(selectRange.charAt(3)=='1'){
                //可以选择范围 "本组织"                
                out.println("<input type=\"radio\" name=\"rightScopeType"+num2+"\" value=\"3\" ");
                
                if("3".equals(rightSelectType)){
                	out.println("checked");
                	rowBegin=true;
                }
                out.println(" onclick=\"javascript:showRightScope(this,"+num2+");\">本部门");
            }
            if(selectRange.charAt(2)=='1'){
                //可以选择范围 "本组织及下级组织"               
                out.println("<input type=\"radio\" name=\"rightScopeType"+num2+"\" value=\"2\" ");
                
                if("2".equals(rightSelectType)){
                	out.println("checked");
                }
               
                out.println(" onclick=\"javascript:showRightScope(this,"+num2+");\">本部门及下属部门");
            }
            if(selectRange.charAt(0)=='1'){
                //可以选择范围 "全部"
                showAll=false;
                selectAllStr=new StringBuffer();                
                selectAllStr.append("<input type=\"radio\" name=\"rightScopeType").append(num2).append("\" value=\"0\" ");
                                 
                if("0".equals(rightSelectType)){
                	selectAllStr.append("checked");
                 	showAll=true;
                }
                selectAllStr.append(" onclick=\"javascript:showRightScope(this,").append(num2).append(");\">全单位");
                if("1".equals(sysManager) || showAll){
                    out.println(selectAllStr.toString());
                }
                
            }
            boolean style = false;
            if(selectRange.charAt(4)=='1'){
                //可以选择范围 "自定义"                
                out.println("<input type=\"radio\" name=\"rightScopeType"+num2+"\" value=\"4\" ");                
                tmp="";
                tmpName="";
                if(oldRightId != null){
                    for( int j = 0; j < oldRightId.length; j ++){
                        if(oldRightId[j].equals(myRightId)){
                            if(oldRightType[j].equals("4")){
                                tmp = ((String) oldRightScope[j]).trim();
                                tmpName=((String)oldRightScopeDsp[j]).trim();
                                if(tmp==null) tmp="";
                                if(tmpName==null) tmpName="";
                                out.println("checked");
                                style = true;
                                break;
                            }
                        }
                    }
                }
                
                out.println(" onclick=\"javascript:showRightScope(this,"+num2+");\">指定范围");
                out.println("</td>");
            }
            if(selectRange.charAt(4)=='1'){
                out.println("<td id=\"showRightScope"+num2+"\" ");
                if(!style){
                    out.print(" style=\"display:none\" ");
                }
                out.print(">&nbsp;&nbsp;");
                out.println("<input type=\"text\" class=\"inputText\" name=\"rightScopeScopeDsp"+num2+"\" size=\"30\" id=\"rightScopeScopeDsp"+num2+"\" value='"+tmpName+"' title=\"请点击选择\" readonly onclick=\"javascript:selectEndowSC('rightScopeScope"+num2+"','rightScopeScopeDsp"+num2+"','org','','org','"+managerScope+"','yes');\">");
                
                out.println("<input type='hidden' name='rightScopeScope"+num2+"' id='rightScopeScope"+num2+"' value='"+tmp+"'>");
                out.println("<input type='hidden' name='rightdes"+num2+"' id='rightdes"+num2+"' value='"+key+myRight.getRightName()+"'>");
                out.println("</td>");
            }
            num3++;
        }
        //显示完一个权限分类 一行结束了
        out.println("<td>&nbsp;</td>");
        out.println("</tr>");
        num2++;
    }
    num1++;
    out.println("</table></td></tr>");
}
if(classNum>-1){
	out.println("</table></td></tr>");
}

      out.write("\r\n</table>\r\n<span id=\"num2count\" style=\"display:none\">");
      out.print(num2);
      out.write("</span>  \r\n</p>\r\n<script language=\"javascript\">\r\nparent.document.all.rightsList.innerHTML=document.all.rightsList.innerHTML;\r\nparent.document.all.oprTR.style.display='';\r\n</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
