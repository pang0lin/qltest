/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:57:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.public_.edit8._005fexample;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class dlg_005fupload_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n<html>\r\n<head>\r\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=EmulateIE7\">\r\n<title>eWebEditor ： 输入框调用上传文件对话框示例</title>\r\n<meta http-equiv=Content-Type content=\"text/html; charset=GBK\">\r\n<link rel='stylesheet' type='text/css' href='example.css'>\r\n</head>\r\n<body>\r\n\r\n<p><b>导航 ： <a href=\"default.jsp\">示例首页</a> &gt; 输入框调用上传文件对话框示例</b></p>\r\n<p>通过使用这个功能，您可以在任意的输入框中调用编辑器自带的上传文件功能，上传文件和浏览服务器上原已上传的文件，并返回输入框上传文件的路径文件名。您可以在一个网页的任意多个地方调用，支持分类型上传及缩略图调用，并可在编辑器后台设置。一行调用代码，即可为您的网站加入上传文件功能。</p>\r\n<p>点击下面的“上传”按钮，看一下效果，不同的按钮允许上传的文件类型及文件大小不同。</p>\r\n\r\n\r\n<!-- 第一步：引用接口js文件 -->\r\n<script type=\"text/javascript\" src=\"../ewebeditor.js\"></script>\r\n\r\n\r\n<script type=\"text/javascript\">\r\n\r\n//第二步：创建一个编辑器实例，由于本例只用于上传接口，所以此处是隐藏的。如此页已经有了可以不用创建，使用现成的即可。\r\n//以下\"coolblue\",值可以依据实际需要修改为您的样式名,通过此样式的后台设置来达到控制允许上传文件类型及文件大小\r\nEWEBEDITOR.Create(\"eWebEditor1\", {style:\"coolblue\",display:\"none\",width:\"0\",height:\"0\"});\r\n\r\n\r\n//第三步：调用接口方法打开上传对话框\r\n/*\r\nopenUploadDialog 方法\r\n参数说明： \r\ntype: 上传文件类型，可用值为\"image\",\"flash\",\"media\",\"file\"\r\n\timage: 图片\r\n\tmedia: 媒体\r\n\tflash: Flash\r\n");
      out.write("\tfile: 附件\r\n\r\nmode: 上传接口对话框模式\r\n\t0:常规模式\r\n\t1:常规设置+单文件上传\r\n\t2:常规设置+多文件上传(默认)\r\n\r\nsavepathfilename : 文件上传后，用于接收上传文件路径文件名的表单名，返回包含路径的文件名\r\nsavefilename     : 返回上传文件的文件名\r\noriginalfilename : 返回原文件名\r\n\r\nreturnflag : 返回值方式标志\r\n\t1: 输入框始终只有最后一次上传的文件名\r\n\t2: (默认)支持多个文件，多个上传或多次操作后，输入框中保留多个文件，多个文件如“|”分隔。\r\n*/\r\n\r\n\r\nfunction DoClickUpload(s_Flag){\r\n\tvar editor = EWEBEDITOR.Instances[\"eWebEditor1\"];\r\n\tif (!editor){\r\n\t\treturn;\r\n\t}\r\n\r\n\tswitch(s_Flag){\r\n\tcase 'image':\r\n\t\teditor.openUploadDialog({\r\n\t\t\ttype : 'image',\r\n\t\t\tmode : '2',\r\n\t\t\tsavepathfilename : 'd_image_savepath',\r\n\t\t\tsavefilename : 'd_image_savefile',\r\n\t\t\toriginalfilename : 'd_image_original',\r\n\t\t\treturnflag : '2'\r\n\t\t});\r\n\t\tbreak;\r\n\tcase 'flash':\r\n\t\teditor.openUploadDialog({\r\n\t\t\ttype : 'flash',\r\n\t\t\tmode : '2',\r\n\t\t\tsavepathfilename : 'd_flash_savepath',\r\n\t\t\tsavefilename : 'd_flash_savefile',\r\n\t\t\toriginalfilename : 'd_flash_original',\r\n\t\t\treturnflag : '2'\r\n\t\t});\r\n\t\tbreak;\r\n\tcase 'media':\r\n\t\teditor.openUploadDialog({\r\n\t\t\ttype : 'media',\r\n\t\t\tmode : '2',\r\n\t\t\tsavepathfilename : 'd_media_savepath',\r\n");
      out.write("\t\t\tsavefilename : 'd_media_savefile',\r\n\t\t\toriginalfilename : 'd_media_original',\r\n\t\t\treturnflag : '2'\r\n\t\t});\r\n\t\tbreak;\r\n\tcase 'file':\r\n\t\teditor.openUploadDialog({\r\n\t\t\ttype : 'file',\r\n\t\t\tmode : '2',\r\n\t\t\tsavepathfilename : 'd_file_savepath',\r\n\t\t\tsavefilename : 'd_file_savefile',\r\n\t\t\toriginalfilename : 'd_file_original',\r\n\t\t\treturnflag : '2'\r\n\t\t});\r\n\t\tbreak;\r\n\t}\r\n\r\n}\r\n\r\n</script>\r\n\r\n\r\n<form method=\"post\" name=\"myform\" action=\"\">\r\n\r\n1. 此示例允许上传图片类型文件：<br>\r\n上传文件：<input type=\"text\" id=\"d_image_savepath\" size=\"50\"> \r\n保存文件名：<input type=\"text\" id=\"d_image_savefile\" size=\"20\"> \r\n源文件名：<input type=\"text\" id=\"d_image_original\" size=\"20\"> \r\n<input type=\"button\" value=\"上传图片...\" onclick=\"DoClickUpload('image')\">\r\n<br><br>\r\n\r\n2. 此示例允许上传Flash类型文件：<br>\r\n上传文件：<input type=\"text\" id=\"d_flash_savepath\" size=\"50\"> \r\n保存文件名：<input type=\"text\" id=\"d_flash_savefile\" size=\"20\"> \r\n源文件名：<input type=\"text\" id=\"d_flash_original\" size=\"20\"> \r\n<input type=\"button\" value=\"上传Flash...\" onclick=\"DoClickUpload('flash')\">\r\n<br><br>\r\n\r\n3. 此示例允许上传媒体类型文件：<br>\r\n");
      out.write("上传文件：<input type=\"text\" id=\"d_media_savepath\" size=\"50\"> \r\n保存文件名：<input type=\"text\" id=\"d_media_savefile\" size=\"20\"> \r\n源文件名：<input type=\"text\" id=\"d_media_original\" size=\"20\"> \r\n<input type=\"button\" value=\"上传媒体...\" onclick=\"DoClickUpload('media')\">\r\n<br><br>\r\n\r\n4. 此示例允许上传附件类型文件：<br>\r\n上传文件：<input type=\"text\" id=\"d_file_savepath\" size=\"50\"> \r\n保存文件名：<input type=\"text\" id=\"d_file_savefile\" size=\"20\"> \r\n源文件名：<input type=\"text\" id=\"d_file_original\" size=\"20\"> \r\n<input type=\"button\" value=\"上传文件...\" onclick=\"DoClickUpload('file')\">\r\n<br><br>\r\n\r\n<input type=button value=\"查看源文件\" onclick=\"location.replace('view-source:'+location)\"> \r\n\r\n</form>\r\n\r\n</body>\r\n</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
