/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:46:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.wap2.workitem;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.text.SimpleDateFormat;
import com.js.wap.util.WapUtil;
import com.js.wap.bean.WorkDealWithBean;

public final class item_005fselect_005femp_005fsearch_005f3g_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.wap.bean.WorkDealWithBean");
    _jspx_imports_classes.add("com.js.wap.util.WapUtil");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n");
 
request.setCharacterEncoding("UTF-8");

String app=request.getContextPath();

String include_comment = request.getParameter("include_comment");
String searchValue=request.getParameter("searchValue");

String workId=request.getParameter("workId");
String tableId=request.getParameter("tableId");
String recordId=request.getParameter("recordId");
String workType=request.getParameter("workType");
String processId=request.getParameter("processId");
String processName=request.getParameter("processName");
String curActivityId=request.getParameter("curActivityId");

String curActivityName=request.getParameter("curActivityName");
String submitPerson=request.getParameter("submitPerson");
String submitPersonId=request.getParameter("submitPersonId");
String stepCount=request.getParameter("stepCount");
String remindField=request.getParameter("remindField");
String isStandForWork=request.getParameter("isStandForWork");
String standForUserId=request.getParameter("standForUserId");
String standForUserName=request.getParameter("standForUserName");
String mainLinkFile=request.getParameter("mainLinkFile");
String titleFieldName=request.getParameter("titleFieldName");

String msgFrom=request.getParameter("msgFrom");
String inWorkType=request.getParameter("inWorkType");
String submitTime=request.getParameter("submitTime");
String submitPersonTime=request.getParameter("submitPersonTime");
String initActivity=request.getParameter("initActivity");

String isSend=request.getParameter("isSend");
String fromdesktop=request.getParameter("fromdesktop");
String operName=request.getParameter("operName");
String operId=request.getParameter("operId");
String mainUserType=request.getParameter("mainUserType");
String mainAllowStandFor=request.getParameter("mainAllowStandFor");
String mainAllowCancel=request.getParameter("mainAllowCancel");
String mainAllowTransition=request.getParameter("mainAllowTransition");

String mainPressType=request.getParameter("mainPressType");
String mainDeadLineTime=request.getParameter("mainDeadLineTime");
String mainPressMotionTime=request.getParameter("mainPressMotionTime");
String mainNextActivityId=request.getParameter("mainNextActivityId");
String mainNextActivityName=request.getParameter("mainNextActivityName");
String emergence=request.getParameter("emergence");
String needSendMsg=request.getParameter("needSendMsg");
String smsContent=request.getParameter("smsContent");
String dealTips=request.getParameter("dealTips");
String processDeadlineDate=request.getParameter("processDeadlineDate");

String mainNeedPassRound=request.getParameter("mainNeedPassRound");
String mainPassRoundUserType=request.getParameter("mainPassRoundUserType");
String passRoundId=request.getParameter("passRoundId");
String passRoundName=request.getParameter("passRoundName");
String subProcTempWorkId=request.getParameter("subProcTempWorkId");

String pressUserId=request.getParameter("pressUserId");
String pressUserName=request.getParameter("pressUserName");
String pressTitle=request.getParameter("pressTitle");
String pressContent=request.getParameter("pressContent");
String pressSMS=request.getParameter("pressSMS");

String feedUserId=request.getParameter("feedUserId");
String feedUserName=request.getParameter("feedUserName");
String feedTitle=request.getParameter("feedTitle");
String feedContent=request.getParameter("feedContent");

String transitionUser=request.getParameter("transitionUser");
String transitionUserName=request.getParameter("transitionUserName");
String tranType=request.getParameter("tranType");
String tranFromPersonId=request.getParameter("tranFromPersonId");

String receiveActivityId=request.getParameter("receiveActivityId");
String receiveActivityName=request.getParameter("receiveActivityName");
String receiveUserName=request.getParameter("receiveUserName");

String passLinkFile=request.getParameter("passLinkFile");
String approveMode=request.getParameter("approveMode");

String activityClass=request.getParameter("activityClass");
String curCommField=request.getParameter("include_commField");
String opinionMust=request.getParameter("opinionMust");
String actiCommFieldType=request.getParameter("actiCommFieldType"); //当前节点的批示意见类型

String fromParent=request.getParameter("fromParent");

com.js.oa.jsflow.service.WorkFlowButtonBD workFlowButtonBD = new com.js.oa.jsflow.service.WorkFlowButtonBD();
com.js.oa.jsflow.service.WorkFlowBD workFlowBD = new com.js.oa.jsflow.service.WorkFlowBD();
com.js.oa.jsflow.vo.WorkVO vo = new com.js.oa.jsflow.vo.WorkVO();

//节点办理方式
String activityId=request.getParameter("nextActivity");

WorkDealWithBean bean=new WorkDealWithBean();
List userList=bean.searchUserList(searchValue);


      out.write("\r\n<HTML xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<HEAD>\r\n<TITLE>选择执行人</TITLE>\r\n<META content=\"text/html; charset=UTF-8\" http-equiv=Content-Type>\r\n<META name=viewport content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;\">\r\n<META name=apple-touch-fullscreen content=YES>\r\n<META name=apple-mobile-web-app-capable content=no>\r\n<LINK rel=apple-touch-icon href=\"");
      out.print(app );
      out.write("/wap2/images/iphone.jpg\">\r\n<LINK rel=stylesheet type=text/css href=\"");
      out.print(app );
      out.write("/wap2/css/main_3g.css\">\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(app );
      out.write("/wap2/js/cookie.js\"></SCRIPT>\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(app );
      out.write("/wap2/js/util.js\"></SCRIPT>\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(app );
      out.write("/wap2/js/frost.js\"></SCRIPT>\r\n<META name=GENERATOR content=\"MSHTML 8.00.6001.19154\">\r\n</head>\r\n<BODY>\r\n\t<div class=\"main\">\r\n\t\t<div id=\"top\">\r\n\t\t\t<span id=\"lp2\"><div class=\"btn_3\"><a href=\"");
      out.print(app );
      out.write("/wap2/workitem/item_info_3g.jsp?workId=");
      out.print(workId );
      out.write("&status=0\">返回</a></div></span>\r\n\t\t\t<span id=\"title2\"></span>\r\n\t\t</div>\r\n<br/>\r\n<form name=\"frm\" action=\"\" method=\"post\">\t\r\n\t<input type=\"hidden\" name=\"operName\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"operId\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"participantType\" value=\"\"/>\t\r\n\t\t\r\n\t<input type=\"hidden\" name=\"include_comment\" value=\"");
      out.print(include_comment );
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"opinionMust\" value=\"");
      out.print(opinionMust);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"actiCommFieldType\" value=\"");
      out.print(actiCommFieldType);
      out.write("\"/>\r\n\t\r\n\t<input type=\"hidden\" name=\"workId\" value=\"");
      out.print(workId);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"tableId\" value=\"");
      out.print(tableId);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"recordId\" value=\"");
      out.print(recordId);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"workType\" value=\"");
      out.print(workType);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"processId\" value=\"");
      out.print(processId);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"processName\" value=\"");
      out.print(processName);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"curActivityId\" value=\"");
      out.print(curActivityId);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"curActivityName\" value=\"");
      out.print(curActivityName);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"submitPerson\" value=\"");
      out.print(submitPerson);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"submitPersonId\" value=\"");
      out.print(submitPersonId);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"stepCount\" value=\"");
      out.print(stepCount);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"remindField\" value=\"");
      out.print(remindField);
      out.write("\"/>\t\r\n\t<input type=\"hidden\" name=\"isStandForWork\" value=\"");
      out.print(isStandForWork);
      out.write("\"/>\t\r\n\t<input type=\"hidden\" name=\"standForUserId\" value=\"");
      out.print(standForUserId);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"standForUserName\" value=\"");
      out.print(standForUserName);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"mainLinkFile\" value=\"");
      out.print(mainLinkFile);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"titleFieldName\" value=\"");
      out.print(titleFieldName);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"msgFrom\" value=\"");
      out.print(msgFrom);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"inWorkType\" value=\"");
      out.print(inWorkType);
      out.write("\"/>\t\t\t\r\n\t<input type=\"hidden\" name=\"submitTime\" value=\"");
      out.print(submitTime);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"submitPersonTime\" value=\"");
      out.print(submitPersonTime);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"initActivity\" value=\"");
      out.print(initActivity);
      out.write("\"/>\r\n\t\r\n\t<!-- 新增表单域 -->\r\n\t<input type=\"hidden\" name=\"isSend\" value=\"");
      out.print(isSend);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"fromdesktop\" value=\"");
      out.print(fromdesktop);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"operName\" value=\"");
      out.print(operName);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"operId\" value=\"");
      out.print(operId);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"mainUserType\" value=\"");
      out.print(mainUserType);
      out.write("\"/><!--参与人类型-->\r\n\t<input type=\"hidden\" name=\"mainAllowStandFor\" value=\"");
      out.print(mainAllowStandFor);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"mainAllowCancel\" value=\"");
      out.print(mainAllowCancel);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"mainAllowTransition\" value=\"");
      out.print(mainAllowTransition);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"mainPressType\" value=\"");
      out.print(mainPressType);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"mainDeadLineTime\" value=\"");
      out.print(mainDeadLineTime);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"mainPressMotionTime\" value=\"");
      out.print(mainPressMotionTime);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"mainNextActivityId\" value=\"");
      out.print(mainNextActivityId);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"mainNextActivityName\" value=\"");
      out.print(mainNextActivityName);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"emergence\" value=\"");
      out.print(emergence);
      out.write("\"/><!--缓急程度-->\r\n\t<input type=\"hidden\" name=\"needSendMsg\" value=\"");
      out.print(needSendMsg);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"smsContent\" value=\"");
      out.print(smsContent);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"dealTips\" value=\"");
      out.print(dealTips);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"processDeadlineDate\" value=\"");
      out.print(processDeadlineDate);
      out.write("\"/>\r\n\t\r\n\t<!--阅件参数-->\r\n\t<input type=\"hidden\" name=\"mainNeedPassRound\" value=\"");
      out.print(mainNeedPassRound);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"mainPassRoundUserType\" value=\"");
      out.print(mainPassRoundUserType);
      out.write("\"/><!--阅件人类型-->\r\n\t<input type=\"hidden\" name=\"passRoundId\" value=\"");
      out.print(passRoundId);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"passRoundName\" value=\"");
      out.print(passRoundName);
      out.write("\"/>\r\n\r\n\t<!--子流程临时workID-->\r\n\t<input type=\"hidden\" name=\"subProcTempWorkId\" value=\"");
      out.print(subProcTempWorkId);
      out.write("\"/>\r\n\t\r\n\t<!--催办-->\r\n\t<input type=\"hidden\" name=\"pressUserId\" value=\"");
      out.print(pressUserId);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"pressUserName\" value=\"");
      out.print(pressUserName);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"pressTitle\" value=\"");
      out.print(pressTitle);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"pressContent\" value=\"");
      out.print(pressContent);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"pressSMS\" value=\"");
      out.print(pressSMS);
      out.write("\"/>\r\n\t\r\n\t<!--反馈-->\r\n\t<input type=\"hidden\" name=\"feedUserId\" value=\"");
      out.print(feedUserId);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"feedUserName\" value=\"");
      out.print(feedUserName);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"feedTitle\" value=\"");
      out.print(feedTitle);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"feedContent\" value=\"");
      out.print(feedContent);
      out.write("\"/>\r\n\t\r\n\t<!--转办-->\r\n\t<input type=\"hidden\" name=\"transitionUser\" value=\"");
      out.print(transitionUser);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"transitionUserName\" value=\"");
      out.print(transitionUserName);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"tranType\" value=\"");
      out.print(tranType);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"tranFromPersonId\" value=\"");
      out.print(tranFromPersonId);
      out.write("\"/>\r\n\t\r\n\t<!--收回-->\r\n\t<input type=\"hidden\" name=\"receiveActivityId\" value=\"");
      out.print(receiveActivityId);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"receiveActivityName\" value=\"");
      out.print(receiveActivityName);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"receiveUserName\" value=\"");
      out.print(receiveUserName);
      out.write("\"/>\r\n\t\r\n\t<!--阅件-->\r\n\t<input type=\"hidden\" name=\"passLinkFile\" value=\"");
      out.print(passLinkFile);
      out.write("\"/>\r\n\t\r\n\t<!--当前节点办理方式 默认 1为多人并行-->\r\n\t<input type=\"hidden\" name=\"approveMode\" value=\"");
      out.print(approveMode);
      out.write("\"/>\t\r\n\t<input type=\"hidden\" name=\"activityClass\" value=\"");
      out.print(activityClass);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"include_commField\" value=\"");
      out.print(curCommField);
      out.write("\">\r\n\t\r\n\t<div class=\"f_1\">选择办理人</div>\r\n    <div class=\"box_2\">\r\n    \t<div class=\"list_2\">\r\n\t\t\t\t<div class=\"t1\"> 办理人:</div>\r\n\t\t\t\t<div class=\"t2\">\r\n\t\t\t\t<select name=\"newSelectedOper\">\r\n\t\t\t\t");

				String tempId,tempName;
				Object[] obj;
				for(int i=0;i<userList.size();i++){
					obj=(Object[])userList.get(i);
					tempId=obj[0]+","+obj[1];
					
      out.write("\r\n\t\t\t\t\r\n\t\t\t\t<option value=\"");
      out.print(tempId );
      out.write('"');
      out.write('>');
      out.print(obj[1] );
      out.write("</option>\r\n\t\t\t\t");

				} 
				
      out.write("\r\n\t\t\t</select>\r\n\t\t\t&nbsp;&nbsp;&nbsp;<input type=\"button\"  style=\"cursor:pointer\" onclick=\"javascript:submitForm();\"value=\"确定\"/>\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"clear\"></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t<div class=\"height1\"></div>\r\n</form>\r\n</div>\r\n</BODY>\r\n</HTML>\r\n<script>\r\nfunction submitForm(){\r\n\t");
if("trans".equals(fromParent)){
      out.write("\r\n\tdocument.frm.action=\"");
      out.print(app);
      out.write("/wap2/workitem/item_trans_selectemp.jsp?fromSelUser=1&status=0\";\r\n\t");
}else{
      out.write("\r\n\tdocument.frm.action=\"");
      out.print(app);
      out.write("/wap2/workitem/item_select_act_3g.jsp?fromSelUser=1&status=0\";\r\n\t");
}
      out.write("\r\n\t\r\n\tdocument.frm.submit();\r\n}\r\n</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
