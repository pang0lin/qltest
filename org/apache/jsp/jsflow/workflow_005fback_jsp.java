/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:06:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsflow;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class workflow_005fback_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

//处理流程退回
String comment = request.getParameter("include_comment") + "&nbsp;&nbsp;（退回）";//办理意见
String curActivityId = request.getParameter("curActivityId");//当前节点ID
String curActivityName = request.getParameter("curActivityName");
String tableId = request.getParameter("tableId");//数据表
String recordId = request.getParameter("recordId");//数据记录ID
String workId = request.getParameter("workId");//workId
String submitPerson = request.getParameter("submitPerson");//发起人
String stepCount = request.getParameter("stepCount");//步骤数
String userId = session.getAttribute("userId") + "";
String userName = session.getAttribute("userName") + "";

//插入办理意见
com.js.oa.jsflow.service.WorkFlowCommonBD wfcBD = new com.js.oa.jsflow.service.WorkFlowCommonBD();
java.util.Map dealwithMap = new java.util.HashMap();
dealwithMap.put("tableId", tableId);
dealwithMap.put("recordId", recordId);
dealwithMap.put("curActivityName", curActivityName);
dealwithMap.put("curActivityId", curActivityId);
dealwithMap.put("userId", userId);
dealwithMap.put("comment", comment);
dealwithMap.put("nextActivityName", "");
dealwithMap.put("nextActivityId", "0");
dealwithMap.put("stepCount", stepCount);
dealwithMap.put("isStandForWork", request.getParameter("isStandForWork"));
dealwithMap.put("standForUserId", request.getParameter("standForUserId"));
if(request.getParameter("include_commField") != null){
    dealwithMap.put("commentField", request.getParameter("include_commField"));
}
wfcBD.insertDealWith(dealwithMap);

if("0".equals(request.getParameter("type"))){
    //退回发起人
    java.util.Map para = new java.util.HashMap();
    para.put("workId", workId);
    para.put("tableId", tableId);
    para.put("recordId", recordId);
    para.put("workId", workId);
    para.put("stepCount", stepCount);
    para.put("userName", userName);
    wfcBD.backToSubmitPerson(para);
}else{
    //退回中间环节
    java.util.Map para = new java.util.HashMap();
    para.put("workId", workId);
    para.put("recordId", recordId);
    para.put("tableId", tableId);
    para.put("workId", workId);
    para.put("stepCount", stepCount);
    para.put("userName", userName);
    para.put("backToActivityId", request.getParameter("backToActivityId"));
    para.put("backToStep", request.getParameter("backToStep"));
    String backToActivityName = request.getParameter("backToActivityName");
    para.put("backToActivityName", backToActivityName);
    para.put("workMainLinkFile", request.getParameter("mainLinkFile"));
    wfcBD.backToActivity(para);
}

      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
