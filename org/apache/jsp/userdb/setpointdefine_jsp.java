/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:42:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.userdb;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class setpointdefine_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);

      out.write("\r\n<html:html>\r\n<head>\r\n<title>选择表</title>\r\n<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<script src=\"/jsoa/js/js.js\" language=\"javascript\"></script>\r\n<link rel=stylesheet type=\"text/css\" href=\"/jsoa/public/date_picker/DateObject2.css\">\r\n\r\n</head>\r\n<body leftmargin=\"0\" scroll=\"auto\" topmargin=\"0\" class=\"MainFrameBox Pupwin\" onload=\"loadData()\"  >\r\n\r\n<table width=\"100%\" height=\"100%\" border=\"0\" cellpadding=\"10\" cellspacing=\"0\" class=\"docBoxNoPanel\">\r\n<tr>\r\n<td valign=\"top\">\r\n\r\n<table width=\"100%\" border=\"0\" cellpadding=\"5\" cellspacing=\"1\"> \r\n                          <tr>\r\n                             <td width=\"60\" nowrap=\"nowrap\">小数点后：</td>\r\n                             <td>\r\n                             <input class=\"inputText\" type=\"text\" id=\"pointNum\" name=\"pointNum\" value=\"\" />&nbsp;位\r\n                             </td>\r\n                          </tr>\r\n                          <tr id=\"tr_seq1\">\r\n                             <td width=\"60\" nowrap=\"nowrap\">是否补齐：</td>\r\n                             <td ><input type=\"checkbox\" style=\"margin:0px;\" id=\"fillIn\" name=\"fillIn\" value=\"1\"  />&nbsp;是\r\n");
      out.write("                             </td>\r\n                          </tr>\r\n                            <tr id=\"tr_seq1\">\r\n                             <td width=\"60\" nowrap=\"nowrap\">&nbsp;</td>\r\n                             <td ><font color=\"green\">注：若选择补齐，则无小数位的数字小数点后将以0补齐</br>&nbsp;&nbsp;&nbsp;&nbsp;如输入数字12,显示为12.00</font>\r\n                             </td>\r\n                          </tr>\r\n                          \r\n\t\t\t\t\t\t  <tr id=\"submitTR\">\r\n\t      <td colspan=2 height=\"45\" valign=\"bottom\">\r\n\t\t\t<input type=\"button\"  class=\"btnButton4font\" onclick=\"javascript:saveData();\" value=\"保存退出\"/><button class=\"btnButton2font\" onclick=\"window.location.reload();\">重置</button><button class=\"btnButton2font\" onclick=\"javascript:window.close()\">退出</button>\r\n\t\t  </td>\r\n        </tr>\r\n\t\t\t  \t\t  \r\n</table>\r\n</td>\r\n</tr>\r\n<tr><td>&nbsp;</td></tr>\r\n</table>\r\n</body>\r\n<script language=\"javascript\">\r\nfunction loadData(){\r\n\tvar valIndex=");
      out.print(request.getParameter("index"));
      out.write("; //设置的第几个字段\r\n\tvar result=\"\";\r\n\t\r\n\tvar pValue=\"\"; //\"[point:2;fillin:1]\";\r\n\t\r\n\ttry{\r\n\t\tif(opener.document.getElementsByName(\"fieldShowValue\").length>0){\r\n\t\t\tpValue=opener.document.getElementsByName(\"fieldShowValue\")[valIndex].value;\r\n\t\t}\r\n\t}catch(e){}\r\n\t\r\n\tvar valPoint=\"\";\r\n\tvar valFill=\"0\";\r\n\tif(pValue.indexOf(\"[point\")==0){\r\n\t\tvalPoint=pValue.substring(pValue.indexOf(\":\")+1,pValue.indexOf(\";\"));\r\n\t\tvalFill=pValue.substring(pValue.length-2,pValue.length-1);\r\n\t}\r\n\t\r\n\tdocument.getElementById(\"pointNum\").value=valPoint;\r\n\t\r\n\tif(valFill==\"1\"){\r\n\t\tdocument.getElementById(\"fillIn\").checked=true;\t\r\n\t}else{\r\n\t\tdocument.getElementById(\"fillIn\").checked=false;\r\n\t}\r\n\t\r\n}\r\nfunction saveData(){\r\n\tvar valIndex=");
      out.print(request.getParameter("index"));
      out.write("; //设置的第几个字段\r\n\tvar result=\"\";\r\n\tvar valPoint=document.getElementById(\"pointNum\").value;\r\n\tvar valFill=\"0\";\r\n\tif(document.getElementById(\"fillIn\").checked){\r\n\t\tvalFill=\"1\";\r\n\t}\r\n\t\r\n\tif(valPoint==\"\"){\r\n\t\tif(confirm(\"您还没有指定小数位数，您确认不指定吗？\")){\t\t\t\t\t\t\r\n\t\t\twindow.close();\t\t\t\r\n\t\t}else{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}else if(isNaN(valPoint) || Number(valPoint)<1 || Number(valPoint)>6){\r\n\t\talert(\"小数位数应在1至6位之间！\");\r\n\t\tdocument.getElementById(\"pointNum\").focus();\r\n\t\treturn;\t\t\r\n\t}else{\r\n\t\tresult=\"[point:\"+valPoint+\";fillin:\"+valFill+\"]\";\t\t\r\n\t}\r\n\t\r\n\ttry{\r\n\t\tif(opener.document.getElementsByName(\"fieldShowValue\").length>0){\r\n\t\t\topener.document.getElementsByName(\"fieldShowValue\")[valIndex].value=result;\r\n\t\t}\r\n\t\twindow.close();\r\n\t}catch(e){}\r\n}\r\n\r\n</script>\r\n<script src=\"/jsoa/js/util.js\"></script>\r\n</html:html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
