/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:07:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsflow;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.lang.Resource;
import java.util.*;
import java.text.*;

public final class jsflow_005fworkflow_005fbatchdo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-nested.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-tiles.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-template.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-bean.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.lang.Resource");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);
response.setCharacterEncoding("GBK");
List ttableList= request.getAttribute("ttableList")==null?null:(List)request.getAttribute("ttableList");

      out.write("\r\n\r\n<html>\r\n<head>\r\n<title>工作流程处理</title>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=GBK\">\r\n<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<link rel=stylesheet type=\"text/css\" href=\"/jsoa/public/date_picker/DateObject2.css\">\r\n<SCRIPT language=javascript src=\"/jsoa/public/date_picker/DateObject.js\"></SCRIPT>\r\n<SCRIPT language=javascript src=\"/jsoa/public/date_picker/DatePicker.js\"></SCRIPT>\r\n<SCRIPT language=javascript src=\"/jsoa/public/date_picker/editlib.js\"></SCRIPT>\r\n<SCRIPT language=javascript src=\"/jsoa/public/date_picker/tree.js\"></SCRIPT>\r\n<SCRIPT language=javascript src=\"/jsoa/js/jquery-1.4.2.min.js\"></SCRIPT>\r\n<SCRIPT language=\"javascript\" src=\"/jsoa/js/openEndow.js\"></SCRIPT>\r\n</head>\r\n<body  class=\"MainFrameBox Pupwin\" onLoad=\"init();\">\r\n<table width=\"100%\" height=\"25\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"inlineBottomLine\">\r\n  <tr>\r\n    <td align=\"left\" nowrap>\r\n\t\t    <div id=\"PanleDIV\" class=\"tabPanelSelected\">\r\n\t        <div class=\"tabPanelLeft\"></div>\r\n\t        <div class=\"tabPanelCenter\">流程处理</div>\r\n\t        <div class=\"tabPanelRight\"></div>      \r\n\t      </div>\r\n    </td>\r\n  </tr>\r\n");
      out.write("</table>\r\n<form action=\"/jsoa/WorkFlowBatchDoAction.do?action=workflowlimitdo\"  method=\"post\" name=\"workflowForm\" id=\"workflowForm\">\r\n  <table width=\"100%\" border=\"0\" cellpadding=\"5\" cellspacing=\"0\" class=\"docBoxNoPanel\">\r\n   <tr>\r\n  \t <td>\r\n  \t    选&nbsp;择&nbsp;流&nbsp;程：\r\n  \t  \t<select id=\"workprocess\" name=\"workprocess\" style=\"width:37%\" onchange=\"getWorkactivity(this);\">\r\n             <option value=\"\">--请选择--</option>\r\n\t\t      ");

			  if (null != ttableList && ttableList.size() > 0) {
			    for(int i = 0; i < ttableList.size(); i++) {
			    	Object[] obj = (Object[])ttableList.get(i);
			 
      out.write("\r\n\t         <option value=\"");
      out.print(obj[0]);
      out.write('"');
      out.write('>');
      out.print(obj[1]);
      out.write("</option>\r\n\t       ");
}}
      out.write("\r\n\t\t</select>\r\n  \t </td>\r\n </tr>\r\n   <tr>\r\n  \t   <td id=\"jiedian\">\r\n  \t       选&nbsp;择&nbsp;节&nbsp;点：\r\n  \t  \t<select id=\"workactivity\" name=\"workactivity\" style=\"width:37%\" >\r\n  \t  \t<option value=\"\">--请选择--</option>\r\n  \t  \t</select>\r\n  \t  </td>\r\n </tr>\r\n <tr>\r\n  \t <td>\r\n  \t        当前节点人&nbsp;：\r\n  \t  \t<input type=\"text\" id=\"workemployeename\" name=\"workemployeename\"  onclick=\"selectEndow('getOrgName');\" style=\"width:37%\"/>\r\n\t\t<input type=\"hidden\" id=\"workemployeeid\" name=\"workemployeeid\" /> \r\n  \t </td>\r\n </tr>\r\n <tr>\r\n  \t <td>\r\n  \t       下节点办理&nbsp;：\r\n  \t  \t<input type=\"text\" id=\"doemployeeName\" name=\"doemployeeName\"  onclick=\"selectDanx('getOrgName');\" style=\"width:37%\"/>\r\n\t\t<input type=\"hidden\" id=\"doemployeeId\" name=\"doemployeeId\" /> \r\n  \t </td>\r\n </tr>\r\n <tr>\r\n  \t <td>\r\n  \t    <div style=\"float: left;\">处&nbsp;理&nbsp;时&nbsp;间：</div>\r\n  \t  \t<div id=\"termDIV\"  style=\"float: left;\">\r\n\t\t    &nbsp;<script language=javascript>var dtpDate = createDatePicker(\"dotime\");</script>\r\n\t\t    &nbsp;<font color=\"red\" size=\"12px\">注意:处理该时间之前的所有数据</font>\r\n");
      out.write("\t    </div>\r\n  \t </td>\r\n </tr>\r\n</table>\r\n <table>\r\n   <tr>\r\n\t    <td >\r\n   \t\t   <input type=\"button\" class=\"btnButton4font\" value=\"处理\" onClick=\"javascript:saveAndExit();\">\r\n\t\t   <input type=\"button\" class=\"btnButton2font\"  value=\"重置\" onClick=\"javascript:reset();\">\r\n\t\t</td>\r\n\t</tr>\r\n   </table>\r\n</form>\r\n</body>\r\n<script language=\"JavaScript\">\r\nfunction init(){\r\n\tremoveObj();\r\n\t");

	String message=request.getAttribute("flag")+"";
	if("true".equals(request.getAttribute("flag")+"")){
      out.write("\r\n\t    //removeObj();\r\n\t    alert(\"处理成功！\");\r\n\t    var hhref=\"/jsoa/WorkFlowBatchDoAction.do?action=workflowBatchDo\";\r\n        location.href= hhref ;\r\n\t");
}else{
      out.write("\r\n\t    alert('");
      out.print(message);
      out.write("');\r\n\t    var hhref=\"/jsoa/WorkFlowBatchDoAction.do?action=workflowBatchDo\";\r\n        location.href= hhref ;\r\n\t");
}
      out.write("\r\n}\r\nfunction reset(){\r\n   var hhref=\"/jsoa/WorkFlowBatchDoAction.do?action=workflowBatchDo\";\r\n   location.href= hhref ;\r\n}\r\nfunction selectEndow(func)\r\n{\r\n    selectExeFunc('','workemployeeid','workemployeename',document.all.workemployeeid.value,document.all.workemployeename.value,'orgPerson','yes','_coop_select','*0*','yes','userorggroup',func);\r\n}\r\nfunction selectDanx(func){\r\n\tselectExeFunc('','doemployeeId','doemployeeName',document.all.doemployeeId.value,document.all.doemployeeName.value,'orgPerson','yes','_coop_select','*0*','yes','userorggroup',func);\r\n}\r\nfunction getOrgName(){\r\n\t\r\n}\r\nfunction getXmlHttp(){\r\n\tvar xmlhttp;\r\n\t//开始初始化XMLHttpRequest对象\r\n\tif(window.XMLHttpRequest) { //Mozilla 浏览器\r\n\t\txmlhttp = new XMLHttpRequest();\r\n\t\tif (xmlhttp.overrideMimeType) {//设置MiME类别\r\n\t\t\txmlhttp.overrideMimeType('text/xml');\r\n\t\t}\r\n\t}\r\n\telse if (window.ActiveXObject) { // IE浏览器\r\n\t\ttry {\r\n\t\t\txmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n\t\t} catch (e) {\r\n\t\t\ttry {\r\n\t\t\t\txmlhttp = new ActiveXObject(\"MSXML2.XMLHTTP\");\r\n");
      out.write("\t\t\t} catch (e) {\r\n\t\t\t\talert(\"您看到此信息，说明您的浏览器不支持XML解析。\\r\\n请在弹出页面中下载XML解析器并安装！\");\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn xmlhttp;\r\n}\r\n\r\nfunction getWorkactivity(obj){\r\n\t\r\n\txmlhttp= getXmlHttp();\r\n\tvar workprocessid = obj.value;\r\n\txmlhttp.open(\"GET\",\"/jsoa/jsflow/jsf_workflow_batchajax.jsp?workprocessId=\"+workprocessid+\"&date=\"+new Date(),false);\r\n    xmlhttp.send(null);\r\n    if (xmlhttp.readyState==4 && xmlhttp.status==200)\r\n \t{\r\n    \tvar responseText = xmlhttp.responseText;\r\n\t\tdocument.getElementById(\"jiedian\").innerHTML=responseText; \r\n \t}\r\n}\r\n\r\nfunction saveAndExit(){\r\n\tsAlert(\"正在处理请稍候.....\");\r\n\tvar workprocess=document.getElementById(\"workprocess\").value;\r\n\tvar processId=workprocess.split[0];\r\n\tvar tableId=workprocess.split[1];\r\n\tif(workprocess==null || workprocess==\"\"){\r\n\t\talert(\"请选择流程！\");\r\n\t\treturn\r\n\t}\r\n\tvar activityId=document.getElementById(\"workactivity\").value; \r\n\tif(activityId==null || activityId==\"\"){\r\n\t\talert(\"请选择节点！\");\r\n\t\treturn;\r\n\t}\r\n\tvar workemployeeid=document.getElementById(\"workemployeeid\").value;\r\n\tif(workemployeeid==null || workemployeeid==\"\"){\r\n");
      out.write("\t\talert(\"请选办理人！\");\r\n\t\treturn;\r\n\t}\r\n\tvar dotime=document.getElementById(\"dotime\").value;\r\n\tif(dotime==null || dotime==\"\"){\r\n\t\talert(\"请选办理时间！\");\r\n\t\treturn;\r\n\t}\r\n\tdocument.workflowForm.submit();\r\n}\r\n\r\nfunction  sAlert(str){ \r\n\t  \r\n\t   var   msgw,msgh,bordercolor; \r\n\t    msgw=400;//提示窗口的宽度 \r\n\t    msgh=100;//提示窗口的高度 \r\n\t    titleheight=25   //提示窗口标题高度 \r\n\t    bordercolor=\"#336699\";//提示窗口的边框颜色 \r\n\t    titlecolor=\"#99CCFF\";//提示窗口的标题颜色 \r\n\t    var   sWidth,sHeight; \r\n\t    sWidth=parent.document.body.offsetWidth;//浏览器工作区域内页面宽度 \r\n\t    sHeight=screen.height;//屏幕高度（垂直分辨率） \r\n\r\n\t \r\n\r\n\t    //背景层（大小与窗口有效区域相同，即当弹出对话框时，背景显示为放射状透明灰色） \r\n\t    var   bgObj=parent.document.createElement(\"div\");//创建一个div对象（背景层） \r\n\t \r\n\t    //定义div属性，即相当于 \r\n\t    bgObj.setAttribute(\"id\",\"bgDiv\");\r\n\t    bgObj.style.position=\"absolute\"; \r\n\t    bgObj.style.top=\"0\"; \r\n\t    bgObj.style.background=\"#777\"; \r\n\t    bgObj.style.filter=\"progid:DXImageTransform.Microsoft.Alpha(style=3,opacity=25,finishOpacity=75\"; \r\n\t    bgObj.style.opacity=\"0.6\"; \r\n\t    bgObj.style.left=\"0\"; \r\n");
      out.write("\t    bgObj.style.width=sWidth   +  \"px\"; \r\n\t    bgObj.style.height=sHeight   +  \"px\"; \r\n\t    bgObj.style.zIndex   =  \"10000\"; \r\n\t    parent.document.body.appendChild(bgObj);//在body内添加该div对象 \r\n\r\n\t     \r\n\t    var   msgObj=parent.document.createElement(\"div\")//创建一个div对象（提示框层） \r\n\t    //定义div属性，即相当于 \r\n\t    msgObj.setAttribute(\"id\",\"msgDiv\"); \r\n\t    msgObj.setAttribute(\"align\",\"center\"); \r\n\t    msgObj.style.background=\"white\"; \r\n\t    msgObj.style.border=\"1px   solid  \"   +   bordercolor; \r\n\t    msgObj.style.position   =  \"absolute\"; \r\n\t    msgObj.style.left   =  \"50%\"; \r\n\t    msgObj.style.top   =  \"50%\"; \r\n\t    msgObj.style.font=\"12px/1.6em   Verdana,   Geneva,   Arial,   Helvetica,   sans-serif\"; \r\n\t    msgObj.style.marginLeft   =  \"-225px\"   ; \r\n\t    msgObj.style.marginTop   =   -75+parent.document.documentElement.scrollTop+\"px\"; \r\n\t    msgObj.style.width   =   msgw   +  \"px\"; \r\n\t    msgObj.style.height   =msgh   +  \"px\"; \r\n\t    msgObj.style.textAlign   =  \"center\"; \r\n\t    msgObj.style.lineHeight   =\"25px\"; \r\n\t    msgObj.style.zIndex   =  \"10001\"; \r\n");
      out.write("\t    parent.document.body.appendChild(msgObj);\r\n\t     \r\n\t     \r\n\t    var   txt=parent.document.createElement(\"p\");//创建一个p对象（提示框提示信息） \r\n\t    //定义p的属性，即相当于 \r\n\t    txt.style.margin=\"1em   0\" \r\n\t    txt.setAttribute(\"id\",\"msgTxt\"); \r\n\t    txt.innerHTML=str;//来源于函数调用时的参数值  \r\n\t     msgObj.appendChild(txt);\r\n\t    var msgIMG=parent.document.createElement(\"IMG\") \r\n\t     msgIMG.src=\"/jsoa/iSignatureHTML.jsp/load.gif\";\r\n\t     msgIMG.setAttribute(\"id\",\"msgIMG\"); \r\n\t     msgObj.appendChild(msgIMG);\r\n\t    \r\n\t \r\n\t} \r\n\r\nfunction   removeObj(){ //点击标题栏触发的事件 \r\n  parent.document.body.removeChild(parent.document.getElementById(\"bgDiv\"));//删除背景层Div \r\n  parent.document.body.removeChild(parent.document.getElementById(\"msgDiv\"));//删除提示框层 \r\n} \r\n\r\n</script>\r\n<script src=\"/jsoa/js/util.js\"></script>\r\n</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
