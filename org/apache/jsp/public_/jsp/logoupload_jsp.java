/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:57:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.public_.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import org.apache.commons.fileupload.FileItem;
import com.js.system.util.SysSetupReader;
import com.jsupload.upload.SmartUpload;
import com.jsupload.upload.SmartUpload;
import com.js.system.service.logomanager.LogoBD;
import com.js.system.vo.logomanager.LogoVO;
import com.js.util.util.BrowserJudge;

public final class logoupload_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.jsupload.upload.SmartUpload");
    _jspx_imports_classes.add("com.js.system.service.logomanager.LogoBD");
    _jspx_imports_classes.add("com.js.system.vo.logomanager.LogoVO");
    _jspx_imports_classes.add("org.apache.commons.fileupload.FileItem");
    _jspx_imports_classes.add("com.js.system.util.SysSetupReader");
    _jspx_imports_classes.add("com.js.util.util.BrowserJudge");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n");
      com.jsupload.upload.SmartUpload myUpload = null;
      myUpload = (com.jsupload.upload.SmartUpload) _jspx_page_context.getAttribute("myUpload", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (myUpload == null){
        myUpload = new com.jsupload.upload.SmartUpload();
        _jspx_page_context.setAttribute("myUpload", myUpload, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n\r\n\r\n\r\n\r\n<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");

request.setCharacterEncoding("GBK");
Calendar cal = Calendar.getInstance();
String year = cal.get(Calendar.YEAR)+"";//年
String domainId=session.getAttribute("domainId").toString();
int fileSize=0;
String attachSizeLimit=SysSetupReader.getInstance().getAttachLimit(domainId);
if(!attachSizeLimit.startsWith("1")){
	Map map = (Map) session.getAttribute("ftpMap");
	String fileSizeLimitAll="0";//默认限制大小
	if(map != null && map.get("FileSizeLimitAll") != null){
	    fileSizeLimitAll = map.get("FileSizeLimitAll").toString();//配置文件限制大小
	    if(fileSizeLimitAll.startsWith("1")){//是否限制，1：限制；0，不限制
	        fileSize=Integer.parseInt(fileSizeLimitAll.substring(1));
	    }
	  }
}else{
   fileSize=Integer.parseInt(attachSizeLimit.substring(1));
}
String fileSizeMsg="";
if(fileSize/1000000>0){
    fileSizeMsg=String.valueOf(fileSize/(1024*1024))+"MB";
}else if(fileSize/1000>0){
    fileSizeMsg=String.valueOf(fileSize/1024)+"KB";
}else{
    fileSizeMsg=String.valueOf(fileSize)+"字节";
}
  String path=request.getParameter("path");
  String logoId=request.getParameter("logoId");
  LogoVO logoVO=new LogoBD().loadLogo(logoId);
  String filePath="";
  String mode=request.getParameter("mode");
  String logoPath="";
  if(mode==null) mode="normal";
  if(mode.equals("add"))
  {
	   boolean notAgree=false;
		String fileName="";
		String fileExt="";
	  	String saveName="";
	  	myUpload.initialize(request);
	  	List fileList=new ArrayList();
	  	try
	  	{
	  		fileList=myUpload.getFileList();
	  	}
	    catch(Exception e) 
	    {
	    	out.println("<div style=\"witdh:100%;height:100%;\" class=\"docBox\">");
	    	out.println("<center style=\"padding-top:100px;\">");
	    	out.println("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">");
	    	out.println("<tr>");
	    	out.println("<td width=\"60\"><img src=\"/jsoa/images/errorFace_excel.gif\"/></td>");
	    	out.println("<td width=\"220\"><font color=\"#FF0000\">ERROR:上传失败！文件尺寸超过规定大小:"+fileSizeMsg+"</font></td>");
	    	out.println("</tr>");
	    	out.println("<tr>");
	    	out.println("<td>&nbsp;</td>");
	    	out.println("<td align=\"center\" valign=\"middle\" height=\"65\"><input type=\"button\" class=\"btnButton2font\" onclick=\"javascript:history.back(-1);\" value='返回重试'></input></td>");
	    	out.println("</tr>");
	    	out.println("</table>");
	    	out.println("</center>");
	    	out.println("</div>");
	    	return;
	    }
	    int upLoadAllFileSize=0;
	    String [] banType=SmartUpload.banType;
		for (int j=0;j<fileList.size();j++)
		{
			FileItem fileItem=(FileItem)fileList.get(j);
			if(!fileItem.isFormField())//如果是<input type="file">
			{
				String fileNameTemp=fileItem.getName();
	    		for(int i=0;i<banType.length;i++)
	    		{
	    			if(fileNameTemp.endsWith(banType[i]))
	   				{
	   					fileItem.delete();
	   					out.println("<script>alert('上传失败！非法文件类型！');history.back(-1);</script>");
	   					return;
	   				}
	    		}
				upLoadAllFileSize+=fileItem.getSize();//上传总大小
			}
		}
		if(upLoadAllFileSize==0)
	    {
	    	out.println("<div style=\"witdh:100%;height:100%;\" class=\"docBox\">");
	    	out.println("<center style=\"padding-top:100px;\">");
	    	out.println("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">");
	    	out.println("<tr>");
	    	out.println("<td width=\"60\"><img src=\"/jsoa/images/errorFace_excel.gif\"/></td>");
	    	out.println("<td width=\"220\"><font color=\"#FF0000\">ERROR:上传失败！请选择非空文件上传！</font></td>");
	    	out.println("</tr>");
	    	out.println("<tr>");
	    	out.println("<td>&nbsp;</td>");
	    	out.println("<td align=\"center\" valign=\"middle\" height=\"65\"><input type=\"button\" class=\"btnButton2font\" onclick=\"javascript:history.back(-1);\" value='返回重试'></input></td>");
	    	out.println("</tr>");
	    	out.println("</table>");
	    	out.println("</center>");
	    	out.println("</div>");
	    	return;
	    }
      	LogoBD logoBD=new LogoBD();
      	String logo = request.getContextPath();
		if(com.js.util.config.SystemCommon.getUseClusterServer()==1){
			logo=com.js.util.config.SystemCommon.getClusterServerUrl();
		}
	  	for (int j=0;j<fileList.size();j++){
			String myRandom=new com.js.util.util.Random().getFileRandomName();
		  	FileItem fileItem=(FileItem)fileList.get(j);//获取上传文件
		  	// 忽略空的上传控件和简单form字段而不是上传域的文件域(<input type="text" />等)
		   	if (fileItem.getSize()<=0|| fileItem.isFormField()) 
		   	{
			   	continue;
		   	}
        	fileName=fileItem.getName();//获取上传文件名
        	if(!"".equals(fileName)&&null!=fileName)
	        {
	        	fileName=fileName.substring(fileName.lastIndexOf("\\") + 1);
	        	fileExt=fileName.substring(fileName.lastIndexOf(".") + 1);//获取上传文件扩展名
	        }
        	
        	String fileSuffix=fileExt;
            fileSuffix=fileSuffix.toLowerCase();
            if(".exe,.bat,.jsp,.asp,.php,.aspx".indexOf(fileSuffix)>=0)//判断时候合法
            {
                notAgree=true;
            }else{
        	
	        	if(fileName.length()>50)//文件名太长
	            {
	            	fileName = fileName.substring(0, 40);//截断	
					fileName+="~1."+fileExt;
	            }
	        	
			   	filePath=request.getSession().getServletContext().getRealPath("/")+"upload/"+year+"/logo/";
			   	saveName=year+"_"+myRandom+"."+fileExt;
				myUpload.saveAs(fileItem,filePath + saveName);//保存文件
			  	
				//logoVO.setLogoId(Long.valueOf(logoId));
				if(fileName.length()>20)
				{
					fileName=fileName.substring(0,20);
				}
				logoVO.setLogoName(fileName);
				//saveName=year+"_"+saveName;
				logoPath="/upload/"+year+"/logo/"+saveName;
				logoVO.setLogoPath(logoPath);
	/*			switch(Integer.parseInt(logoId))
				{
				 	case 1: 
					 	logoVO.setBakString1("登录logo"); 
					 	break;
				   	case 2:
					   	logoVO.setBakString1("首页左上角logo"); 
					   	break;
				}*/
				logoBD.modifyLogo(logoVO);
            }
            if(notAgree){
      out.write("\r\n   \t     <SCRIPT LANGUAGE=\"JavaScript\">\r\n   \t          alert(\"上传失败！非法文件类型！\");\r\n   \t       \t  history.back(-1);\r\n   \t      </script>\r\n   \t\t\t");

   			break;
   			}
         
      out.write("\r\n         \r\n         ");

	  }
	  
      out.write("\r\n\t  ");

	
	  	if("1".equals(logoVO.getLogoType()))
	  	{
	  
      out.write("\r\n\t  <SCRIPT LANGUAGE=\"JavaScript\">\r\n\t\t  <!--\r\n\t\t  alert(\"上传成功！\");\r\n\t\t  opener.document.getElementById(\"imgLogo\").src=\"");
      out.print(logo+logoPath);
      out.write("\"\r\n\t\t  window.close();\r\n\t\t  //-->\r\n\t  </SCRIPT>\r\n\t  ");

	  	}
	  	else if("0".equals(logoVO.getLogoType()))
	  	{
	  
      out.write("\r\n\t  \t<SCRIPT LANGUAGE=\"JavaScript\">\r\n\t\t  <!--\r\n\t\t  alert(\"上传成功！\");\r\n\t\t  //alert(");
      out.print(request.getContextPath()+logoPath);
      out.write(");\r\n\t\t  opener.document.getElementById(\"imgBack\").src=\"");
      out.print(logo+logoPath);
      out.write("\"\r\n\t\t  window.close();\r\n\t\t  //-->\r\n\t  </SCRIPT>\t\r\n\t  ");

	    }
	  
      out.write("\r\n\t  ");

  }

      out.write("\r\n<HTML>\r\n<HEAD><TITLE>上传附件</TITLE></HEAD>\r\n\r\n<BODY class=\"MainFrameBox Pupwin\">\r\n\r\n<TABLE width=\"100%\" height=\"100%\" valign=\"top\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"padding-left:10px;\" class=\"docBoxNoPanel\">\r\n<FORM ENCTYPE = \"multipart/form-data\" NAME =\"frm\" ACTION = \"logoupload.jsp?path=");
      out.print(path);
      out.write("&mode=add&logoId=");
      out.print(logoId);
      out.write("\"\r\n    METHOD=\"POST\" onsubmit=\"javascript:return check();\">\r\n  <tr>\r\n     <td  style=\"font-size:15px;color:#003366;padding-top:8px;\">\r\n     <b>上传本地文件</b>\r\n     </td>\r\n  </tr>\r\n  <TR valign=\"top\" style=\"padding-top:12px;\" id=\"upload1\">\r\n     <TD align=\"left\" id=\"3230\"><div id=\"div001\">请选择您要上传的文件</div>\r\n     <div style=\"display:none\" id=\"div002\">正在上传……</div>\r\n   <div id=\"fileInputDiv\">\r\n    <div id=\"fileInputDiv1\" style=\"\">\r\n\t<INPUT type=\"file\" name=\"photo\" value=\"\"  style=\"width: 100%\">\t\t\t\t\t\r\n     </div>\r\n   </div>\r\n    </TD>\r\n  </TR>\r\n<tr>\r\n   <td id=\"uploadprocee\" style=\"display:none\" align=\"center\" class=\"bg-advance-middel\">\r\n\t<table width=\"240\" height=\"45\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" bgcolor='#F6F6F6'>\r\n\t  <tr>\r\n\t    <td align='center' height='30' valign='bottom'><img src=\"");
      out.print(request.getContextPath());
      out.write("/images/027.gif\"></img></td>\r\n\t\t  </tr>\r\n\t\t  <tr>\r\n\t\t    <td align='center'><span class='process'>&nbsp;</span></td>\r\n\t\t  </tr>\r\n\t\t</table>\r\n\t</td>\r\n</tr>\r\n  <TR>\r\n     <TD align=\"left\" style=\"padding-bottom:20px;\">\r\n        <div id=\"fileNameDiv\" style=\"height: 40px;\"></div>\r\n     <INPUT NAME=\"submit\" VALUE=\"上传\" TYPE=\"submit\" class=\"btnButton4Font\">\r\n\t     &nbsp;&nbsp;<INPUT NAME=\"reset\" VALUE=\"重置\" TYPE=\"reset\" class=\"btnButton4Font\">\r\n     </TD>\r\n  </TR>\r\n</FORM>\r\n\r\n</TABLE>\r\n</BODY>\r\n</HTML>\r\n<script language=\"javascript\">\r\nvar img=null;\r\nvar logoType='");
      out.print(logoId);
      out.write("';\r\nfunction check(){\r\n    if(document.all.photo.value==\"\"){\r\n        alert(\"请选择上传附件!\");\r\n        return false;\r\n    }\r\n    try{\r\n        if(img) img.removeNode(true);\r\n        img=document.createElement(\"img\");\r\n        img.style.position=\"absolute\";\r\n        img.style.visibility=\"hidden\";\r\n       \t\r\n        ");
if(BrowserJudge.isMSIE(request)){
      out.write("\r\n        //if(navigator.userAgent.indexOf(\"MSIE\")>0){\r\n\t\t\timg.attachEvent(\"onreadystatechange\",orsc);\r\n        \timg.attachEvent(\"onerror\",oe);\r\n\t\t//}else{\r\n\t\t");
}else{
      out.write("\r\n\t\t\timg.addEventListener(\"onreadystatechange\",orsc,false);\r\n        \timg.addEventListener(\"onerror\",oe,false);\r\n\t\t//}");
}
      out.write("\r\n        //document.body.insertAdjacentElement(\"beforeend\",img);//此为修改前，可用于IE，因为在fireFox中没有insertAdjacentElement方法。\r\n        var HTMLElement=document.body;\r\n        //----上传登录图片，开始（修改以用于fireFox）--开始（吴凯20120702）\r\n\t       if(typeof HTMLElement!=\"undefined\" && !HTMLElement.prototype.insertAdjacentElement){\r\n\t\t     HTMLElement.prototype.insertAdjacentElement = function(\"beforeEnd\",img){\r\n\t\t        switch (where)\r\n\t\t        {\r\n\t\t            case 'beforeBegin':\r\n\t\t                this.parentNode.insertBefore(parsedNode,this)\r\n\t\t                break;\r\n\t\t            case 'afterBegin':\r\n\t\t                this.insertBefore(parsedNode,this.firstChild);\r\n\t\t                break;\r\n\t\t            case 'beforeEnd':\r\n\t\t                this.appendChild(parsedNode);\r\n\t\t                break;\r\n\t\t            case 'afterEnd':\r\n\t\t                if (this.nextSibling) this.parentNode.insertBefore(parsedNode,this.nextSibling);\r\n\t\t                    else this.parentNode.appendChild(parsedNode);\r\n\t\t                break;\r\n\t\t         }\r\n");
      out.write("\t\t     }\r\n\r\n\t\t     HTMLElement.prototype.insertAdjacentHTML = function (where,htmlStr){\r\n\t\t         var r = this.ownerDocument.createRange();\r\n\t\t         r.setStartBefore(this);\r\n\t\t         var parsedHTML = r.createContextualFragment(htmlStr);\r\n\t\t         this.insertAdjacentElement(where,parsedHTML)\r\n\t\t     }\r\n\t\t\r\n\t\t     HTMLElement.prototype.insertAdjacentText = function (where,txtStr){\r\n\t\t         var parsedText = document.createTextNode(txtStr)\r\n\t\t         this.insertAdjacentElement(where,parsedText)\r\n\t\t\t     }\r\n\t\t\t}\r\n\t\t//---上传登录图片，开始（修改以用于fireFox）--结束\r\n        var fileValue=document.all.photo.value;\r\n        img.src=fileValue;\r\n        fileValue=fileValue.toLowerCase();\r\n        fileValue=fileValue.substring(fileValue.lastIndexOf(\".\")+1);\r\n        if(\"jpg,gif,bmp,png\".indexOf(fileValue)>=0){\r\n            var fileOffsetWidth=img.offsetWidth;\r\n            var fileOffsetHeight=img.offsetHeight;\r\n            if(logoType==\"1\"){\r\n\t            if(fileOffsetWidth!=812||fileOffsetHeight!=480){\r\n\t               if(!confirm(\"系统建议上传大小为812X480的图片,您确定要上传吗?\")){\r\n");
      out.write("\t                    return false;\r\n\t                }\r\n\t            }\r\n            }if(logoType==\"2\"){\r\n\t            if(fileOffsetWidth!=286||fileOffsetHeight!=51){\r\n\t               if(!confirm(\"系统建议上传大小为286X51的图片,您确定要上传吗?\")){\r\n\t                    return false;\r\n\t                }\r\n\t            }\r\n            }\r\n        }else{\r\n            alert(\"您只能上传jpg,gif,bmp,png等格式的图片!\");\r\n            location.reload();\r\n            return false;\r\n        }\r\n    }catch(e){\r\n        alert(e);\r\n    }\r\n}\r\nfunction oe()\r\n{\r\n}\r\nfunction orsc()\r\n{\r\n    if(img.readyState!=\"complete\")return false;\r\n}\r\n</script>\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
