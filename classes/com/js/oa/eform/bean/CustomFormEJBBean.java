package com.js.oa.eform.bean;

import com.js.oa.eform.po.TPagePO;
import com.js.oa.eform.weixin.ElementHTMLGetter;
import com.js.oa.eform.weixin.ElementHTMLGetterFactory;
import com.js.oa.jsflow.util.FormReflection;
import com.js.oa.jsflow.util.InitWorkFlowData;
import com.js.oa.userdb.bean.BaseSetEJBBean;
import com.js.oa.userdb.util.DbOpt;
import com.js.system.util.StaticParam;
import com.js.util.config.SystemCommon;
import com.js.util.hibernate.HibernateBase;
import com.js.util.util.BrowserJudge;
import com.js.util.util.DataSourceBase;
import com.js.util.util.IO2File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.ejb.CreateException;
import javax.ejb.SessionBean;
import javax.ejb.SessionContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import net.sf.hibernate.HibernateException;
import org.apache.log4j.Logger;

public class CustomFormEJBBean extends HibernateBase implements SessionBean {
  SessionContext sessionContext = null;
  
  public void ejbCreate() throws CreateException {}
  
  public void ejbRemove() {}
  
  public void ejbActivate() {}
  
  public void ejbPassivate() {}
  
  public void setSessionContext(SessionContext sessionContext) {
    this.sessionContext = sessionContext;
  }
  
  private static Logger logger = Logger.getLogger(
      CustomFormEJBBean.class.getName());
  
  public String getCode(String id) throws HibernateException {
    TPagePO page = null;
    String code = "";
    begin();
    try {
      page = (TPagePO)this.session.load(TPagePO.class, new Long(id));
      code = page.getPageContent();
      if (code == null)
        code = ""; 
    } catch (Exception e) {
      e.printStackTrace();
    } finally {
      this.session.close();
      this.session = null;
    } 
    return code;
  }
  
  public String getCodeByBatChAdd(String id) throws HibernateException {
    DbOpt dbopt = null;
    String[][] result = (String[][])null;
    StringBuffer html = new StringBuffer("");
    String tableName = getTable(id);
    try {
      dbopt = new DbOpt();
      if (DbOpt.dbtype.indexOf("oracle") >= 0) {
        result = dbopt.executeQueryToStrArr2("SELECT e.elt_id,e.elt_name,f.field_desname FROM telt e,tarea t,tfield f WHERE  e.area_id=t.area_id AND t.area_name='form1' AND f.field_name=substr(e.elt_name, instr(e.elt_name, '-', 1)+1)  AND e.page_id=" + 
            
            id, 3);
      } else {
        result = dbopt.executeQueryToStrArr2("SELECT e.elt_id,e.elt_name,f.field_desname FROM telt e,tarea t,tfield f WHERE  e.area_id=t.area_id AND t.area_name='form1' AND f.field_name=SUBSTRING_INDEX(e.elt_name, '-', -1) AND e.page_id=" + 
            
            id, 3);
      } 
      html.append("<DIV style='WIDTH: 100%; align: center' id='" + tableName + "DIV' name='" + tableName + "DIV'>");
      html.append("<table style=\"BORDER-BOTTOM: #000000 2px solid; BORDER-LEFT: #000000 2px solid; WIDTH: 95%; BORDER-COLLAPSE: collapse; BORDER-TOP: #000000 2px solid; BORDER-RIGHT: #000000 2px solid\" border=0 cellSpacing=0 borderColor=#000000 cellPadding=0 align=center>");
      if (result != null && result.length > 0) {
        html.append("<tr>");
        for (int i = 0; i < result.length; i++) {
          html.append("<td style=\"BORDER-BOTTOM: #000000 1px solid; BORDER-LEFT: #000000 1px solid; BORDER-TOP: #000000 1px solid; BORDER-RIGHT: #000000 1px solid\" align=middle>");
          html.append((result[i][2] == null) ? "" : result[i][2].toString());
          html.append("</td>");
        } 
        html.append("</tr>");
      } 
      if (result != null && result.length > 0) {
        html.append("<tr id='" + tableName + "TR' onmouseover=try{setAbsoluteInit(this)}catch(ETR){} name='" + tableName + "TR'>");
        for (int i = 0; i < result.length; i++) {
          html.append("<td style=\"BORDER-BOTTOM: #000000 1px solid; BORDER-LEFT: #000000 1px solid; BORDER-TOP: #000000 1px solid; BORDER-RIGHT: #000000 1px solid\" align=middle>");
          html.append("<DIV style=\"WIDTH: 99%; DISPLAY: inline\" id='" + ((result[i][1] == null) ? "" : result[i][1].toString()) + "' name='" + ((result[i][1] == null) ? "" : result[i][1].toString()) + "'><STRONG>" + ((result[2] == null) ? "" : result[i][2].toString()) + "</STRONG></DIV>");
          html.append("</td>");
        } 
        html.append("</tr>");
      } 
      html.append("</table>");
      html.append("</div>");
      dbopt.close();
    } catch (Exception e) {
      try {
        dbopt.close();
      } catch (SQLException ex) {
        ex.printStackTrace();
      } 
      e.printStackTrace();
    } 
    return html.toString();
  }
  
  public String getTable(String pageId) {
    DbOpt dbopt = null;
    String result = "";
    try {
      dbopt = new DbOpt();
      result = dbopt.executeQueryToStr(
          "select AREA_TABLE from tarea where AREA_NAME='form1' and PAGE_ID=" + pageId);
      dbopt.close();
    } catch (Exception e) {
      try {
        dbopt.close();
      } catch (SQLException sQLException) {}
      logger.error("CustomFormEJBBean error on getTable information:" + 
          e.getMessage());
    } 
    return result;
  }
  
  public String[][] getTableIDAndName(String pageId) {
    DbOpt dbopt = null;
    String[][] result = (String[][])null;
    try {
      dbopt = new DbOpt();
      result = dbopt.executeQueryToStrArr2("select TABLE_ID,AREA_TABLE from tarea,ttable where AREA_NAME='form1' and AREA_TABLE=TABLE_NAME and PAGE_ID=" + 
          pageId);
      dbopt.close();
    } catch (Exception e) {
      try {
        dbopt.close();
      } catch (SQLException sQLException) {}
      logger.error("CustomFormEJBBean error on getTable information:" + 
          e.getMessage());
    } 
    return result;
  }
  
  public String[] getField(String pageId) {
    DbOpt dbopt = null;
    String[] result = (String[])null;
    try {
      dbopt = new DbOpt();
      result = dbopt.executeQueryToStrArr1("select distinct a.ELT_TABLE from TELT a,TAREA b where a.PAGE_ID=" + pageId + 
          " and a.AREA_ID=b.AREA_ID and b.area_name='form1'");
      dbopt.close();
    } catch (Exception e) {
      try {
        dbopt.close();
      } catch (SQLException sQLException) {}
      logger.error("CustomFormEJBBean error on getField information:" + 
          e.getMessage());
      e.printStackTrace();
    } 
    return result;
  }
  
  public String[] getAllTableField(String pageId) {
    DbOpt dbopt = null;
    String[] result = (String[])null;
    try {
      dbopt = new DbOpt();
      String sql = "select distinct field_name from JSDB.tfield a,JSDB.ttable b,tpage c,tarea d where a.field_table = b.table_id and c.page_id=d.page_id and b.table_name=d.area_table and c.page_id=" + 
        pageId;
      result = dbopt.executeQueryToStrArr1(sql);
      dbopt.close();
    } catch (Exception e) {
      try {
        dbopt.close();
      } catch (SQLException sQLException) {}
      logger.error("CustomFormEJBBean error on getField information:" + 
          e.getMessage());
      e.printStackTrace();
    } finally {}
    return result;
  }
  
  public String[][] getPageField(String pageId) {
    DbOpt dbopt = null;
    String[][] result = (String[][])null;
    try {
      dbopt = new DbOpt();
      result = dbopt.executeQueryToStrArr2("select distinct a.ELT_TABLE,c.field_id from TELT a,TAREA b,tfield c,ttable d where a.PAGE_ID=" + pageId + 
          " and a.AREA_ID=b.AREA_ID and b.area_name='form1' and b.area_table=d.table_name and c.field_table=d.table_id and a.elt_table=c.field_name");
      dbopt.close();
    } catch (Exception e) {
      try {
        dbopt.close();
      } catch (SQLException sQLException) {}
      logger.error("CustomFormEJBBean error on getPageField information:" + 
          e.getMessage());
    } finally {}
    return result;
  }
  
  public String[][] getFieldInfo(String pageId) {
    DbOpt dbopt = null;
    String[][] result = (String[][])null;
    try {
      dbopt = new DbOpt();
      result = dbopt.executeQueryToStrArr2("select distinct a.ELT_TABLE,c.field_only,c.field_show,c.field_id,c.field_type from TELT a ,tarea b,tfield c,ttable d  where b.area_name='form1' and b.area_table=d.table_name and c.field_table=d.table_id and b.area_id=a.area_id and a.ELT_TABLE=c.field_name and a.PAGE_ID=" + 
          
          pageId, 5);
      dbopt.close();
    } catch (Exception e) {
      try {
        dbopt.close();
      } catch (SQLException sQLException) {}
      logger.error("CustomFormEJBBean error on getFieldInfo information:" + 
          e.getMessage());
    } finally {}
    return result;
  }
  
  public String getValue(String field, String infoId, String pageId) {
    DbOpt dbopt = null;
    String result = null;
    String type = "1000000";
    try {
      dbopt = new DbOpt();
      String table = dbopt.executeQueryToStr(
          "select AREA_TABLE from tarea where AREA_NAME='form1' and PAGE_ID=" + pageId);
      if (field == null || field.trim().length() < 1 || table == null || 
        table.trim().length() < 1 || infoId == null || 
        infoId.trim().length() < 1) {
        logger.error("CustomFormEJBBean error on getField information: wrong parameter!");
        dbopt.close();
      } else {
        result = dbopt.executeQueryToStr("select " + field + " from " + 
            table + " where " + table + "_ID=" + 
            infoId);
        type = dbopt.executeQueryToStr("select field_type from tfield,ttable where field_name='" + field + "' and field_table=table_id and table_name='" + table + "'");
        dbopt.close();
      } 
    } catch (Exception e) {
      try {
        dbopt.close();
      } catch (SQLException sQLException) {}
      logger.error("CustomFormEJBBean error on getValue information:" + e.getMessage());
      e.printStackTrace();
    } finally {}
    try {
      if ("1000001".equals(type))
        result = String.valueOf(Double.parseDouble(result)); 
    } catch (Exception exception) {}
    return result;
  }
  
  public static String getValue(String field, String infoId, String pageId, DbOpt dbopt) {
    String result = null;
    String type = "1000000";
    try {
      String table = dbopt.executeQueryToStr(
          "select AREA_TABLE from tarea where AREA_NAME='form1' and PAGE_ID=" + pageId);
      if (field == null || field.trim().length() < 1 || table == null || 
        table.trim().length() < 1 || infoId == null || 
        infoId.trim().length() < 1) {
        logger.error("CustomFormEJBBean error on getField information: wrong parameter!");
      } else {
        result = dbopt.executeQueryToStr("select " + field + " from " + 
            table + " where " + table + "_ID=" + 
            infoId);
        type = dbopt.executeQueryToStr("select field_type from tfield,ttable where field_name='" + field + "' and field_table=table_id and table_name='" + table + "'");
      } 
    } catch (Exception e) {
      logger.error("CustomFormEJBBean error on getValue information:" + e.getMessage());
    } finally {}
    try {
      if ("1000001".equals(type))
        result = String.valueOf(Double.parseDouble(result)); 
    } catch (Exception exception) {}
    if (result.toUpperCase().contains("<IMG"))
      result = result.replace("&quot;", ""); 
    return result;
  }
  
  public String getRemindValue(String field, String infoId, String pageId) {
    DbOpt dbopt = null;
    String result = null;
    String temp = "";
    String[] tempArr = (String[])null;
    try {
      dbopt = new DbOpt();
      String table = dbopt.executeQueryToStrPS(
          "select AREA_TABLE from tarea where AREA_NAME='form1' and PAGE_ID=?", new String[] { pageId });
      if (field == null || field.trim().length() < 1 || table == null || 
        table.trim().length() < 1 || infoId == null || 
        infoId.trim().length() < 1) {
        logger.error(
            "CustomFormEJBBean error on getField information: wrong parameter!");
        dbopt.close();
        return null;
      } 
      result = dbopt.executeQueryToStrPS("select " + field + " from " + 
          table + " where " + table + "_ID=?", new String[] { infoId });
      String fieldValue = result;
      String fieldShow = dbopt.executeQueryToStr(
          "select field_show from tfield,ttable where field_name = '" + 
          field + "' and table_name='" + table + "' and field_table=table_id");
      if ("103".equals(fieldShow)) {
        result = "";
        temp = dbopt.executeQueryToStrPS(
            "select field_value from tfield,ttable where field_name = ? and table_name='" + table + "' and field_table=table_id", new String[] { field });
        if (temp.startsWith("*")) {
          String parentId = temp.substring(temp.indexOf(".*[") + 3, temp.length() - 1);
          temp = (new BaseSetEJBBean()).getValue(parentId);
        } else if (temp.startsWith("#[interface:")) {
          temp = InitWorkFlowData.getShowContext(temp, fieldValue);
        } 
        if (temp == null || temp.trim().length() < 1) {
          tempArr = new String[0];
        } else {
          tempArr = temp.split(";");
        } 
        if (temp.startsWith("@")) {
          String table1 = temp.substring(temp.indexOf("][") + 2, 
              temp.length() - 1);
          String[][] data = (String[][])null;
          try {
            data = dbopt.executeQueryToStrArr2("select " + 
                table1.substring(0, table1.indexOf(".")) + 
                "_id," + 
                table1.substring(table1.indexOf(".") + 1, 
                  table1.length()) + " from " + 
                table1.substring(0, table1.indexOf(".")));
          } catch (Exception exception) {}
          if (data != null)
            for (int i = 0; i < data.length; i++) {
              if (fieldValue.indexOf(String.valueOf(data[i][0]) + ",") >= 0)
                result = data[i][0]; 
            }  
        } else {
          for (int i = 0; i < tempArr.length; i++) {
            if (tempArr[i] != null && 
              tempArr[i].trim().length() > 0 && 
              tempArr[i].indexOf("/") > 0 && 
              tempArr[i].indexOf("/") < tempArr[i].length() - 1 && 
              tempArr[i].split("/")[0].equals(fieldValue))
              result = tempArr[i].split("/")[1]; 
          } 
        } 
      } else if ("104".equals(fieldShow)) {
        result = "";
        temp = dbopt.executeQueryToStrPS(
            "select field_value from tfield,ttable where field_name = ? and table_name='" + table + "' and field_table=table_id", new String[] { field });
        if (temp.startsWith("*")) {
          String parentId = temp.substring(temp.indexOf(".*[") + 3, temp.length() - 1);
          temp = (new BaseSetEJBBean()).getValue(parentId);
        } else if (temp.startsWith("#[interface:")) {
          temp = InitWorkFlowData.getShowContext(temp, fieldValue);
        } 
        if (temp == null || temp.trim().length() < 1) {
          tempArr = new String[0];
        } else {
          tempArr = temp.split(";");
        } 
        if (temp.startsWith("@")) {
          String table1 = temp.substring(temp.indexOf("][") + 2, 
              temp.length() - 1);
          String[][] data = (String[][])null;
          try {
            data = dbopt.executeQueryToStrArr2("select " + 
                table1.substring(0, table1.indexOf(".")) + 
                "_id," + 
                table1.substring(table1.indexOf(".") + 1, 
                  table1.length()) + " from " + 
                table1.substring(0, table1.indexOf(".")));
          } catch (Exception exception) {}
          if (data != null)
            for (int i = 0; i < data.length; i++) {
              if (fieldValue.indexOf(String.valueOf(data[i][0]) + ",") >= 0)
                result = String.valueOf(result) + data[i][1]; 
            }  
        } else {
          for (int i = 0; i < tempArr.length; i++) {
            if (tempArr[i] != null && 
              tempArr[i].trim().length() > 0 && 
              tempArr[i].indexOf("/") >= 0 && 
              tempArr[i].indexOf("/") < 
              tempArr[i].length() - 1)
              if (fieldValue.indexOf(String.valueOf(tempArr[i].split("/")[0]) + 
                  ",") >= 0)
                result = String.valueOf(result) + tempArr[i].split("/")[1] + ",";  
          } 
        } 
      } else if ("105".equals(fieldShow)) {
        result = "";
        if (fieldValue.contains("@#@")) {
          result = fieldValue.split("@#@")[1];
        } else {
          temp = dbopt.executeQueryToStrPS(
              "select field_value from tfield,ttable where field_name = ? and table_name='" + table + "' and field_table=table_id", new String[] { field });
          if (temp.startsWith("*")) {
            String parentId = temp.substring(temp.indexOf(".*[") + 3, temp.length() - 1);
            temp = (new BaseSetEJBBean()).getValue(parentId);
          } else if (temp.startsWith("#[interface:")) {
            temp = InitWorkFlowData.getShowContext(temp, fieldValue);
          } 
          if (temp == null || temp.trim().length() < 1) {
            tempArr = new String[0];
          } else {
            tempArr = temp.split(";");
          } 
          if (temp.startsWith("@")) {
            String table1 = temp.substring(temp.indexOf("][") + 2, 
                temp.length() - 1);
            String[][] data = (String[][])null;
            try {
              String col = table.substring(table.indexOf(".") + 1, table.length());
              data = dbopt.executeQueryToStrArr2("select " + 
                  table1.substring(0, table1.indexOf(".")) + 
                  "_id," + 
                  col + " from " + 
                  table1.substring(0, table1.indexOf(".")) + " order by " + col);
            } catch (Exception exception) {}
            if (data != null)
              for (int i = 0; i < data.length; i++) {
                if (fieldValue.indexOf(String.valueOf(data[i][0]) + ",") >= 0) {
                  result = data[i][1];
                  break;
                } 
              }  
          } else {
            for (int i = 0; i < tempArr.length; i++) {
              if (tempArr[i] != null && 
                tempArr[i].trim().length() > 0 && 
                tempArr[i].indexOf("/") >= 0 && 
                tempArr[i].indexOf("/") < 
                tempArr[i].length() - 1 && 
                tempArr[i].split("/")[0].equals(
                  fieldValue)) {
                result = tempArr[i].split("/")[1];
                break;
              } 
            } 
          } 
        } 
      } 
      dbopt.close();
    } catch (Exception e) {
      try {
        if (dbopt != null)
          dbopt.close(); 
      } catch (SQLException sQLException) {}
      logger.error("CustomFormEJBBean error on getValue information:" + 
          e.getMessage());
    } 
    return result;
  }
  
  public String[][] setValue(String infoId, String pageId) {
    String[][] intinal = (String[][])null;
    DbOpt dbopt = null;
    if (pageId == null || pageId.length() < 1)
      return null; 
    if (infoId == null || infoId.length() < 1)
      return null; 
    try {
      dbopt = new DbOpt();
      String[] fieldStr = getField(pageId);
      String table = getTable(pageId);
      if (fieldStr != null && fieldStr.length >= 1)
        if (table != null && table.trim().length() >= 1) {
          String sqlHead = "select  ";
          String sqlFrom = " from " + table + " where " + table + "_id=" + 
            infoId;
          int index = 0;
          for (int i = 0; i < fieldStr.length; i++) {
            if (fieldStr[i] != null && !fieldStr[i].trim().equals("")) {
              index++;
              sqlHead = String.valueOf(sqlHead) + fieldStr[i] + ",";
            } 
          } 
          intinal = dbopt.executeQueryToStrArr2(String.valueOf(sqlHead.substring(0, 
                  sqlHead.length() - 1)) + sqlFrom, index);
          dbopt.close();
        }  
    } catch (Exception e) {
      try {
        dbopt.close();
      } catch (SQLException sQLException) {}
      logger.error("CustomFormBD error on setValue information:" + 
          e.getMessage());
    } finally {}
    return intinal;
  }
  
  public String getHTML(String field, String noWriteField, String domainId, String fieldId) {
    return getHTML(field, noWriteField, domainId, fieldId, (HttpServletRequest)null, "");
  }
  
  public String getHTMLBatchAdd(String field, String noWriteField, String domainId, String fieldId) {
    return getHTMLBatchAdd(field, noWriteField, domainId, fieldId, (HttpServletRequest)null, "");
  }
  
  public String getHTML(String field, String noWriteField, String domainId, String fieldId, HttpServletRequest request, String computeFieldStr) {
    String html = "";
    noWriteField = "," + noWriteField + ",";
    String temp = "";
    String[] tempArr = (String[])null;
    String[][] fieldTemp = (String[][])null;
    String type = "";
    Date now = new Date();
    DbOpt dbopt = null;
    boolean isNum = false;
    try {
      dbopt = new DbOpt();
      fieldTemp = dbopt.executeQueryToStrArr2("select a.field_id,b.show_id,field_type,FIELD_NULL,FIELD_DEFAULT,field_name,field_value,field_len,field_desname,a.field_table,a.field_changemethod,field_index,field_interfacetype,field_boxsearch,defaultShowTime from TSHOW b,TFIELD a where FIELD_SHOW=SHOW_ID and FIELD_ID=" + 
          fieldId + " and a.domain_id=" + domainId, 15);
      if (fieldTemp != null && fieldTemp.length > 0 && 
        fieldTemp[0][1] != null && 
        fieldTemp[0][1].trim().length() > 0) {
        String defaultValue, mustField, mustField1, valueTemp;
        boolean showDefaultTime;
        String timeStr, timeString, readMinutes, readSecond, readDate, readHours, temp1, temp2, mustWrite;
        HttpSession hSession = null;
        String userId, qian[], shenPi, shenPi1, datenew, disabled, disabled1, temp3, temp4, curEmpZhiWu, temp41, curEmpGangWei, temp42, jisuanSet, dateT;
        Object object1;
        List<String[]> orgList;
        String disabled3, temp7, select;
        Object object2;
        int s;
        List<String[]> orgList2;
        String str1, disabled2, str2, curEmpNumber;
        int i;
        String money, unit, upperField, temp_302;
        int maxlen = 9;
        if (!"".equals(fieldTemp[0][7]))
          maxlen = Integer.parseInt(fieldTemp[0][7]); 
        if (fieldTemp[0][2].equals("1000000") || fieldTemp[0][2].equals("1000001")) {
          type = "<input type=hidden name=" + field + "_type id=" + field + "_type value=number>";
          if ("1000000".equals(fieldTemp[0][2])) {
            type = String.valueOf(type) + "<input type=hidden name=" + field + "_num_type id=" + field + "_num_type value=1000000>";
          } else {
            type = String.valueOf(type) + "<input type=hidden name=" + field + "_num_type id=" + field + "_num_type value=1000001>";
          } 
          isNum = true;
          if (fieldTemp[0][2].equals("1000001")) {
            maxlen = 18;
          } else {
            maxlen = 9;
          } 
        } else {
          type = "<input type=hidden name=" + field + "_type id=" + field + "_type value=varchar>";
        } 
        if (!fieldTemp[0][2].equals("1000003")) {
          type = String.valueOf(type) + "<input type=hidden name=" + field + "_size id=" + field + "_size value=" + maxlen + ">";
        } else {
          type = String.valueOf(type) + "<input type=hidden name=" + field + "_size id=" + field + "_size value=1000000>";
        } 
        switch (Integer.parseInt(fieldTemp[0][1])) {
          case 406:
            html = "<input type=text name=" + 
              field + " id=" + field + " value=\"" + 
              fieldTemp[0][4] + "\" " + "readonly style=\"width:95%;border:0px solid white;font-size:1em;\">";
            html = String.valueOf(html) + "<input type=hidden name=wf_ua id=wf_ua value=" + field + ">";
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + html + "';}";
            break;
          case 101:
            defaultValue = "";
            if (fieldTemp[0][4] != null)
              defaultValue = fieldTemp[0][4].toString(); 
            if (defaultValue.startsWith("$[$[") && defaultValue.endsWith("]]")) {
              String dataSourceName = defaultValue.substring(4, defaultValue.indexOf("]$["));
              String sql = defaultValue.substring(defaultValue.indexOf("]$[") + 3, defaultValue.length() - 2);
              HttpSession httpSession = request.getSession();
              String str3 = httpSession.getAttribute("userId").toString();
              String orgId = httpSession.getAttribute("orgId").toString();
              String userAccount = httpSession.getAttribute("userAccount").toString();
              String userName = httpSession.getAttribute("userName").toString();
              sql = sql.replaceAll("\\@\\$\\@userId\\@\\$\\@", str3);
              sql = sql.replaceAll("\\@\\$\\@orgId\\@\\$\\@", orgId);
              sql = sql.replaceAll("\\@\\$\\@userAccount\\@\\$\\@", userAccount);
              sql = sql.replaceAll("\\@\\$\\@userName\\@\\$\\@", userName);
              DbOpt dbo = null;
              try {
                if (!"system".equals(dataSourceName)) {
                  dbo = new DbOpt(dataSourceName);
                  String dbType = SystemCommon.getUserDatabaseType(dataSourceName);
                  if (dbType.indexOf("oracle") >= 0) {
                    String lang = SystemCommon.getUserDatabaseLang(dataSourceName);
                    if (!"".equals(lang))
                      dbo.executeUpdate("ALTER SESSION SET NLS_LANGUAGE='" + lang + "'"); 
                  } 
                  defaultValue = dbo.executeQueryToStr(sql);
                  dbo.close();
                } else {
                  defaultValue = dbopt.executeQueryToStr(sql);
                } 
              } catch (Exception e3) {
                defaultValue = "";
                if (dbo != null)
                  dbo.close(); 
                e3.printStackTrace();
              } 
            } else if (defaultValue.startsWith("@[className") && defaultValue.endsWith("]")) {
              String className = defaultValue.substring(12, defaultValue.indexOf(";methodName:"));
              String classMethod = defaultValue.substring(defaultValue.indexOf(";methodName:") + 12, defaultValue.length() - 1);
              if (!"".equals(className) && !"".equals(classMethod))
                try {
                  FormReflection formReflection = new FormReflection();
                  Object obj = formReflection.execute(className, classMethod, request);
                  if (obj != null)
                    defaultValue = obj.toString(); 
                } catch (Exception e) {
                  defaultValue = "";
                  e.printStackTrace();
                }  
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<input type=text name=" + field + " id=" + field + " style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; class=flowInput value=\"" + 
                defaultValue + "\" readonly>";
            } else {
              String onblur = "";
              if ("1".equals(fieldTemp[0][11]))
                onblur = "setSTotalValue(this);"; 
              if (computeFieldStr.indexOf(field) >= 0)
                onblur = String.valueOf(onblur) + "setComputeForeignFieldNew(this);"; 
              html = "<input type=text style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em;  name=" + 
                field + " id=" + field + " value=\"" + 
                
                defaultValue + "\" class=flowInput " + (
                isNum ? ("  onblur=checkNum(this);checkSize(this);" + onblur) : ("maxlength=\"" + maxlen + "\"")) + ">";
              field = field.replaceAll("\n", "");
              if (fieldTemp[0][3].equals("1") && noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && noWriteField.indexOf(fieldTemp[0][5]) < 0)
                html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                  field + "><label class=mustFillcolor>*</label>"; 
            } 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + html + "';}";
            break;
          case 102:
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<input type=password style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; name=" + field + 
                " id=" + field + " class=flowInput readonly>";
            } else {
              html = "<input type=password style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; name=" + field + 
                " id=" + field + " class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this)  " + (
                isNum ? "  onblur=checkNum(this);checkSize(this);" : ("maxlength=\"" + maxlen + "\"")) + 
                ">";
              if (fieldTemp[0][3].equals("1") && noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && noWriteField.indexOf(fieldTemp[0][5]) < 0)
                html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + "><label class=mustFillcolor>*</label>"; 
            } 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + html + "';}";
            break;
          case 103:
            defaultValue = (fieldTemp[0][4] == null) ? "" : fieldTemp[0][4].toString();
            html = "";
            mustField = "";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && noWriteField.indexOf(fieldTemp[0][5]) < 0 && fieldTemp[0][3].equals("1")) {
              mustField = String.valueOf(mustField) + "&nbsp;<input type=hidden name=mustWrite id=mustWrite value=" + field + "><label class=mustFillcolor>*</label>";
            } else {
              fieldTemp[0][3].equals("1");
            } 
            temp = fieldTemp[0][6];
            if (temp == null || temp.trim().length() < 1)
              break; 
            if (temp.startsWith("@")) {
              String table = temp.substring(temp.indexOf("][") + 2, temp.length() - 1);
              String[][] data = (String[][])null;
              try {
                String tableNameSql = table.substring(0, table.indexOf("."));
                String fieldNameSql = table.substring(table.indexOf(".") + 1, table.length());
                data = dbopt.executeQueryToStrArr2("select " + tableNameSql + "_id," + fieldNameSql + " from " + 
                    tableNameSql + " where " + fieldNameSql + " is not null");
              } catch (Exception exception) {}
              if (data != null)
                for (int j = 0; j < data.length; j++) {
                  if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=radio style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + data[j][0] + " " + ((defaultValue.equals(data[j][0]) || j == 0) ? "checked" : "") + " disabled>';\n";
                  } else {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=radio style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + data[j][0] + " " + ((defaultValue.equals(data[j][0]) || j == 0) ? "checked" : "") + ">';\n";
                  } 
                  html = String.valueOf(html) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "').innerHTML+=" + field + "_temp;\ndocument.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "').innerHTML+='" + data[j][1] + ((j == data.length - 1) ? mustField : "") + "';}";
                }  
            } else if (temp.startsWith("$")) {
              String dataSourceName = "system";
              if (temp.indexOf("].$[") > 0) {
                dataSourceName = temp.substring(2, temp.indexOf("].$["));
                sql = temp.substring(temp.indexOf("].$[") + 4, temp.length() - 1);
              } else {
                sql = temp.substring(2, temp.length() - 1);
              } 
              String sql = InitWorkFlowData.getValueFromRequest(request, sql);
              String[][] data = (String[][])null;
              DbOpt dbo = null;
              try {
                if (!"system".equals(dataSourceName)) {
                  dbo = new DbOpt(dataSourceName);
                  String dbType = SystemCommon.getUserDatabaseType(dataSourceName);
                  if (dbType.indexOf("oracle") >= 0) {
                    String lang = SystemCommon.getUserDatabaseLang(dataSourceName);
                    if (!"".equals(lang))
                      dbo.executeUpdate("ALTER SESSION SET NLS_LANGUAGE='" + lang + "'"); 
                  } 
                  data = dbo.executeQueryToStrArr2(sql);
                  dbo.close();
                } else if (sql.length() > 0 && sql.indexOf("@$@selValue@$@") < 0) {
                  data = dbopt.executeQueryToStrArr2(sql);
                } 
              } catch (Exception e3) {
                if (dbo != null)
                  dbo.close(); 
                e3.printStackTrace();
              } 
              if (data != null)
                for (int j = 0; j < data.length; j++) {
                  if (noWriteField.indexOf(fieldTemp[0][0]) >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=radio style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + data[j][0] + " " + ((defaultValue.equals(data[j][0]) || j == 0) ? "checked" : "") + " disabled>';\n";
                  } else {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=radio style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + data[j][0] + " " + ((defaultValue.equals(data[j][0]) || j == 0) ? "checked" : "") + ">';\n";
                  } 
                  html = String.valueOf(html) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "').innerHTML+=" + field + "_temp;\ndocument.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "').innerHTML+='" + data[j][1] + ((j == data.length - 1) ? mustField : "") + "';}";
                }  
            } else if (temp.startsWith("*")) {
              String parentId = temp.substring(temp.indexOf(".*[") + 3, temp.length() - 1);
              tempArr = (new BaseSetEJBBean()).getValue(parentId).split(";");
              for (int j = 0; j < tempArr.length; j++) {
                if (tempArr[j] != null && tempArr[j].trim().length() > 0 && 
                  tempArr[j].indexOf("/") > 0 && tempArr[j].indexOf("/") < tempArr[j].length() - 1) {
                  if (noWriteField.indexOf(fieldTemp[0][0]) >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=radio style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + tempArr[j].split("/")[0] + " " + ((defaultValue.equals(tempArr[j].split("/")[0]) || j == 0) ? "checked" : "") + " disabled>';\n";
                  } else {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=radio style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + tempArr[j].split("/")[0] + " " + ((defaultValue.equals(tempArr[j].split("/")[0]) || j == 0) ? "checked" : "") + ">';\n";
                  } 
                  html = String.valueOf(html) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=" + field + "_temp;\ndocument.getElementById('" + 
                    fieldTemp[0][0] + "-" + field + "').innerHTML+='" + tempArr[j].split("/")[1] + ((j == tempArr.length - 1) ? mustField : "") + "';}";
                } 
              } 
            } else {
              if (temp.startsWith("#[interface:")) {
                HttpSession httpSession = request.getSession();
                Map<String, String> map = new HashMap<String, String>();
                map.put("tableId", request.getParameter("tableId"));
                map.put("processId", request.getParameter("processId"));
                map.put("userId", httpSession.getAttribute("userId").toString());
                map.put("userName", httpSession.getAttribute("userName").toString());
                map.put("orgId", httpSession.getAttribute("orgId").toString());
                map.put("orgName", httpSession.getAttribute("orgName").toString());
                map.put("corpId", httpSession.getAttribute("orgName").toString());
                map.put("userAccount", httpSession.getAttribute("userAccount").toString());
                temp = InitWorkFlowData.getKeyValue(temp, map, request);
              } 
              tempArr = temp.split(";");
              for (int j = 0; j < tempArr.length; j++) {
                if (tempArr[j] != null && tempArr[j].trim().length() > 0 && 
                  tempArr[j].indexOf("/") > 0 && tempArr[j].indexOf("/") < tempArr[j].length() - 1) {
                  if (noWriteField.indexOf(fieldTemp[0][0]) >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=radio style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + tempArr[j].split("/")[0] + " " + ((defaultValue.equals(tempArr[j].split("/")[0]) || j == 0) ? "checked" : "") + " disabled>';\n";
                  } else {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=radio style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + tempArr[j].split("/")[0] + " " + ((defaultValue.equals(tempArr[j].split("/")[0]) || j == 0) ? "checked" : "") + ">';\n";
                  } 
                  html = String.valueOf(html) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=" + field + "_temp;\ndocument.getElementById('" + 
                    fieldTemp[0][0] + "-" + field + "').innerHTML+='" + tempArr[j].split("/")[1] + ((j == tempArr.length - 1) ? mustField : "") + "';}";
                } 
              } 
            } 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';}" + html;
            break;
          case 104:
            defaultValue = (fieldTemp[0][4] == null) ? "" : fieldTemp[0][4].toString();
            type = "<input type=hidden name=" + field + "_type id=" + field + "_type value=combox>";
            mustField1 = "";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && noWriteField.indexOf(fieldTemp[0][5]) < 0 && fieldTemp[0][3].equals("1"))
              mustField1 = String.valueOf(mustField1) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + "><label class=mustFillcolor>*</label>"; 
            html = "";
            temp = fieldTemp[0][6];
            if (temp == null || temp.trim().length() < 1)
              break; 
            if (temp.startsWith("@")) {
              String table = temp.substring(temp.indexOf("][") + 2, temp.length() - 1);
              String[][] data = (String[][])null;
              try {
                data = dbopt.executeQueryToStrArr2("select " + table.substring(0, table.indexOf(".")) + 
                    "_id," + table.substring(table.indexOf(".") + 1, table.length()) + " from " + table.substring(0, table.indexOf(".")));
              } catch (Exception exception) {}
              if (data != null)
                for (int j = 0; j < data.length; j++) {
                  if (noWriteField.indexOf(fieldTemp[0][0]) >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=checkbox style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + data[j][0] + " " + (defaultValue.contains(String.valueOf(data[j][0]) + ",") ? "checked" : "") + " disabled>';\n";
                  } else {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=checkbox style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + data[j][0] + " " + (defaultValue.contains(String.valueOf(data[j][0]) + ",") ? "checked" : "") + ">';\n";
                  } 
                  html = String.valueOf(html) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=" + field + "_temp;\ndocument.getElementById('" + 
                    fieldTemp[0][0] + "-" + field + "').innerHTML+='" + data[j][1] + ((j == data.length - 1) ? mustField1 : "") + "';}";
                }  
            } else if (temp.startsWith("$")) {
              String dataSourceName = "system";
              if (temp.indexOf("].$[") > 0) {
                dataSourceName = temp.substring(2, temp.indexOf("].$["));
                sql = temp.substring(temp.indexOf("].$[") + 4, temp.length() - 1);
              } else {
                sql = temp.substring(2, temp.length() - 1);
              } 
              String sql = InitWorkFlowData.getValueFromRequest(request, sql);
              String[][] data = (String[][])null;
              DbOpt dbo = null;
              try {
                if (!"system".equals(dataSourceName)) {
                  dbo = new DbOpt(dataSourceName);
                  String dbType = SystemCommon.getUserDatabaseType(dataSourceName);
                  if (dbType.indexOf("oracle") >= 0) {
                    String lang = SystemCommon.getUserDatabaseLang(dataSourceName);
                    if (!"".equals(lang))
                      dbo.executeUpdate("ALTER SESSION SET NLS_LANGUAGE='" + lang + "'"); 
                  } 
                  data = dbo.executeQueryToStrArr2(sql);
                  dbo.close();
                } else if (sql.length() > 0 && sql.indexOf("@$@selValue@$@") < 0) {
                  data = dbopt.executeQueryToStrArr2(sql);
                } 
              } catch (Exception e3) {
                if (dbo != null)
                  dbo.close(); 
                e3.printStackTrace();
              } 
              if (data != null)
                for (int j = 0; j < data.length; j++) {
                  if (noWriteField.indexOf(fieldTemp[0][0]) >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=checkbox style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + data[j][0] + " " + (defaultValue.contains(String.valueOf(data[j][0]) + ",") ? "checked" : "") + " disabled>';\n";
                  } else {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=checkbox style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + data[j][0] + " " + (defaultValue.contains(String.valueOf(data[j][0]) + ",") ? "checked" : "") + ">';\n";
                  } 
                  html = String.valueOf(html) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=" + field + "_temp;\ndocument.getElementById('" + 
                    fieldTemp[0][0] + "-" + field + "').innerHTML+='" + data[j][1] + ((j == data.length - 1) ? mustField1 : "") + "';}";
                }  
            } else if (temp.startsWith("*")) {
              String parentId = temp.substring(temp.indexOf(".*[") + 3, temp.length() - 1);
              tempArr = (new BaseSetEJBBean()).getValue(parentId).split(";");
              for (int j = 0; j < tempArr.length; j++) {
                if (tempArr[j] != null && tempArr[j].trim().length() > 0 && tempArr[j].indexOf("/") >= 0 && tempArr[j].indexOf("/") < tempArr[j].length() - 1) {
                  if (noWriteField.indexOf(fieldTemp[0][0]) >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=checkbox style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + tempArr[j].split("/")[0] + " " + (defaultValue.contains(String.valueOf(tempArr[j].split("/")[0]) + ",") ? "checked" : "") + " disabled>';\n";
                  } else {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=checkbox style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + tempArr[j].split("/")[0] + " " + (defaultValue.contains(String.valueOf(tempArr[j].split("/")[0]) + ",") ? "checked" : "") + ">';\n";
                  } 
                  html = String.valueOf(html) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=" + 
                    field + "_temp;\ndocument.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "').innerHTML+='" + tempArr[j].split("/")[1] + ((j == tempArr.length - 1) ? mustField1 : "") + "';}";
                } 
              } 
            } else {
              if (temp.startsWith("#[interface:")) {
                HttpSession httpSession = request.getSession();
                Map<String, String> map = new HashMap<String, String>();
                map.put("tableId", request.getParameter("tableId"));
                map.put("processId", request.getParameter("processId"));
                map.put("userId", httpSession.getAttribute("userId").toString());
                map.put("userName", httpSession.getAttribute("userName").toString());
                map.put("orgId", httpSession.getAttribute("orgId").toString());
                map.put("orgName", httpSession.getAttribute("orgName").toString());
                map.put("corpId", httpSession.getAttribute("orgName").toString());
                map.put("userAccount", httpSession.getAttribute("userAccount").toString());
                temp = InitWorkFlowData.getKeyValue(temp, map, request);
              } 
              tempArr = temp.split(";");
              for (int j = 0; j < tempArr.length; j++) {
                if (tempArr[j] != null && tempArr[j].trim().length() > 0 && tempArr[j].indexOf("/") >= 0 && tempArr[j].indexOf("/") < tempArr[j].length() - 1) {
                  if (noWriteField.indexOf(fieldTemp[0][0]) >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=checkbox style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + tempArr[j].split("/")[0] + " " + (defaultValue.contains(String.valueOf(tempArr[j].split("/")[0]) + ",") ? "checked" : "") + " disabled>';\n";
                  } else {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=checkbox style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + tempArr[j].split("/")[0] + " " + (defaultValue.contains(String.valueOf(tempArr[j].split("/")[0]) + ",") ? "checked" : "") + ">';\n";
                  } 
                  html = String.valueOf(html) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=" + 
                    field + "_temp;\ndocument.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "').innerHTML+='" + tempArr[j].split("/")[1] + ((j == tempArr.length - 1) ? mustField1 : "") + "';}";
                } 
              } 
            } 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';}" + html;
            break;
          case 105:
            if ("1".equals(fieldTemp[0][13])) {
              html = "<div style=\"width:100%;float:left;white-space:nowrap;\"><div style=\"float:left;\">";
            } else {
              html = "";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = String.valueOf(html) + "<select style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; id=" + field + " name=" + field + " disabled>" + 
                "<option value=\"\">==请选择==</option>";
            } else {
              html = String.valueOf(html) + "<select style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; id=" + field + " name=" + field;
              if (Integer.parseInt(fieldTemp[0][10]) > 0)
                html = String.valueOf(html) + " onchange=\"" + field + "_onchange(this);\""; 
              if (fieldTemp[0][12] != null && "1".equals(fieldTemp[0][12]))
                html = String.valueOf(html) + " onchange=\"" + field + "_onchange(this);\""; 
              if (computeFieldStr.indexOf(field) >= 0)
                html = String.valueOf(html) + " onblur=checkSize(this); "; 
              html = String.valueOf(html) + "><option value=\"\">==请选择==</option>";
            } 
            defaultValue = "";
            if (fieldTemp[0][4] != null && !"".equals(fieldTemp[0][4].toString())) {
              defaultValue = fieldTemp[0][4].toString();
              HttpSession httpSession = request.getSession();
              String str3 = httpSession.getAttribute("userId").toString();
              String orgId = httpSession.getAttribute("orgId").toString();
              String userAccount = httpSession.getAttribute("userAccount").toString();
              String userName = httpSession.getAttribute("userName").toString();
              if (defaultValue.equalsIgnoreCase("@$@CURRENTYEAR@$@")) {
                defaultValue = String.valueOf((new Date()).getYear() + 1900);
              } else if (defaultValue.equalsIgnoreCase("@$@CURRENTMONTH@$@")) {
                defaultValue = String.valueOf((new Date()).getMonth() + 1);
              } else if (defaultValue.equals("@$@userId@$@")) {
                defaultValue = str3;
              } else if (defaultValue.equals("@$@orgId@$@")) {
                defaultValue = orgId;
              } else if (defaultValue.equals("@$@userAccount@$@")) {
                defaultValue = userAccount;
              } else if (defaultValue.equals("@$@userName@$@")) {
                defaultValue = userName;
              } else {
                defaultValue = InitWorkFlowData.getValueFromRequest(request, defaultValue);
              } 
            } 
            temp = fieldTemp[0][6];
            if (temp == null || temp.trim().length() < 1)
              break; 
            if (temp.startsWith("@")) {
              String table = temp.substring(temp.indexOf("][") + 2, temp.length() - 1);
              String[][] data = (String[][])null;
              try {
                String col = table.substring(table.indexOf(".") + 1, table.length());
                data = dbopt.executeQueryToStrArr2("select " + table.substring(0, table.indexOf(".")) + "_id," + col + " from " + table.substring(0, table.indexOf(".")) + " order by " + col);
              } catch (Exception exception) {}
              if (data != null)
                for (int j = 0; j < data.length; j++) {
                  html = String.valueOf(html) + "<option value=\"" + data[j][0] + "\"";
                  if (defaultValue.equals(data[j][0]))
                    html = String.valueOf(html) + " selected "; 
                  html = String.valueOf(html) + ">" + data[j][1] + "</option>";
                }  
            } else if (temp.startsWith("$")) {
              String dataSourceName = "system";
              if (temp.indexOf("].$[") > 0) {
                dataSourceName = temp.substring(2, temp.indexOf("].$["));
                sql = temp.substring(temp.indexOf("].$[") + 4, temp.length() - 1);
              } else {
                sql = temp.substring(2, temp.length() - 1);
              } 
              String sql = sql.replaceAll("@@submitPerson@@", request.getSession().getAttribute("userName").toString());
              sql = InitWorkFlowData.getValueFromRequest(request, sql);
              String[][] data = (String[][])null;
              DbOpt dbo = null;
              try {
                if (!"system".equals(dataSourceName)) {
                  dbo = new DbOpt(dataSourceName);
                  String dbType = SystemCommon.getUserDatabaseType(dataSourceName);
                  if (dbType.indexOf("oracle") >= 0) {
                    String lang = SystemCommon.getUserDatabaseLang(dataSourceName);
                    if (!"".equals(lang))
                      dbo.executeUpdate("ALTER SESSION SET NLS_LANGUAGE='" + lang + "'"); 
                  } 
                  data = dbo.executeQueryToStrArr2(sql);
                  dbo.close();
                } else if (sql.length() > 0 && sql.indexOf("@$@selValue@$@") < 0) {
                  data = dbopt.executeQueryToStrArr2(sql);
                } 
              } catch (Exception e3) {
                System.out.println("SQL语句错误！");
                if (dbo != null)
                  dbo.close(); 
                e3.printStackTrace();
              } 
              if (data != null)
                for (int j = 0; j < data.length; j++) {
                  html = String.valueOf(html) + "<option value=\"" + data[j][0] + "\"";
                  if (defaultValue.equals(data[j][0]))
                    html = String.valueOf(html) + " selected "; 
                  html = String.valueOf(html) + ">" + data[j][1] + "</option>";
                }  
            } else if (temp.startsWith("*")) {
              String parentId = temp.substring(temp.indexOf(".*[") + 3, temp.length() - 1);
              tempArr = (new BaseSetEJBBean()).getValue(parentId).split(";");
              for (int j = 0; j < tempArr.length; j++) {
                if (tempArr[j] != null && tempArr[j].trim().length() > 0 && tempArr[j].indexOf("/") >= 0 && tempArr[j].indexOf("/") < tempArr[j].length() - 1) {
                  html = String.valueOf(html) + "<option value=\"" + tempArr[j].split("/")[0] + "\"";
                  if (defaultValue.equals(tempArr[j].split("/")[0]))
                    html = String.valueOf(html) + " selected "; 
                  html = String.valueOf(html) + ">" + tempArr[j].split("/")[1] + "</option>";
                } 
              } 
            } else {
              if (temp.startsWith("#[interface:")) {
                HttpSession httpSession = request.getSession();
                Map<String, String> map = new HashMap<String, String>();
                map.put("tableId", request.getParameter("tableId"));
                map.put("processId", request.getParameter("processId"));
                map.put("userId", httpSession.getAttribute("userId").toString());
                map.put("userName", httpSession.getAttribute("userName").toString());
                map.put("orgId", httpSession.getAttribute("orgId").toString());
                map.put("orgName", httpSession.getAttribute("orgName").toString());
                map.put("corpId", httpSession.getAttribute("orgName").toString());
                map.put("userAccount", httpSession.getAttribute("userAccount").toString());
                map.put("submitPerson", httpSession.getAttribute("userName").toString());
                temp = InitWorkFlowData.getKeyValue(temp, map, request);
              } 
              tempArr = temp.split(";");
              for (int j = 0; j < tempArr.length; j++) {
                if (tempArr[j] != null && tempArr[j].trim().length() > 0 && tempArr[j].indexOf("/") >= 0 && tempArr[j].indexOf("/") < tempArr[j].length() - 1) {
                  html = String.valueOf(html) + "<option value=\"" + tempArr[j].split("/")[0] + "\"";
                  if (defaultValue.equals(tempArr[j].split("/")[0]))
                    html = String.valueOf(html) + " selected "; 
                  html = String.valueOf(html) + ">" + tempArr[j].split("/")[1] + "</option>";
                } 
              } 
            } 
            html = String.valueOf(html) + "</select>";
            if ("1".equals(fieldTemp[0][13]))
              html = String.valueOf(html) + "</div>"; 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && noWriteField.indexOf(fieldTemp[0][5]) < 0 && fieldTemp[0][3].equals("1")) {
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + "><label class=mustFillcolor ";
              if ("1".equals(fieldTemp[0][13])) {
                if (BrowserJudge.isMSIE(request)) {
                  html = String.valueOf(html) + "style=\"padding-left:15px;padding-right:2px;\">";
                } else {
                  html = String.valueOf(html) + "style=\"padding-left:2px;padding-right:10px;\">";
                } 
              } else {
                html = String.valueOf(html) + ">";
              } 
              html = String.valueOf(html) + "*</label>";
            } 
            if ("1".equals(fieldTemp[0][13]))
              html = String.valueOf(html) + "</div>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+='" + html + "';}";
            break;
          case 107:
            temp = fieldTemp[0][6];
            type = "<input type=hidden name=" + field + "_type id=" + field + "_type value=jsdate>";
            valueTemp = "";
            if (fieldTemp[0][4] != null && fieldTemp[0][4].length() == 10 && fieldTemp[0][4].indexOf("-") > 0 && 
              fieldTemp[0][4].lastIndexOf("-") > 0 && 
              fieldTemp[0][4].lastIndexOf("-") - fieldTemp[0][4].indexOf("-") == 3) {
              valueTemp = fieldTemp[0][4];
            } else {
              valueTemp = String.valueOf(String.valueOf(now.getYear() + 1900)) + 
                "-" + ((now.getMonth() >= 9) ? String.valueOf(now.getMonth() + 1) : ("0" + String.valueOf(now.getMonth() + 1))) + 
                "-" + ((now.getDate() > 9) ? String.valueOf(now.getDate()) : ("0" + String.valueOf(now.getDate())));
            } 
            showDefaultTime = false;
            if (fieldTemp[0][14] == null) {
              valueTemp = "";
            } else if ("".equals(fieldTemp[0][14])) {
              showDefaultTime = true;
              SimpleDateFormat ymd = new SimpleDateFormat("yyyy-MM-dd");
              valueTemp = ymd.format(now);
            } else if (fieldTemp[0][14].toString().indexOf("#") > 0) {
              if ("1".equals(fieldTemp[0][14].toString().split("#")[0])) {
                showDefaultTime = true;
                if ((fieldTemp[0][14].toString().split("#")).length > 1 && !"".equals(fieldTemp[0][14].toString().split("#")[1]))
                  valueTemp = fieldTemp[0][14].toString().split("#")[1]; 
              } else {
                valueTemp = "";
              } 
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              if (!showDefaultTime)
                valueTemp = ""; 
              type = String.valueOf(type) + "<span>" + valueTemp + "</span>";
              type = String.valueOf(type) + "<input type=hidden name=" + field + " id=" + field + " value='" + valueTemp + "' />";
            } else {
              type = String.valueOf(type) + "<input readonly=\\\"readonly\\\" type=text class=flowInput style=\\\"width:75px;font-size:1em;\\\"  onmouseover=setStyle(this) onmouseout=setStyle(this) name=" + 
                field + " id=" + field + " onclick=setDay(this) value=\\\"" + 
                valueTemp + "\\\"  style=\\\"background:url('/jsoa/eform/images/down_arrow.gif');\\\">";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              type = String.valueOf(type) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + ">" + 
                "<label class=mustFillcolor>*</label>"; 
            html = String.valueOf(html) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML=\"" + type + "\";}";
            if (!"".equals(fieldTemp[0][4]) && !"null".equalsIgnoreCase((new StringBuilder(String.valueOf(fieldTemp[0][4]))).toString()) && (
              new StringBuilder(String.valueOf(fieldTemp[0][4]))).toString().contains(").beforeDate("))
              html = String.valueOf(html) + "\ndocument.getElementById('dateCompare').value=document.getElementById('dateCompare').value+'{" + fieldTemp[0][4] + "}';\n"; 
            break;
          case 108:
            type = "<input type=hidden name=" + field + "_type id=" + field + "_type value=jstime>";
            timeStr = (new SimpleDateFormat("HH:mm:ss")).format(now);
            showDefaultTime = false;
            if (fieldTemp[0][14] != null) {
              if (fieldTemp[0][14].toString().indexOf("#") > 0)
                if ("1".equals(fieldTemp[0][14].toString().split("#")[0])) {
                  showDefaultTime = true;
                  if ((fieldTemp[0][14].toString().split("#")).length > 1 && !"".equals(fieldTemp[0][14].toString().split("#")[1]))
                    timeStr = fieldTemp[0][14].toString().split("#")[1]; 
                } else {
                  timeStr = "";
                }  
            } else {
              timeStr = "";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<span>" + timeStr + "</span><input type=hidden id=" + field + " name=" + field + " value=\\\"" + timeStr + "\\\" />";
            } else if (SystemCommon.getSYWorkflowHR() == 1) {
              html = "<INPUT type=text class=flowInput onmouseover=setStyle(this) readonly=true onmouseout=setStyle(this) id=" + 
                field + 
                " name=" + field + 
                " onclick='showDateTimeBar(this, \\\"h:n:s\\\", \\\"" + 
                String.valueOf(now.getMonth() + 1) + "/" + 
                String.valueOf(now.getDate() + 1) + "/" + 
                String.valueOf(now.getYear() + 1900) + " " + 
                String.valueOf(now.getHours()) + ":" + 
                String.valueOf(now.getMinutes()) + ":" + 
                String.valueOf(now.getSeconds()) + "\\\", " + 
                "test, \\\"hello world\\\")' name=" + 
                field + " id=" + 
                field + " value=\\\"00:00:00 \\\" style=\\\"background:url('/jsoa/eform/images/down_arrow.gif');font-size:1em;\\\">";
            } else {
              html = "<INPUT type=text readonly=\\\"readonly\\\" class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) id=" + 
                field + 
                " name=" + field + 
                " onclick='showDateTimeBar(this, \\\"h:n:s\\\", \\\"" + 
                String.valueOf(now.getMonth() + 1) + "/" + 
                String.valueOf(now.getDate() + 1) + "/" + 
                String.valueOf(now.getYear() + 1900) + " " + 
                String.valueOf(now.getHours()) + ":" + 
                String.valueOf(now.getMinutes()) + ":" + 
                String.valueOf(now.getSeconds()) + "\\\", " + 
                "test, \\\"hello world\\\")' name=" + 
                field + " id=" + 
                field + " value=\\\"" + 
                timeStr + "\\\" style=\\\"background:url('/jsoa/eform/images/down_arrow.gif');font-size:1em;\\\">";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + "><label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=\"" + html + "\";}";
            break;
          case 109:
            type = "<input type=hidden name=" + field + "_type id=" + field + "_type value=datetime>";
            timeString = "";
            readMinutes = "";
            readSecond = "";
            readDate = "";
            readHours = "";
            showDefaultTime = false;
            if (fieldTemp[0][14] != null)
              if ("".equals(fieldTemp[0][14])) {
                SimpleDateFormat ymdhms = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                timeString = ymdhms.format(now);
                showDefaultTime = true;
              } else if (fieldTemp[0][14].toString().indexOf("#") > 0) {
                if ("1".equals(fieldTemp[0][14].toString().split("#")[0])) {
                  showDefaultTime = true;
                  if ((fieldTemp[0][14].toString().split("#")).length > 1 && !"".equals(fieldTemp[0][14].toString().split("#")[1])) {
                    timeString = fieldTemp[0][14].toString().split("#")[1];
                    readDate = timeString.substring(0, timeString.indexOf(" "));
                    readHours = timeString.substring(timeString.indexOf(" ") + 1);
                    readHours = readHours.substring(0, readHours.indexOf(":"));
                    if ((timeString.trim().split(" ")[1].split(":")).length >= 3) {
                      readMinutes = timeString.substring(timeString.indexOf(":") + 1, timeString.lastIndexOf(":"));
                      readSecond = timeString.substring(timeString.lastIndexOf(":") + 1);
                    } else {
                      readMinutes = timeString.substring(timeString.indexOf(":") + 1);
                      readSecond = "00";
                    } 
                  } 
                } 
              }  
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              if (showDefaultTime) {
                readMinutes = (now.getMinutes() > 9) ? 
                  String.valueOf(now.getMinutes()) : (
                  "0" + String.valueOf(now.getMinutes()));
                readSecond = (now.getSeconds() > 9) ? 
                  String.valueOf(now.getSeconds()) : (
                  "0" + String.valueOf(now.getSeconds()));
                readHours = (now.getHours() > 9) ? 
                  String.valueOf(now.getHours()) : (
                  "0" + String.valueOf(now.getHours()));
                readDate = String.valueOf(String.valueOf(now.getYear() + 1900)) + 
                  "-" + ((now.getMonth() >= 9) ? 
                  String.valueOf(now.getMonth() + 1) : ("0" + 
                  String.valueOf(now.getMonth() + 1))) + "-" + (
                  (now.getDate() > 9) ? 
                  String.valueOf(now.getDate()) : ("0" + String.valueOf(now.getDate())));
                timeString = String.valueOf(readDate) + " " + readHours + ":" + readMinutes + ":" + readSecond;
              } 
              type = String.valueOf(type) + "<span>" + timeString + "</span>";
              type = String.valueOf(type) + "<input type=hidden id=" + field + " name=" + field + " value='" + readDate + "'>";
              type = String.valueOf(type) + "<input type=hidden id=" + field + "hours name=" + field + "hours value='" + readHours + "'>";
              type = String.valueOf(type) + "<input type=hidden id=" + field + "minutes name=" + field + "minutes value='" + readMinutes + "'>";
              type = String.valueOf(type) + "<input type=hidden id=" + field + "second name=" + field + "second value='" + readSecond + "'>";
            } else {
              String dateString = "";
              int nowHour = 0;
              int nowMinute = 0;
              int nowSecond = 0;
              if (showDefaultTime)
                if ("".equals(timeString)) {
                  dateString = String.valueOf(String.valueOf(now.getYear() + 1900)) + "-" + ((now.getMonth() >= 9) ? String.valueOf(now.getMonth() + 1) : ("0" + String.valueOf(now.getMonth() + 1))) + 
                    "-" + ((now.getDate() > 9) ? String.valueOf(now.getDate()) : ("0" + String.valueOf(now.getDate())));
                  nowHour = now.getHours();
                  nowMinute = now.getMinutes();
                  nowSecond = now.getSeconds();
                } else {
                  dateString = timeString.split(" ")[0];
                  nowHour = Integer.parseInt(timeString.split(" ")[1].split(":")[0]);
                  nowMinute = Integer.parseInt(timeString.split(" ")[1].split(":")[1]);
                  nowSecond = Integer.parseInt(timeString.split(" ")[1].split(":")[2]);
                }  
              type = String.valueOf(type) + "<input type=text readonly=\\\"readonly\\\" size=12 style=font-size:1em; class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) name=" + 
                field + " id=" + field + " onclick=setDay(this) value='" + 
                dateString + "' style=\\\"background:url('/jsoa/eform/images/down_arrow.gif');\\\">";
              type = String.valueOf(type) + "日&nbsp;<select name=" + field + "hours style=font-size:1em; id=" + field + "hours>";
              int j;
              for (j = 0; j < 24; j++) {
                String hours = "";
                if (j >= 0 && j < 10) {
                  hours = "0" + String.valueOf(j);
                } else {
                  hours = String.valueOf(j);
                } 
                type = String.valueOf(type) + "<option value=" + String.valueOf(hours) + ((j == nowHour) ? " selected" : "") + ">" + String.valueOf(hours) + "</option>";
              } 
              type = String.valueOf(type) + "</select>";
              type = String.valueOf(type) + "时&nbsp;<select name=" + field + "minutes style=font-size:1em; id=" + field + "minutes>";
              for (j = 0; j < 60; j++) {
                String minute = "";
                if (j >= 0 && j < 10) {
                  minute = "0" + String.valueOf(j);
                } else {
                  minute = String.valueOf(j);
                } 
                type = String.valueOf(type) + "<option value=" + String.valueOf(minute) + ((j == nowMinute) ? " selected" : "") + ">" + String.valueOf(minute) + "</option>";
              } 
              type = String.valueOf(type) + "</select>分&nbsp;";
              if (!"pengchi".equals(SystemCommon.getCustomerName())) {
                type = String.valueOf(type) + "<select name=" + field + "second style=font-size:1em; id=" + field + "second>";
                for (j = 0; j < 60; j++) {
                  String second = "";
                  if (j >= 0 && j < 10) {
                    second = "0" + String.valueOf(j);
                  } else {
                    second = String.valueOf(j);
                  } 
                  type = String.valueOf(type) + "<option value=" + String.valueOf(second) + ((j == nowSecond) ? " selected" : "") + ">" + String.valueOf(second) + "</option>";
                } 
                type = String.valueOf(type) + "</select>秒&nbsp;";
              } 
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              type = String.valueOf(type) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                field + 
                "><label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + 
              "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML=\"" + type + "\";}";
            if (!"".equals(fieldTemp[0][4]) && !"null".equalsIgnoreCase((new StringBuilder(String.valueOf(fieldTemp[0][4]))).toString()) && fieldTemp[0][4].contains(").beforeDate("))
              html = String.valueOf(html) + "\ndocument.getElementById('dateCompare').value=document.getElementById('dateCompare').value+'{" + fieldTemp[0][4] + "}';\n"; 
            break;
          case 110:
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<textarea class=flowInput id=" + field + 
                " name=" + field + 
                " style=\"width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em;\" rows=\"6\" readonly=\"readonly\">" + 
                fieldTemp[0][4] + "</textarea>";
            } else {
              html = "<textarea class=flowInput  onblur=checkSize(this); onmouseover=setStyle(this) onmouseout=setStyle(this) id=" + field + 
                " name=" + field + 
                " style=\"width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em;\" rows=\"6\">" + 
                fieldTemp[0][4] + "</textarea>";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + ">" + 
                "<label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+='" + html + "';}";
            break;
          case 111:
            if (fieldTemp[0][6] != null && fieldTemp[0][6].startsWith("@") && !fieldTemp[0][6].startsWith("@$@")) {
              if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
                noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
                html = "<input type=text  class=flowInput id=" + 
                  field + " name=" + field + " readonly style=width:95%;font-size:1em; " + 
                  "onblur=checkSize(this);bianhaoBlur(this," + fieldTemp[0][0] + ",\"" + fieldTemp[0][6] + "\"); >";
              } else {
                html = "<select style=font-size:1em; onchange=getAutoCode(this,\\\"" + 
                  field + "\\\")><option value=0>==请选择==</option>";
                String tableTemp = fieldTemp[0][6].split("=")[0];
                String table = tableTemp.substring(tableTemp
                    .indexOf("][") + 2, 
                    tableTemp.length() - 1);
                String[][] data = (String[][])null;
                try {
                  data = dbopt.executeQueryToStrArr2(
                      "select " + table.substring(0, table.indexOf(".")) + "_id," + table.substring(table.indexOf(".") + 1, table.length()) + 
                      " from " + table.substring(0, table.indexOf(".")));
                } catch (Exception e3) {
                  e3.printStackTrace();
                } 
                if (data != null)
                  for (int j = 0; j < data.length; j++)
                    html = String.valueOf(html) + "<option value=\"" + data[j][1] + "\">" + data[j][1] + "</option>";  
                html = String.valueOf(html) + "</select><input type=text style=font-size:1em; class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) id=" + 
                  field + " name=" + field + " readonly";
                if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
                  noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
                  fieldTemp[0][3].equals("1")) {
                  html = String.valueOf(html) + " style=width:80%; ><input type=hidden name=mustWrite id=mustWrite value=" + 
                    field + ">" + 
                    "<label class=mustFillcolor>*</label>";
                } else {
                  html = String.valueOf(html) + " style=width:95%; >";
                } 
              } 
              html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
                "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';" + 
                "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+='" + html + "';}";
              break;
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<input type=text  class=flowInput id=" + field + " name=" + field + 
                " value=\"" + getAutoCode(field, fieldId) + "\" style=width:95%;font-size:1em; readonly>";
            } else {
              html = "<input type=text class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) id=" + 
                field + " name=" + field + " value=\"" + getAutoCode(field, fieldId) + "\" ";
              if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
                noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
                fieldTemp[0][3].equals("1")) {
                html = String.valueOf(html) + " style=width:80%;font-size:1em; onblur=checkSize(this);bianhaoBlur(this," + fieldTemp[0][0] + ",\"" + fieldTemp[0][6] + "\"); >" + 
                  "<input type=hidden name=mustWrite id=mustWrite value=" + field + ">" + 
                  "<label class=mustFillcolor>*</label>";
              } else {
                html = String.valueOf(html) + " style=width:95%; onblur=checkSize(this);bianhaoBlur(this," + fieldTemp[0][0] + ",\"" + fieldTemp[0][6] + "\"); >";
              } 
            } 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+='" + html + "';}";
            break;
          case 130:
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<input type=text  class=flowInput id=" + field + " name=" + field + 
                " value=\"\" style=width:95%;font-size:1em; readonly >";
            } else {
              html = "<input type=hidden id=" + field + "_codeId name=" + field + 
                "_codeId value=\"\">";
              html = String.valueOf(html) + "<input type=text  class=flowInput id=" + field + " name=" + field + 
                " value=\"\" style=width:85%;font-size:1em;vertical-align:middle; readonly  ><img  title=选择编号  src=/jsoa/images/bianhaoicon.gif  onclick=getNewAutoCode(this)  style=cursor:pointer;vertical-align:middle />";
            } 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+='" + html + "';}";
            break;
          case 112:
            break;
          case 113:
            temp1 = "";
            temp2 = "";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              temp1 = String.valueOf(temp1) + "<input type=hidden id=" + field + " name=" + field + " value='' >";
            } else {
              temp1 = "<input type=hidden id=" + field + " name=" + field + ">";
              String editType = "edit8";
              if (BrowserJudge.isMSIE(request))
                editType = "edit"; 
              temp2 = "<IFRAME id='" + field + "_html' src='/jsoa/public/" + editType + "/ewebeditor.htm?id=" + field + "&style=coolblue&lang=zh_cn' " + 
                "frameborder=0 scrolling='no' width='98%' height='350'></IFRAME>" + 
                "<input type=hidden name=hasHtml id=hasHtml value=" + field + ">";
              if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
                noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
                fieldTemp[0][3].equals("1"))
                temp2 = String.valueOf(temp2) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + ">" + 
                  "<label class=mustFillcolor>*</label>"; 
            } 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=\"" + temp1 + "\";" + (
              temp2.equals("") ? "" : (
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=\"" + temp2 + "\";")) + 
              "}";
            break;
          case 114:
            break;
          case 115:
            type = "<input type=hidden name=" + field + "_type id=" + field + "_type value=file>";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<IFRAME name=" + field + " id=" + field + " src='/jsoa/eform/upload.jsp?fileName=" + 
                field + "_fileName&saveName=" + field + "_saveName' frameborder=0 marginwidth='0' marginheight='0'" + 
                " scrolling='auto' width='98%' height='150' style=display:none></IFRAME>";
            } else {
              html = "<IFRAME name=" + field + " id=" + field + " src='/jsoa/eform/upload.jsp?fileName=" + 
                field + "_fileName&saveName=" + field + "_saveName' frameborder=0" + 
                " marginwidth='0' marginheight='0' scrolling='auto' width='98%' height='30'></IFRAME>";
            } 
            html = String.valueOf(html) + "<input type=hidden name=" + field + "_fileName id=" + field + "_fileName>";
            html = String.valueOf(html) + "<input type=hidden name=" + field + "_saveName id=" + field + "_saveName>";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                field + "_fileName><label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "')){\n " + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=\"" + html + "\";}";
            break;
          case 116:
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<input type=text class=flowInput id=" + field + " name=" + field + " readonly>";
            } else {
              html = "<input type=hidden id=" + field + " name=" + field + ">";
              html = String.valueOf(html) + "<input type=\\\"button\\\" id=_weboffice_view name=_weboffice_view  class=btnButton4font onclick=\\\"editOffices('" + 
                field + "','doc','" + fieldTemp[0][6] + "','-1');\\\" value=\\\"编辑正文\\\" />";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + ">" + 
                "<label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=\"" + html + "\";}";
            break;
          case 117:
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<input type=text class=flowInput style=font-size:1em; id=" + field + " name=" + field + " readonly>";
            } else {
              html = "<input type=hidden id=" + field + " name=" + field + ">";
              html = String.valueOf(html) + "<input type=\\\"button\\\" id=_weboffice_view name=_weboffice_view class=btnButton4font onclick=\\\"editOffices('" + 
                field + "','xls','" + fieldTemp[0][6] + "','0');\\\" value=\\\"编辑正文\\\" />";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + ">" + 
                "<label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=\"" + html + "\";}";
            break;
          case 118:
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<input type=text style=font-size:1em; class=flowInput id=" + field + " name=" + field + " readonly>";
            } else {
              html = "<input type=hidden id=" + field + " name=" + field + ">";
              html = String.valueOf(html) + "<input type=\\\"button\\\" style=font-size:1em; id=_weboffice_view name=_weboffice_view class=btnButton4font onclick=\\\"editOffices('" + 
                field + "','wps','" + fieldTemp[0][6] + "','0');\\\" value=\"编辑正文\" />";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + ">" + 
                "<label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=\"" + html + "\";}";
            break;
          case 121:
            mustWrite = "";
            hSession = request.getSession();
            userId = hSession.getAttribute("userId").toString();
            qian = qianMingTu(userId);
            shenPi = "'<input type=\"hidden\" name=\"" + field + "\" id=\"" + field + "\" value=\"\" />';";
            if (noWriteField.indexOf("," + fieldId + ",") < 0 && 
              noWriteField.indexOf(field) < 0) {
              if (fieldTemp[0][3].equals("1") && noWriteField.indexOf("," + fieldId + ",") < 0 && noWriteField.indexOf(field) < 0)
                mustWrite = String.valueOf(mustWrite) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + ">" + 
                  "<label class=mustFillcolor>*</label>"; 
              shenPi = "'<input type=hidden name=" + field + "_type id=" + field + "_type value=varchar>" + 
                "<input type=hidden name=" + field + "_size id=" + field + "_size value=255>";
              String src = "0000";
              if (qian[1].length() > 6 && qian[1].substring(4, 5).equals("_")) {
                src = qian[1].substring(0, 4);
              } else {
                src = "0000";
              } 
              if ("".equals(qian[1])) {
                shenPi = String.valueOf(shenPi) + "<input type=\"text\" style=font-size:1em; name=\"" + field + "\" id=\"" + field + "\" value=\"\" />" + mustWrite + "';";
                shenPi = String.valueOf(shenPi) + "document.getElementById(\"" + field + "\").value=document.all.user_Name.value;";
              } else {
                shenPi = String.valueOf(shenPi) + "<input type=\"hidden\" name=\"" + field + "\" id=\"" + field + "\" value=\"*id*" + userId + "\" />" + 
                  "<img src=\"/jsoa/upload/" + src + "/peopleinfo/" + qian[1] + "\" style=\"width:80px;\" > " + mustWrite + "';";
              } 
            } 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML=" + shenPi + "}";
            break;
          case 122:
            shenPi1 = "";
            if (noWriteField.indexOf("," + fieldId + ",") < 0 && 
              noWriteField.indexOf(field) < 0)
              shenPi1 = "document.getElementById(\"" + field + "_span\").innerHTML=orgNameShow(document.all.org_Name.value," + SystemCommon.getInnerShow() + ");" + 
                "document.getElementById(\"" + field + "\").value=document.all.org_Name.value;"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + 
              "<input type=hidden name=" + field + "_type id=" + field + "_type value=varchar>" + 
              "<input type=hidden name=" + field + "_size id=" + field + "_size value=255>" + 
              "<input type=\"hidden\" name=\"" + field + "\" id=\"" + field + "\" value=\"\" />" + 
              "<span id=\"" + field + "_span\"></span>';" + shenPi1 + "}";
            break;
          case 123:
            datenew = "";
            if (noWriteField.indexOf("," + fieldId + ",") < 0 && 
              noWriteField.indexOf(field) < 0) {
              temp = fieldTemp[0][6];
              if (temp.equals(""))
                temp = "yyyy-MM-dd HH:mm"; 
              SimpleDateFormat format = new SimpleDateFormat(temp);
              datenew = format.format(new Date());
            } 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + 
              "<input type=hidden name=" + field + "_type id=" + field + "_type value=varchar>" + 
              "<input type=hidden name=" + field + "_size id=" + field + "_size value=255>" + 
              "<input type=\"hidden\" name=\"" + field + "\" id=\"" + field + "\" value=\"" + datenew + "\" />" + datenew + "';}";
            break;
          case 199:
            disabled = "";
            if (noWriteField.indexOf(fieldTemp[0][0]) >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0)
              disabled = " disabled "; 
            html = "<input type=hidden name=" + field + "_type id=" + field + "_type value=varchar>" + 
              "<input type=hidden name=" + field + "_size id=" + field + "_size value=255>";
            html = String.valueOf(html) + "<input type=hidden id=" + field + " name=" + field + " value=\"\" />" + 
              "标题：<input type=text id=" + field + "_title name=" + field + "_title value=\"\" onblur=comURL(\"" + field + "\"); style=\"width:20%;font-size:1em;\" " + disabled + " />" + 
              "&nbsp;链接：<input type=text id=" + field + "_url name=" + field + "_url  value=\"" + fieldTemp[0][4] + "\" onblur=comURL(\"" + field + "\"); " + 
              "style=font-size:1em;width:" + (fieldTemp[0][3].equals("1") ? "20" : "30") + "%" + 
              " class=flowInput  maxlength=\"" + maxlen + "\" " + disabled + ">" + ((fieldTemp[0][3].equals("1") && noWriteField.indexOf("," + fieldId + ",") < 0 && noWriteField.indexOf(field) < 0) ? (
              "<input type=hidden name=mustWrite id=mustWrite value=" + field + 
              "_title><input type=hidden name=mustWrite id=mustWrite value=" + field + 
              "_url><label class=mustFillcolor>*</label>") : "");
            html = "\n\nif(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{\n" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + html + "';\n}\n\n";
            break;
          case 200:
            disabled1 = "";
            if (noWriteField.indexOf(fieldTemp[0][0]) >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0)
              disabled1 = " disabled "; 
            html = "<input type=hidden name=" + field + "_type id=" + field + "_type value=varchar>" + 
              "<input type=hidden name=" + field + "_size id=" + field + "_size value=255>";
            html = String.valueOf(html) + "<input type=text id=" + field + " name=" + field + " style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%" + 
              " class=flowInput onblur=isPhone(this); maxlength=\"" + maxlen + "\"" + " value=\"" + fieldTemp[0][4] + "\" " + disabled1 + ">" + ((
              fieldTemp[0][3].equals("1") && noWriteField.indexOf("," + fieldId + ",") < 0 && noWriteField.indexOf(field) < 0) ? (
              "<input type=hidden name=mustWrite id=mustWrite value=" + 
              field + 
              "><label class=mustFillcolor>*</label>") : 
              "");
            html = "\n\nif(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "\ndocument.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + html + "';\n}\n\n";
            break;
          case 201:
            html = "<input style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; type=text id=" + field + " name=" + field + " readonly style=border:0px solid white;>";
            temp3 = "var " + field + "_temp=document.createElement('SCRIPT');";
            temp3 = String.valueOf(temp3) + field + "_temp.text=\"document.all." + field + ".value=document.all.user_Id.value;\";";
            html = String.valueOf(temp3) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=\"" + html + "\";" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').appendChild(" + field + "_temp);}";
            break;
          case 202:
            html = "<input style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "% type=text id=" + 
              field + " name=" + field + " readonly style=border:0px;solid;white;font-size:1em;>";
            temp4 = "var " + field + "_temp=document.createElement('SCRIPT');";
            temp4 = String.valueOf(temp4) + field + "_temp.text=\"document.all." + field + ".value=document.all.user_Name.value;var renyuanName = '';\";";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + ">" + 
                "<label class=mustFillcolor>*</label>"; 
            html = String.valueOf(temp4) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=\"" + html + "\";" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').appendChild(" + field + "_temp);}";
            break;
          case 331:
            html = "<input style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "% type=text id=" + 
              field + " name=" + field + " readonly style=border:0px;solid;white;font-size:1em;>";
            curEmpZhiWu = StaticParam.getZhiWuByEmpId(request.getSession().getAttribute("userId").toString());
            temp41 = "var " + field + "_temp=document.createElement('SCRIPT');";
            temp41 = String.valueOf(temp41) + field + "_temp.text=\"document.all." + field + ".value='" + curEmpZhiWu + "';var renyuanName = '';\";";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + ">" + 
                "<label class=mustFillcolor>*</label>"; 
            html = String.valueOf(temp41) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=\"" + html + "\";" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').appendChild(" + field + "_temp);}";
            break;
          case 332:
            html = "<input style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "% type=text id=" + 
              field + " name=" + field + " readonly style=border:0px;solid;white;font-size:1em;>";
            curEmpGangWei = StaticParam.getGangWeiByEmpId(request.getSession().getAttribute("userId").toString());
            temp42 = "var " + field + "_temp=document.createElement('SCRIPT');";
            temp42 = String.valueOf(temp42) + field + "_temp.text=\"document.all." + field + ".value='" + curEmpGangWei + "';var renyuanName = '';\";";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + ">" + 
                "<label class=mustFillcolor>*</label>"; 
            html = String.valueOf(temp42) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=\"" + html + "\";" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').appendChild(" + field + "_temp);}";
            break;
          case 203:
            jisuanSet = "";
            if (fieldTemp[0][6].length() > 0) {
              String[] setStr = fieldTemp[0][6].substring(0, fieldTemp[0][6].length() - 1).split("\\]\\.\\[");
              if (setStr.length > 2)
                jisuanSet = "<input type=\\'hidden\\' value=\\'" + setStr[2] + ":" + setStr[3] + "\\' name=\\'" + field + "_js\\' id=\\'" + field + "_js\\' />"; 
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<input style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; type=text name=" + 
                field + "_cmp id=" + field + "_cmp class=flowInputRed readonly>";
            } else {
              html = "<input style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; type=text name=" + 
                field + "_cmp id=" + field + "_cmp class=flowInputRed readonly>";
            } 
            html = String.valueOf(html) + "<input type=hidden name=" + field + " id=" + field + " >";
            if (fieldTemp[0][2].equals("1000000") || fieldTemp[0][2].equals("1000001")) {
              type = "<input type=hidden name=" + field + "_type id=" + field + "_type value=numbercompute>";
              isNum = true;
            } else {
              type = "<input type=hidden name=" + field + "_type id=" + field + "_type value=varcharcompute>";
            } 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + html + type + jisuanSet + "';}";
            break;
          case 204:
            type = "<input type=hidden name=" + field + "_type id=" + field + "_type value=varchar>";
            dateT = String.valueOf(String.valueOf(now.getYear() + 1900)) + 
              "-" + ((now.getMonth() >= 9) ? String.valueOf(now.getMonth() + 1) : ("0" + String.valueOf(now.getMonth() + 1))) + 
              "-" + ((now.getDate() > 9) ? String.valueOf(now.getDate()) : ("0" + String.valueOf(now.getDate())));
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              type = String.valueOf(type) + dateT + "<input type=hidden name=" + field + " id=" + field + " value=" + dateT + ">";
            } else {
              type = String.valueOf(type) + dateT + "<input type=hidden name=" + field + " id=" + field + " value=" + dateT + ">";
            } 
            html = String.valueOf(html) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML=\"" + type + "\";}";
            break;
          case 206:
            break;
          case 207:
            object1 = request.getSession().getAttribute("userId");
            orgList = StaticParam.haveSidelineOrg((String)object1);
            if (orgList == null) {
              if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
                noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
                html = "<input type=hidden id=" + field + " name=" + field + ">";
              } else {
                html = "<input type=hidden id=" + field + " name=" + field + ">";
              } 
              String temp5 = "\n var " + field + "_temp=document.createElement('SCRIPT');";
              temp5 = String.valueOf(temp5) + field + "_temp.text=\"document.all." + field + ".value=" + 
                "orgNameShow(document.all.org_Name.value," + SystemCommon.getInnerShow() + ");\";";
              html = String.valueOf(temp5) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n" + 
                "{document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML=" + 
                "orgNameShow(document.all.org_Name.value," + SystemCommon.getInnerShow() + ")+'" + type + 
                "';document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=\"" + html + "\";" + 
                "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').appendChild(" + field + "_temp);}\n";
              break;
            } 
            disabled3 = "";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0)
              disabled3 = "disabled"; 
            select = "<select style=font-size:1em; id=" + field + " name=" + field + " " + disabled3 + ">";
            for (s = 0; s < orgList.size(); s++) {
              String[] orgInfo = orgList.get(s);
              select = String.valueOf(select) + "<option value=" + StaticParam.getOrgByNum(orgInfo[1]) + ((s == 0) ? " selected" : "") + ">" + StaticParam.getOrgByNum(orgInfo[1]) + "</option>";
            } 
            select = String.valueOf(select) + "</select>";
            html = "\nif(document.getElementById('" + fieldTemp[0][0] + "-" + field + "')){\n" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + 
              select + "';\n}\n";
            break;
          case 208:
            break;
          case 209:
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = 
                "<input style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; type=text class=flowInput id=" + 
                field + " name=" + 
                field + " disabled>";
            } else {
              html = 
                "<input style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; type=text class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) id=" + 
                field + " name=" + 
                field + " " + (
                isNum ? "  onblur=checkNum(this);checkSize(this);" : " onblur=checkSize(this);") + 
                ">";
            } 
            temp7 = "var " + field + 
              "_temp=document.createElement('SCRIPT');";
            temp7 = String.valueOf(temp7) + field + "_temp.text=\"document.all." + field + 
              ".value=document.all.group_ID.value;\";";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                field + 
                "><label class=mustFillcolor>*</label>"; 
            html = String.valueOf(temp7) + "if(document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + 
              "';document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML+=\"" + html + 
              "\";document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').appendChild(" + field + "_temp);}";
            break;
          case 210:
            type = "<input type=hidden name=" + field + 
              "_type id=" + field + 
              "_type value=personorg>";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = 
                "<input style=width:80%;font-size:1em; type=text class=flowInput id=" + 
                field + "_Name name=" + 
                field + "_Name readonly>";
              html = String.valueOf(html) + "<input type=hidden id=" + 
                field + "_Id name=" + 
                field + "_Id>";
            } else {
              html = 
                "<input style=width:80%;font-size:1em; type=text class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) id=" + 
                field + "_Name name=" + 
                field + "_Name  title=\\\"请点击选择\\\" onclick=\\\"" + 
                "openEndow('" + 
                field + "_Id','" + field + 
                "_Name',document.all." + field + 
                "_Id.value,document.all." + field + "_Name.value,'user','yes','user','-100',this)\\\" readonly=readonly />";
              html = String.valueOf(html) + "<input type=hidden id=" + field + 
                "_Id name=" + 
                field + 
                "_Id>";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                field + 
                "><label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + 
              "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + 
              "';document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML+=\"" + html + "\";}";
            break;
          case 211:
            type = "<input type=hidden name=" + field + 
              "_type id=" + field + 
              "_type value=personorg>";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<textarea class=flowInput id=" + field + 
                " name=" + field + 
                " style=\"width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em;\" rows=\"6\" readonly=\"readonly\">" + 
                fieldTemp[0][4] + "</textarea>";
            } else {
              html = "<textarea class=flowInput  onblur=checkSize(this); onmouseover=setStyle(this) onmouseout=setStyle(this) id=" + field + 
                " name=" + field + 
                " style=\"width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em;\" rows=\"6\">" + 
                fieldTemp[0][4] + "</textarea>";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = 
                "<input style=width:80%;font-size:1em; type=text class=flowInput id=" + 
                field + "_Name name=" + 
                field + "_Name readonly>";
              html = String.valueOf(html) + "<input type=hidden id=" + 
                field + "_Id name=" + 
                field + "_Id>";
            } else {
              html = "<textarea class=flowInput  onblur=checkSize(this); onmouseover=setStyle(this) onmouseout=setStyle(this) id=" + field + 
                "_Name name=" + field + "_Name style=\\\"width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em;\\\" rows=3 title=\\\"请点击选择\\\"  onClick=\\\"openEndow('" + 
                field + "_Id','" + field + 
                "_Name',document.all." + field + 
                "_Id.value,document.all." + field + "_Name.value,'user','no','user','-100')\\\" readonly=readonly />" + 
                fieldTemp[0][4] + "</textarea>";
              html = String.valueOf(html) + "<input type=hidden id=" + field + 
                "_Id name=" + 
                field + 
                "_Id>";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                field + 
                "><label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + 
              "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + 
              "';document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML+=\"" + html + "\";}";
            break;
          case 212:
            type = "<input type=hidden name=" + field + 
              "_type id=" + field + 
              "_type value=personorg>";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = 
                "<input style=width:80%;font-size:1em; type=text class=flowInput id=" + 
                field + "_Name name=" + 
                field + "_Name readonly>";
              html = String.valueOf(html) + "<input type=hidden id=" + 
                field + "_Id name=" + 
                field + "_Id>";
            } else {
              html = 
                "<input style=width:80%;font-size:1em; type=text class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) id=" + 
                field + "_Name name=" + 
                field + "_Name title=\\\"请点击选择\\\" readonly onClick=\\\"formSelectSingleOrg(this,'" + 
                field + "_Id','" + field + 
                "_Name',document.all." + field + 
                "_Id.value,document.all." + field + "_Name.value,'org','yes','org','-100','formSingleOrgCallback')\\\" readonly=readonly />";
              html = String.valueOf(html) + "<input type=hidden id=" + field + 
                "_Id name=" + 
                field + 
                "_Id>";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                field + 
                "><label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + 
              "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + 
              "';document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML+=\"" + html + "\";}";
            break;
          case 213:
            object2 = request.getSession().getAttribute("userId");
            orgList2 = StaticParam.haveSidelineOrg((String)object2);
            if (orgList2 == null) {
              html = "<input style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; type=text id=" + 
                field + " name=" + field + " readonly style=border:0px solid white;>";
              String temp6 = "var " + field + "_temp=document.createElement('SCRIPT');";
              temp6 = String.valueOf(temp6) + field + "_temp.text=\"document.all." + field + ".value=document.all.org_ID.value;\";";
              if (noWriteField.indexOf("," + fieldTemp[0][0]) < 0 && 
                noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
                fieldTemp[0][3].equals("1"))
                html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + "><label class=mustFillcolor>*</label>"; 
              html = String.valueOf(temp6) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
                "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + 
                "';document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=\"" + html + 
                "\";document.getElementById('" + fieldTemp[0][0] + "-" + field + "').appendChild(" + field + "_temp);}";
              break;
            } 
            str1 = "";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0)
              str1 = "disabled"; 
            str2 = "<select id=" + field + " name=" + field + " " + str1 + ">";
            for (i = 0; i < orgList2.size(); i++) {
              String[] orgInfo = orgList2.get(i);
              str2 = String.valueOf(str2) + "<option value=" + orgInfo[0] + ((i == 0) ? " selected" : "") + ">" + StaticParam.getOrgByNum(orgInfo[1]) + "Id</option>";
            } 
            str2 = String.valueOf(str2) + "</select>";
            html = "\nif(document.getElementById('" + fieldTemp[0][0] + "-" + field + "')){\n" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + 
              str2 + "';\n}\n";
            break;
          case 214:
            type = "<input type=hidden name=" + field + 
              "_type id=" + field + 
              "_type value=personorg>";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<input style=width:80%;font-size:1em; type=text class=flowInput id=" + field + "_Name name=" + field + "_Name readonly>";
              html = String.valueOf(html) + "<input type=hidden id=" + field + "_Id name=" + field + "_Id>";
            } else {
              html = "<textarea class=flowInput  onblur=checkSize(this); onmouseover=setStyle(this) onmouseout=setStyle(this) id=" + field + 
                "_Name name=" + field + "_Name style=\\\"width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em;\\\" rows=3 title=\\\"请点击选择\\\" readonly onClick=\\\"openEndow('" + 
                field + "_Id','" + field + 
                "_Name',document.all." + field + 
                "_Id.value,document.all." + field + "_Name.value,'org','no','org','-100')\\\" readonly=readonly /></textarea>";
              html = String.valueOf(html) + "<input type=hidden id=" + field + "_Id name=" + field + "_Id>";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + ">" + 
                "<label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + 
              "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + 
              "';document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML+=\"" + html + "\";}";
            break;
          case 215:
            disabled2 = "";
            if (noWriteField.indexOf(fieldTemp[0][0]) >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0)
              disabled2 = " disabled "; 
            curEmpNumber = StaticParam.getEmpNumberByEmpId(request.getSession().getAttribute("userId").toString());
            html = "<input type=text name=" + field + " id=" + field + " style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; " + 
              "class=flowInput title=多个工号之间用逗号隔开 value=\\\"" + curEmpNumber + "\\\" " + disabled2 + ">";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                field + "><label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + 
              "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + 
              "';document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML+=\"" + html + "\";}";
            break;
          case 301:
            temp = fieldTemp[0][6];
            money = "";
            unit = "";
            upperField = "";
            if (temp.indexOf("[") == 0 && temp.indexOf("][") > 0) {
              upperField = temp.substring(1, temp.indexOf("]["));
              if (upperField.indexOf(";;") > 0) {
                money = upperField.substring(0, upperField.indexOf(";;"));
                unit = upperField.substring(upperField.indexOf(";;") + 2);
              } else if (upperField.indexOf(";;") == 0) {
                unit = upperField.substring(2);
              } else {
                money = upperField;
              } 
              upperField = temp.substring(temp.indexOf("][") + 2, temp.length() - 1);
            } else if (temp.indexOf(";;") > 0) {
              money = temp.substring(0, temp.indexOf(";;"));
              unit = temp.substring(temp.indexOf(";;") + 2);
            } else if (temp.indexOf(";;") == 0) {
              unit = temp.substring(2);
            } else {
              money = temp;
            } 
            if (!"".equals(money))
              html = "<div style=\\\"float:left;padding-top:2px;font-size:1em;\\\">" + money + "</div>"; 
            html = String.valueOf(html) + "<div style=\\\"float:left;width:60%;font-size:1em;\\\">";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = String.valueOf(html) + "<input style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; type=text class=flowInput id=" + 
                field + " name=" + field + " value=\"" + fieldTemp[0][4] + "\" readonly>";
            } else {
              String onblurTemp = "";
              if (computeFieldStr.indexOf(field) >= 0)
                onblurTemp = "setComputeForeignFieldNew(this);"; 
              html = String.valueOf(html) + "<input style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; type=text class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) id=" + 
                field + " name=" + field + " " + (isNum ? ("  onblur=checkNum(this);checkSize(this);" + onblurTemp + "setTotalValue();accountToUpper(this,\\\"" + upperField + "\\\");") : (" onblur=checkSize(this);setTotalValue();accountToUpper(this,\\\"" + upperField + "\\\");")) + " value=\"" + fieldTemp[0][4] + "\">";
            } 
            html = String.valueOf(html) + "</div>";
            if (!"".equals(unit))
              html = String.valueOf(html) + "<div style=\\\"float:left;padding-top:2px;font-size:1em;\\\">" + unit + "</div>"; 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + "><label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + "';document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+='" + html + "';}";
            break;
          case 302:
            html = "<label  class=xuhao>1</label>";
            temp_302 = " <input type=hidden  name=" + field + " id=" + field + " value=\"0\" > ";
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + temp_302 + "';document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+='" + html + "';}";
            break;
          case 402:
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<select style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; id=" + field + " name=" + field + 
                " disabled><option value=\"\">==请选择==</option>";
            } else {
              html = "<select id=" + field + " name=" + field + 
                "><option value=\"\">==请选择==</option>";
            } 
            temp = fieldTemp[0][6];
            if (temp == null || temp.trim().length() < 1)
              break; 
            if (temp.startsWith("@")) {
              String table = temp.substring(temp.indexOf("][") + 
                  2, temp.length() - 1);
              String[][] data = (String[][])null;
              try {
                data = dbopt.executeQueryToStrArr2("select " + 
                    table.substring(0, table.indexOf(".")) + 
                    "_id," + 
                    table.substring(table.indexOf(".") + 1, 
                      table.length()) + " from " + 
                    table.substring(0, table.indexOf(".")));
              } catch (Exception exception) {}
              if (data != null)
                for (int j = 0; j < data.length; j++)
                  html = String.valueOf(html) + "<option value=\"" + data[j][1] + 
                    "\">" + data[j][1] + "</option>";  
            } 
            html = String.valueOf(html) + "</select>";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                field + 
                "><label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + 
              "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + 
              "';document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML+='" + html + "';}";
            break;
          case 450:
            html = "";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || noWriteField.indexOf("," + fieldTemp[0][5] + ",") >= 0) {
              html = String.valueOf(html) + "<div style=\\\"float:left;width:60%;font-size:1em;\\\"><input type=hidden id=" + field + " name=" + field + "><input type=text style=font-size:1em; id=" + field + "_temp name=" + field + "_temp readonly></div>";
            } else {
              html = String.valueOf(html) + "<div style=\\\"float:left;width:60%;font-size:1em;\\\"><input type=hidden id=" + field + " name=" + field + "><input type=text id=" + field + "_temp name=" + field + "_temp style=\\\"width:100%;font-size:1em;\\\"></div>";
              html = String.valueOf(html) + "<div style=\\\"float:left;font-size:1em;\\\"><input  type=button id=" + field + "_btn name=" + field + "_btn onclick=\"" + field + "_enter(this);\" value=检索></div>";
              String projectType = request.getSession().getServletContext().getInitParameter("projectType");
              if (projectType != null && "tjgzw".equals(projectType) && "jst_3002_f3009".equals(field)) {
                html = "";
                html = String.valueOf(html) + "<div style=\\\"float:left;width:60%;font-size:1em;\\\"><input type=hidden id=" + field + " name=" + field + "><input type=text id=" + field + "_temp name=" + field + "_temp onkeyup=\"showc1(this)\" style=\\\"width:100%;font-size:1em;\\\"></div>";
                html = String.valueOf(html) + "<div style=\\\"float:left;font-size:1em;\\\"><input  type=button id=" + field + "_btn name=" + field + "_btn onclick=\"" + field + "_enter(this);\" value=检索></div>";
              } 
            } 
            html = (new StringBuilder(String.valueOf(html))).toString();
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && noWriteField.indexOf("," + fieldTemp[0][5] + ",") < 0 && fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + ">" + 
                "<input type=hidden name=mustWrite id=mustWrite value=" + field + "_temp>" + 
                "<label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+='" + html + "';}";
            break;
          case 501:
            html = getRelationHTML(field, fieldTemp[0][0], fieldTemp[0][3], noWriteField);
            break;
          default:
            html = "if(document.getElementById('" + fieldTemp[0][0] + 
              "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='';}";
            break;
        } 
      } 
      dbopt.close();
    } catch (Exception e) {
      try {
        dbopt.close();
      } catch (SQLException sQLException) {}
      e.printStackTrace();
    } finally {}
    return html;
  }
  
  public String getHTMLForWeiXin(String field, String noWriteField, String domainId, String fieldId, HttpServletRequest request, String computeFieldStr) {
    String html = "";
    noWriteField = "," + noWriteField + ",";
    String temp = "";
    String[] tempArr = (String[])null;
    String[][] fieldTemp = (String[][])null;
    String type = "";
    Date now = new Date();
    DbOpt dbopt = null;
    boolean isNum = false;
    try {
      dbopt = new DbOpt();
      fieldTemp = dbopt.executeQueryToStrArr2("select a.field_id,b.show_id,field_type,FIELD_NULL,FIELD_DEFAULT,field_name,field_value,field_len,field_desname,a.field_table,a.field_changemethod,field_index,field_interfacetype,field_boxsearch, defaultShowTime  from TSHOW b,TFIELD a where FIELD_SHOW=SHOW_ID and FIELD_ID=" + 
          fieldId + " and a.domain_id=" + domainId, 15);
      if (fieldTemp != null && fieldTemp.length > 0 && 
        fieldTemp[0][1] != null && 
        fieldTemp[0][1].trim().length() > 0) {
        int maxlen = 9;
        if (!"".equals(fieldTemp[0][7]))
          maxlen = Integer.parseInt(fieldTemp[0][7]); 
        if (fieldTemp[0][2].equals("1000000") || fieldTemp[0][2].equals("1000001")) {
          type = "<input type=hidden name=" + field + "_type id=" + field + "_type value=number>";
          if ("1000000".equals(fieldTemp[0][2])) {
            type = String.valueOf(type) + "<input type=hidden name=" + field + "_num_type id=" + field + "_num_type value=1000000>";
          } else {
            type = String.valueOf(type) + "<input type=hidden name=" + field + "_num_type id=" + field + "_num_type value=1000001>";
          } 
          isNum = true;
          if (fieldTemp[0][2].equals("1000001")) {
            maxlen = 18;
          } else {
            maxlen = 9;
          } 
        } else {
          type = "<input type=hidden name=" + field + "_type id=" + field + "_type value=varchar>";
        } 
        if (!fieldTemp[0][2].equals("1000003")) {
          type = String.valueOf(type) + "<input type=hidden name=" + field + "_size id=" + field + "_size value=" + maxlen + ">";
        } else {
          type = String.valueOf(type) + "<input type=hidden name=" + field + "_size id=" + field + "_size value=1000000>";
        } 
        ElementHTMLGetter getter = ElementHTMLGetterFactory.getElementHTMLGetter(Integer.parseInt(fieldTemp[0][1]));
        if (getter != null) {
          html = getter.getHTML(field, noWriteField, domainId, fieldId, request, computeFieldStr, fieldTemp, maxlen, type, isNum);
        } else {
          html = "if(document.getElementById('" + fieldTemp[0][0] + 
            "-" + field + "'))\n{document.getElementById('" + 
            fieldTemp[0][0] + "-" + field + 
            "').innerHTML='';}";
        } 
      } 
      dbopt.close();
    } catch (Exception e) {
      try {
        dbopt.close();
      } catch (SQLException sQLException) {}
      e.printStackTrace();
    } finally {}
    return html;
  }
  
  public String getEditHTMLForWeiXin(String field, String infoId, String pageId, String hideField, String domainId, String fieldId, String fromDraft, String computeFieldStr, HttpServletRequest request) {
    String html = "";
    String temp = "";
    hideField = "," + hideField + ",";
    String[] tempArr = (String[])null;
    String[][] fieldTemp = (String[][])null;
    String type = "";
    Date now = new Date();
    DbOpt dbopt = null;
    boolean isNum = false;
    try {
      dbopt = new DbOpt();
      fieldTemp = dbopt.executeQueryToStrArr2("select a.field_id,b.show_id,field_type,FIELD_NULL,FIELD_DEFAULT,field_name,field_value,field_len,field_desname,a.field_table,a.field_changemethod,field_index from TSHOW b,TFIELD a where FIELD_SHOW=SHOW_ID and FIELD_ID=" + 
          fieldId + " and a.domain_id=" + domainId, 12);
      if (fieldTemp != null && fieldTemp.length > 0 && 
        fieldTemp[0][1] != null && fieldTemp[0][1].trim().length() > 0) {
        String fieldValue = getValue(field, infoId, pageId, dbopt);
        try {
          if (fieldTemp[0][2].equals("1000001")) {
            fieldValue = fieldValue.toLowerCase();
            if (fieldValue.indexOf("e") > 0) {
              String value1 = fieldValue.substring(0, fieldValue.indexOf('e'));
              String value2 = fieldValue.substring(fieldValue.indexOf('e') + 1, fieldValue.length());
              double value11 = Double.parseDouble(value1);
              double value22 = Double.parseDouble(value2);
              double laterValue = value11 * Math.pow(10.0D, value22);
              fieldValue = DecimalFormat.getInstance().format(laterValue).replaceAll(",", "");
            } 
            temp = fieldTemp[0][6];
            if (fieldValue.length() > 0 && temp != null && temp.startsWith("[point")) {
              int pointNum = Integer.parseInt(temp.substring(temp.indexOf(":") + 1, temp.indexOf(";")));
              String fillin = temp.substring(temp.indexOf("fillin:") + 7, temp.indexOf("]"));
              NumberFormat nf = NumberFormat.getNumberInstance();
              nf.setMaximumFractionDigits(pointNum);
              fieldValue = nf.format(Double.parseDouble(fieldValue)).replaceAll(",", "");
              if ("1".equals(fillin))
                if (fieldValue.indexOf(".") < 0) {
                  fieldValue = String.valueOf(fieldValue) + ".";
                  for (int x = 0; x < pointNum; x++)
                    fieldValue = String.valueOf(fieldValue) + "0"; 
                } else {
                  int nowNum = fieldValue.length() - fieldValue.indexOf(".") - 1;
                  for (int x = nowNum; x < pointNum; x++)
                    fieldValue = String.valueOf(fieldValue) + "0"; 
                }  
            } else if (fieldValue.indexOf(".") > 0) {
              while (fieldValue.endsWith("0"))
                fieldValue = fieldValue.substring(0, fieldValue.length() - 1); 
              if (fieldValue.endsWith("."))
                fieldValue = fieldValue.substring(0, fieldValue.length() - 1); 
            } 
          } 
        } catch (Exception e) {
          e.printStackTrace();
        } 
        int maxlen = 9;
        if (!"".equals(fieldTemp[0][7]))
          maxlen = Integer.parseInt(fieldTemp[0][7]); 
        if (fieldTemp[0][2].equals("1000000") || fieldTemp[0][2].equals("1000001")) {
          type = "<input type=hidden name=" + field + "_type id=" + field + "_type value=number>";
          if ("1000000".equals(fieldTemp[0][2])) {
            type = String.valueOf(type) + "<input type=hidden name=" + field + "_num_type id=" + field + "_num_type value=1000000>";
          } else {
            type = String.valueOf(type) + "<input type=hidden name=" + field + "_num_type id=" + field + "_num_type value=1000001>";
          } 
          isNum = true;
          if (fieldTemp[0][2].equals("1000001")) {
            maxlen = 18;
          } else {
            maxlen = 9;
          } 
        } else {
          type = "<input type=hidden name=" + field + "_type id=" + field + "_type value=varchar>";
        } 
        if (hideField != null && hideField.toUpperCase().equals(",ALL,"))
          hideField = String.valueOf(hideField) + fieldTemp[0][0] + ","; 
        if (!fieldTemp[0][2].equals("1000003")) {
          type = String.valueOf(type) + "<input type=hidden name=" + field + "_size id=" + field + "_size value=" + maxlen + ">";
        } else {
          type = String.valueOf(type) + "<input type=hidden name=" + field + "_size id=" + field + "_size value=1000000>";
        } 
        ElementHTMLGetter getter = ElementHTMLGetterFactory.getElementHTMLGetter(Integer.parseInt(fieldTemp[0][1]));
        if (getter != null) {
          html = getter.getEditHTML(fieldValue, 
              hideField, 
              fieldTemp, 
              fromDraft, 
              field, 
              isNum, 
              maxlen, 
              type, 
              computeFieldStr, 
              request, 
              temp, 
              tempArr, 
              fieldId, 
              infoId, 
              pageId);
        } else {
          html = "if(document.getElementById('" + fieldTemp[0][0] + 
            "-" + field + "'))\n{document.getElementById('" + 
            fieldTemp[0][0] + "-" + field + 
            "').innerHTML='';}";
        } 
      } 
      dbopt.close();
    } catch (Exception e) {
      try {
        dbopt.close();
      } catch (SQLException sQLException) {}
      e.printStackTrace();
    } finally {}
    return html;
  }
  
  public String getHTMLBatchAdd(String field, String noWriteField, String domainId, String fieldId, HttpServletRequest request, String computeFieldStr) {
    String html = "";
    noWriteField = "," + noWriteField + ",";
    String temp = "";
    String[] tempArr = (String[])null;
    String[][] fieldTemp = (String[][])null;
    String type = "";
    Date now = new Date();
    DbOpt dbopt = null;
    boolean isNum = false;
    try {
      dbopt = new DbOpt();
      fieldTemp = dbopt.executeQueryToStrArr2("select a.field_id,b.show_id,field_type,FIELD_NULL,FIELD_DEFAULT,field_name,field_value,field_len,field_desname,a.field_table,a.field_changemethod,field_index from TSHOW b,TFIELD a where FIELD_SHOW=SHOW_ID and FIELD_ID=" + 
          fieldId + " and a.domain_id=" + domainId, 12);
      if (fieldTemp != null && fieldTemp.length > 0 && 
        fieldTemp[0][1] != null && 
        fieldTemp[0][1].trim().length() > 0) {
        String defaultValue, mustField, mustField1, valueTemp, timeStr, temp1, temp2, disabled, disabled1, temp3, temp4, jisuanSet, dateT, temp5, temp7, temp6, disabled2, curEmpNumber, money, unit, upperField, temp_302;
        int maxlen = 9;
        if (!"".equals(fieldTemp[0][7]))
          maxlen = Integer.parseInt(fieldTemp[0][7]); 
        if (fieldTemp[0][2].equals("1000000") || fieldTemp[0][2].equals("1000001")) {
          type = "<input type=hidden name=" + field + "_type id=" + field + "_type value=number>";
          isNum = true;
          if (fieldTemp[0][2].equals("1000001")) {
            maxlen = 18;
          } else {
            maxlen = 9;
          } 
        } else {
          type = "<input type=hidden name=" + field + "_type id=" + field + "_type value=varchar>";
        } 
        if (!fieldTemp[0][2].equals("1000003")) {
          type = String.valueOf(type) + "<input type=hidden name=" + field + "_size id=" + field + "_size value=" + maxlen + ">";
        } else {
          type = String.valueOf(type) + "<input type=hidden name=" + field + "_size id=" + field + "_size value=1000000>";
        } 
        switch (Integer.parseInt(fieldTemp[0][1])) {
          case 406:
            html = "<input type=text name=" + 
              field + " id=" + field + " value=\"" + 
              fieldTemp[0][4] + "\" " + "readonly style=\"width:95%;border:0px solid white;font-size:1em;\">";
            html = String.valueOf(html) + "<input type=hidden name=wf_ua id=wf_ua value=" + field + ">";
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + html + "';}";
            break;
          case 101:
            defaultValue = "";
            if (fieldTemp[0][4] != null)
              defaultValue = fieldTemp[0][4].toString(); 
            if (defaultValue.startsWith("$[$[") && defaultValue.endsWith("]]")) {
              String dataSourceName = defaultValue.substring(4, defaultValue.indexOf("]$["));
              String sql = defaultValue.substring(defaultValue.indexOf("]$[") + 3, defaultValue.length() - 2);
              HttpSession hSession = request.getSession();
              String userId = hSession.getAttribute("userId").toString();
              String orgId = hSession.getAttribute("orgId").toString();
              String userAccount = hSession.getAttribute("userAccount").toString();
              String userName = hSession.getAttribute("userName").toString();
              sql = sql.replaceAll("\\@\\$\\@userId\\@\\$\\@", userId);
              sql = sql.replaceAll("\\@\\$\\@orgId\\@\\$\\@", orgId);
              sql = sql.replaceAll("\\@\\$\\@userAccount\\@\\$\\@", userAccount);
              sql = sql.replaceAll("\\@\\$\\@userName\\@\\$\\@", userName);
              DbOpt dbo = null;
              try {
                if (!"system".equals(dataSourceName)) {
                  dbo = new DbOpt(dataSourceName);
                  String dbType = SystemCommon.getUserDatabaseType(dataSourceName);
                  if (dbType.indexOf("oracle") >= 0) {
                    String lang = SystemCommon.getUserDatabaseLang(dataSourceName);
                    if (!"".equals(lang))
                      dbo.executeUpdate("ALTER SESSION SET NLS_LANGUAGE='" + lang + "'"); 
                  } 
                  defaultValue = dbo.executeQueryToStr(sql);
                  dbo.close();
                } else {
                  defaultValue = dbopt.executeQueryToStr(sql);
                } 
              } catch (Exception e3) {
                defaultValue = "";
                if (dbo != null)
                  dbo.close(); 
                e3.printStackTrace();
              } 
            } else if (defaultValue.startsWith("@[className") && defaultValue.endsWith("]")) {
              String className = defaultValue.substring(12, defaultValue.indexOf(";methodName:"));
              String classMethod = defaultValue.substring(defaultValue.indexOf(";methodName:") + 12, defaultValue.length() - 1);
              if (!"".equals(className) && !"".equals(classMethod))
                try {
                  FormReflection formReflection = new FormReflection();
                  Object obj = formReflection.execute(className, classMethod, request);
                  if (obj != null)
                    defaultValue = obj.toString(); 
                } catch (Exception e) {
                  defaultValue = "";
                  e.printStackTrace();
                }  
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<input type=text name=" + field + " id=" + field + " style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; class=flowInput value=\"" + 
                defaultValue + "\" readonly>";
            } else {
              String onblur = "";
              if ("1".equals(fieldTemp[0][11]))
                onblur = "setSTotalValue(this);"; 
              if (computeFieldStr.indexOf(field) >= 0)
                onblur = String.valueOf(onblur) + "setComputeForeignFieldNew(this);"; 
              html = "<input type=text style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%font-size:1em;  name=" + 
                field + " id=" + field + " value=\"" + 
                
                defaultValue + "\" class=flowInput " + (
                isNum ? ("  onblur=checkNum(this);checkSize(this);" + onblur) : ("maxlength=\"" + maxlen + "\"")) + 
                ">";
              if (fieldTemp[0][3].equals("1") && noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && noWriteField.indexOf(fieldTemp[0][5]) < 0)
                html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                  field + "><label class=mustFillcolor>*</label>"; 
            } 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + html + "';}";
            break;
          case 102:
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<input type=password style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; name=" + field + 
                " id=" + field + " class=flowInput readonly>";
            } else {
              html = "<input type=password style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; name=" + field + 
                " id=" + field + " class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this)  " + (
                isNum ? "  onblur=checkNum(this);checkSize(this);" : ("maxlength=\"" + maxlen + "\"")) + 
                ">";
              if (fieldTemp[0][3].equals("1") && noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && noWriteField.indexOf(fieldTemp[0][5]) < 0)
                html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + "><label class=mustFillcolor>*</label>"; 
            } 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + html + "';}";
            break;
          case 103:
            defaultValue = (fieldTemp[0][4] == null) ? "" : fieldTemp[0][4].toString();
            html = "";
            mustField = "";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && noWriteField.indexOf(fieldTemp[0][5]) < 0 && fieldTemp[0][3].equals("1")) {
              mustField = String.valueOf(mustField) + "&nbsp;<input type=hidden name=mustWrite id=mustWrite value=" + field + "><label class=mustFillcolor>*</label>";
            } else {
              fieldTemp[0][3].equals("1");
            } 
            temp = fieldTemp[0][6];
            if (temp == null || temp.trim().length() < 1)
              break; 
            if (temp.startsWith("@")) {
              String table = temp.substring(temp.indexOf("][") + 2, temp.length() - 1);
              String[][] data = (String[][])null;
              try {
                data = dbopt.executeQueryToStrArr2("select " + table.substring(0, table.indexOf(".")) + 
                    "_id," + table.substring(table.indexOf(".") + 1, table.length()) + " from " + table.substring(0, table.indexOf(".")));
              } catch (Exception exception) {}
              if (data != null)
                for (int i = 0; i < data.length; i++) {
                  if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=radio style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + data[i][0] + " " + ((defaultValue.equals(data[i][0]) || i == 0) ? "checked" : "") + " disabled>';\n";
                  } else {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=radio style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + data[i][0] + " " + ((defaultValue.equals(data[i][0]) || i == 0) ? "checked" : "") + ">';\n";
                  } 
                  html = String.valueOf(html) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "').innerHTML+=" + field + "_temp;\ndocument.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "').innerHTML+='" + data[i][1] + ((i == data.length - 1) ? mustField : "") + "';}";
                }  
            } else if (temp.startsWith("$")) {
              String dataSourceName = "system";
              if (temp.indexOf("].$[") > 0) {
                dataSourceName = temp.substring(2, temp.indexOf("].$["));
                sql = temp.substring(temp.indexOf("].$[") + 4, temp.length() - 1);
              } else {
                sql = temp.substring(2, temp.length() - 1);
              } 
              String sql = InitWorkFlowData.getValueFromRequest(request, sql);
              String[][] data = (String[][])null;
              DbOpt dbo = null;
              try {
                if (!"system".equals(dataSourceName)) {
                  dbo = new DbOpt(dataSourceName);
                  String dbType = SystemCommon.getUserDatabaseType(dataSourceName);
                  if (dbType.indexOf("oracle") >= 0) {
                    String lang = SystemCommon.getUserDatabaseLang(dataSourceName);
                    if (!"".equals(lang))
                      dbo.executeUpdate("ALTER SESSION SET NLS_LANGUAGE='" + lang + "'"); 
                  } 
                  data = dbo.executeQueryToStrArr2(sql);
                  dbo.close();
                } else if (sql.length() > 0 && sql.indexOf("@$@selValue@$@") < 0) {
                  data = dbopt.executeQueryToStrArr2(sql);
                } 
              } catch (Exception e3) {
                if (dbo != null)
                  dbo.close(); 
                e3.printStackTrace();
              } 
              if (data != null)
                for (int i = 0; i < data.length; i++) {
                  if (noWriteField.indexOf(fieldTemp[0][0]) >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=radio style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + data[i][0] + " " + ((defaultValue.equals(data[i][0]) || i == 0) ? "checked" : "") + " disabled>';\n";
                  } else {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=radio style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + data[i][0] + " " + ((defaultValue.equals(data[i][0]) || i == 0) ? "checked" : "") + ">';\n";
                  } 
                  html = String.valueOf(html) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "').innerHTML+=" + field + "_temp;\ndocument.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "').innerHTML+='" + data[i][1] + ((i == data.length - 1) ? mustField : "") + "';}";
                }  
            } else if (temp.startsWith("*")) {
              String parentId = temp.substring(temp.indexOf(".*[") + 3, temp.length() - 1);
              tempArr = (new BaseSetEJBBean()).getValue(parentId).split(";");
              for (int i = 0; i < tempArr.length; i++) {
                if (tempArr[i] != null && tempArr[i].trim().length() > 0 && 
                  tempArr[i].indexOf("/") > 0 && tempArr[i].indexOf("/") < tempArr[i].length() - 1) {
                  if (noWriteField.indexOf(fieldTemp[0][0]) >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=radio style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + tempArr[i].split("/")[0] + " " + ((defaultValue.equals(tempArr[i].split("/")[0]) || i == 0) ? "checked" : "") + " disabled>';\n";
                  } else {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=radio style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + tempArr[i].split("/")[0] + " " + ((defaultValue.equals(tempArr[i].split("/")[0]) || i == 0) ? "checked" : "") + ">';\n";
                  } 
                  html = String.valueOf(html) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=" + field + "_temp;\ndocument.getElementById('" + 
                    fieldTemp[0][0] + "-" + field + "').innerHTML+='" + tempArr[i].split("/")[1] + ((i == tempArr.length - 1) ? mustField : "") + "';}";
                } 
              } 
            } else {
              if (temp.startsWith("#[interface:")) {
                HttpSession hSession = request.getSession();
                Map<String, String> map = new HashMap<String, String>();
                map.put("tableId", request.getParameter("tableId"));
                map.put("processId", request.getParameter("processId"));
                map.put("userId", hSession.getAttribute("userId").toString());
                map.put("userName", hSession.getAttribute("userName").toString());
                map.put("orgId", hSession.getAttribute("orgId").toString());
                map.put("orgName", hSession.getAttribute("orgName").toString());
                map.put("corpId", hSession.getAttribute("orgName").toString());
                map.put("userAccount", hSession.getAttribute("userAccount").toString());
                temp = InitWorkFlowData.getKeyValue(temp, map, request);
              } 
              tempArr = temp.split(";");
              for (int i = 0; i < tempArr.length; i++) {
                if (tempArr[i] != null && tempArr[i].trim().length() > 0 && 
                  tempArr[i].indexOf("/") > 0 && tempArr[i].indexOf("/") < tempArr[i].length() - 1) {
                  if (noWriteField.indexOf(fieldTemp[0][0]) >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=radio style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + tempArr[i].split("/")[0] + " " + ((defaultValue.equals(tempArr[i].split("/")[0]) || i == 0) ? "checked" : "") + " disabled>';\n";
                  } else {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=radio style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + tempArr[i].split("/")[0] + " " + ((defaultValue.equals(tempArr[i].split("/")[0]) || i == 0) ? "checked" : "") + ">';\n";
                  } 
                  html = String.valueOf(html) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=" + field + "_temp;\ndocument.getElementById('" + 
                    fieldTemp[0][0] + "-" + field + "').innerHTML+='" + tempArr[i].split("/")[1] + ((i == tempArr.length - 1) ? mustField : "") + "';}";
                } 
              } 
            } 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';}" + html;
            break;
          case 104:
            defaultValue = (fieldTemp[0][4] == null) ? "" : (new StringBuilder(String.valueOf(fieldTemp[0][4]))).toString();
            type = "<input type=hidden name=" + field + "_type id=" + field + "_type value=combox>";
            mustField1 = "";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && noWriteField.indexOf(fieldTemp[0][5]) < 0 && fieldTemp[0][3].equals("1"))
              mustField1 = String.valueOf(mustField1) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + "><label class=mustFillcolor>*</label>"; 
            html = "";
            temp = fieldTemp[0][6];
            if (temp == null || temp.trim().length() < 1)
              break; 
            if (temp.startsWith("@")) {
              String table = temp.substring(temp.indexOf("][") + 2, temp.length() - 1);
              String[][] data = (String[][])null;
              try {
                data = dbopt.executeQueryToStrArr2("select " + table.substring(0, table.indexOf(".")) + 
                    "_id," + table.substring(table.indexOf(".") + 1, table.length()) + " from " + table.substring(0, table.indexOf(".")));
              } catch (Exception exception) {}
              if (data != null)
                for (int i = 0; i < data.length; i++) {
                  if (noWriteField.indexOf(fieldTemp[0][0]) >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=checkbox style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + data[i][0] + " " + (defaultValue.contains(String.valueOf(data[i][0]) + ",") ? "checked" : "") + " disabled >';\n";
                  } else {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=checkbox style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + data[i][0] + " " + (defaultValue.contains(String.valueOf(data[i][0]) + ",") ? "checked" : "") + ">';\n";
                  } 
                  html = String.valueOf(html) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=" + field + "_temp;\ndocument.getElementById('" + 
                    fieldTemp[0][0] + "-" + field + "').innerHTML+='" + data[i][1] + ((i == data.length - 1) ? mustField1 : "") + "';}";
                }  
            } else if (temp.startsWith("$")) {
              String dataSourceName = "system";
              if (temp.indexOf("].$[") > 0) {
                dataSourceName = temp.substring(2, temp.indexOf("].$["));
                sql = temp.substring(temp.indexOf("].$[") + 4, temp.length() - 1);
              } else {
                sql = temp.substring(2, temp.length() - 1);
              } 
              String sql = InitWorkFlowData.getValueFromRequest(request, sql);
              String[][] data = (String[][])null;
              DbOpt dbo = null;
              try {
                if (!"system".equals(dataSourceName)) {
                  dbo = new DbOpt(dataSourceName);
                  String dbType = SystemCommon.getUserDatabaseType(dataSourceName);
                  if (dbType.indexOf("oracle") >= 0) {
                    String lang = SystemCommon.getUserDatabaseLang(dataSourceName);
                    if (!"".equals(lang))
                      dbo.executeUpdate("ALTER SESSION SET NLS_LANGUAGE='" + lang + "'"); 
                  } 
                  data = dbo.executeQueryToStrArr2(sql);
                  dbo.close();
                } else if (sql.length() > 0 && sql.indexOf("@$@selValue@$@") < 0) {
                  data = dbopt.executeQueryToStrArr2(sql);
                } 
              } catch (Exception e3) {
                if (dbo != null)
                  dbo.close(); 
                e3.printStackTrace();
              } 
              if (data != null)
                for (int i = 0; i < data.length; i++) {
                  if (noWriteField.indexOf(fieldTemp[0][0]) >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=checkbox style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + data[i][0] + " " + (defaultValue.contains(String.valueOf(data[i][0]) + ",") ? "checked" : "") + " disabled>';\n";
                  } else {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=checkbox style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + data[i][0] + " " + (defaultValue.contains(String.valueOf(data[i][0]) + ",") ? "checked" : "") + ">';\n";
                  } 
                  html = String.valueOf(html) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML" + field + "_temp;\ndocument.getElementById('" + 
                    fieldTemp[0][0] + "-" + field + "').innerHTML+='" + data[i][1] + ((i == data.length - 1) ? mustField1 : "") + "';}";
                }  
            } else if (temp.startsWith("*")) {
              String parentId = temp.substring(temp.indexOf(".*[") + 3, temp.length() - 1);
              tempArr = (new BaseSetEJBBean()).getValue(parentId).split(";");
              for (int i = 0; i < tempArr.length; i++) {
                if (tempArr[i] != null && tempArr[i].trim().length() > 0 && tempArr[i].indexOf("/") >= 0 && tempArr[i].indexOf("/") < tempArr[i].length() - 1) {
                  if (noWriteField.indexOf(fieldTemp[0][0]) >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=checkbox style=font-size:1em;id=" + 
                      field + " name=" + field + " value=" + tempArr[i].split("/")[0] + " " + (defaultValue.contains(String.valueOf(tempArr[i].split("/")[0]) + ",") ? "checked" : "") + " disabled>';\n";
                  } else {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=checkbox style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + tempArr[i].split("/")[0] + " " + (defaultValue.contains(String.valueOf(tempArr[i].split("/")[0]) + ",") ? "checked" : "") + ">';\n";
                  } 
                  html = String.valueOf(html) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=" + 
                    field + "_temp;\ndocument.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "').innerHTML+='" + tempArr[i].split("/")[1] + ((i == tempArr.length - 1) ? mustField1 : "") + "';}";
                } 
              } 
            } else {
              if (temp.startsWith("#[interface:")) {
                HttpSession hSession = request.getSession();
                Map<String, String> map = new HashMap<String, String>();
                map.put("tableId", request.getParameter("tableId"));
                map.put("processId", request.getParameter("processId"));
                map.put("userId", hSession.getAttribute("userId").toString());
                map.put("userName", hSession.getAttribute("userName").toString());
                map.put("orgId", hSession.getAttribute("orgId").toString());
                map.put("orgName", hSession.getAttribute("orgName").toString());
                map.put("corpId", hSession.getAttribute("orgName").toString());
                map.put("userAccount", hSession.getAttribute("userAccount").toString());
                temp = InitWorkFlowData.getKeyValue(temp, map, request);
              } 
              tempArr = temp.split(";");
              for (int i = 0; i < tempArr.length; i++) {
                if (tempArr[i] != null && tempArr[i].trim().length() > 0 && tempArr[i].indexOf("/") >= 0 && tempArr[i].indexOf("/") < tempArr[i].length() - 1) {
                  if (noWriteField.indexOf(fieldTemp[0][0]) >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=checkbox style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + tempArr[i].split("/")[0] + " " + (defaultValue.contains(String.valueOf(tempArr[i].split("/")[0]) + ",") ? "checked" : "") + " disabled>';\n";
                  } else {
                    html = String.valueOf(html) + "var " + field + "_temp='<input type=checkbox style=font-size:1em; id=" + 
                      field + " name=" + field + " value=" + tempArr[i].split("/")[0] + " " + (defaultValue.contains(String.valueOf(tempArr[i].split("/")[0]) + ",") ? "checked" : "") + ">';\n";
                  } 
                  html = String.valueOf(html) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=" + 
                    field + "_temp;\ndocument.getElementById('" + fieldTemp[0][0] + "-" + field + 
                    "').innerHTML+='" + tempArr[i].split("/")[1] + ((i == tempArr.length - 1) ? mustField1 : "") + "';}";
                } 
              } 
            } 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';}" + html;
            break;
          case 105:
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<select style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; id=" + field + " name=" + field + 
                " disabled><option value=\"\">==请选择==</option>";
            } else {
              html = "<select style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; id=" + field + " name=" + field;
              if (Integer.parseInt(fieldTemp[0][10]) > 0)
                html = String.valueOf(html) + " onchange=\"" + field + "_onchange(this);\""; 
              html = String.valueOf(html) + "><option value=\"\">==请选择==</option>";
            } 
            defaultValue = "";
            if (fieldTemp[0][4] != null && !"".equals(fieldTemp[0][4].toString())) {
              defaultValue = fieldTemp[0][4].toString();
              HttpSession hSession = request.getSession();
              String userId = hSession.getAttribute("userId").toString();
              String orgId = hSession.getAttribute("orgId").toString();
              String userAccount = hSession.getAttribute("userAccount").toString();
              String userName = hSession.getAttribute("userName").toString();
              if (defaultValue.equals("@$@CURRENTYEAR@$@")) {
                defaultValue = String.valueOf((new Date()).getYear() + 1900);
              } else if (defaultValue.equals("@$@CURRENTMONTH@$@")) {
                defaultValue = String.valueOf((new Date()).getMonth() + 1);
              } else if (defaultValue.equals("@$@userId@$@")) {
                defaultValue = userId;
              } else if (defaultValue.equals("@$@orgId@$@")) {
                defaultValue = orgId;
              } else if (defaultValue.equals("@$@userAccount@$@")) {
                defaultValue = userAccount;
              } else if (defaultValue.equals("@$@userName@$@")) {
                defaultValue = userName;
              } 
            } 
            temp = fieldTemp[0][6];
            if (temp == null || temp.trim().length() < 1)
              break; 
            if (temp.startsWith("@")) {
              String table = temp.substring(temp.indexOf("][") + 2, temp.length() - 1);
              String[][] data = (String[][])null;
              try {
                String col = table.substring(table.indexOf(".") + 1, table.length());
                data = dbopt.executeQueryToStrArr2("select " + table.substring(0, table.indexOf(".")) + "_id," + col + " from " + table.substring(0, table.indexOf(".")) + " order by " + col);
              } catch (Exception exception) {}
              if (data != null)
                for (int i = 0; i < data.length; i++) {
                  html = String.valueOf(html) + "<option value=\"" + data[i][0] + "\"";
                  if (defaultValue.equals(data[i][0]))
                    html = String.valueOf(html) + " selected "; 
                  html = String.valueOf(html) + ">" + data[i][1] + "</option>";
                }  
            } else if (temp.startsWith("$")) {
              String dataSourceName = "system";
              if (temp.indexOf("].$[") > 0) {
                dataSourceName = temp.substring(2, temp.indexOf("].$["));
                sql = temp.substring(temp.indexOf("].$[") + 4, temp.length() - 1);
              } else {
                sql = temp.substring(2, temp.length() - 1);
              } 
              String sql = InitWorkFlowData.getValueFromRequest(request, sql);
              String[][] data = (String[][])null;
              DbOpt dbo = null;
              try {
                if (!"system".equals(dataSourceName)) {
                  dbo = new DbOpt(dataSourceName);
                  String dbType = SystemCommon.getUserDatabaseType(dataSourceName);
                  if (dbType.indexOf("oracle") >= 0) {
                    String lang = SystemCommon.getUserDatabaseLang(dataSourceName);
                    if (!"".equals(lang))
                      dbo.executeUpdate("ALTER SESSION SET NLS_LANGUAGE='" + lang + "'"); 
                  } 
                  data = dbo.executeQueryToStrArr2(sql);
                  dbo.close();
                } else if (sql.length() > 0 && sql.indexOf("@$@selValue@$@") < 0) {
                  data = dbopt.executeQueryToStrArr2(sql);
                } 
              } catch (Exception e3) {
                System.out.println("SQL语句错误！");
                if (dbo != null)
                  dbo.close(); 
                e3.printStackTrace();
              } 
              if (data != null)
                for (int i = 0; i < data.length; i++) {
                  html = String.valueOf(html) + "<option value=\"" + data[i][0] + "\"";
                  if (defaultValue.equals(data[i][0]))
                    html = String.valueOf(html) + " selected "; 
                  html = String.valueOf(html) + ">" + data[i][1] + "</option>";
                }  
            } else if (temp.startsWith("*")) {
              String parentId = temp.substring(temp.indexOf(".*[") + 3, temp.length() - 1);
              tempArr = (new BaseSetEJBBean()).getValue(parentId).split(";");
              for (int i = 0; i < tempArr.length; i++) {
                if (tempArr[i] != null && tempArr[i].trim().length() > 0 && tempArr[i].indexOf("/") >= 0 && tempArr[i].indexOf("/") < tempArr[i].length() - 1) {
                  html = String.valueOf(html) + "<option value=\"" + tempArr[i].split("/")[0] + "\"";
                  if (defaultValue.equals(tempArr[i].split("/")[0]))
                    html = String.valueOf(html) + " selected "; 
                  html = String.valueOf(html) + ">" + tempArr[i].split("/")[1] + "</option>";
                } 
              } 
            } else {
              if (temp.startsWith("#[interface:")) {
                HttpSession hSession = request.getSession();
                Map<String, String> map = new HashMap<String, String>();
                map.put("tableId", request.getParameter("tableId"));
                map.put("processId", request.getParameter("processId"));
                map.put("userId", hSession.getAttribute("userId").toString());
                map.put("userName", hSession.getAttribute("userName").toString());
                map.put("orgId", hSession.getAttribute("orgId").toString());
                map.put("orgName", hSession.getAttribute("orgName").toString());
                map.put("corpId", hSession.getAttribute("orgName").toString());
                map.put("userAccount", hSession.getAttribute("userAccount").toString());
                temp = InitWorkFlowData.getKeyValue(temp, map, request);
              } 
              tempArr = temp.split(";");
              for (int i = 0; i < tempArr.length; i++) {
                if (tempArr[i] != null && tempArr[i].trim().length() > 0 && tempArr[i].indexOf("/") >= 0 && tempArr[i].indexOf("/") < tempArr[i].length() - 1) {
                  html = String.valueOf(html) + "<option value=\"" + tempArr[i].split("/")[0] + "\"";
                  if (defaultValue.equals(tempArr[i].split("/")[0]))
                    html = String.valueOf(html) + " selected "; 
                  html = String.valueOf(html) + ">" + tempArr[i].split("/")[1] + "</option>";
                } 
              } 
            } 
            html = String.valueOf(html) + "</select>";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && noWriteField.indexOf(fieldTemp[0][5]) < 0 && fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + "><label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+='" + html + "';}";
            break;
          case 107:
            temp = fieldTemp[0][6];
            type = "<input type=hidden name=" + field + "_type id=" + field + "_type value=jsdate>";
            valueTemp = "";
            if (fieldTemp[0][4] != null && fieldTemp[0][4].length() == 10 && fieldTemp[0][4].indexOf("-") > 0 && 
              fieldTemp[0][4].lastIndexOf("-") > 0 && 
              fieldTemp[0][4].lastIndexOf("-") - fieldTemp[0][4].indexOf("-") == 3) {
              valueTemp = fieldTemp[0][4];
            } else {
              valueTemp = String.valueOf(String.valueOf(now.getYear() + 1900)) + 
                "-" + ((now.getMonth() >= 9) ? String.valueOf(now.getMonth() + 1) : ("0" + String.valueOf(now.getMonth() + 1))) + 
                "-" + ((now.getDate() > 9) ? String.valueOf(now.getDate()) : ("0" + String.valueOf(now.getDate())));
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              type = String.valueOf(type) + "<span>" + valueTemp + "</span>";
              type = String.valueOf(type) + "<input type=hidden name=" + field + " id=" + field + " value='" + valueTemp + "' />";
            } else {
              type = String.valueOf(type) + "<input type=text class=flowInput style=\\\"width:75px;font-size:1em;\\\"  onmouseover=setStyle(this) onmouseout=setStyle(this) name=" + 
                field + " id=" + field + 
                " onclick=setDay(this) value=\\\"" + 
                valueTemp + "\\\"  style=\\\"background:url('/jsoa/eform/images/down_arrow.gif');\\\">";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              type = String.valueOf(type) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + ">" + 
                "<label class=mustFillcolor>*</label>"; 
            html = String.valueOf(html) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML=\"" + type + "\";}";
            if (!"".equals(fieldTemp[0][4]) && !"null".equalsIgnoreCase((new StringBuilder(String.valueOf(fieldTemp[0][4]))).toString()) && 
              fieldTemp[0][4].contains(").beforeDate("))
              html = String.valueOf(html) + "\ndocument.getElementById('dateCompare').value=document.getElementById('dateCompare').value+'{" + fieldTemp[0][4] + "}';\n"; 
            break;
          case 108:
            type = "<input type=hidden name=" + field + "_type id=" + field + "_type value=jstime>";
            timeStr = (new SimpleDateFormat("HH:mm:ss")).format(now);
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<span>" + timeStr + "</span><input type=hidden id=" + field + " name=" + field + " value=\\\"" + timeStr + "\\\" />";
            } else {
              html = "<INPUT type=text class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) id=" + 
                field + 
                " name=" + field + 
                " onclick='showDateTimeBar(this, \\\"h:n:s\\\", \\\"" + 
                String.valueOf(now.getMonth() + 1) + "/" + 
                String.valueOf(now.getDate() + 1) + "/" + 
                String.valueOf(now.getYear() + 1900) + " " + 
                String.valueOf(now.getHours()) + ":" + 
                String.valueOf(now.getMinutes()) + ":" + 
                String.valueOf(now.getSeconds()) + "\\\", " + 
                "test, \\\"hello world\\\")' name=" + 
                field + " id=" + 
                field + " value=\\\"" + 
                timeStr + "\\\" style=\\\"background:url('/jsoa/eform/images/down_arrow.gif');font-size:1em;\\\">";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                field + 
                "><label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + 
              "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + 
              "';document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML+=\"" + html + "\";}";
            break;
          case 109:
            type = "<input type=hidden name=" + field + "_type id=" + field + "_type value=datetime>";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              String readMinutes = (now.getMinutes() > 9) ? 
                String.valueOf(now.getMinutes()) : (
                "0" + String.valueOf(now.getMinutes()));
              String readSecond = (now.getSeconds() > 9) ? 
                String.valueOf(now.getMinutes()) : 
                String.valueOf(now.getSeconds());
              String readHours = (now.getHours() > 9) ? 
                String.valueOf(now.getHours()) : (
                "0" + String.valueOf(now.getHours()));
              String readDate = String.valueOf(String.valueOf(now.getYear() + 1900)) + 
                "-" + ((now.getMonth() >= 9) ? 
                String.valueOf(now.getMonth() + 1) : ("0" + 
                String.valueOf(now.getMonth() + 1))) + "-" + (
                (now.getDate() > 9) ? 
                String.valueOf(now.getDate()) : ("0" + String.valueOf(now.getDate())));
              type = String.valueOf(type) + "<span>" + readDate + " " + readHours + ":" + readMinutes + "</span>";
              type = String.valueOf(type) + "<input type=hidden id=" + field + " name=" + field + " value='" + readDate + "'>";
              type = String.valueOf(type) + "<input type=hidden id=" + field + "hours name=" + field + "hours value='" + readHours + "'>";
              type = String.valueOf(type) + "<input type=hidden id=" + field + "minutes name=" + field + "minutes value='" + readMinutes + "'>";
              type = String.valueOf(type) + "<input type=hidden id=" + field + "second name=" + field + "second value='" + readSecond + "'>";
            } else {
              type = String.valueOf(type) + 
                "<input type=text size=12 class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) name=" + 
                field + 
                " id=" + field + 
                " onclick=setDay(this) value='" + 
                String.valueOf(now.getYear() + 1900) + 
                "-" + (
                (now.getMonth() >= 9) ? 
                String.valueOf(now.getMonth() + 1) : (
                "0" + String.valueOf(now.getMonth() + 1))) + 
                "-" + (
                (now.getDate() > 9) ? 
                String.valueOf(now.getDate()) : (
                "0" + String.valueOf(now.getDate()))) + 
                "' style=\\\"background:url('/jsoa/eform/images/down_arrow.gif');font-size:1em;\\\">";
              type = String.valueOf(type) + "日&nbsp;<select name=" + field + "hours id=" + field + "hours>";
              int i;
              for (i = 0; i < 24; i++) {
                String hours = "";
                if (i >= 0 && i < 10) {
                  hours = "0" + String.valueOf(i);
                } else {
                  hours = String.valueOf(i);
                } 
                type = String.valueOf(type) + "<option value=" + String.valueOf(hours) + (
                  (i == now.getHours()) ? " selected" : "") + 
                  ">" + String.valueOf(hours) + "</option>";
              } 
              type = String.valueOf(type) + "</select>";
              type = String.valueOf(type) + "时&nbsp;<select name=" + field + "minutes id=" + field + "minutes>";
              for (i = 0; i < 60; i++) {
                String minute = "";
                if (i >= 0 && i < 10) {
                  minute = "0" + String.valueOf(i);
                } else {
                  minute = String.valueOf(i);
                } 
                type = String.valueOf(type) + "<option value=" + String.valueOf(minute) + (
                  (i == now.getMinutes()) ? " selected" : 
                  "") + ">" + String.valueOf(minute) + 
                  "</option>";
              } 
              type = String.valueOf(type) + "</select>分&nbsp;";
              if (!"pengchi".equals(SystemCommon.getCustomerName())) {
                type = String.valueOf(type) + "<select name=" + field + "second style=font-size:1em; id=" + field + "second>";
                for (i = 0; i < 60; i++) {
                  String second = "";
                  if (i >= 0 && i < 10) {
                    second = "0" + String.valueOf(i);
                  } else {
                    second = String.valueOf(i);
                  } 
                  type = String.valueOf(type) + "<option value=" + String.valueOf(second) + (
                    (i == now.getSeconds()) ? " selected" : 
                    "") + ">" + String.valueOf(second) + 
                    "</option>";
                } 
                type = String.valueOf(type) + "</select>秒&nbsp;";
              } 
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              type = String.valueOf(type) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                field + 
                "><label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + 
              "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML=\"" + type + "\";}";
            if (!"".equals(fieldTemp[0][4]) && !"null".equalsIgnoreCase((new StringBuilder(String.valueOf(fieldTemp[0][4]))).toString()) && fieldTemp[0][4].contains(").beforeDate("))
              html = String.valueOf(html) + "\ndocument.getElementById('dateCompare').value=document.getElementById('dateCompare').value+'{" + fieldTemp[0][4] + "}';\n"; 
            break;
          case 110:
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<textarea class=flowInput id=" + field + 
                " name=" + field + 
                " style=\"width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em;\" rows=\"6\" readonly=\"readonly\">" + 
                fieldTemp[0][4] + "</textarea>";
            } else {
              html = "<textarea class=flowInput  onblur=checkSize(this); onmouseover=setStyle(this) onmouseout=setStyle(this) id=" + field + 
                " name=" + field + 
                " style=\"width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em;\" rows=\"6\">" + 
                fieldTemp[0][4] + "</textarea>";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + ">" + 
                "<label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+='" + html + "';}";
            break;
          case 111:
            if (fieldTemp[0][6] != null && fieldTemp[0][6].startsWith("@") && !fieldTemp[0][6].startsWith("@$@")) {
              if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
                noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
                html = "<input type=text class=flowInput id=" + field + " name=" + field + 
                  " readonly style=width:95%;font-size:1em; onblur=\"bianhaoBlur(this);checkSize(this);\" >";
              } else {
                html = "<select onchange=getAutoCode(this,\\\"" + field + "\\\")><option value=0>==请选择==</option>";
                String tableTemp = fieldTemp[0][6].split("=")[0];
                String table = tableTemp.substring(tableTemp.indexOf("][") + 2, tableTemp.length() - 1);
                String[][] data = (String[][])null;
                try {
                  data = dbopt.executeQueryToStrArr2(
                      "select " + table.substring(0, table.indexOf(".")) + "_id," + table.substring(table.indexOf(".") + 1, table.length()) + 
                      " from " + table.substring(0, table.indexOf(".")));
                } catch (Exception e3) {
                  e3.printStackTrace();
                } 
                if (data != null)
                  for (int i = 0; i < data.length; i++)
                    html = String.valueOf(html) + "<option value=\"" + data[i][1] + "\">" + data[i][1] + "</option>";  
                html = String.valueOf(html) + "</select><input type=text class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) id=" + 
                  field + " name=" + field + " readonly";
                if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
                  noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
                  fieldTemp[0][3].equals("1")) {
                  html = String.valueOf(html) + " style=width:80%;font-size:1em; ><input type=hidden name=mustWrite id=mustWrite value=" + 
                    field + ">" + 
                    "<label class=mustFillcolor>*</label>";
                } else {
                  html = String.valueOf(html) + " style=width:95%; >";
                } 
              } 
              html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
                "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';" + 
                "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+='" + html + "';}";
              break;
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<input type=text class=flowInput id=" + field + " name=" + field + 
                " value=\"" + getAutoCode(field, fieldId) + "\" style=width:95%;font-size:1em; readonly>";
            } else {
              html = "<input type=text class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) id=" + field + 
                " name=" + field + " value=\"" + getAutoCode(field, fieldId) + "\" ";
              if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
                noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
                fieldTemp[0][3].equals("1")) {
                html = String.valueOf(html) + " style=width:80%;font-size:1em; ><input type=hidden name=mustWrite id=mustWrite value=" + field + ">" + 
                  "<label class=mustFillcolor>*</label>";
              } else {
                html = String.valueOf(html) + " style=width:95%; >";
              } 
            } 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+='" + html + "';}";
            break;
          case 112:
            break;
          case 113:
            temp1 = "";
            temp2 = "";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              temp1 = "本字段(html编辑器)被设置为只读字段，发起节点不显示html编辑器。";
              temp1 = String.valueOf(temp1) + "<input type=hidden id=" + field + " name=" + field + " value=''>";
            } else {
              temp1 = "<input type=hidden id=" + field + " name=" + field + ">";
              String editType = "edit8";
              if (BrowserJudge.isMSIE(request))
                editType = "edit"; 
              temp2 = "<IFRAME id='" + field + "_html' src='/jsoa/public/" + editType + "/ewebeditor.htm?id=" + field + "&style=coolblue&lang=zh_cn' " + 
                "frameborder=0" + " scrolling='no' width='98%' height='350'></IFRAME>" + 
                "<input type=hidden name=hasHtml id=hasHtml value=" + field + ">";
              if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
                noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
                fieldTemp[0][3].equals("1"))
                temp2 = String.valueOf(temp2) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + ">" + 
                  "<label class=mustFillcolor>*</label>"; 
            } 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=\"" + temp1 + "\";" + (
              temp2.equals("") ? "" : (
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=\"" + temp2 + "\";")) + "}";
            break;
          case 114:
            break;
          case 115:
            type = "<input type=hidden name=" + field + 
              "_type id=" + field + 
              "_type value=file>";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<IFRAME name=" + field + " id=" + field + " src='/jsoa/eform/upload.jsp?fileName=" + field + "_fileName&saveName=" + field + "_saveName&t=t' " + 
                "frameborder=0 marginwidth='0' marginheight='0' scrolling='auto' width='98%' height='150' style=display:none></IFRAME>";
            } else {
              html = "<IFRAME name=" + field + " id=" + field + " src='/jsoa/eform/upload.jsp?fileName=" + field + "_fileName&saveName=" + field + "_saveName&t=t' " + 
                "frameborder=0 marginwidth='0' marginheight='0' scrolling='auto' width='98%' height='30'></IFRAME>";
            } 
            html = String.valueOf(html) + "<input type=hidden name=" + field + "_fileName id=" + field + "_fileName>";
            html = String.valueOf(html) + "<input type=hidden name=" + field + "_saveName id=" + field + "_saveName>";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + "_fileName>" + 
                "<label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';" + 
              "document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=\"" + html + "\";}";
            break;
          case 116:
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<input type=text style=font-size:1em; class=flowInput id=" + 
                field + " name=" + 
                field + " readonly>";
            } else {
              html = "<input type=hidden id=" + field + " name=" + 
                field + ">";
              html = String.valueOf(html) + "<input type=\\\"button\\\" class=btnButton4font onclick=\\\"editOffices('" + 
                field + "','doc','" + fieldTemp[0][6] + "','-1');\\\" value=\\\"编辑正文\\\" />";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                field + 
                "><label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + 
              "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + 
              "';document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML+=\"" + html + "\";}";
            break;
          case 117:
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<input type=text style=font-size:1em; class=flowInput id=" + 
                field + " name=" + 
                field + " readonly>";
            } else {
              html = "<input type=hidden id=" + field + " name=" + 
                field + ">";
              html = String.valueOf(html) + "<input type=\\\"button\\\" class=btnButton4font onclick=\\\"editOffices('" + 
                field + "','xls','" + fieldTemp[0][6] + "','0');\\\" value=\\\"编辑正文\\\" />";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                field + 
                "><label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + 
              "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + 
              "';document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML+=\"" + html + "\";}";
            break;
          case 118:
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<input type=text style=font-size:1em; class=flowInput id=" + 
                field + " name=" + 
                field + " readonly>";
            } else {
              html = "<input type=hidden id=" + field + " name=" + 
                field + ">";
              html = String.valueOf(html) + "<input type=\\\"button\\\" class=btnButton4font onclick=\\\"editOffices('" + 
                field + "','wps','" + fieldTemp[0][6] + "','0');\\\" value=\"编辑正文\" />";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                field + 
                "><label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + 
              "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + 
              "';document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML+=\"" + html + "\";}";
            break;
          case 199:
            disabled = "";
            if (noWriteField.indexOf(fieldTemp[0][0]) >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0)
              disabled = " disabled "; 
            html = "<input type=hidden name=" + field + "_type id=" + field + "_type value=url>" + 
              "<input type=hidden name=" + field + "_size id=" + field + "_size value=255>";
            html = String.valueOf(html) + "<input type=hidden id=" + field + " name=" + field + " value=\"\" />" + 
              "标题：<input type=text id=" + field + "_title name=" + field + "_title value=\"\" onblur=comURL(\"" + field + "\"); style=\"width:20%;font-size:1em;\" " + disabled + " />" + 
              "&nbsp;链接：<input type=text id=" + field + "_url name=" + field + "_url value=\"" + fieldTemp[0][4] + "\" onblur=comURL(\"" + field + "\"); " + 
              "style=width:" + (fieldTemp[0][3].equals("1") ? "20" : "30") + "%" + 
              " class=flowInput  maxlength=\"" + maxlen + "\" " + disabled + ">" + ((fieldTemp[0][3].equals("1") && noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && noWriteField.indexOf(fieldTemp[0][5]) < 0) ? (
              "<input type=hidden name=mustWrite id=mustWrite value=" + field + 
              "_title><input type=hidden name=mustWrite id=mustWrite value=" + field + 
              "_url><label class=mustFillcolor>*</label>") : "");
            html = "\n\nif(document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "'))\n{\ndocument.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + html + "';\n}\n\n";
            break;
          case 200:
            disabled1 = "";
            if (noWriteField.indexOf(fieldTemp[0][0]) >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0)
              disabled1 = " disabled "; 
            html = "<input type=hidden name=" + field + "_type id=" + field + "_type value=varchar>" + 
              "<input type=hidden name=" + field + "_size id=" + field + "_size value=255>";
            html = String.valueOf(html) + "<input type=text id=" + field + " name=" + field + " style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em;" + 
              " class=flowInput onblur=isPhone(this); maxlength=\"" + maxlen + "\"" + " value=\"" + fieldTemp[0][4] + "\" " + disabled1 + ">" + ((
              fieldTemp[0][3].equals("1") && noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && noWriteField.indexOf(fieldTemp[0][5]) < 0) ? (
              "<input type=hidden name=mustWrite id=mustWrite value=" + 
              field + 
              "><label class=mustFillcolor>*</label>") : 
              "");
            html = "\n\nif(document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "'))\n{\ndocument.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + html + "';\n}\n\n";
            break;
          case 201:
            html = "<input style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; type=text id=" + field + " name=" + field + " readonly style=border:0px solid white;>";
            temp3 = "var " + field + 
              "_temp=document.createElement('SCRIPT');";
            temp3 = String.valueOf(temp3) + field + "_temp.text=\"document.all." + field + 
              ".value=document.all.user_Id.value;\";";
            html = String.valueOf(temp3) + "if(document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + 
              "';document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML+=\"" + html + 
              "\";document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').appendChild(" + field + "_temp);}";
            break;
          case 202:
            html = "<input style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%; style=border:0px;solid;white;font-size:1em; type=text id=" + field + " name=" + field + " readonly >";
            temp4 = "var " + field + "_temp=document.createElement('SCRIPT');";
            temp4 = String.valueOf(temp4) + field + "_temp.text=\"document.all." + field + 
              ".value=document.all.user_Name.value;var renyuanName = '';\";";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                field + "><label class=mustFillcolor>*</label>"; 
            html = String.valueOf(temp4) + "if(document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + 
              "';document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML+=\"" + html + 
              "\";document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').appendChild(" + field + "_temp);}";
            break;
          case 203:
            jisuanSet = "";
            if (fieldTemp[0][6].length() > 0) {
              String[] setStr = fieldTemp[0][6].substring(0, fieldTemp[0][6].length() - 1).split("\\]\\.\\[");
              if (setStr.length > 2)
                jisuanSet = "<input type=\\'hidden\\' value=\\'" + setStr[2] + ":" + setStr[3] + "\\' name=\\'" + field + "_js\\' id=\\'" + field + "_js\\' />"; 
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<input style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; type=text name=" + 
                field + "_cmp id=" + 
                field + "_cmp class=flowInputRed readonly>";
            } else {
              html = "<input style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; type=text name=" + 
                field + "_cmp id=" + 
                field + "_cmp class=flowInputRed readonly>";
            } 
            html = String.valueOf(html) + "<input type=hidden name=" + field + " id=" + field + " >";
            if (fieldTemp[0][2].equals("1000000") || fieldTemp[0][2].equals("1000001")) {
              type = "<input type=hidden name=" + field + "_type id=" + field + "_type value=numbercompute>";
              isNum = true;
            } else {
              type = "<input type=hidden name=" + field + "_type id=" + field + "_type value=varcharcompute>";
            } 
            html = "if(document.getElementById('" + fieldTemp[0][0] + 
              "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + html + type + jisuanSet + "';}";
            break;
          case 204:
            type = "<input type=hidden name=" + field + 
              "_type id=" + field + 
              "_type value=varchar>";
            dateT = String.valueOf(String.valueOf(now.getYear() + 1900)) + 
              "-" + ((now.getMonth() >= 9) ? String.valueOf(now.getMonth() + 1) : ("0" + String.valueOf(now.getMonth() + 1))) + 
              "-" + ((now.getDate() > 9) ? String.valueOf(now.getDate()) : ("0" + String.valueOf(now.getDate())));
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              type = String.valueOf(type) + dateT + "<input type=hidden name=" + 
                field + 
                " id=" + field + " value=" + 
                dateT + ">";
            } else {
              type = String.valueOf(type) + dateT + "<input type=hidden name=" + 
                field + 
                " id=" + field + " value=" + 
                dateT + ">";
            } 
            html = String.valueOf(html) + "if(document.getElementById('" + fieldTemp[0][0] + 
              "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML=\"" + type + "\";}";
            break;
          case 206:
            break;
          case 207:
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<input type=hidden id=" + field + " name=" + field + ">";
            } else {
              html = "<input type=hidden id=" + field + " name=" + field + ">";
            } 
            temp5 = "var " + field + "_temp=document.createElement('SCRIPT');";
            temp5 = String.valueOf(temp5) + field + "_temp.text=\"document.all." + field + ".value=orgNameShow(document.all.org_Name.value," + SystemCommon.getInnerShow() + ");\";";
            html = String.valueOf(temp5) + "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML=orgNameShow(document.all.org_Name.value," + SystemCommon.getInnerShow() + ")+'" + type + 
              "';document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+=\"" + html + "\";document.getElementById('" + fieldTemp[0][0] + "-" + field + "').appendChild(" + field + "_temp);}";
            break;
          case 208:
            break;
          case 209:
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = 
                "<input style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; type=text class=flowInput id=" + 
                field + " name=" + 
                field + " disabled>";
            } else {
              html = 
                "<input style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; type=text class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) id=" + 
                field + " name=" + 
                field + " " + (
                isNum ? "  onblur=checkNum(this);checkSize(this);" : " onblur=checkSize(this);") + 
                ">";
            } 
            temp7 = "var " + field + 
              "_temp=document.createElement('SCRIPT');";
            temp7 = String.valueOf(temp7) + field + "_temp.text=\"document.all." + field + 
              ".value=document.all.group_ID.value;\";";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                field + 
                "><label class=mustFillcolor>*</label>"; 
            html = String.valueOf(temp7) + "if(document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + 
              "';document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML+=\"" + html + 
              "\";document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').appendChild(" + field + "_temp);}";
            break;
          case 210:
            type = "<input type=hidden name=" + field + 
              "_type id=" + field + 
              "_type value=personorg>";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = 
                "<input style=width:80%;font-size:1em; type=text class=flowInput id=" + 
                field + "_Name name=" + 
                field + "_Name readonly>";
              html = String.valueOf(html) + "<input type=hidden id=" + 
                field + "_Id name=" + 
                field + "_Id>";
            } else {
              html = 
                "<input style=width:80%;font-size:1em; type=text class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) id=" + 
                field + "_Name name=" + 
                field + "_Name  title=\\\"请点击选择\\\" onclick=\\\"" + 
                "openEndow('" + 
                field + "_Id','" + field + 
                "_Name',document.all." + field + 
                "_Id.value,document.all." + field + "_Name.value,'user','yes','user','-100')\\\" readonly=readonly />";
              html = String.valueOf(html) + "<input type=hidden id=" + field + 
                "_Id name=" + 
                field + 
                "_Id>";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                field + 
                "><label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + 
              "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + 
              "';document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML+=\"" + html + "\";}";
            break;
          case 211:
            type = "<input type=hidden name=" + field + 
              "_type id=" + field + 
              "_type value=personorg>";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<textarea class=flowInput id=" + field + 
                " name=" + field + 
                " style=\"width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em;\" rows=\"6\" readonly=\"readonly\">" + 
                fieldTemp[0][4] + "</textarea>";
            } else {
              html = "<textarea class=flowInput  onblur=checkSize(this); onmouseover=setStyle(this) onmouseout=setStyle(this) id=" + field + 
                " name=" + field + 
                " style=\"width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em;\" rows=\"6\">" + 
                fieldTemp[0][4] + "</textarea>";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = 
                "<input style=width:80%;font-size:1em; type=text class=flowInput id=" + 
                field + "_Name name=" + 
                field + "_Name readonly>";
              html = String.valueOf(html) + "<input type=hidden id=" + 
                field + "_Id name=" + 
                field + "_Id>";
            } else {
              html = "<textarea class=flowInput  onblur=checkSize(this); onmouseover=setStyle(this) onmouseout=setStyle(this) id=" + field + 
                "_Name name=" + field + "_Name style=\\\"width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em;\\\" rows=3 title=\\\"请点击选择\\\"  onClick=\\\"openEndow('" + 
                field + "_Id','" + field + 
                "_Name',document.all." + field + 
                "_Id.value,document.all." + field + "_Name.value,'user','no','user','-100')\\\" readonly=readonly />" + 
                fieldTemp[0][4] + "</textarea>";
              html = String.valueOf(html) + "<input type=hidden id=" + field + 
                "_Id name=" + 
                field + 
                "_Id>";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                field + 
                "><label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + 
              "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + 
              "';document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML+=\"" + html + "\";}";
            break;
          case 212:
            type = "<input type=hidden name=" + field + 
              "_type id=" + field + 
              "_type value=personorg>";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = 
                "<input style=width:80%;font-size:1em; type=text class=flowInput id=" + 
                field + "_Name name=" + 
                field + "_Name readonly>";
              html = String.valueOf(html) + "<input type=hidden id=" + 
                field + "_Id name=" + 
                field + "_Id>";
            } else {
              html = 
                "<input style=width:80%;font-size:1em; type=text class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) id=" + 
                field + "_Name name=" + 
                field + "_Name title=\\\"请点击选择\\\" readonly onClick=\\\"openEndow('" + 
                field + "_Id','" + field + 
                "_Name',document.all." + field + 
                "_Id.value,document.all." + field + "_Name.value,'org','yes','org','-100')\\\" readonly=readonly />";
              html = String.valueOf(html) + "<input type=hidden id=" + field + 
                "_Id name=" + 
                field + 
                "_Id>";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                field + 
                "><label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + 
              "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + 
              "';document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML+=\"" + html + "\";}";
            break;
          case 213:
            html = 
              "<input style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; type=text id=" + 
              field + " name=" + 
              field + " readonly style=border:0px solid white;>";
            temp6 = "var " + field + 
              "_temp=document.createElement('SCRIPT');";
            temp6 = String.valueOf(temp6) + field + "_temp.text=\"document.all." + field + 
              ".value=document.all.org_ID.value;\";";
            if (noWriteField.indexOf("," + fieldTemp[0][0]) < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                field + 
                "><label class=mustFillcolor>*</label>"; 
            html = String.valueOf(temp6) + "if(document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + 
              "';document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML+=\"" + html + 
              "\";document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').appendChild(" + field + "_temp);}";
            break;
          case 214:
            type = "<input type=hidden name=" + field + 
              "_type id=" + field + 
              "_type value=personorg>";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = 
                "<input style=width:80%;font-size:1em; type=text class=flowInput id=" + 
                field + "_Name name=" + 
                field + "_Name readonly>";
              html = String.valueOf(html) + "<input type=hidden id=" + 
                field + "_Id name=" + 
                field + "_Id>";
            } else {
              html = "<textarea class=flowInput  onblur=checkSize(this); onmouseover=setStyle(this) onmouseout=setStyle(this) id=" + field + 
                "_Name name=" + field + "_Name style=\\\"width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em;\\\" rows=3 title=\\\"请点击选择\\\" readonly onClick=\\\"openEndow('" + 
                field + "_Id','" + field + 
                "_Name',document.all." + field + 
                "_Id.value,document.all." + field + "_Name.value,'org','no','org','-100')\\\" readonly=readonly /></textarea>";
              html = String.valueOf(html) + "<input type=hidden id=" + field + 
                "_Id name=" + 
                field + 
                "_Id>";
            } 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                field + 
                "><label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + 
              "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + 
              "';document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML+=\"" + html + "\";}";
            break;
          case 215:
            disabled2 = "";
            if (noWriteField.indexOf(fieldTemp[0][0]) >= 0 || noWriteField.indexOf(fieldTemp[0][5]) >= 0)
              disabled2 = " disabled "; 
            curEmpNumber = StaticParam.getEmpNumberByEmpId(request.getSession().getAttribute("userId").toString());
            html = "<input type=text name=" + field + " id=" + field + " style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; " + 
              "class=flowInput title=多个工号之间用逗号隔开 value=\\\"" + curEmpNumber + "\\\" " + disabled2 + ">";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                field + "><label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + 
              "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + 
              "';document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML+=\"" + html + "\";}";
            break;
          case 301:
            temp = fieldTemp[0][6];
            money = "";
            unit = "";
            upperField = "";
            if (temp.indexOf("[") == 0 && temp.indexOf("][") > 0) {
              upperField = temp.substring(1, temp.indexOf("]["));
              if (upperField.indexOf(";;") > 0) {
                money = upperField.substring(0, upperField.indexOf(";;"));
                unit = upperField.substring(upperField.indexOf(";;") + 2);
              } else if (upperField.indexOf(";;") == 0) {
                unit = upperField.substring(2);
              } else {
                money = upperField;
              } 
              upperField = temp.substring(temp.indexOf("][") + 2, temp.length() - 1);
            } else if (temp.indexOf(";;") > 0) {
              money = temp.substring(0, temp.indexOf(";;"));
              unit = temp.substring(temp.indexOf(";;") + 2);
            } else if (temp.indexOf(";;") == 0) {
              unit = temp.substring(2);
            } else {
              money = temp;
            } 
            if (!"".equals(money))
              html = "<div style=\\\"float:left;padding-top:2px;font-size:1em;\\\">" + money + "</div>"; 
            html = String.valueOf(html) + "<div style=\\\"float:left;width:60%;\\\">";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = String.valueOf(html) + "<input style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; type=text class=flowInput id=" + 
                field + " name=" + field + " value=\"" + fieldTemp[0][4] + "\" readonly>";
            } else {
              String onblurTemp = "";
              if (computeFieldStr.indexOf(field) >= 0)
                onblurTemp = "setComputeForeignFieldNew(this);"; 
              html = String.valueOf(html) + "<input style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; type=text class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) id=" + 
                field + " name=" + field + " " + (isNum ? ("  onblur=checkNum(this);checkSize(this);" + onblurTemp + "setTotalValue();accountToUpper(this,\\\"" + upperField + "\\\");") : (" onblur=checkSize(this);setTotalValue();accountToUpper(this,\\\"" + upperField + "\\\");")) + " value=\"" + fieldTemp[0][4] + "\">";
            } 
            html = String.valueOf(html) + "</div>";
            if (!"".equals(unit))
              html = String.valueOf(html) + "<div style=\\\"float:left;padding-top:2px;font-size:1em;\\\">" + unit + "</div>"; 
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + "><label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + "';document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+='" + html + "';}";
            break;
          case 302:
            html = "<label  class=xuhao>1</label>";
            temp_302 = " <input type=hidden  name=" + field + " id=" + field + " value=\"0\" > ";
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{document.getElementById('" + fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + temp_302 + "';document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+='" + html + "';}";
            break;
          case 402:
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || 
              noWriteField.indexOf(fieldTemp[0][5]) >= 0) {
              html = "<select style=width:" + (fieldTemp[0][3].equals("1") ? "92" : "100") + "%;font-size:1em; id=" + field + " name=" + field + 
                " disabled><option value=\"\">==请选择==</option>";
            } else {
              html = "<select id=" + field + " name=" + field + 
                "><option value=\"\">==请选择==</option>";
            } 
            temp = fieldTemp[0][6];
            if (temp == null || temp.trim().length() < 1)
              break; 
            if (temp.startsWith("@")) {
              String table = temp.substring(temp.indexOf("][") + 
                  2, temp.length() - 1);
              String[][] data = (String[][])null;
              try {
                data = dbopt.executeQueryToStrArr2("select " + 
                    table.substring(0, table.indexOf(".")) + 
                    "_id," + 
                    table.substring(table.indexOf(".") + 1, 
                      table.length()) + " from " + 
                    table.substring(0, table.indexOf(".")));
              } catch (Exception exception) {}
              if (data != null)
                for (int i = 0; i < data.length; i++)
                  html = String.valueOf(html) + "<option value=\"" + data[i][1] + 
                    "\">" + data[i][1] + "</option>";  
            } 
            html = String.valueOf(html) + "</select>";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && 
              noWriteField.indexOf(fieldTemp[0][5]) < 0 && 
              fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
                field + 
                "><label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + 
              "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='" + type + 
              "';document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML+='" + html + "';}";
            break;
          case 450:
            html = "";
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") >= 0 || noWriteField.indexOf("," + fieldTemp[0][5] + ",") >= 0) {
              html = String.valueOf(html) + "<div style=\\\"float:left;width:60%;font-size:1em;\\\"><input type=hidden id=" + field + " name=" + field + "><input type=text id=" + field + "_temp name=" + field + "_temp style=font-size:1em; readonly></div>";
            } else {
              html = String.valueOf(html) + "<div style=\\\"float:left;width:60%;font-size:1em;\\\"><input type=hidden id=" + field + " name=" + field + "><input type=text id=" + field + "_temp name=" + field + "_temp style=\\\"width:100%;font-size:1em;\\\"></div>";
              html = String.valueOf(html) + "<div style=\\\"float:left;font-size:1em;\\\"><input  type=button id=" + field + "_btn name=" + field + "_btn onclick=\"" + field + "_enter(this);\" value=检索></div>";
            } 
            html = (new StringBuilder(String.valueOf(html))).toString();
            if (noWriteField.indexOf("," + fieldTemp[0][0] + ",") < 0 && noWriteField.indexOf("," + fieldTemp[0][5] + ",") < 0 && fieldTemp[0][3].equals("1"))
              html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + field + ">" + 
                "<input type=hidden name=mustWrite id=mustWrite value=" + field + "_temp>" + 
                "<label class=mustFillcolor>*</label>"; 
            html = "if(document.getElementById('" + fieldTemp[0][0] + "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + "').innerHTML='" + type + "';document.getElementById('" + fieldTemp[0][0] + "-" + field + "').innerHTML+='" + html + "';}";
            break;
          case 501:
            html = getRelationHTML(field, fieldTemp[0][0], fieldTemp[0][3], noWriteField);
            break;
          default:
            html = "if(document.getElementById('" + fieldTemp[0][0] + 
              "-" + field + "'))\n{document.getElementById('" + 
              fieldTemp[0][0] + "-" + field + 
              "').innerHTML='';}";
            break;
        } 
      } 
      dbopt.close();
    } catch (Exception e) {
      try {
        dbopt.close();
      } catch (SQLException sQLException) {}
      e.printStackTrace();
    } finally {}
    return html;
  }
  
  public String getEditHTML(String field, String infoId, String pageId, String hideField, String domainId, String fieldId, String fromDraft, String computeFieldStr) {
    return getEditHTML(field, infoId, pageId, hideField, domainId, fieldId, fromDraft, computeFieldStr, (HttpServletRequest)null);
  }
  
  public String getEditHTML(String field, String infoId, String pageId, String hideField, String domainId, String fieldId, String fromDraft, String computeFieldStr, HttpServletRequest request) {
    // Byte code:
    //   0: ldc ''
    //   2: astore #10
    //   4: ldc ''
    //   6: astore #11
    //   8: new java/lang/StringBuilder
    //   11: dup
    //   12: ldc_w ','
    //   15: invokespecial <init> : (Ljava/lang/String;)V
    //   18: aload #4
    //   20: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23: ldc_w ','
    //   26: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29: invokevirtual toString : ()Ljava/lang/String;
    //   32: astore #4
    //   34: aconst_null
    //   35: checkcast [Ljava/lang/String;
    //   38: astore #12
    //   40: aconst_null
    //   41: checkcast [[Ljava/lang/String;
    //   44: astore #13
    //   46: ldc ''
    //   48: astore #14
    //   50: new java/util/Date
    //   53: dup
    //   54: invokespecial <init> : ()V
    //   57: astore #15
    //   59: aconst_null
    //   60: astore #16
    //   62: iconst_0
    //   63: istore #17
    //   65: new com/js/oa/userdb/util/DbOpt
    //   68: dup
    //   69: invokespecial <init> : ()V
    //   72: astore #16
    //   74: aload #16
    //   76: new java/lang/StringBuilder
    //   79: dup
    //   80: ldc_w 'select a.field_id,b.show_id,field_type,FIELD_NULL,FIELD_DEFAULT,field_name,field_value,field_len,field_desname,a.field_table,a.field_changemethod,field_index,field_interfacetype,field_boxsearch from TSHOW b,TFIELD a where FIELD_SHOW=SHOW_ID and FIELD_ID='
    //   83: invokespecial <init> : (Ljava/lang/String;)V
    //   86: aload #6
    //   88: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   91: ldc_w ' and a.domain_id='
    //   94: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   97: aload #5
    //   99: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   102: invokevirtual toString : ()Ljava/lang/String;
    //   105: bipush #14
    //   107: invokevirtual executeQueryToStrArr2 : (Ljava/lang/String;I)[[Ljava/lang/String;
    //   110: astore #13
    //   112: aload #13
    //   114: ifnonnull -> 122
    //   117: goto_w -> 46733
    //   122: aload #13
    //   124: arraylength
    //   125: ifgt -> 133
    //   128: goto_w -> 46733
    //   133: aload #13
    //   135: iconst_0
    //   136: aaload
    //   137: iconst_1
    //   138: aaload
    //   139: ifnonnull -> 147
    //   142: goto_w -> 46733
    //   147: aload #13
    //   149: iconst_0
    //   150: aaload
    //   151: iconst_1
    //   152: aaload
    //   153: invokevirtual trim : ()Ljava/lang/String;
    //   156: invokevirtual length : ()I
    //   159: ifgt -> 167
    //   162: goto_w -> 46733
    //   167: aload_1
    //   168: aload_2
    //   169: aload_3
    //   170: aload #16
    //   172: invokestatic getValue : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/js/oa/userdb/util/DbOpt;)Ljava/lang/String;
    //   175: astore #18
    //   177: aload #13
    //   179: iconst_0
    //   180: aaload
    //   181: iconst_2
    //   182: aaload
    //   183: ldc_w '1000001'
    //   186: invokevirtual equals : (Ljava/lang/Object;)Z
    //   189: ifne -> 197
    //   192: goto_w -> 694
    //   197: aload #18
    //   199: invokevirtual toLowerCase : ()Ljava/lang/String;
    //   202: astore #18
    //   204: aload #18
    //   206: ldc_w 'e'
    //   209: invokevirtual indexOf : (Ljava/lang/String;)I
    //   212: ifgt -> 220
    //   215: goto_w -> 301
    //   220: aload #18
    //   222: iconst_0
    //   223: aload #18
    //   225: bipush #101
    //   227: invokevirtual indexOf : (I)I
    //   230: invokevirtual substring : (II)Ljava/lang/String;
    //   233: astore #19
    //   235: aload #18
    //   237: aload #18
    //   239: bipush #101
    //   241: invokevirtual indexOf : (I)I
    //   244: iconst_1
    //   245: iadd
    //   246: aload #18
    //   248: invokevirtual length : ()I
    //   251: invokevirtual substring : (II)Ljava/lang/String;
    //   254: astore #20
    //   256: aload #19
    //   258: invokestatic parseDouble : (Ljava/lang/String;)D
    //   261: dstore #21
    //   263: aload #20
    //   265: invokestatic parseDouble : (Ljava/lang/String;)D
    //   268: dstore #23
    //   270: dload #21
    //   272: ldc2_w 10.0
    //   275: dload #23
    //   277: invokestatic pow : (DD)D
    //   280: dmul
    //   281: dstore #25
    //   283: invokestatic getInstance : ()Ljava/text/NumberFormat;
    //   286: dload #25
    //   288: invokevirtual format : (D)Ljava/lang/String;
    //   291: ldc_w ','
    //   294: ldc ''
    //   296: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   299: astore #18
    //   301: aload #13
    //   303: iconst_0
    //   304: aaload
    //   305: bipush #6
    //   307: aaload
    //   308: astore #11
    //   310: aload #18
    //   312: invokevirtual length : ()I
    //   315: ifgt -> 323
    //   318: goto_w -> 611
    //   323: aload #11
    //   325: ifnonnull -> 333
    //   328: goto_w -> 611
    //   333: aload #11
    //   335: ldc_w '[point'
    //   338: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   341: ifne -> 349
    //   344: goto_w -> 611
    //   349: aload #11
    //   351: aload #11
    //   353: ldc_w ':'
    //   356: invokevirtual indexOf : (Ljava/lang/String;)I
    //   359: iconst_1
    //   360: iadd
    //   361: aload #11
    //   363: ldc_w ';'
    //   366: invokevirtual indexOf : (Ljava/lang/String;)I
    //   369: invokevirtual substring : (II)Ljava/lang/String;
    //   372: invokestatic parseInt : (Ljava/lang/String;)I
    //   375: istore #19
    //   377: aload #11
    //   379: aload #11
    //   381: ldc_w 'fillin:'
    //   384: invokevirtual indexOf : (Ljava/lang/String;)I
    //   387: bipush #7
    //   389: iadd
    //   390: aload #11
    //   392: ldc_w ']'
    //   395: invokevirtual indexOf : (Ljava/lang/String;)I
    //   398: invokevirtual substring : (II)Ljava/lang/String;
    //   401: astore #20
    //   403: invokestatic getNumberInstance : ()Ljava/text/NumberFormat;
    //   406: astore #21
    //   408: aload #21
    //   410: iload #19
    //   412: invokevirtual setMaximumFractionDigits : (I)V
    //   415: aload #21
    //   417: aload #18
    //   419: invokestatic parseDouble : (Ljava/lang/String;)D
    //   422: invokevirtual format : (D)Ljava/lang/String;
    //   425: ldc_w ','
    //   428: ldc ''
    //   430: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   433: astore #18
    //   435: ldc_w '1'
    //   438: aload #20
    //   440: invokevirtual equals : (Ljava/lang/Object;)Z
    //   443: ifne -> 451
    //   446: goto_w -> 606
    //   451: aload #18
    //   453: ldc_w '.'
    //   456: invokevirtual indexOf : (Ljava/lang/String;)I
    //   459: iflt -> 467
    //   462: goto_w -> 541
    //   467: new java/lang/StringBuilder
    //   470: dup
    //   471: aload #18
    //   473: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   476: invokespecial <init> : (Ljava/lang/String;)V
    //   479: ldc_w '.'
    //   482: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   485: invokevirtual toString : ()Ljava/lang/String;
    //   488: astore #18
    //   490: iconst_0
    //   491: istore #22
    //   493: goto_w -> 524
    //   498: new java/lang/StringBuilder
    //   501: dup
    //   502: aload #18
    //   504: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   507: invokespecial <init> : (Ljava/lang/String;)V
    //   510: ldc_w '0'
    //   513: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   516: invokevirtual toString : ()Ljava/lang/String;
    //   519: astore #18
    //   521: iinc #22, 1
    //   524: iload #22
    //   526: iload #19
    //   528: if_icmpge -> 536
    //   531: goto_w -> 498
    //   536: goto_w -> 606
    //   541: aload #18
    //   543: invokevirtual length : ()I
    //   546: aload #18
    //   548: ldc_w '.'
    //   551: invokevirtual indexOf : (Ljava/lang/String;)I
    //   554: isub
    //   555: iconst_1
    //   556: isub
    //   557: istore #22
    //   559: iload #22
    //   561: istore #23
    //   563: goto_w -> 594
    //   568: new java/lang/StringBuilder
    //   571: dup
    //   572: aload #18
    //   574: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   577: invokespecial <init> : (Ljava/lang/String;)V
    //   580: ldc_w '0'
    //   583: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   586: invokevirtual toString : ()Ljava/lang/String;
    //   589: astore #18
    //   591: iinc #23, 1
    //   594: iload #23
    //   596: iload #19
    //   598: if_icmpge -> 606
    //   601: goto_w -> 568
    //   606: goto_w -> 694
    //   611: aload #18
    //   613: ldc_w '.'
    //   616: invokevirtual indexOf : (Ljava/lang/String;)I
    //   619: ifgt -> 627
    //   622: goto_w -> 694
    //   627: goto_w -> 647
    //   632: aload #18
    //   634: iconst_0
    //   635: aload #18
    //   637: invokevirtual length : ()I
    //   640: iconst_1
    //   641: isub
    //   642: invokevirtual substring : (II)Ljava/lang/String;
    //   645: astore #18
    //   647: aload #18
    //   649: ldc_w '0'
    //   652: invokevirtual endsWith : (Ljava/lang/String;)Z
    //   655: ifeq -> 663
    //   658: goto_w -> 632
    //   663: aload #18
    //   665: ldc_w '.'
    //   668: invokevirtual endsWith : (Ljava/lang/String;)Z
    //   671: ifne -> 679
    //   674: goto_w -> 694
    //   679: aload #18
    //   681: iconst_0
    //   682: aload #18
    //   684: invokevirtual length : ()I
    //   687: iconst_1
    //   688: isub
    //   689: invokevirtual substring : (II)Ljava/lang/String;
    //   692: astore #18
    //   694: goto_w -> 711
    //   699: astore #19
    //   701: aload #19
    //   703: invokevirtual printStackTrace : ()V
    //   706: goto_w -> 711
    //   711: bipush #9
    //   713: istore #19
    //   715: ldc ''
    //   717: aload #13
    //   719: iconst_0
    //   720: aaload
    //   721: bipush #7
    //   723: aaload
    //   724: invokevirtual equals : (Ljava/lang/Object;)Z
    //   727: ifeq -> 735
    //   730: goto_w -> 747
    //   735: aload #13
    //   737: iconst_0
    //   738: aaload
    //   739: bipush #7
    //   741: aaload
    //   742: invokestatic parseInt : (Ljava/lang/String;)I
    //   745: istore #19
    //   747: aload #13
    //   749: iconst_0
    //   750: aaload
    //   751: iconst_2
    //   752: aaload
    //   753: ldc '1000000'
    //   755: invokevirtual equals : (Ljava/lang/Object;)Z
    //   758: ifeq -> 766
    //   761: goto_w -> 786
    //   766: aload #13
    //   768: iconst_0
    //   769: aaload
    //   770: iconst_2
    //   771: aaload
    //   772: ldc_w '1000001'
    //   775: invokevirtual equals : (Ljava/lang/Object;)Z
    //   778: ifne -> 786
    //   781: goto_w -> 972
    //   786: new java/lang/StringBuilder
    //   789: dup
    //   790: ldc_w '<input type=hidden name='
    //   793: invokespecial <init> : (Ljava/lang/String;)V
    //   796: aload_1
    //   797: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   800: ldc_w '_type id='
    //   803: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   806: aload_1
    //   807: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   810: ldc_w '_type value=number>'
    //   813: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   816: invokevirtual toString : ()Ljava/lang/String;
    //   819: astore #14
    //   821: ldc '1000000'
    //   823: aload #13
    //   825: iconst_0
    //   826: aaload
    //   827: iconst_2
    //   828: aaload
    //   829: invokevirtual equals : (Ljava/lang/Object;)Z
    //   832: ifne -> 840
    //   835: goto_w -> 888
    //   840: new java/lang/StringBuilder
    //   843: dup
    //   844: aload #14
    //   846: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   849: invokespecial <init> : (Ljava/lang/String;)V
    //   852: ldc_w '<input type=hidden name='
    //   855: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   858: aload_1
    //   859: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   862: ldc_w '_num_type id='
    //   865: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   868: aload_1
    //   869: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   872: ldc_w '_num_type value=1000000>'
    //   875: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   878: invokevirtual toString : ()Ljava/lang/String;
    //   881: astore #14
    //   883: goto_w -> 931
    //   888: new java/lang/StringBuilder
    //   891: dup
    //   892: aload #14
    //   894: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   897: invokespecial <init> : (Ljava/lang/String;)V
    //   900: ldc_w '<input type=hidden name='
    //   903: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   906: aload_1
    //   907: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   910: ldc_w '_num_type id='
    //   913: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   916: aload_1
    //   917: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   920: ldc_w '_num_type value=1000001>'
    //   923: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   926: invokevirtual toString : ()Ljava/lang/String;
    //   929: astore #14
    //   931: iconst_1
    //   932: istore #17
    //   934: aload #13
    //   936: iconst_0
    //   937: aaload
    //   938: iconst_2
    //   939: aaload
    //   940: ldc_w '1000001'
    //   943: invokevirtual equals : (Ljava/lang/Object;)Z
    //   946: ifne -> 954
    //   949: goto_w -> 963
    //   954: bipush #18
    //   956: istore #19
    //   958: goto_w -> 967
    //   963: bipush #9
    //   965: istore #19
    //   967: goto_w -> 1007
    //   972: new java/lang/StringBuilder
    //   975: dup
    //   976: ldc_w '<input type=hidden name='
    //   979: invokespecial <init> : (Ljava/lang/String;)V
    //   982: aload_1
    //   983: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   986: ldc_w '_type id='
    //   989: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   992: aload_1
    //   993: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   996: ldc_w '_type value=varchar>'
    //   999: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1002: invokevirtual toString : ()Ljava/lang/String;
    //   1005: astore #14
    //   1007: aload #4
    //   1009: ifnonnull -> 1017
    //   1012: goto_w -> 1068
    //   1017: aload #4
    //   1019: invokevirtual toUpperCase : ()Ljava/lang/String;
    //   1022: ldc_w ',ALL,'
    //   1025: invokevirtual equals : (Ljava/lang/Object;)Z
    //   1028: ifne -> 1036
    //   1031: goto_w -> 1068
    //   1036: new java/lang/StringBuilder
    //   1039: dup
    //   1040: aload #4
    //   1042: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   1045: invokespecial <init> : (Ljava/lang/String;)V
    //   1048: aload #13
    //   1050: iconst_0
    //   1051: aaload
    //   1052: iconst_0
    //   1053: aaload
    //   1054: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1057: ldc_w ','
    //   1060: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1063: invokevirtual toString : ()Ljava/lang/String;
    //   1066: astore #4
    //   1068: aload #13
    //   1070: iconst_0
    //   1071: aaload
    //   1072: iconst_2
    //   1073: aaload
    //   1074: ldc_w '1000003'
    //   1077: invokevirtual equals : (Ljava/lang/Object;)Z
    //   1080: ifeq -> 1088
    //   1083: goto_w -> 1147
    //   1088: new java/lang/StringBuilder
    //   1091: dup
    //   1092: aload #14
    //   1094: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   1097: invokespecial <init> : (Ljava/lang/String;)V
    //   1100: ldc_w '<input type=hidden name='
    //   1103: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1106: aload_1
    //   1107: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1110: ldc_w '_size id='
    //   1113: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1116: aload_1
    //   1117: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1120: ldc_w '_size value='
    //   1123: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1126: iload #19
    //   1128: invokevirtual append : (I)Ljava/lang/StringBuilder;
    //   1131: ldc_w '>'
    //   1134: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1137: invokevirtual toString : ()Ljava/lang/String;
    //   1140: astore #14
    //   1142: goto_w -> 1190
    //   1147: new java/lang/StringBuilder
    //   1150: dup
    //   1151: aload #14
    //   1153: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   1156: invokespecial <init> : (Ljava/lang/String;)V
    //   1159: ldc_w '<input type=hidden name='
    //   1162: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1165: aload_1
    //   1166: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1169: ldc_w '_size id='
    //   1172: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1175: aload_1
    //   1176: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1179: ldc_w '_size value=1000000>'
    //   1182: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1185: invokevirtual toString : ()Ljava/lang/String;
    //   1188: astore #14
    //   1190: aload #13
    //   1192: iconst_0
    //   1193: aaload
    //   1194: iconst_1
    //   1195: aaload
    //   1196: invokestatic parseInt : (Ljava/lang/String;)I
    //   1199: lookupswitch default -> 46663, 101 -> 2136, 102 -> 2959, 103 -> 3574, 104 -> 7801, 105 -> 12299, 107 -> 17763, 108 -> 18452, 109 -> 19162, 110 -> 22644, 111 -> 23729, 112 -> 25036, 113 -> 25041, 114 -> 25921, 115 -> 25926, 116 -> 27939, 117 -> 28530, 118 -> 29121, 121 -> 29696, 122 -> 30654, 123 -> 31085, 130 -> 24725, 199 -> 31511, 200 -> 32334, 201 -> 33179, 202 -> 33701, 203 -> 34271, 204 -> 35216, 206 -> 35902, 207 -> 35907, 208 -> 36860, 209 -> 36865, 210 -> 36870, 211 -> 37743, 212 -> 38656, 213 -> 39521, 214 -> 40347, 215 -> 41121, 301 -> 43266, 302 -> 44678, 331 -> 41836, 332 -> 42551, 402 -> 44840, 406 -> 1568, 450 -> 45861, 501 -> 46547
    //   1568: aload #4
    //   1570: ifnonnull -> 1578
    //   1573: goto_w -> 1862
    //   1578: aload #4
    //   1580: new java/lang/StringBuilder
    //   1583: dup
    //   1584: ldc_w ','
    //   1587: invokespecial <init> : (Ljava/lang/String;)V
    //   1590: aload #13
    //   1592: iconst_0
    //   1593: aaload
    //   1594: iconst_0
    //   1595: aaload
    //   1596: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1599: ldc_w ','
    //   1602: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1605: invokevirtual toString : ()Ljava/lang/String;
    //   1608: invokevirtual indexOf : (Ljava/lang/String;)I
    //   1611: iflt -> 1619
    //   1614: goto_w -> 1660
    //   1619: aload #4
    //   1621: new java/lang/StringBuilder
    //   1624: dup
    //   1625: ldc_w ','
    //   1628: invokespecial <init> : (Ljava/lang/String;)V
    //   1631: aload #13
    //   1633: iconst_0
    //   1634: aaload
    //   1635: iconst_5
    //   1636: aaload
    //   1637: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1640: ldc_w ','
    //   1643: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1646: invokevirtual toString : ()Ljava/lang/String;
    //   1649: invokevirtual indexOf : (Ljava/lang/String;)I
    //   1652: ifge -> 1660
    //   1655: goto_w -> 1862
    //   1660: aload #18
    //   1662: ifnull -> 1670
    //   1665: goto_w -> 1678
    //   1670: ldc_w '&nbsp'
    //   1673: goto_w -> 1697
    //   1678: aload #18
    //   1680: ldc_w '\\n'
    //   1683: ldc_w '<br>'
    //   1686: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   1689: ldc_w '\\r'
    //   1692: ldc ''
    //   1694: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   1697: astore #10
    //   1699: new java/lang/StringBuilder
    //   1702: dup
    //   1703: ldc_w '<input type=hidden name='
    //   1706: invokespecial <init> : (Ljava/lang/String;)V
    //   1709: aload_1
    //   1710: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1713: ldc_w ' id='
    //   1716: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1719: aload_1
    //   1720: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1723: ldc_w ' value='
    //   1726: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1729: aload #18
    //   1731: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1734: ldc_w '>'
    //   1737: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1740: invokevirtual toString : ()Ljava/lang/String;
    //   1743: astore #14
    //   1745: new java/lang/StringBuilder
    //   1748: dup
    //   1749: ldc_w 'if(document.getElementById(''
    //   1752: invokespecial <init> : (Ljava/lang/String;)V
    //   1755: aload #13
    //   1757: iconst_0
    //   1758: aaload
    //   1759: iconst_0
    //   1760: aaload
    //   1761: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1764: ldc_w '-'
    //   1767: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1770: aload_1
    //   1771: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1774: ldc_w ''))\\n{document.getElementById(''
    //   1777: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1780: aload #13
    //   1782: iconst_0
    //   1783: aaload
    //   1784: iconst_0
    //   1785: aaload
    //   1786: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1789: ldc_w '-'
    //   1792: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1795: aload_1
    //   1796: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1799: ldc_w '').innerHTML=''
    //   1802: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1805: aload #14
    //   1807: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1810: ldc_w '';document.getElementById(''
    //   1813: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1816: aload #13
    //   1818: iconst_0
    //   1819: aaload
    //   1820: iconst_0
    //   1821: aaload
    //   1822: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1825: ldc_w '-'
    //   1828: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1831: aload_1
    //   1832: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1835: ldc_w '').innerHTML+="'
    //   1838: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1841: aload #10
    //   1843: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1846: ldc_w '";}'
    //   1849: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1852: invokevirtual toString : ()Ljava/lang/String;
    //   1855: astore #10
    //   1857: goto_w -> 2131
    //   1862: new java/lang/StringBuilder
    //   1865: dup
    //   1866: ldc_w '<input type=hidden id='
    //   1869: invokespecial <init> : (Ljava/lang/String;)V
    //   1872: aload_1
    //   1873: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1876: ldc_w ' name='
    //   1879: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1882: aload_1
    //   1883: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1886: ldc_w ' value=''
    //   1889: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1892: aload #18
    //   1894: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1897: ldc_w '' '
    //   1900: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1903: ldc_w '>'
    //   1906: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1909: invokevirtual toString : ()Ljava/lang/String;
    //   1912: astore #10
    //   1914: new java/lang/StringBuilder
    //   1917: dup
    //   1918: ldc_w 'var '
    //   1921: invokespecial <init> : (Ljava/lang/String;)V
    //   1924: aload_1
    //   1925: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1928: ldc_w '_temp=document.createElement('SCRIPT');'
    //   1931: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1934: invokevirtual toString : ()Ljava/lang/String;
    //   1937: astore #20
    //   1939: new java/lang/StringBuilder
    //   1942: dup
    //   1943: aload #20
    //   1945: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   1948: invokespecial <init> : (Ljava/lang/String;)V
    //   1951: aload_1
    //   1952: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1955: ldc_w '_temp.text="document.all.'
    //   1958: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1961: aload_1
    //   1962: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1965: ldc_w '.value=document.all.user_Account.value;";'
    //   1968: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1971: invokevirtual toString : ()Ljava/lang/String;
    //   1974: astore #20
    //   1976: new java/lang/StringBuilder
    //   1979: dup
    //   1980: aload #20
    //   1982: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   1985: invokespecial <init> : (Ljava/lang/String;)V
    //   1988: ldc_w 'if(document.getElementById(''
    //   1991: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1994: aload #13
    //   1996: iconst_0
    //   1997: aaload
    //   1998: iconst_0
    //   1999: aaload
    //   2000: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2003: ldc_w '-'
    //   2006: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2009: aload_1
    //   2010: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2013: ldc_w ''))\\n{document.getElementById(''
    //   2016: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2019: aload #13
    //   2021: iconst_0
    //   2022: aaload
    //   2023: iconst_0
    //   2024: aaload
    //   2025: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2028: ldc_w '-'
    //   2031: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2034: aload_1
    //   2035: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2038: ldc_w '').innerHTML=document.all.user_Account.value+''
    //   2041: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2044: aload #14
    //   2046: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2049: ldc_w '';document.getElementById(''
    //   2052: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2055: aload #13
    //   2057: iconst_0
    //   2058: aaload
    //   2059: iconst_0
    //   2060: aaload
    //   2061: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2064: ldc_w '-'
    //   2067: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2070: aload_1
    //   2071: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2074: ldc_w '').innerHTML+="'
    //   2077: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2080: aload #10
    //   2082: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2085: ldc_w '";document.getElementById(''
    //   2088: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2091: aload #13
    //   2093: iconst_0
    //   2094: aaload
    //   2095: iconst_0
    //   2096: aaload
    //   2097: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2100: ldc_w '-'
    //   2103: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2106: aload_1
    //   2107: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2110: ldc_w '').appendChild('
    //   2113: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2116: aload_1
    //   2117: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2120: ldc_w '_temp);}'
    //   2123: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2126: invokevirtual toString : ()Ljava/lang/String;
    //   2129: astore #10
    //   2131: goto_w -> 46733
    //   2136: aload #18
    //   2138: ldc_w '\\'
    //   2141: ldc_w '\\\\'
    //   2144: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   2147: astore #18
    //   2149: aload #4
    //   2151: ifnonnull -> 2159
    //   2154: goto_w -> 2488
    //   2159: aload #4
    //   2161: new java/lang/StringBuilder
    //   2164: dup
    //   2165: ldc_w ','
    //   2168: invokespecial <init> : (Ljava/lang/String;)V
    //   2171: aload #13
    //   2173: iconst_0
    //   2174: aaload
    //   2175: iconst_0
    //   2176: aaload
    //   2177: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2180: ldc_w ','
    //   2183: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2186: invokevirtual toString : ()Ljava/lang/String;
    //   2189: invokevirtual indexOf : (Ljava/lang/String;)I
    //   2192: iflt -> 2200
    //   2195: goto_w -> 2241
    //   2200: aload #4
    //   2202: new java/lang/StringBuilder
    //   2205: dup
    //   2206: ldc_w ','
    //   2209: invokespecial <init> : (Ljava/lang/String;)V
    //   2212: aload #13
    //   2214: iconst_0
    //   2215: aaload
    //   2216: iconst_5
    //   2217: aaload
    //   2218: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2221: ldc_w ','
    //   2224: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2227: invokevirtual toString : ()Ljava/lang/String;
    //   2230: invokevirtual indexOf : (Ljava/lang/String;)I
    //   2233: ifge -> 2241
    //   2236: goto_w -> 2488
    //   2241: ldc_w '1'
    //   2244: aload #7
    //   2246: invokevirtual equals : (Ljava/lang/Object;)Z
    //   2249: ifne -> 2257
    //   2252: goto_w -> 2399
    //   2257: new java/lang/StringBuilder
    //   2260: dup
    //   2261: ldc_w '<input style=width:'
    //   2264: invokespecial <init> : (Ljava/lang/String;)V
    //   2267: aload #13
    //   2269: iconst_0
    //   2270: aaload
    //   2271: iconst_3
    //   2272: aaload
    //   2273: ldc_w '1'
    //   2276: invokevirtual equals : (Ljava/lang/Object;)Z
    //   2279: ifne -> 2287
    //   2282: goto_w -> 2295
    //   2287: ldc_w '92'
    //   2290: goto_w -> 2298
    //   2295: ldc_w '100'
    //   2298: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2301: ldc_w '% ;font-size:1em; type=text class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) id='
    //   2304: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2307: aload_1
    //   2308: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2311: ldc_w ' name='
    //   2314: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2317: aload_1
    //   2318: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2321: ldc_w ' value=''
    //   2324: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2327: aload #18
    //   2329: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2332: ldc_w '' '
    //   2335: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2338: iload #17
    //   2340: ifne -> 2348
    //   2343: goto_w -> 2356
    //   2348: ldc_w '  onblur=checkNum(this);checkSize(this);'
    //   2351: goto_w -> 2380
    //   2356: new java/lang/StringBuilder
    //   2359: dup
    //   2360: ldc_w 'maxlength=''
    //   2363: invokespecial <init> : (Ljava/lang/String;)V
    //   2366: iload #19
    //   2368: invokevirtual append : (I)Ljava/lang/StringBuilder;
    //   2371: ldc_w '''
    //   2374: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2377: invokevirtual toString : ()Ljava/lang/String;
    //   2380: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2383: ldc_w ' readonly>'
    //   2386: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2389: invokevirtual toString : ()Ljava/lang/String;
    //   2392: astore #10
    //   2394: goto_w -> 2483
    //   2399: aload #18
    //   2401: ifnull -> 2409
    //   2404: goto_w -> 2417
    //   2409: ldc_w '&nbsp'
    //   2412: goto_w -> 2435
    //   2417: aload #18
    //   2419: ldc_w '\\n'
    //   2422: ldc ''
    //   2424: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   2427: ldc_w '\\r'
    //   2430: ldc ''
    //   2432: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   2435: astore #10
    //   2437: new java/lang/StringBuilder
    //   2440: dup
    //   2441: ldc_w '<input type=hidden id='
    //   2444: invokespecial <init> : (Ljava/lang/String;)V
    //   2447: aload_1
    //   2448: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2451: ldc_w '  name='
    //   2454: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2457: aload_1
    //   2458: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2461: ldc_w ' value="'
    //   2464: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2467: aload #10
    //   2469: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2472: ldc_w '">'
    //   2475: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2478: invokevirtual toString : ()Ljava/lang/String;
    //   2481: astore #14
    //   2483: goto_w -> 2842
    //   2488: ldc ''
    //   2490: astore #20
    //   2492: ldc_w '1'
    //   2495: aload #13
    //   2497: iconst_0
    //   2498: aaload
    //   2499: bipush #11
    //   2501: aaload
    //   2502: invokevirtual equals : (Ljava/lang/Object;)Z
    //   2505: ifne -> 2513
    //   2508: goto_w -> 2518
    //   2513: ldc_w 'setSTotalValue(this);'
    //   2516: astore #20
    //   2518: aload #8
    //   2520: aload_1
    //   2521: invokevirtual indexOf : (Ljava/lang/String;)I
    //   2524: ifge -> 2532
    //   2527: goto_w -> 2555
    //   2532: new java/lang/StringBuilder
    //   2535: dup
    //   2536: aload #20
    //   2538: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   2541: invokespecial <init> : (Ljava/lang/String;)V
    //   2544: ldc_w 'setComputeForeignFieldNew(this);'
    //   2547: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2550: invokevirtual toString : ()Ljava/lang/String;
    //   2553: astore #20
    //   2555: new java/lang/StringBuilder
    //   2558: dup
    //   2559: ldc_w '<input style=width:'
    //   2562: invokespecial <init> : (Ljava/lang/String;)V
    //   2565: aload #13
    //   2567: iconst_0
    //   2568: aaload
    //   2569: iconst_3
    //   2570: aaload
    //   2571: ldc_w '1'
    //   2574: invokevirtual equals : (Ljava/lang/Object;)Z
    //   2577: ifne -> 2585
    //   2580: goto_w -> 2593
    //   2585: ldc_w '92'
    //   2588: goto_w -> 2596
    //   2593: ldc_w '100'
    //   2596: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2599: ldc_w '%;font-size:1em; type=text class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) id='
    //   2602: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2605: aload_1
    //   2606: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2609: ldc_w ' name='
    //   2612: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2615: aload_1
    //   2616: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2619: ldc_w ' value=''
    //   2622: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2625: aload #18
    //   2627: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2630: ldc_w '' '
    //   2633: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2636: iload #17
    //   2638: ifne -> 2646
    //   2641: goto_w -> 2669
    //   2646: new java/lang/StringBuilder
    //   2649: dup
    //   2650: ldc_w '  onblur=checkNum(this);checkSize(this);'
    //   2653: invokespecial <init> : (Ljava/lang/String;)V
    //   2656: aload #20
    //   2658: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2661: invokevirtual toString : ()Ljava/lang/String;
    //   2664: goto_w -> 2693
    //   2669: new java/lang/StringBuilder
    //   2672: dup
    //   2673: ldc_w 'maxlength=''
    //   2676: invokespecial <init> : (Ljava/lang/String;)V
    //   2679: iload #19
    //   2681: invokevirtual append : (I)Ljava/lang/StringBuilder;
    //   2684: ldc_w '''
    //   2687: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2690: invokevirtual toString : ()Ljava/lang/String;
    //   2693: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2696: ldc_w '>'
    //   2699: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2702: aload #13
    //   2704: iconst_0
    //   2705: aaload
    //   2706: iconst_3
    //   2707: aaload
    //   2708: ldc_w '1'
    //   2711: invokevirtual equals : (Ljava/lang/Object;)Z
    //   2714: ifne -> 2722
    //   2717: goto_w -> 2832
    //   2722: aload #4
    //   2724: new java/lang/StringBuilder
    //   2727: dup
    //   2728: ldc_w ','
    //   2731: invokespecial <init> : (Ljava/lang/String;)V
    //   2734: aload #13
    //   2736: iconst_0
    //   2737: aaload
    //   2738: iconst_0
    //   2739: aaload
    //   2740: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2743: ldc_w ','
    //   2746: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2749: invokevirtual toString : ()Ljava/lang/String;
    //   2752: invokevirtual indexOf : (Ljava/lang/String;)I
    //   2755: iflt -> 2763
    //   2758: goto_w -> 2832
    //   2763: aload #4
    //   2765: new java/lang/StringBuilder
    //   2768: dup
    //   2769: ldc_w ','
    //   2772: invokespecial <init> : (Ljava/lang/String;)V
    //   2775: aload #13
    //   2777: iconst_0
    //   2778: aaload
    //   2779: iconst_5
    //   2780: aaload
    //   2781: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2784: ldc_w ','
    //   2787: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2790: invokevirtual toString : ()Ljava/lang/String;
    //   2793: invokevirtual indexOf : (Ljava/lang/String;)I
    //   2796: iflt -> 2804
    //   2799: goto_w -> 2832
    //   2804: new java/lang/StringBuilder
    //   2807: dup
    //   2808: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   2811: invokespecial <init> : (Ljava/lang/String;)V
    //   2814: aload_1
    //   2815: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2818: ldc_w '><label class=mustFillcolor>*</label>'
    //   2821: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2824: invokevirtual toString : ()Ljava/lang/String;
    //   2827: goto_w -> 2834
    //   2832: ldc ''
    //   2834: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2837: invokevirtual toString : ()Ljava/lang/String;
    //   2840: astore #10
    //   2842: new java/lang/StringBuilder
    //   2845: dup
    //   2846: ldc_w 'if(document.getElementById(''
    //   2849: invokespecial <init> : (Ljava/lang/String;)V
    //   2852: aload #13
    //   2854: iconst_0
    //   2855: aaload
    //   2856: iconst_0
    //   2857: aaload
    //   2858: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2861: ldc_w '-'
    //   2864: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2867: aload_1
    //   2868: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2871: ldc_w ''))\\n{document.getElementById(''
    //   2874: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2877: aload #13
    //   2879: iconst_0
    //   2880: aaload
    //   2881: iconst_0
    //   2882: aaload
    //   2883: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2886: ldc_w '-'
    //   2889: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2892: aload_1
    //   2893: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2896: ldc_w '').innerHTML=''
    //   2899: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2902: aload #14
    //   2904: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2907: ldc_w '';document.getElementById(''
    //   2910: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2913: aload #13
    //   2915: iconst_0
    //   2916: aaload
    //   2917: iconst_0
    //   2918: aaload
    //   2919: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2922: ldc_w '-'
    //   2925: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2928: aload_1
    //   2929: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2932: ldc_w '').innerHTML+="'
    //   2935: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2938: aload #10
    //   2940: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2943: ldc_w '";}'
    //   2946: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2949: invokevirtual toString : ()Ljava/lang/String;
    //   2952: astore #10
    //   2954: goto_w -> 46733
    //   2959: aload #4
    //   2961: ifnonnull -> 2969
    //   2964: goto_w -> 3185
    //   2969: aload #4
    //   2971: new java/lang/StringBuilder
    //   2974: dup
    //   2975: ldc_w ','
    //   2978: invokespecial <init> : (Ljava/lang/String;)V
    //   2981: aload #13
    //   2983: iconst_0
    //   2984: aaload
    //   2985: iconst_0
    //   2986: aaload
    //   2987: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2990: ldc_w ','
    //   2993: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2996: invokevirtual toString : ()Ljava/lang/String;
    //   2999: invokevirtual indexOf : (Ljava/lang/String;)I
    //   3002: iflt -> 3010
    //   3005: goto_w -> 3051
    //   3010: aload #4
    //   3012: new java/lang/StringBuilder
    //   3015: dup
    //   3016: ldc_w ','
    //   3019: invokespecial <init> : (Ljava/lang/String;)V
    //   3022: aload #13
    //   3024: iconst_0
    //   3025: aaload
    //   3026: iconst_5
    //   3027: aaload
    //   3028: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3031: ldc_w ','
    //   3034: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3037: invokevirtual toString : ()Ljava/lang/String;
    //   3040: invokevirtual indexOf : (Ljava/lang/String;)I
    //   3043: ifge -> 3051
    //   3046: goto_w -> 3185
    //   3051: aload #18
    //   3053: ifnull -> 3061
    //   3056: goto_w -> 3069
    //   3061: ldc_w '&nbsp'
    //   3064: goto_w -> 3088
    //   3069: aload #18
    //   3071: ldc_w '\\n'
    //   3074: ldc_w '<br>'
    //   3077: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   3080: ldc_w '\\r'
    //   3083: ldc ''
    //   3085: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   3088: astore #10
    //   3090: new java/lang/StringBuilder
    //   3093: dup
    //   3094: ldc_w '<input type=password style=width:'
    //   3097: invokespecial <init> : (Ljava/lang/String;)V
    //   3100: aload #13
    //   3102: iconst_0
    //   3103: aaload
    //   3104: iconst_3
    //   3105: aaload
    //   3106: ldc_w '1'
    //   3109: invokevirtual equals : (Ljava/lang/Object;)Z
    //   3112: ifne -> 3120
    //   3115: goto_w -> 3128
    //   3120: ldc_w '92'
    //   3123: goto_w -> 3131
    //   3128: ldc_w '100'
    //   3131: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3134: ldc_w '%;font-size:1em;   id='
    //   3137: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3140: aload_1
    //   3141: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3144: ldc_w ' name='
    //   3147: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3150: aload_1
    //   3151: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3154: ldc_w ' value=''
    //   3157: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3160: aload #18
    //   3162: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3165: ldc_w '' readOnly> '
    //   3168: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3171: invokevirtual toString : ()Ljava/lang/String;
    //   3174: astore #10
    //   3176: ldc ''
    //   3178: astore #14
    //   3180: goto_w -> 3457
    //   3185: new java/lang/StringBuilder
    //   3188: dup
    //   3189: ldc_w '<input type=password style=width:'
    //   3192: invokespecial <init> : (Ljava/lang/String;)V
    //   3195: aload #13
    //   3197: iconst_0
    //   3198: aaload
    //   3199: iconst_3
    //   3200: aaload
    //   3201: ldc_w '1'
    //   3204: invokevirtual equals : (Ljava/lang/Object;)Z
    //   3207: ifne -> 3215
    //   3210: goto_w -> 3223
    //   3215: ldc_w '92'
    //   3218: goto_w -> 3226
    //   3223: ldc_w '100'
    //   3226: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3229: ldc_w '%;font-size:1em; id='
    //   3232: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3235: aload_1
    //   3236: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3239: ldc_w ' name='
    //   3242: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3245: aload_1
    //   3246: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3249: ldc_w ' value=''
    //   3252: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3255: aload #18
    //   3257: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3260: ldc_w '' '
    //   3263: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3266: iload #17
    //   3268: ifne -> 3276
    //   3271: goto_w -> 3284
    //   3276: ldc_w '  onblur=checkNum(this);checkSize(this);'
    //   3279: goto_w -> 3308
    //   3284: new java/lang/StringBuilder
    //   3287: dup
    //   3288: ldc_w 'maxlength=''
    //   3291: invokespecial <init> : (Ljava/lang/String;)V
    //   3294: iload #19
    //   3296: invokevirtual append : (I)Ljava/lang/StringBuilder;
    //   3299: ldc_w '''
    //   3302: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3305: invokevirtual toString : ()Ljava/lang/String;
    //   3308: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3311: ldc_w '>'
    //   3314: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3317: aload #13
    //   3319: iconst_0
    //   3320: aaload
    //   3321: iconst_3
    //   3322: aaload
    //   3323: ldc_w '1'
    //   3326: invokevirtual equals : (Ljava/lang/Object;)Z
    //   3329: ifne -> 3337
    //   3332: goto_w -> 3447
    //   3337: aload #4
    //   3339: new java/lang/StringBuilder
    //   3342: dup
    //   3343: ldc_w ','
    //   3346: invokespecial <init> : (Ljava/lang/String;)V
    //   3349: aload #13
    //   3351: iconst_0
    //   3352: aaload
    //   3353: iconst_0
    //   3354: aaload
    //   3355: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3358: ldc_w ','
    //   3361: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3364: invokevirtual toString : ()Ljava/lang/String;
    //   3367: invokevirtual indexOf : (Ljava/lang/String;)I
    //   3370: iflt -> 3378
    //   3373: goto_w -> 3447
    //   3378: aload #4
    //   3380: new java/lang/StringBuilder
    //   3383: dup
    //   3384: ldc_w ','
    //   3387: invokespecial <init> : (Ljava/lang/String;)V
    //   3390: aload #13
    //   3392: iconst_0
    //   3393: aaload
    //   3394: iconst_5
    //   3395: aaload
    //   3396: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3399: ldc_w ','
    //   3402: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3405: invokevirtual toString : ()Ljava/lang/String;
    //   3408: invokevirtual indexOf : (Ljava/lang/String;)I
    //   3411: iflt -> 3419
    //   3414: goto_w -> 3447
    //   3419: new java/lang/StringBuilder
    //   3422: dup
    //   3423: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   3426: invokespecial <init> : (Ljava/lang/String;)V
    //   3429: aload_1
    //   3430: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3433: ldc_w '><label class=mustFillcolor>*</label>'
    //   3436: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3439: invokevirtual toString : ()Ljava/lang/String;
    //   3442: goto_w -> 3449
    //   3447: ldc ''
    //   3449: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3452: invokevirtual toString : ()Ljava/lang/String;
    //   3455: astore #10
    //   3457: new java/lang/StringBuilder
    //   3460: dup
    //   3461: ldc_w 'if(document.getElementById(''
    //   3464: invokespecial <init> : (Ljava/lang/String;)V
    //   3467: aload #13
    //   3469: iconst_0
    //   3470: aaload
    //   3471: iconst_0
    //   3472: aaload
    //   3473: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3476: ldc_w '-'
    //   3479: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3482: aload_1
    //   3483: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3486: ldc_w ''))\\n{document.getElementById(''
    //   3489: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3492: aload #13
    //   3494: iconst_0
    //   3495: aaload
    //   3496: iconst_0
    //   3497: aaload
    //   3498: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3501: ldc_w '-'
    //   3504: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3507: aload_1
    //   3508: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3511: ldc_w '').innerHTML=''
    //   3514: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3517: aload #14
    //   3519: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3522: ldc_w '';document.getElementById(''
    //   3525: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3528: aload #13
    //   3530: iconst_0
    //   3531: aaload
    //   3532: iconst_0
    //   3533: aaload
    //   3534: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3537: ldc_w '-'
    //   3540: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3543: aload_1
    //   3544: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3547: ldc_w '').innerHTML+="'
    //   3550: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3553: aload #10
    //   3555: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3558: ldc_w '";}'
    //   3561: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3564: invokevirtual toString : ()Ljava/lang/String;
    //   3567: astore #10
    //   3569: goto_w -> 46733
    //   3574: aload #18
    //   3576: ifnonnull -> 3584
    //   3579: goto_w -> 3599
    //   3584: ldc ''
    //   3586: aload #18
    //   3588: invokevirtual equals : (Ljava/lang/Object;)Z
    //   3591: ifne -> 3599
    //   3594: goto_w -> 3644
    //   3599: aload #13
    //   3601: iconst_0
    //   3602: aaload
    //   3603: iconst_4
    //   3604: aaload
    //   3605: ifnull -> 3613
    //   3608: goto_w -> 3620
    //   3613: ldc ''
    //   3615: goto_w -> 3639
    //   3620: new java/lang/StringBuilder
    //   3623: dup
    //   3624: aload #13
    //   3626: iconst_0
    //   3627: aaload
    //   3628: iconst_4
    //   3629: aaload
    //   3630: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   3633: invokespecial <init> : (Ljava/lang/String;)V
    //   3636: invokevirtual toString : ()Ljava/lang/String;
    //   3639: goto_w -> 3646
    //   3644: aload #18
    //   3646: astore #18
    //   3648: ldc ''
    //   3650: astore #10
    //   3652: aload #13
    //   3654: iconst_0
    //   3655: aaload
    //   3656: bipush #6
    //   3658: aaload
    //   3659: astore #11
    //   3661: aload #11
    //   3663: ifnonnull -> 3671
    //   3666: goto_w -> 3688
    //   3671: aload #11
    //   3673: invokevirtual trim : ()Ljava/lang/String;
    //   3676: invokevirtual length : ()I
    //   3679: iconst_1
    //   3680: if_icmplt -> 3688
    //   3683: goto_w -> 3693
    //   3688: goto_w -> 46733
    //   3693: aload #11
    //   3695: ldc_w '*'
    //   3698: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   3701: ifne -> 3709
    //   3704: goto_w -> 3752
    //   3709: aload #11
    //   3711: aload #11
    //   3713: ldc_w '.*['
    //   3716: invokevirtual indexOf : (Ljava/lang/String;)I
    //   3719: iconst_3
    //   3720: iadd
    //   3721: aload #11
    //   3723: invokevirtual length : ()I
    //   3726: iconst_1
    //   3727: isub
    //   3728: invokevirtual substring : (II)Ljava/lang/String;
    //   3731: astore #20
    //   3733: new com/js/oa/userdb/bean/BaseSetEJBBean
    //   3736: dup
    //   3737: invokespecial <init> : ()V
    //   3740: aload #20
    //   3742: invokevirtual getValue : (Ljava/lang/String;)Ljava/lang/String;
    //   3745: astore #11
    //   3747: goto_w -> 4012
    //   3752: aload #11
    //   3754: ldc_w '#[interface:'
    //   3757: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   3760: ifne -> 3768
    //   3763: goto_w -> 4012
    //   3768: ldc ''
    //   3770: aload #18
    //   3772: invokevirtual equals : (Ljava/lang/Object;)Z
    //   3775: ifne -> 3783
    //   3778: goto_w -> 4003
    //   3783: aload #9
    //   3785: invokeinterface getSession : ()Ljavax/servlet/http/HttpSession;
    //   3790: astore #20
    //   3792: new java/util/HashMap
    //   3795: dup
    //   3796: invokespecial <init> : ()V
    //   3799: astore #21
    //   3801: aload #21
    //   3803: ldc_w 'tableId'
    //   3806: aload #9
    //   3808: ldc_w 'tableId'
    //   3811: invokeinterface getParameter : (Ljava/lang/String;)Ljava/lang/String;
    //   3816: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3821: pop
    //   3822: aload #21
    //   3824: ldc_w 'processId'
    //   3827: aload #9
    //   3829: ldc_w 'processId'
    //   3832: invokeinterface getParameter : (Ljava/lang/String;)Ljava/lang/String;
    //   3837: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3842: pop
    //   3843: aload #21
    //   3845: ldc_w 'userId'
    //   3848: aload #20
    //   3850: ldc_w 'userId'
    //   3853: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   3858: invokevirtual toString : ()Ljava/lang/String;
    //   3861: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3866: pop
    //   3867: aload #21
    //   3869: ldc_w 'userName'
    //   3872: aload #20
    //   3874: ldc_w 'userName'
    //   3877: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   3882: invokevirtual toString : ()Ljava/lang/String;
    //   3885: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3890: pop
    //   3891: aload #21
    //   3893: ldc_w 'orgId'
    //   3896: aload #20
    //   3898: ldc_w 'orgId'
    //   3901: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   3906: invokevirtual toString : ()Ljava/lang/String;
    //   3909: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3914: pop
    //   3915: aload #21
    //   3917: ldc_w 'orgName'
    //   3920: aload #20
    //   3922: ldc_w 'orgName'
    //   3925: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   3930: invokevirtual toString : ()Ljava/lang/String;
    //   3933: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3938: pop
    //   3939: aload #21
    //   3941: ldc_w 'corpId'
    //   3944: aload #20
    //   3946: ldc_w 'orgName'
    //   3949: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   3954: invokevirtual toString : ()Ljava/lang/String;
    //   3957: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3962: pop
    //   3963: aload #21
    //   3965: ldc_w 'userAccount'
    //   3968: aload #20
    //   3970: ldc_w 'userAccount'
    //   3973: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   3978: invokevirtual toString : ()Ljava/lang/String;
    //   3981: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3986: pop
    //   3987: aload #11
    //   3989: aload #21
    //   3991: aload #9
    //   3993: invokestatic getKeyValue : (Ljava/lang/String;Ljava/util/Map;Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
    //   3996: astore #11
    //   3998: goto_w -> 4012
    //   4003: aload #11
    //   4005: aload #18
    //   4007: invokestatic getShowContext : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   4010: astore #11
    //   4012: aload #11
    //   4014: ldc_w ';'
    //   4017: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   4020: astore #12
    //   4022: aload #4
    //   4024: ifnonnull -> 4032
    //   4027: goto_w -> 5732
    //   4032: aload #4
    //   4034: new java/lang/StringBuilder
    //   4037: dup
    //   4038: ldc_w ','
    //   4041: invokespecial <init> : (Ljava/lang/String;)V
    //   4044: aload #13
    //   4046: iconst_0
    //   4047: aaload
    //   4048: iconst_0
    //   4049: aaload
    //   4050: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4053: ldc_w ','
    //   4056: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4059: invokevirtual toString : ()Ljava/lang/String;
    //   4062: invokevirtual indexOf : (Ljava/lang/String;)I
    //   4065: iflt -> 4073
    //   4068: goto_w -> 4114
    //   4073: aload #4
    //   4075: new java/lang/StringBuilder
    //   4078: dup
    //   4079: ldc_w ','
    //   4082: invokespecial <init> : (Ljava/lang/String;)V
    //   4085: aload #13
    //   4087: iconst_0
    //   4088: aaload
    //   4089: iconst_5
    //   4090: aaload
    //   4091: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4094: ldc_w ','
    //   4097: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4100: invokevirtual toString : ()Ljava/lang/String;
    //   4103: invokevirtual indexOf : (Ljava/lang/String;)I
    //   4106: ifge -> 4114
    //   4109: goto_w -> 5732
    //   4114: ldc ''
    //   4116: astore #14
    //   4118: aload #11
    //   4120: ldc_w '@'
    //   4123: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   4126: ifne -> 4134
    //   4129: goto_w -> 4620
    //   4134: aload #11
    //   4136: aload #11
    //   4138: ldc_w ']['
    //   4141: invokevirtual indexOf : (Ljava/lang/String;)I
    //   4144: iconst_2
    //   4145: iadd
    //   4146: aload #11
    //   4148: invokevirtual length : ()I
    //   4151: iconst_1
    //   4152: isub
    //   4153: invokevirtual substring : (II)Ljava/lang/String;
    //   4156: astore #20
    //   4158: aconst_null
    //   4159: checkcast [[Ljava/lang/String;
    //   4162: astore #21
    //   4164: aload #16
    //   4166: new java/lang/StringBuilder
    //   4169: dup
    //   4170: ldc 'select '
    //   4172: invokespecial <init> : (Ljava/lang/String;)V
    //   4175: aload #20
    //   4177: iconst_0
    //   4178: aload #20
    //   4180: ldc_w '.'
    //   4183: invokevirtual indexOf : (Ljava/lang/String;)I
    //   4186: invokevirtual substring : (II)Ljava/lang/String;
    //   4189: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4192: ldc_w '_id,'
    //   4195: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4198: aload #20
    //   4200: aload #20
    //   4202: ldc_w '.'
    //   4205: invokevirtual indexOf : (Ljava/lang/String;)I
    //   4208: iconst_1
    //   4209: iadd
    //   4210: aload #20
    //   4212: invokevirtual length : ()I
    //   4215: invokevirtual substring : (II)Ljava/lang/String;
    //   4218: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4221: ldc ' from '
    //   4223: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4226: aload #20
    //   4228: iconst_0
    //   4229: aload #20
    //   4231: ldc_w '.'
    //   4234: invokevirtual indexOf : (Ljava/lang/String;)I
    //   4237: invokevirtual substring : (II)Ljava/lang/String;
    //   4240: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4243: invokevirtual toString : ()Ljava/lang/String;
    //   4246: invokevirtual executeQueryToStrArr2 : (Ljava/lang/String;)[[Ljava/lang/String;
    //   4249: astore #21
    //   4251: goto_w -> 4263
    //   4256: astore #22
    //   4258: goto_w -> 4263
    //   4263: aload #21
    //   4265: ifnonnull -> 4273
    //   4268: goto_w -> 4615
    //   4273: new java/lang/StringBuilder
    //   4276: dup
    //   4277: ldc_w 'if(document.getElementById(''
    //   4280: invokespecial <init> : (Ljava/lang/String;)V
    //   4283: aload #13
    //   4285: iconst_0
    //   4286: aaload
    //   4287: iconst_0
    //   4288: aaload
    //   4289: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4292: ldc_w '-'
    //   4295: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4298: aload_1
    //   4299: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4302: ldc_w ''))\\n{\\ndocument.getElementById(''
    //   4305: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4308: aload #13
    //   4310: iconst_0
    //   4311: aaload
    //   4312: iconst_0
    //   4313: aaload
    //   4314: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4317: ldc_w '-'
    //   4320: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4323: aload_1
    //   4324: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4327: ldc_w '').innerHTML=''
    //   4330: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4333: aload #14
    //   4335: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4338: ldc_w '';}'
    //   4341: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4344: invokevirtual toString : ()Ljava/lang/String;
    //   4347: astore #10
    //   4349: iconst_0
    //   4350: istore #22
    //   4352: goto_w -> 4602
    //   4357: new java/lang/StringBuilder
    //   4360: dup
    //   4361: aload #10
    //   4363: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   4366: invokespecial <init> : (Ljava/lang/String;)V
    //   4369: ldc_w 'var '
    //   4372: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4375: aload_1
    //   4376: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4379: iload #22
    //   4381: invokestatic valueOf : (I)Ljava/lang/String;
    //   4384: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4387: ldc_w '_temp='<input type=radio style=font-size:1em; disabled id='
    //   4390: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4393: aload_1
    //   4394: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4397: ldc_w ' name='
    //   4400: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4403: aload_1
    //   4404: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4407: ldc_w ' value='
    //   4410: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4413: aload #21
    //   4415: iload #22
    //   4417: aaload
    //   4418: iconst_0
    //   4419: aaload
    //   4420: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4423: aload #21
    //   4425: iload #22
    //   4427: aaload
    //   4428: iconst_0
    //   4429: aaload
    //   4430: aload #18
    //   4432: invokevirtual equals : (Ljava/lang/Object;)Z
    //   4435: ifne -> 4443
    //   4438: goto_w -> 4451
    //   4443: ldc_w ' checked '
    //   4446: goto_w -> 4453
    //   4451: ldc ''
    //   4453: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4456: ldc_w '>';\\n'
    //   4459: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4462: invokevirtual toString : ()Ljava/lang/String;
    //   4465: astore #10
    //   4467: new java/lang/StringBuilder
    //   4470: dup
    //   4471: aload #10
    //   4473: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   4476: invokespecial <init> : (Ljava/lang/String;)V
    //   4479: ldc_w 'if(document.getElementById(''
    //   4482: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4485: aload #13
    //   4487: iconst_0
    //   4488: aaload
    //   4489: iconst_0
    //   4490: aaload
    //   4491: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4494: ldc_w '-'
    //   4497: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4500: aload_1
    //   4501: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4504: ldc_w ''))\\n{document.getElementById(''
    //   4507: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4510: aload #13
    //   4512: iconst_0
    //   4513: aaload
    //   4514: iconst_0
    //   4515: aaload
    //   4516: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4519: ldc_w '-'
    //   4522: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4525: aload_1
    //   4526: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4529: ldc_w '').innerHTML+='
    //   4532: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4535: aload_1
    //   4536: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4539: iload #22
    //   4541: invokestatic valueOf : (I)Ljava/lang/String;
    //   4544: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4547: ldc_w '_temp;\\ndocument.getElementById(''
    //   4550: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4553: aload #13
    //   4555: iconst_0
    //   4556: aaload
    //   4557: iconst_0
    //   4558: aaload
    //   4559: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4562: ldc_w '-'
    //   4565: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4568: aload_1
    //   4569: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4572: ldc_w '').innerHTML+=''
    //   4575: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4578: aload #21
    //   4580: iload #22
    //   4582: aaload
    //   4583: iconst_1
    //   4584: aaload
    //   4585: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4588: ldc_w '';}'
    //   4591: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4594: invokevirtual toString : ()Ljava/lang/String;
    //   4597: astore #10
    //   4599: iinc #22, 1
    //   4602: iload #22
    //   4604: aload #21
    //   4606: arraylength
    //   4607: if_icmpge -> 4615
    //   4610: goto_w -> 4357
    //   4615: goto_w -> 5727
    //   4620: aload #11
    //   4622: ldc_w '$'
    //   4625: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   4628: ifne -> 4636
    //   4631: goto_w -> 5282
    //   4636: ldc_w 'system'
    //   4639: astore #21
    //   4641: aload #11
    //   4643: ldc_w '].$['
    //   4646: invokevirtual indexOf : (Ljava/lang/String;)I
    //   4649: ifgt -> 4657
    //   4652: goto_w -> 4702
    //   4657: aload #11
    //   4659: iconst_2
    //   4660: aload #11
    //   4662: ldc_w '].$['
    //   4665: invokevirtual indexOf : (Ljava/lang/String;)I
    //   4668: invokevirtual substring : (II)Ljava/lang/String;
    //   4671: astore #21
    //   4673: aload #11
    //   4675: aload #11
    //   4677: ldc_w '].$['
    //   4680: invokevirtual indexOf : (Ljava/lang/String;)I
    //   4683: iconst_4
    //   4684: iadd
    //   4685: aload #11
    //   4687: invokevirtual length : ()I
    //   4690: iconst_1
    //   4691: isub
    //   4692: invokevirtual substring : (II)Ljava/lang/String;
    //   4695: astore #20
    //   4697: goto_w -> 4717
    //   4702: aload #11
    //   4704: iconst_2
    //   4705: aload #11
    //   4707: invokevirtual length : ()I
    //   4710: iconst_1
    //   4711: isub
    //   4712: invokevirtual substring : (II)Ljava/lang/String;
    //   4715: astore #20
    //   4717: aload #9
    //   4719: aload #20
    //   4721: invokestatic getValueFromRequest : (Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;
    //   4724: astore #20
    //   4726: aconst_null
    //   4727: checkcast [[Ljava/lang/String;
    //   4730: astore #22
    //   4732: aconst_null
    //   4733: astore #23
    //   4735: ldc_w 'system'
    //   4738: aload #21
    //   4740: invokevirtual equals : (Ljava/lang/Object;)Z
    //   4743: ifeq -> 4751
    //   4746: goto_w -> 4855
    //   4751: new com/js/oa/userdb/util/DbOpt
    //   4754: dup
    //   4755: aload #21
    //   4757: invokespecial <init> : (Ljava/lang/String;)V
    //   4760: astore #23
    //   4762: aload #21
    //   4764: invokestatic getUserDatabaseType : (Ljava/lang/String;)Ljava/lang/String;
    //   4767: astore #24
    //   4769: aload #24
    //   4771: ldc 'oracle'
    //   4773: invokevirtual indexOf : (Ljava/lang/String;)I
    //   4776: ifge -> 4784
    //   4779: goto_w -> 4836
    //   4784: aload #21
    //   4786: invokestatic getUserDatabaseLang : (Ljava/lang/String;)Ljava/lang/String;
    //   4789: astore #25
    //   4791: ldc ''
    //   4793: aload #25
    //   4795: invokevirtual equals : (Ljava/lang/Object;)Z
    //   4798: ifeq -> 4806
    //   4801: goto_w -> 4836
    //   4806: aload #23
    //   4808: new java/lang/StringBuilder
    //   4811: dup
    //   4812: ldc_w 'ALTER SESSION SET NLS_LANGUAGE=''
    //   4815: invokespecial <init> : (Ljava/lang/String;)V
    //   4818: aload #25
    //   4820: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4823: ldc_w '''
    //   4826: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4829: invokevirtual toString : ()Ljava/lang/String;
    //   4832: invokevirtual executeUpdate : (Ljava/lang/String;)I
    //   4835: pop
    //   4836: aload #23
    //   4838: aload #20
    //   4840: invokevirtual executeQueryToStrArr2 : (Ljava/lang/String;)[[Ljava/lang/String;
    //   4843: astore #22
    //   4845: aload #23
    //   4847: invokevirtual close : ()V
    //   4850: goto_w -> 4893
    //   4855: aload #20
    //   4857: invokevirtual length : ()I
    //   4860: ifgt -> 4868
    //   4863: goto_w -> 4893
    //   4868: aload #20
    //   4870: ldc_w '@$@selValue@$@'
    //   4873: invokevirtual indexOf : (Ljava/lang/String;)I
    //   4876: iflt -> 4884
    //   4879: goto_w -> 4893
    //   4884: aload #16
    //   4886: aload #20
    //   4888: invokevirtual executeQueryToStrArr2 : (Ljava/lang/String;)[[Ljava/lang/String;
    //   4891: astore #22
    //   4893: goto_w -> 4925
    //   4898: astore #24
    //   4900: aload #23
    //   4902: ifnonnull -> 4910
    //   4905: goto_w -> 4915
    //   4910: aload #23
    //   4912: invokevirtual close : ()V
    //   4915: aload #24
    //   4917: invokevirtual printStackTrace : ()V
    //   4920: goto_w -> 4925
    //   4925: aload #22
    //   4927: ifnonnull -> 4935
    //   4930: goto_w -> 5277
    //   4935: new java/lang/StringBuilder
    //   4938: dup
    //   4939: ldc_w 'if(document.getElementById(''
    //   4942: invokespecial <init> : (Ljava/lang/String;)V
    //   4945: aload #13
    //   4947: iconst_0
    //   4948: aaload
    //   4949: iconst_0
    //   4950: aaload
    //   4951: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4954: ldc_w '-'
    //   4957: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4960: aload_1
    //   4961: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4964: ldc_w ''))\\n{\\ndocument.getElementById(''
    //   4967: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4970: aload #13
    //   4972: iconst_0
    //   4973: aaload
    //   4974: iconst_0
    //   4975: aaload
    //   4976: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4979: ldc_w '-'
    //   4982: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4985: aload_1
    //   4986: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4989: ldc_w '').innerHTML=''
    //   4992: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4995: aload #14
    //   4997: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5000: ldc_w '';}'
    //   5003: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5006: invokevirtual toString : ()Ljava/lang/String;
    //   5009: astore #10
    //   5011: iconst_0
    //   5012: istore #24
    //   5014: goto_w -> 5264
    //   5019: new java/lang/StringBuilder
    //   5022: dup
    //   5023: aload #10
    //   5025: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   5028: invokespecial <init> : (Ljava/lang/String;)V
    //   5031: ldc_w 'var '
    //   5034: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5037: aload_1
    //   5038: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5041: iload #24
    //   5043: invokestatic valueOf : (I)Ljava/lang/String;
    //   5046: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5049: ldc_w '_temp='<input type=radio style=font-size:1em; disabled id='
    //   5052: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5055: aload_1
    //   5056: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5059: ldc_w ' name='
    //   5062: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5065: aload_1
    //   5066: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5069: ldc_w ' value='
    //   5072: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5075: aload #22
    //   5077: iload #24
    //   5079: aaload
    //   5080: iconst_0
    //   5081: aaload
    //   5082: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5085: aload #22
    //   5087: iload #24
    //   5089: aaload
    //   5090: iconst_0
    //   5091: aaload
    //   5092: aload #18
    //   5094: invokevirtual equals : (Ljava/lang/Object;)Z
    //   5097: ifne -> 5105
    //   5100: goto_w -> 5113
    //   5105: ldc_w ' checked '
    //   5108: goto_w -> 5115
    //   5113: ldc ''
    //   5115: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5118: ldc_w '>';\\n'
    //   5121: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5124: invokevirtual toString : ()Ljava/lang/String;
    //   5127: astore #10
    //   5129: new java/lang/StringBuilder
    //   5132: dup
    //   5133: aload #10
    //   5135: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   5138: invokespecial <init> : (Ljava/lang/String;)V
    //   5141: ldc_w 'if(document.getElementById(''
    //   5144: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5147: aload #13
    //   5149: iconst_0
    //   5150: aaload
    //   5151: iconst_0
    //   5152: aaload
    //   5153: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5156: ldc_w '-'
    //   5159: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5162: aload_1
    //   5163: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5166: ldc_w ''))\\n{document.getElementById(''
    //   5169: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5172: aload #13
    //   5174: iconst_0
    //   5175: aaload
    //   5176: iconst_0
    //   5177: aaload
    //   5178: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5181: ldc_w '-'
    //   5184: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5187: aload_1
    //   5188: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5191: ldc_w '').innerHTML+='
    //   5194: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5197: aload_1
    //   5198: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5201: iload #24
    //   5203: invokestatic valueOf : (I)Ljava/lang/String;
    //   5206: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5209: ldc_w '_temp;\\ndocument.getElementById(''
    //   5212: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5215: aload #13
    //   5217: iconst_0
    //   5218: aaload
    //   5219: iconst_0
    //   5220: aaload
    //   5221: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5224: ldc_w '-'
    //   5227: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5230: aload_1
    //   5231: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5234: ldc_w '').innerHTML+=''
    //   5237: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5240: aload #22
    //   5242: iload #24
    //   5244: aaload
    //   5245: iconst_1
    //   5246: aaload
    //   5247: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5250: ldc_w '';}'
    //   5253: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5256: invokevirtual toString : ()Ljava/lang/String;
    //   5259: astore #10
    //   5261: iinc #24, 1
    //   5264: iload #24
    //   5266: aload #22
    //   5268: arraylength
    //   5269: if_icmpge -> 5277
    //   5272: goto_w -> 5019
    //   5277: goto_w -> 5727
    //   5282: iconst_0
    //   5283: istore #20
    //   5285: goto_w -> 5633
    //   5290: aload #12
    //   5292: iload #20
    //   5294: aaload
    //   5295: ifnonnull -> 5303
    //   5298: goto_w -> 5630
    //   5303: aload #12
    //   5305: iload #20
    //   5307: aaload
    //   5308: invokevirtual trim : ()Ljava/lang/String;
    //   5311: invokevirtual length : ()I
    //   5314: ifgt -> 5322
    //   5317: goto_w -> 5630
    //   5322: aload #12
    //   5324: iload #20
    //   5326: aaload
    //   5327: ldc_w '/'
    //   5330: invokevirtual indexOf : (Ljava/lang/String;)I
    //   5333: ifgt -> 5341
    //   5336: goto_w -> 5630
    //   5341: aload #12
    //   5343: iload #20
    //   5345: aaload
    //   5346: ldc_w '/'
    //   5349: invokevirtual indexOf : (Ljava/lang/String;)I
    //   5352: aload #12
    //   5354: iload #20
    //   5356: aaload
    //   5357: invokevirtual length : ()I
    //   5360: iconst_1
    //   5361: isub
    //   5362: if_icmplt -> 5370
    //   5365: goto_w -> 5630
    //   5370: new java/lang/StringBuilder
    //   5373: dup
    //   5374: aload #10
    //   5376: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   5379: invokespecial <init> : (Ljava/lang/String;)V
    //   5382: ldc_w 'var '
    //   5385: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5388: aload_1
    //   5389: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5392: iload #20
    //   5394: invokestatic valueOf : (I)Ljava/lang/String;
    //   5397: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5400: ldc_w '_temp='<input type=radio  style=font-size:1em; disabled id='
    //   5403: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5406: aload_1
    //   5407: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5410: ldc_w ' name='
    //   5413: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5416: aload_1
    //   5417: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5420: ldc_w ' value='
    //   5423: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5426: aload #12
    //   5428: iload #20
    //   5430: aaload
    //   5431: ldc_w '/'
    //   5434: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   5437: iconst_0
    //   5438: aaload
    //   5439: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5442: aload #12
    //   5444: iload #20
    //   5446: aaload
    //   5447: ldc_w '/'
    //   5450: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   5453: iconst_0
    //   5454: aaload
    //   5455: aload #18
    //   5457: invokevirtual equals : (Ljava/lang/Object;)Z
    //   5460: ifne -> 5468
    //   5463: goto_w -> 5476
    //   5468: ldc_w ' checked '
    //   5471: goto_w -> 5478
    //   5476: ldc ''
    //   5478: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5481: ldc_w '>';\\n'
    //   5484: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5487: invokevirtual toString : ()Ljava/lang/String;
    //   5490: astore #10
    //   5492: new java/lang/StringBuilder
    //   5495: dup
    //   5496: aload #10
    //   5498: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   5501: invokespecial <init> : (Ljava/lang/String;)V
    //   5504: ldc_w 'if(document.getElementById(''
    //   5507: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5510: aload #13
    //   5512: iconst_0
    //   5513: aaload
    //   5514: iconst_0
    //   5515: aaload
    //   5516: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5519: ldc_w '-'
    //   5522: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5525: aload_1
    //   5526: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5529: ldc_w ''))\\n{document.getElementById(''
    //   5532: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5535: aload #13
    //   5537: iconst_0
    //   5538: aaload
    //   5539: iconst_0
    //   5540: aaload
    //   5541: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5544: ldc_w '-'
    //   5547: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5550: aload_1
    //   5551: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5554: ldc_w '').innerHTML+='
    //   5557: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5560: aload_1
    //   5561: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5564: iload #20
    //   5566: invokestatic valueOf : (I)Ljava/lang/String;
    //   5569: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5572: ldc_w '_temp;\\ndocument.getElementById(''
    //   5575: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5578: aload #13
    //   5580: iconst_0
    //   5581: aaload
    //   5582: iconst_0
    //   5583: aaload
    //   5584: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5587: ldc_w '-'
    //   5590: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5593: aload_1
    //   5594: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5597: ldc_w '').innerHTML+=''
    //   5600: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5603: aload #12
    //   5605: iload #20
    //   5607: aaload
    //   5608: ldc_w '/'
    //   5611: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   5614: iconst_1
    //   5615: aaload
    //   5616: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5619: ldc_w '';}'
    //   5622: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5625: invokevirtual toString : ()Ljava/lang/String;
    //   5628: astore #10
    //   5630: iinc #20, 1
    //   5633: iload #20
    //   5635: aload #12
    //   5637: arraylength
    //   5638: if_icmpge -> 5646
    //   5641: goto_w -> 5290
    //   5646: new java/lang/StringBuilder
    //   5649: dup
    //   5650: ldc_w 'if(document.getElementById(''
    //   5653: invokespecial <init> : (Ljava/lang/String;)V
    //   5656: aload #13
    //   5658: iconst_0
    //   5659: aaload
    //   5660: iconst_0
    //   5661: aaload
    //   5662: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5665: ldc_w '-'
    //   5668: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5671: aload_1
    //   5672: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5675: ldc_w ''))\\n{document.getElementById(''
    //   5678: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5681: aload #13
    //   5683: iconst_0
    //   5684: aaload
    //   5685: iconst_0
    //   5686: aaload
    //   5687: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5690: ldc_w '-'
    //   5693: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5696: aload_1
    //   5697: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5700: ldc_w '').innerHTML=''
    //   5703: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5706: aload #14
    //   5708: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5711: ldc_w '';}'
    //   5714: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5717: aload #10
    //   5719: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5722: invokevirtual toString : ()Ljava/lang/String;
    //   5725: astore #10
    //   5727: goto_w -> 7796
    //   5732: aload #11
    //   5734: ldc_w '@'
    //   5737: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   5740: ifne -> 5748
    //   5743: goto_w -> 6389
    //   5748: aload #11
    //   5750: aload #11
    //   5752: ldc_w ']['
    //   5755: invokevirtual indexOf : (Ljava/lang/String;)I
    //   5758: iconst_2
    //   5759: iadd
    //   5760: aload #11
    //   5762: invokevirtual length : ()I
    //   5765: iconst_1
    //   5766: isub
    //   5767: invokevirtual substring : (II)Ljava/lang/String;
    //   5770: astore #20
    //   5772: aconst_null
    //   5773: checkcast [[Ljava/lang/String;
    //   5776: astore #21
    //   5778: aload #16
    //   5780: new java/lang/StringBuilder
    //   5783: dup
    //   5784: ldc 'select '
    //   5786: invokespecial <init> : (Ljava/lang/String;)V
    //   5789: aload #20
    //   5791: iconst_0
    //   5792: aload #20
    //   5794: ldc_w '.'
    //   5797: invokevirtual indexOf : (Ljava/lang/String;)I
    //   5800: invokevirtual substring : (II)Ljava/lang/String;
    //   5803: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5806: ldc_w '_id,'
    //   5809: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5812: aload #20
    //   5814: aload #20
    //   5816: ldc_w '.'
    //   5819: invokevirtual indexOf : (Ljava/lang/String;)I
    //   5822: iconst_1
    //   5823: iadd
    //   5824: aload #20
    //   5826: invokevirtual length : ()I
    //   5829: invokevirtual substring : (II)Ljava/lang/String;
    //   5832: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5835: ldc ' from '
    //   5837: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5840: aload #20
    //   5842: iconst_0
    //   5843: aload #20
    //   5845: ldc_w '.'
    //   5848: invokevirtual indexOf : (Ljava/lang/String;)I
    //   5851: invokevirtual substring : (II)Ljava/lang/String;
    //   5854: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5857: invokevirtual toString : ()Ljava/lang/String;
    //   5860: invokevirtual executeQueryToStrArr2 : (Ljava/lang/String;)[[Ljava/lang/String;
    //   5863: astore #21
    //   5865: goto_w -> 5882
    //   5870: astore #22
    //   5872: aload #22
    //   5874: invokevirtual printStackTrace : ()V
    //   5877: goto_w -> 5882
    //   5882: aload #21
    //   5884: ifnonnull -> 5892
    //   5887: goto_w -> 6384
    //   5892: new java/lang/StringBuilder
    //   5895: dup
    //   5896: ldc_w 'if(document.getElementById(''
    //   5899: invokespecial <init> : (Ljava/lang/String;)V
    //   5902: aload #13
    //   5904: iconst_0
    //   5905: aaload
    //   5906: iconst_0
    //   5907: aaload
    //   5908: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5911: ldc_w '-'
    //   5914: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5917: aload_1
    //   5918: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5921: ldc_w ''))\\n{\\ndocument.getElementById(''
    //   5924: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5927: aload #13
    //   5929: iconst_0
    //   5930: aaload
    //   5931: iconst_0
    //   5932: aaload
    //   5933: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5936: ldc_w '-'
    //   5939: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5942: aload_1
    //   5943: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5946: ldc_w '').innerHTML=''
    //   5949: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5952: aload #14
    //   5954: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5957: ldc_w '';}'
    //   5960: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5963: invokevirtual toString : ()Ljava/lang/String;
    //   5966: astore #10
    //   5968: iconst_0
    //   5969: istore #22
    //   5971: goto_w -> 6371
    //   5976: new java/lang/StringBuilder
    //   5979: dup
    //   5980: aload #10
    //   5982: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   5985: invokespecial <init> : (Ljava/lang/String;)V
    //   5988: ldc_w 'var '
    //   5991: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5994: aload_1
    //   5995: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5998: iload #22
    //   6000: invokestatic valueOf : (I)Ljava/lang/String;
    //   6003: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6006: ldc_w '_temp='<input type=radio style=font-size:1em;  id='
    //   6009: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6012: aload_1
    //   6013: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6016: ldc_w ' name='
    //   6019: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6022: aload_1
    //   6023: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6026: aload #21
    //   6028: iload #22
    //   6030: aaload
    //   6031: iconst_0
    //   6032: aaload
    //   6033: aload #18
    //   6035: invokevirtual equals : (Ljava/lang/Object;)Z
    //   6038: ifne -> 6046
    //   6041: goto_w -> 6054
    //   6046: ldc_w ' checked '
    //   6049: goto_w -> 6056
    //   6054: ldc ''
    //   6056: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6059: ldc_w ' value='
    //   6062: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6065: aload #21
    //   6067: iload #22
    //   6069: aaload
    //   6070: iconst_0
    //   6071: aaload
    //   6072: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6075: ldc_w '>';\\n'
    //   6078: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6081: invokevirtual toString : ()Ljava/lang/String;
    //   6084: astore #10
    //   6086: new java/lang/StringBuilder
    //   6089: dup
    //   6090: aload #10
    //   6092: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   6095: invokespecial <init> : (Ljava/lang/String;)V
    //   6098: ldc_w 'if(document.getElementById(''
    //   6101: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6104: aload #13
    //   6106: iconst_0
    //   6107: aaload
    //   6108: iconst_0
    //   6109: aaload
    //   6110: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6113: ldc_w '-'
    //   6116: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6119: aload_1
    //   6120: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6123: ldc_w ''))\\n{document.getElementById(''
    //   6126: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6129: aload #13
    //   6131: iconst_0
    //   6132: aaload
    //   6133: iconst_0
    //   6134: aaload
    //   6135: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6138: ldc_w '-'
    //   6141: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6144: aload_1
    //   6145: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6148: ldc_w '').innerHTML+='
    //   6151: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6154: aload_1
    //   6155: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6158: iload #22
    //   6160: invokestatic valueOf : (I)Ljava/lang/String;
    //   6163: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6166: ldc_w '_temp;\\ndocument.getElementById(''
    //   6169: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6172: aload #13
    //   6174: iconst_0
    //   6175: aaload
    //   6176: iconst_0
    //   6177: aaload
    //   6178: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6181: ldc_w '-'
    //   6184: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6187: aload_1
    //   6188: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6191: ldc_w '').innerHTML+=''
    //   6194: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6197: aload #21
    //   6199: iload #22
    //   6201: aaload
    //   6202: iconst_1
    //   6203: aaload
    //   6204: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6207: aload #13
    //   6209: iconst_0
    //   6210: aaload
    //   6211: iconst_3
    //   6212: aaload
    //   6213: ldc_w '1'
    //   6216: invokevirtual equals : (Ljava/lang/Object;)Z
    //   6219: ifne -> 6227
    //   6222: goto_w -> 6352
    //   6227: iload #22
    //   6229: aload #21
    //   6231: arraylength
    //   6232: iconst_1
    //   6233: isub
    //   6234: if_icmpeq -> 6242
    //   6237: goto_w -> 6352
    //   6242: aload #4
    //   6244: new java/lang/StringBuilder
    //   6247: dup
    //   6248: ldc_w ','
    //   6251: invokespecial <init> : (Ljava/lang/String;)V
    //   6254: aload #13
    //   6256: iconst_0
    //   6257: aaload
    //   6258: iconst_0
    //   6259: aaload
    //   6260: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6263: ldc_w ','
    //   6266: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6269: invokevirtual toString : ()Ljava/lang/String;
    //   6272: invokevirtual indexOf : (Ljava/lang/String;)I
    //   6275: iflt -> 6283
    //   6278: goto_w -> 6352
    //   6283: aload #4
    //   6285: new java/lang/StringBuilder
    //   6288: dup
    //   6289: ldc_w ','
    //   6292: invokespecial <init> : (Ljava/lang/String;)V
    //   6295: aload #13
    //   6297: iconst_0
    //   6298: aaload
    //   6299: iconst_5
    //   6300: aaload
    //   6301: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6304: ldc_w ','
    //   6307: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6310: invokevirtual toString : ()Ljava/lang/String;
    //   6313: invokevirtual indexOf : (Ljava/lang/String;)I
    //   6316: iflt -> 6324
    //   6319: goto_w -> 6352
    //   6324: new java/lang/StringBuilder
    //   6327: dup
    //   6328: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   6331: invokespecial <init> : (Ljava/lang/String;)V
    //   6334: aload_1
    //   6335: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6338: ldc_w '><label class=mustFillcolor>*</label>'
    //   6341: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6344: invokevirtual toString : ()Ljava/lang/String;
    //   6347: goto_w -> 6354
    //   6352: ldc ''
    //   6354: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6357: ldc_w '';}'
    //   6360: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6363: invokevirtual toString : ()Ljava/lang/String;
    //   6366: astore #10
    //   6368: iinc #22, 1
    //   6371: iload #22
    //   6373: aload #21
    //   6375: arraylength
    //   6376: if_icmpge -> 6384
    //   6379: goto_w -> 5976
    //   6384: goto_w -> 7796
    //   6389: aload #11
    //   6391: ldc_w '$'
    //   6394: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   6397: ifne -> 6405
    //   6400: goto_w -> 7201
    //   6405: ldc_w 'system'
    //   6408: astore #21
    //   6410: aload #11
    //   6412: ldc_w '].$['
    //   6415: invokevirtual indexOf : (Ljava/lang/String;)I
    //   6418: ifgt -> 6426
    //   6421: goto_w -> 6471
    //   6426: aload #11
    //   6428: iconst_2
    //   6429: aload #11
    //   6431: ldc_w '].$['
    //   6434: invokevirtual indexOf : (Ljava/lang/String;)I
    //   6437: invokevirtual substring : (II)Ljava/lang/String;
    //   6440: astore #21
    //   6442: aload #11
    //   6444: aload #11
    //   6446: ldc_w '].$['
    //   6449: invokevirtual indexOf : (Ljava/lang/String;)I
    //   6452: iconst_4
    //   6453: iadd
    //   6454: aload #11
    //   6456: invokevirtual length : ()I
    //   6459: iconst_1
    //   6460: isub
    //   6461: invokevirtual substring : (II)Ljava/lang/String;
    //   6464: astore #20
    //   6466: goto_w -> 6486
    //   6471: aload #11
    //   6473: iconst_2
    //   6474: aload #11
    //   6476: invokevirtual length : ()I
    //   6479: iconst_1
    //   6480: isub
    //   6481: invokevirtual substring : (II)Ljava/lang/String;
    //   6484: astore #20
    //   6486: aload #9
    //   6488: aload #20
    //   6490: invokestatic getValueFromRequest : (Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;
    //   6493: astore #20
    //   6495: aconst_null
    //   6496: checkcast [[Ljava/lang/String;
    //   6499: astore #22
    //   6501: aconst_null
    //   6502: astore #23
    //   6504: ldc_w 'system'
    //   6507: aload #21
    //   6509: invokevirtual equals : (Ljava/lang/Object;)Z
    //   6512: ifeq -> 6520
    //   6515: goto_w -> 6624
    //   6520: new com/js/oa/userdb/util/DbOpt
    //   6523: dup
    //   6524: aload #21
    //   6526: invokespecial <init> : (Ljava/lang/String;)V
    //   6529: astore #23
    //   6531: aload #21
    //   6533: invokestatic getUserDatabaseType : (Ljava/lang/String;)Ljava/lang/String;
    //   6536: astore #24
    //   6538: aload #24
    //   6540: ldc 'oracle'
    //   6542: invokevirtual indexOf : (Ljava/lang/String;)I
    //   6545: ifge -> 6553
    //   6548: goto_w -> 6605
    //   6553: aload #21
    //   6555: invokestatic getUserDatabaseLang : (Ljava/lang/String;)Ljava/lang/String;
    //   6558: astore #25
    //   6560: ldc ''
    //   6562: aload #25
    //   6564: invokevirtual equals : (Ljava/lang/Object;)Z
    //   6567: ifeq -> 6575
    //   6570: goto_w -> 6605
    //   6575: aload #23
    //   6577: new java/lang/StringBuilder
    //   6580: dup
    //   6581: ldc_w 'ALTER SESSION SET NLS_LANGUAGE=''
    //   6584: invokespecial <init> : (Ljava/lang/String;)V
    //   6587: aload #25
    //   6589: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6592: ldc_w '''
    //   6595: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6598: invokevirtual toString : ()Ljava/lang/String;
    //   6601: invokevirtual executeUpdate : (Ljava/lang/String;)I
    //   6604: pop
    //   6605: aload #23
    //   6607: aload #20
    //   6609: invokevirtual executeQueryToStrArr2 : (Ljava/lang/String;)[[Ljava/lang/String;
    //   6612: astore #22
    //   6614: aload #23
    //   6616: invokevirtual close : ()V
    //   6619: goto_w -> 6662
    //   6624: aload #20
    //   6626: invokevirtual length : ()I
    //   6629: ifgt -> 6637
    //   6632: goto_w -> 6662
    //   6637: aload #20
    //   6639: ldc_w '@$@selValue@$@'
    //   6642: invokevirtual indexOf : (Ljava/lang/String;)I
    //   6645: iflt -> 6653
    //   6648: goto_w -> 6662
    //   6653: aload #16
    //   6655: aload #20
    //   6657: invokevirtual executeQueryToStrArr2 : (Ljava/lang/String;)[[Ljava/lang/String;
    //   6660: astore #22
    //   6662: goto_w -> 6694
    //   6667: astore #24
    //   6669: aload #23
    //   6671: ifnonnull -> 6679
    //   6674: goto_w -> 6684
    //   6679: aload #23
    //   6681: invokevirtual close : ()V
    //   6684: aload #24
    //   6686: invokevirtual printStackTrace : ()V
    //   6689: goto_w -> 6694
    //   6694: aload #22
    //   6696: ifnonnull -> 6704
    //   6699: goto_w -> 7196
    //   6704: new java/lang/StringBuilder
    //   6707: dup
    //   6708: ldc_w 'if(document.getElementById(''
    //   6711: invokespecial <init> : (Ljava/lang/String;)V
    //   6714: aload #13
    //   6716: iconst_0
    //   6717: aaload
    //   6718: iconst_0
    //   6719: aaload
    //   6720: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6723: ldc_w '-'
    //   6726: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6729: aload_1
    //   6730: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6733: ldc_w ''))\\n{\\ndocument.getElementById(''
    //   6736: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6739: aload #13
    //   6741: iconst_0
    //   6742: aaload
    //   6743: iconst_0
    //   6744: aaload
    //   6745: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6748: ldc_w '-'
    //   6751: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6754: aload_1
    //   6755: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6758: ldc_w '').innerHTML=''
    //   6761: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6764: aload #14
    //   6766: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6769: ldc_w '';}'
    //   6772: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6775: invokevirtual toString : ()Ljava/lang/String;
    //   6778: astore #10
    //   6780: iconst_0
    //   6781: istore #24
    //   6783: goto_w -> 7183
    //   6788: new java/lang/StringBuilder
    //   6791: dup
    //   6792: aload #10
    //   6794: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   6797: invokespecial <init> : (Ljava/lang/String;)V
    //   6800: ldc_w 'var '
    //   6803: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6806: aload_1
    //   6807: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6810: iload #24
    //   6812: invokestatic valueOf : (I)Ljava/lang/String;
    //   6815: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6818: ldc_w '_temp='<input type=radio style=font-size:1em; id='
    //   6821: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6824: aload_1
    //   6825: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6828: ldc_w ' name='
    //   6831: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6834: aload_1
    //   6835: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6838: aload #22
    //   6840: iload #24
    //   6842: aaload
    //   6843: iconst_0
    //   6844: aaload
    //   6845: aload #18
    //   6847: invokevirtual equals : (Ljava/lang/Object;)Z
    //   6850: ifne -> 6858
    //   6853: goto_w -> 6866
    //   6858: ldc_w ' checked '
    //   6861: goto_w -> 6868
    //   6866: ldc ''
    //   6868: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6871: ldc_w ' value='
    //   6874: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6877: aload #22
    //   6879: iload #24
    //   6881: aaload
    //   6882: iconst_0
    //   6883: aaload
    //   6884: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6887: ldc_w '>';\\n'
    //   6890: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6893: invokevirtual toString : ()Ljava/lang/String;
    //   6896: astore #10
    //   6898: new java/lang/StringBuilder
    //   6901: dup
    //   6902: aload #10
    //   6904: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   6907: invokespecial <init> : (Ljava/lang/String;)V
    //   6910: ldc_w 'if(document.getElementById(''
    //   6913: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6916: aload #13
    //   6918: iconst_0
    //   6919: aaload
    //   6920: iconst_0
    //   6921: aaload
    //   6922: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6925: ldc_w '-'
    //   6928: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6931: aload_1
    //   6932: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6935: ldc_w ''))\\n{document.getElementById(''
    //   6938: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6941: aload #13
    //   6943: iconst_0
    //   6944: aaload
    //   6945: iconst_0
    //   6946: aaload
    //   6947: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6950: ldc_w '-'
    //   6953: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6956: aload_1
    //   6957: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6960: ldc_w '').innerHTML+='
    //   6963: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6966: aload_1
    //   6967: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6970: iload #24
    //   6972: invokestatic valueOf : (I)Ljava/lang/String;
    //   6975: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6978: ldc_w '_temp;\\ndocument.getElementById(''
    //   6981: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6984: aload #13
    //   6986: iconst_0
    //   6987: aaload
    //   6988: iconst_0
    //   6989: aaload
    //   6990: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6993: ldc_w '-'
    //   6996: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6999: aload_1
    //   7000: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7003: ldc_w '').innerHTML+=''
    //   7006: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7009: aload #22
    //   7011: iload #24
    //   7013: aaload
    //   7014: iconst_1
    //   7015: aaload
    //   7016: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7019: aload #13
    //   7021: iconst_0
    //   7022: aaload
    //   7023: iconst_3
    //   7024: aaload
    //   7025: ldc_w '1'
    //   7028: invokevirtual equals : (Ljava/lang/Object;)Z
    //   7031: ifne -> 7039
    //   7034: goto_w -> 7164
    //   7039: iload #24
    //   7041: aload #22
    //   7043: arraylength
    //   7044: iconst_1
    //   7045: isub
    //   7046: if_icmpeq -> 7054
    //   7049: goto_w -> 7164
    //   7054: aload #4
    //   7056: new java/lang/StringBuilder
    //   7059: dup
    //   7060: ldc_w ','
    //   7063: invokespecial <init> : (Ljava/lang/String;)V
    //   7066: aload #13
    //   7068: iconst_0
    //   7069: aaload
    //   7070: iconst_0
    //   7071: aaload
    //   7072: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7075: ldc_w ','
    //   7078: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7081: invokevirtual toString : ()Ljava/lang/String;
    //   7084: invokevirtual indexOf : (Ljava/lang/String;)I
    //   7087: iflt -> 7095
    //   7090: goto_w -> 7164
    //   7095: aload #4
    //   7097: new java/lang/StringBuilder
    //   7100: dup
    //   7101: ldc_w ','
    //   7104: invokespecial <init> : (Ljava/lang/String;)V
    //   7107: aload #13
    //   7109: iconst_0
    //   7110: aaload
    //   7111: iconst_5
    //   7112: aaload
    //   7113: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7116: ldc_w ','
    //   7119: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7122: invokevirtual toString : ()Ljava/lang/String;
    //   7125: invokevirtual indexOf : (Ljava/lang/String;)I
    //   7128: iflt -> 7136
    //   7131: goto_w -> 7164
    //   7136: new java/lang/StringBuilder
    //   7139: dup
    //   7140: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   7143: invokespecial <init> : (Ljava/lang/String;)V
    //   7146: aload_1
    //   7147: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7150: ldc_w '><label class=mustFillcolor>*</label>'
    //   7153: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7156: invokevirtual toString : ()Ljava/lang/String;
    //   7159: goto_w -> 7166
    //   7164: ldc ''
    //   7166: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7169: ldc_w '';}'
    //   7172: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7175: invokevirtual toString : ()Ljava/lang/String;
    //   7178: astore #10
    //   7180: iinc #24, 1
    //   7183: iload #24
    //   7185: aload #22
    //   7187: arraylength
    //   7188: if_icmpge -> 7196
    //   7191: goto_w -> 6788
    //   7196: goto_w -> 7796
    //   7201: iconst_0
    //   7202: istore #20
    //   7204: goto_w -> 7702
    //   7209: aload #12
    //   7211: iload #20
    //   7213: aaload
    //   7214: ifnonnull -> 7222
    //   7217: goto_w -> 7699
    //   7222: aload #12
    //   7224: iload #20
    //   7226: aaload
    //   7227: invokevirtual trim : ()Ljava/lang/String;
    //   7230: invokevirtual length : ()I
    //   7233: ifgt -> 7241
    //   7236: goto_w -> 7699
    //   7241: aload #12
    //   7243: iload #20
    //   7245: aaload
    //   7246: ldc_w '/'
    //   7249: invokevirtual indexOf : (Ljava/lang/String;)I
    //   7252: ifgt -> 7260
    //   7255: goto_w -> 7699
    //   7260: aload #12
    //   7262: iload #20
    //   7264: aaload
    //   7265: ldc_w '/'
    //   7268: invokevirtual indexOf : (Ljava/lang/String;)I
    //   7271: aload #12
    //   7273: iload #20
    //   7275: aaload
    //   7276: invokevirtual length : ()I
    //   7279: iconst_1
    //   7280: isub
    //   7281: if_icmplt -> 7289
    //   7284: goto_w -> 7699
    //   7289: new java/lang/StringBuilder
    //   7292: dup
    //   7293: aload #10
    //   7295: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   7298: invokespecial <init> : (Ljava/lang/String;)V
    //   7301: ldc_w 'var '
    //   7304: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7307: aload_1
    //   7308: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7311: iload #20
    //   7313: invokestatic valueOf : (I)Ljava/lang/String;
    //   7316: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7319: ldc_w '_temp='<input style=font-size:1em; type=radio id='
    //   7322: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7325: aload_1
    //   7326: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7329: ldc_w ' name='
    //   7332: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7335: aload_1
    //   7336: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7339: ldc_w ' value='
    //   7342: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7345: aload #12
    //   7347: iload #20
    //   7349: aaload
    //   7350: ldc_w '/'
    //   7353: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   7356: iconst_0
    //   7357: aaload
    //   7358: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7361: aload #12
    //   7363: iload #20
    //   7365: aaload
    //   7366: ldc_w '/'
    //   7369: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   7372: iconst_0
    //   7373: aaload
    //   7374: aload #18
    //   7376: invokevirtual equals : (Ljava/lang/Object;)Z
    //   7379: ifne -> 7387
    //   7382: goto_w -> 7395
    //   7387: ldc_w ' checked '
    //   7390: goto_w -> 7397
    //   7395: ldc ''
    //   7397: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7400: ldc_w '>';\\n'
    //   7403: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7406: invokevirtual toString : ()Ljava/lang/String;
    //   7409: astore #10
    //   7411: new java/lang/StringBuilder
    //   7414: dup
    //   7415: aload #10
    //   7417: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   7420: invokespecial <init> : (Ljava/lang/String;)V
    //   7423: ldc_w 'if(document.getElementById(''
    //   7426: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7429: aload #13
    //   7431: iconst_0
    //   7432: aaload
    //   7433: iconst_0
    //   7434: aaload
    //   7435: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7438: ldc_w '-'
    //   7441: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7444: aload_1
    //   7445: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7448: ldc_w ''))\\n{document.getElementById(''
    //   7451: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7454: aload #13
    //   7456: iconst_0
    //   7457: aaload
    //   7458: iconst_0
    //   7459: aaload
    //   7460: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7463: ldc_w '-'
    //   7466: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7469: aload_1
    //   7470: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7473: ldc_w '').innerHTML+='
    //   7476: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7479: aload_1
    //   7480: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7483: iload #20
    //   7485: invokestatic valueOf : (I)Ljava/lang/String;
    //   7488: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7491: ldc_w '_temp;\\ndocument.getElementById(''
    //   7494: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7497: aload #13
    //   7499: iconst_0
    //   7500: aaload
    //   7501: iconst_0
    //   7502: aaload
    //   7503: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7506: ldc_w '-'
    //   7509: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7512: aload_1
    //   7513: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7516: ldc_w '').innerHTML+=''
    //   7519: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7522: aload #12
    //   7524: iload #20
    //   7526: aaload
    //   7527: ldc_w '/'
    //   7530: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   7533: iconst_1
    //   7534: aaload
    //   7535: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7538: aload #13
    //   7540: iconst_0
    //   7541: aaload
    //   7542: iconst_3
    //   7543: aaload
    //   7544: ldc_w '1'
    //   7547: invokevirtual equals : (Ljava/lang/Object;)Z
    //   7550: ifne -> 7558
    //   7553: goto_w -> 7683
    //   7558: iload #20
    //   7560: aload #12
    //   7562: arraylength
    //   7563: iconst_1
    //   7564: isub
    //   7565: if_icmpeq -> 7573
    //   7568: goto_w -> 7683
    //   7573: aload #4
    //   7575: new java/lang/StringBuilder
    //   7578: dup
    //   7579: ldc_w ','
    //   7582: invokespecial <init> : (Ljava/lang/String;)V
    //   7585: aload #13
    //   7587: iconst_0
    //   7588: aaload
    //   7589: iconst_0
    //   7590: aaload
    //   7591: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7594: ldc_w ','
    //   7597: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7600: invokevirtual toString : ()Ljava/lang/String;
    //   7603: invokevirtual indexOf : (Ljava/lang/String;)I
    //   7606: iflt -> 7614
    //   7609: goto_w -> 7683
    //   7614: aload #4
    //   7616: new java/lang/StringBuilder
    //   7619: dup
    //   7620: ldc_w ','
    //   7623: invokespecial <init> : (Ljava/lang/String;)V
    //   7626: aload #13
    //   7628: iconst_0
    //   7629: aaload
    //   7630: iconst_5
    //   7631: aaload
    //   7632: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7635: ldc_w ','
    //   7638: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7641: invokevirtual toString : ()Ljava/lang/String;
    //   7644: invokevirtual indexOf : (Ljava/lang/String;)I
    //   7647: iflt -> 7655
    //   7650: goto_w -> 7683
    //   7655: new java/lang/StringBuilder
    //   7658: dup
    //   7659: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   7662: invokespecial <init> : (Ljava/lang/String;)V
    //   7665: aload_1
    //   7666: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7669: ldc_w '><label class=mustFillcolor>*</label>'
    //   7672: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7675: invokevirtual toString : ()Ljava/lang/String;
    //   7678: goto_w -> 7685
    //   7683: ldc ''
    //   7685: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7688: ldc_w '';}'
    //   7691: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7694: invokevirtual toString : ()Ljava/lang/String;
    //   7697: astore #10
    //   7699: iinc #20, 1
    //   7702: iload #20
    //   7704: aload #12
    //   7706: arraylength
    //   7707: if_icmpge -> 7715
    //   7710: goto_w -> 7209
    //   7715: new java/lang/StringBuilder
    //   7718: dup
    //   7719: ldc_w 'if(document.getElementById(''
    //   7722: invokespecial <init> : (Ljava/lang/String;)V
    //   7725: aload #13
    //   7727: iconst_0
    //   7728: aaload
    //   7729: iconst_0
    //   7730: aaload
    //   7731: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7734: ldc_w '-'
    //   7737: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7740: aload_1
    //   7741: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7744: ldc_w ''))\\n{document.getElementById(''
    //   7747: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7750: aload #13
    //   7752: iconst_0
    //   7753: aaload
    //   7754: iconst_0
    //   7755: aaload
    //   7756: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7759: ldc_w '-'
    //   7762: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7765: aload_1
    //   7766: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7769: ldc_w '').innerHTML=''
    //   7772: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7775: aload #14
    //   7777: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7780: ldc_w '';}'
    //   7783: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7786: aload #10
    //   7788: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7791: invokevirtual toString : ()Ljava/lang/String;
    //   7794: astore #10
    //   7796: goto_w -> 46733
    //   7801: aload #18
    //   7803: ifnonnull -> 7811
    //   7806: goto_w -> 7826
    //   7811: ldc ''
    //   7813: aload #18
    //   7815: invokevirtual equals : (Ljava/lang/Object;)Z
    //   7818: ifne -> 7826
    //   7821: goto_w -> 7871
    //   7826: aload #13
    //   7828: iconst_0
    //   7829: aaload
    //   7830: iconst_4
    //   7831: aaload
    //   7832: ifnull -> 7840
    //   7835: goto_w -> 7847
    //   7840: ldc ''
    //   7842: goto_w -> 7866
    //   7847: new java/lang/StringBuilder
    //   7850: dup
    //   7851: aload #13
    //   7853: iconst_0
    //   7854: aaload
    //   7855: iconst_4
    //   7856: aaload
    //   7857: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   7860: invokespecial <init> : (Ljava/lang/String;)V
    //   7863: invokevirtual toString : ()Ljava/lang/String;
    //   7866: goto_w -> 7873
    //   7871: aload #18
    //   7873: astore #18
    //   7875: new java/lang/StringBuilder
    //   7878: dup
    //   7879: ldc_w '<input type=hidden name='
    //   7882: invokespecial <init> : (Ljava/lang/String;)V
    //   7885: aload_1
    //   7886: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7889: ldc_w '_type id='
    //   7892: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7895: aload_1
    //   7896: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7899: ldc_w '_type value=combox>'
    //   7902: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7905: invokevirtual toString : ()Ljava/lang/String;
    //   7908: astore #14
    //   7910: ldc ''
    //   7912: astore #10
    //   7914: aload #13
    //   7916: iconst_0
    //   7917: aaload
    //   7918: bipush #6
    //   7920: aaload
    //   7921: astore #11
    //   7923: aload #11
    //   7925: ifnonnull -> 7933
    //   7928: goto_w -> 7950
    //   7933: aload #11
    //   7935: invokevirtual trim : ()Ljava/lang/String;
    //   7938: invokevirtual length : ()I
    //   7941: iconst_1
    //   7942: if_icmplt -> 7950
    //   7945: goto_w -> 7955
    //   7950: goto_w -> 46733
    //   7955: aload #11
    //   7957: ldc_w '*'
    //   7960: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   7963: ifne -> 7971
    //   7966: goto_w -> 8014
    //   7971: aload #11
    //   7973: aload #11
    //   7975: ldc_w '.*['
    //   7978: invokevirtual indexOf : (Ljava/lang/String;)I
    //   7981: iconst_3
    //   7982: iadd
    //   7983: aload #11
    //   7985: invokevirtual length : ()I
    //   7988: iconst_1
    //   7989: isub
    //   7990: invokevirtual substring : (II)Ljava/lang/String;
    //   7993: astore #20
    //   7995: new com/js/oa/userdb/bean/BaseSetEJBBean
    //   7998: dup
    //   7999: invokespecial <init> : ()V
    //   8002: aload #20
    //   8004: invokevirtual getValue : (Ljava/lang/String;)Ljava/lang/String;
    //   8007: astore #11
    //   8009: goto_w -> 8274
    //   8014: aload #11
    //   8016: ldc_w '#[interface:'
    //   8019: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   8022: ifne -> 8030
    //   8025: goto_w -> 8274
    //   8030: ldc ''
    //   8032: aload #18
    //   8034: invokevirtual equals : (Ljava/lang/Object;)Z
    //   8037: ifne -> 8045
    //   8040: goto_w -> 8265
    //   8045: aload #9
    //   8047: invokeinterface getSession : ()Ljavax/servlet/http/HttpSession;
    //   8052: astore #20
    //   8054: new java/util/HashMap
    //   8057: dup
    //   8058: invokespecial <init> : ()V
    //   8061: astore #21
    //   8063: aload #21
    //   8065: ldc_w 'tableId'
    //   8068: aload #9
    //   8070: ldc_w 'tableId'
    //   8073: invokeinterface getParameter : (Ljava/lang/String;)Ljava/lang/String;
    //   8078: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8083: pop
    //   8084: aload #21
    //   8086: ldc_w 'processId'
    //   8089: aload #9
    //   8091: ldc_w 'processId'
    //   8094: invokeinterface getParameter : (Ljava/lang/String;)Ljava/lang/String;
    //   8099: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8104: pop
    //   8105: aload #21
    //   8107: ldc_w 'userId'
    //   8110: aload #20
    //   8112: ldc_w 'userId'
    //   8115: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   8120: invokevirtual toString : ()Ljava/lang/String;
    //   8123: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8128: pop
    //   8129: aload #21
    //   8131: ldc_w 'userName'
    //   8134: aload #20
    //   8136: ldc_w 'userName'
    //   8139: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   8144: invokevirtual toString : ()Ljava/lang/String;
    //   8147: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8152: pop
    //   8153: aload #21
    //   8155: ldc_w 'orgId'
    //   8158: aload #20
    //   8160: ldc_w 'orgId'
    //   8163: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   8168: invokevirtual toString : ()Ljava/lang/String;
    //   8171: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8176: pop
    //   8177: aload #21
    //   8179: ldc_w 'orgName'
    //   8182: aload #20
    //   8184: ldc_w 'orgName'
    //   8187: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   8192: invokevirtual toString : ()Ljava/lang/String;
    //   8195: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8200: pop
    //   8201: aload #21
    //   8203: ldc_w 'corpId'
    //   8206: aload #20
    //   8208: ldc_w 'orgName'
    //   8211: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   8216: invokevirtual toString : ()Ljava/lang/String;
    //   8219: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8224: pop
    //   8225: aload #21
    //   8227: ldc_w 'userAccount'
    //   8230: aload #20
    //   8232: ldc_w 'userAccount'
    //   8235: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   8240: invokevirtual toString : ()Ljava/lang/String;
    //   8243: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   8248: pop
    //   8249: aload #11
    //   8251: aload #21
    //   8253: aload #9
    //   8255: invokestatic getKeyValue : (Ljava/lang/String;Ljava/util/Map;Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
    //   8258: astore #11
    //   8260: goto_w -> 8274
    //   8265: aload #11
    //   8267: aload #18
    //   8269: invokestatic getShowContext : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   8272: astore #11
    //   8274: aload #11
    //   8276: ldc_w ';'
    //   8279: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   8282: astore #12
    //   8284: aload #4
    //   8286: ifnonnull -> 8294
    //   8289: goto_w -> 10018
    //   8294: aload #4
    //   8296: new java/lang/StringBuilder
    //   8299: dup
    //   8300: ldc_w ','
    //   8303: invokespecial <init> : (Ljava/lang/String;)V
    //   8306: aload #13
    //   8308: iconst_0
    //   8309: aaload
    //   8310: iconst_0
    //   8311: aaload
    //   8312: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8315: ldc_w ','
    //   8318: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8321: invokevirtual toString : ()Ljava/lang/String;
    //   8324: invokevirtual indexOf : (Ljava/lang/String;)I
    //   8327: iflt -> 8335
    //   8330: goto_w -> 8376
    //   8335: aload #4
    //   8337: new java/lang/StringBuilder
    //   8340: dup
    //   8341: ldc_w ','
    //   8344: invokespecial <init> : (Ljava/lang/String;)V
    //   8347: aload #13
    //   8349: iconst_0
    //   8350: aaload
    //   8351: iconst_5
    //   8352: aaload
    //   8353: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8356: ldc_w ','
    //   8359: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8362: invokevirtual toString : ()Ljava/lang/String;
    //   8365: invokevirtual indexOf : (Ljava/lang/String;)I
    //   8368: ifge -> 8376
    //   8371: goto_w -> 10018
    //   8376: aload #11
    //   8378: ldc_w '@'
    //   8381: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   8384: ifne -> 8392
    //   8387: goto_w -> 8881
    //   8392: aload #11
    //   8394: aload #11
    //   8396: ldc_w ']['
    //   8399: invokevirtual indexOf : (Ljava/lang/String;)I
    //   8402: iconst_2
    //   8403: iadd
    //   8404: aload #11
    //   8406: invokevirtual length : ()I
    //   8409: iconst_1
    //   8410: isub
    //   8411: invokevirtual substring : (II)Ljava/lang/String;
    //   8414: astore #20
    //   8416: aconst_null
    //   8417: checkcast [[Ljava/lang/String;
    //   8420: astore #21
    //   8422: aload #16
    //   8424: new java/lang/StringBuilder
    //   8427: dup
    //   8428: ldc 'select '
    //   8430: invokespecial <init> : (Ljava/lang/String;)V
    //   8433: aload #20
    //   8435: iconst_0
    //   8436: aload #20
    //   8438: ldc_w '.'
    //   8441: invokevirtual indexOf : (Ljava/lang/String;)I
    //   8444: invokevirtual substring : (II)Ljava/lang/String;
    //   8447: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8450: ldc_w '_id,'
    //   8453: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8456: aload #20
    //   8458: aload #20
    //   8460: ldc_w '.'
    //   8463: invokevirtual indexOf : (Ljava/lang/String;)I
    //   8466: iconst_1
    //   8467: iadd
    //   8468: aload #20
    //   8470: invokevirtual length : ()I
    //   8473: invokevirtual substring : (II)Ljava/lang/String;
    //   8476: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8479: ldc ' from '
    //   8481: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8484: aload #20
    //   8486: iconst_0
    //   8487: aload #20
    //   8489: ldc_w '.'
    //   8492: invokevirtual indexOf : (Ljava/lang/String;)I
    //   8495: invokevirtual substring : (II)Ljava/lang/String;
    //   8498: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8501: invokevirtual toString : ()Ljava/lang/String;
    //   8504: invokevirtual executeQueryToStrArr2 : (Ljava/lang/String;)[[Ljava/lang/String;
    //   8507: astore #21
    //   8509: goto_w -> 8521
    //   8514: astore #22
    //   8516: goto_w -> 8521
    //   8521: aload #21
    //   8523: ifnonnull -> 8531
    //   8526: goto_w -> 8876
    //   8531: new java/lang/StringBuilder
    //   8534: dup
    //   8535: ldc_w 'if(document.getElementById(''
    //   8538: invokespecial <init> : (Ljava/lang/String;)V
    //   8541: aload #13
    //   8543: iconst_0
    //   8544: aaload
    //   8545: iconst_0
    //   8546: aaload
    //   8547: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8550: ldc_w '-'
    //   8553: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8556: aload_1
    //   8557: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8560: ldc_w ''))\\n{\\ndocument.getElementById(''
    //   8563: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8566: aload #13
    //   8568: iconst_0
    //   8569: aaload
    //   8570: iconst_0
    //   8571: aaload
    //   8572: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8575: ldc_w '-'
    //   8578: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8581: aload_1
    //   8582: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8585: ldc_w '').innerHTML=''
    //   8588: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8591: aload #14
    //   8593: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8596: ldc_w '';}'
    //   8599: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8602: invokevirtual toString : ()Ljava/lang/String;
    //   8605: astore #10
    //   8607: iconst_0
    //   8608: istore #22
    //   8610: goto_w -> 8863
    //   8615: new java/lang/StringBuilder
    //   8618: dup
    //   8619: aload #10
    //   8621: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   8624: invokespecial <init> : (Ljava/lang/String;)V
    //   8627: ldc_w 'var '
    //   8630: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8633: aload_1
    //   8634: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8637: ldc_w '_temp='<input type=checkbox style=font-size:1em; disabled id='
    //   8640: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8643: aload_1
    //   8644: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8647: ldc_w ' name='
    //   8650: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8653: aload_1
    //   8654: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8657: ldc_w ' value='
    //   8660: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8663: aload #21
    //   8665: iload #22
    //   8667: aaload
    //   8668: iconst_0
    //   8669: aaload
    //   8670: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8673: aload #18
    //   8675: new java/lang/StringBuilder
    //   8678: dup
    //   8679: aload #21
    //   8681: iload #22
    //   8683: aaload
    //   8684: iconst_0
    //   8685: aaload
    //   8686: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   8689: invokespecial <init> : (Ljava/lang/String;)V
    //   8692: ldc_w ','
    //   8695: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8698: invokevirtual toString : ()Ljava/lang/String;
    //   8701: invokevirtual indexOf : (Ljava/lang/String;)I
    //   8704: ifge -> 8712
    //   8707: goto_w -> 8720
    //   8712: ldc_w ' checked '
    //   8715: goto_w -> 8722
    //   8720: ldc ''
    //   8722: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8725: ldc_w '>';\\n'
    //   8728: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8731: invokevirtual toString : ()Ljava/lang/String;
    //   8734: astore #10
    //   8736: new java/lang/StringBuilder
    //   8739: dup
    //   8740: aload #10
    //   8742: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   8745: invokespecial <init> : (Ljava/lang/String;)V
    //   8748: ldc_w 'if(document.getElementById(''
    //   8751: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8754: aload #13
    //   8756: iconst_0
    //   8757: aaload
    //   8758: iconst_0
    //   8759: aaload
    //   8760: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8763: ldc_w '-'
    //   8766: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8769: aload_1
    //   8770: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8773: ldc_w ''))\\n{document.getElementById(''
    //   8776: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8779: aload #13
    //   8781: iconst_0
    //   8782: aaload
    //   8783: iconst_0
    //   8784: aaload
    //   8785: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8788: ldc_w '-'
    //   8791: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8794: aload_1
    //   8795: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8798: ldc_w '').innerHTML+='
    //   8801: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8804: aload_1
    //   8805: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8808: ldc_w '_temp;\\ndocument.getElementById(''
    //   8811: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8814: aload #13
    //   8816: iconst_0
    //   8817: aaload
    //   8818: iconst_0
    //   8819: aaload
    //   8820: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8823: ldc_w '-'
    //   8826: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8829: aload_1
    //   8830: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8833: ldc_w '').innerHTML+=''
    //   8836: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8839: aload #21
    //   8841: iload #22
    //   8843: aaload
    //   8844: iconst_1
    //   8845: aaload
    //   8846: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8849: ldc_w '';}'
    //   8852: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8855: invokevirtual toString : ()Ljava/lang/String;
    //   8858: astore #10
    //   8860: iinc #22, 1
    //   8863: iload #22
    //   8865: aload #21
    //   8867: arraylength
    //   8868: if_icmpge -> 8876
    //   8871: goto_w -> 8615
    //   8876: goto_w -> 10013
    //   8881: aload #11
    //   8883: ldc_w '$'
    //   8886: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   8889: ifne -> 8897
    //   8892: goto_w -> 9546
    //   8897: ldc_w 'system'
    //   8900: astore #21
    //   8902: aload #11
    //   8904: ldc_w '].$['
    //   8907: invokevirtual indexOf : (Ljava/lang/String;)I
    //   8910: ifgt -> 8918
    //   8913: goto_w -> 8963
    //   8918: aload #11
    //   8920: iconst_2
    //   8921: aload #11
    //   8923: ldc_w '].$['
    //   8926: invokevirtual indexOf : (Ljava/lang/String;)I
    //   8929: invokevirtual substring : (II)Ljava/lang/String;
    //   8932: astore #21
    //   8934: aload #11
    //   8936: aload #11
    //   8938: ldc_w '].$['
    //   8941: invokevirtual indexOf : (Ljava/lang/String;)I
    //   8944: iconst_4
    //   8945: iadd
    //   8946: aload #11
    //   8948: invokevirtual length : ()I
    //   8951: iconst_1
    //   8952: isub
    //   8953: invokevirtual substring : (II)Ljava/lang/String;
    //   8956: astore #20
    //   8958: goto_w -> 8978
    //   8963: aload #11
    //   8965: iconst_2
    //   8966: aload #11
    //   8968: invokevirtual length : ()I
    //   8971: iconst_1
    //   8972: isub
    //   8973: invokevirtual substring : (II)Ljava/lang/String;
    //   8976: astore #20
    //   8978: aload #9
    //   8980: aload #20
    //   8982: invokestatic getValueFromRequest : (Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;
    //   8985: astore #20
    //   8987: aconst_null
    //   8988: checkcast [[Ljava/lang/String;
    //   8991: astore #22
    //   8993: aconst_null
    //   8994: astore #23
    //   8996: ldc_w 'system'
    //   8999: aload #21
    //   9001: invokevirtual equals : (Ljava/lang/Object;)Z
    //   9004: ifeq -> 9012
    //   9007: goto_w -> 9116
    //   9012: new com/js/oa/userdb/util/DbOpt
    //   9015: dup
    //   9016: aload #21
    //   9018: invokespecial <init> : (Ljava/lang/String;)V
    //   9021: astore #23
    //   9023: aload #21
    //   9025: invokestatic getUserDatabaseType : (Ljava/lang/String;)Ljava/lang/String;
    //   9028: astore #24
    //   9030: aload #24
    //   9032: ldc 'oracle'
    //   9034: invokevirtual indexOf : (Ljava/lang/String;)I
    //   9037: ifge -> 9045
    //   9040: goto_w -> 9097
    //   9045: aload #21
    //   9047: invokestatic getUserDatabaseLang : (Ljava/lang/String;)Ljava/lang/String;
    //   9050: astore #25
    //   9052: ldc ''
    //   9054: aload #25
    //   9056: invokevirtual equals : (Ljava/lang/Object;)Z
    //   9059: ifeq -> 9067
    //   9062: goto_w -> 9097
    //   9067: aload #23
    //   9069: new java/lang/StringBuilder
    //   9072: dup
    //   9073: ldc_w 'ALTER SESSION SET NLS_LANGUAGE=''
    //   9076: invokespecial <init> : (Ljava/lang/String;)V
    //   9079: aload #25
    //   9081: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9084: ldc_w '''
    //   9087: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9090: invokevirtual toString : ()Ljava/lang/String;
    //   9093: invokevirtual executeUpdate : (Ljava/lang/String;)I
    //   9096: pop
    //   9097: aload #23
    //   9099: aload #20
    //   9101: invokevirtual executeQueryToStrArr2 : (Ljava/lang/String;)[[Ljava/lang/String;
    //   9104: astore #22
    //   9106: aload #23
    //   9108: invokevirtual close : ()V
    //   9111: goto_w -> 9154
    //   9116: aload #20
    //   9118: invokevirtual length : ()I
    //   9121: ifgt -> 9129
    //   9124: goto_w -> 9154
    //   9129: aload #20
    //   9131: ldc_w '@$@selValue@$@'
    //   9134: invokevirtual indexOf : (Ljava/lang/String;)I
    //   9137: iflt -> 9145
    //   9140: goto_w -> 9154
    //   9145: aload #16
    //   9147: aload #20
    //   9149: invokevirtual executeQueryToStrArr2 : (Ljava/lang/String;)[[Ljava/lang/String;
    //   9152: astore #22
    //   9154: goto_w -> 9186
    //   9159: astore #24
    //   9161: aload #23
    //   9163: ifnonnull -> 9171
    //   9166: goto_w -> 9176
    //   9171: aload #23
    //   9173: invokevirtual close : ()V
    //   9176: aload #24
    //   9178: invokevirtual printStackTrace : ()V
    //   9181: goto_w -> 9186
    //   9186: aload #22
    //   9188: ifnonnull -> 9196
    //   9191: goto_w -> 9541
    //   9196: new java/lang/StringBuilder
    //   9199: dup
    //   9200: ldc_w 'if(document.getElementById(''
    //   9203: invokespecial <init> : (Ljava/lang/String;)V
    //   9206: aload #13
    //   9208: iconst_0
    //   9209: aaload
    //   9210: iconst_0
    //   9211: aaload
    //   9212: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9215: ldc_w '-'
    //   9218: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9221: aload_1
    //   9222: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9225: ldc_w ''))\\n{\\ndocument.getElementById(''
    //   9228: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9231: aload #13
    //   9233: iconst_0
    //   9234: aaload
    //   9235: iconst_0
    //   9236: aaload
    //   9237: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9240: ldc_w '-'
    //   9243: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9246: aload_1
    //   9247: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9250: ldc_w '').innerHTML=''
    //   9253: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9256: aload #14
    //   9258: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9261: ldc_w '';}'
    //   9264: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9267: invokevirtual toString : ()Ljava/lang/String;
    //   9270: astore #10
    //   9272: iconst_0
    //   9273: istore #24
    //   9275: goto_w -> 9528
    //   9280: new java/lang/StringBuilder
    //   9283: dup
    //   9284: aload #10
    //   9286: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   9289: invokespecial <init> : (Ljava/lang/String;)V
    //   9292: ldc_w 'var '
    //   9295: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9298: aload_1
    //   9299: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9302: ldc_w '_temp='<input type=checkbox style=font-size:1em; disabled id='
    //   9305: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9308: aload_1
    //   9309: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9312: ldc_w ' name='
    //   9315: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9318: aload_1
    //   9319: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9322: ldc_w ' value='
    //   9325: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9328: aload #22
    //   9330: iload #24
    //   9332: aaload
    //   9333: iconst_0
    //   9334: aaload
    //   9335: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9338: aload #18
    //   9340: new java/lang/StringBuilder
    //   9343: dup
    //   9344: aload #22
    //   9346: iload #24
    //   9348: aaload
    //   9349: iconst_0
    //   9350: aaload
    //   9351: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   9354: invokespecial <init> : (Ljava/lang/String;)V
    //   9357: ldc_w ','
    //   9360: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9363: invokevirtual toString : ()Ljava/lang/String;
    //   9366: invokevirtual indexOf : (Ljava/lang/String;)I
    //   9369: ifge -> 9377
    //   9372: goto_w -> 9385
    //   9377: ldc_w ' checked '
    //   9380: goto_w -> 9387
    //   9385: ldc ''
    //   9387: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9390: ldc_w '>';\\n'
    //   9393: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9396: invokevirtual toString : ()Ljava/lang/String;
    //   9399: astore #10
    //   9401: new java/lang/StringBuilder
    //   9404: dup
    //   9405: aload #10
    //   9407: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   9410: invokespecial <init> : (Ljava/lang/String;)V
    //   9413: ldc_w 'if(document.getElementById(''
    //   9416: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9419: aload #13
    //   9421: iconst_0
    //   9422: aaload
    //   9423: iconst_0
    //   9424: aaload
    //   9425: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9428: ldc_w '-'
    //   9431: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9434: aload_1
    //   9435: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9438: ldc_w ''))\\n{document.getElementById(''
    //   9441: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9444: aload #13
    //   9446: iconst_0
    //   9447: aaload
    //   9448: iconst_0
    //   9449: aaload
    //   9450: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9453: ldc_w '-'
    //   9456: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9459: aload_1
    //   9460: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9463: ldc_w '').innerHTML+='
    //   9466: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9469: aload_1
    //   9470: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9473: ldc_w '_temp;\\ndocument.getElementById(''
    //   9476: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9479: aload #13
    //   9481: iconst_0
    //   9482: aaload
    //   9483: iconst_0
    //   9484: aaload
    //   9485: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9488: ldc_w '-'
    //   9491: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9494: aload_1
    //   9495: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9498: ldc_w '').innerHTML+=''
    //   9501: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9504: aload #22
    //   9506: iload #24
    //   9508: aaload
    //   9509: iconst_1
    //   9510: aaload
    //   9511: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9514: ldc_w '';}'
    //   9517: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9520: invokevirtual toString : ()Ljava/lang/String;
    //   9523: astore #10
    //   9525: iinc #24, 1
    //   9528: iload #24
    //   9530: aload #22
    //   9532: arraylength
    //   9533: if_icmpge -> 9541
    //   9536: goto_w -> 9280
    //   9541: goto_w -> 10013
    //   9546: iconst_0
    //   9547: istore #20
    //   9549: goto_w -> 9919
    //   9554: aload #12
    //   9556: iload #20
    //   9558: aaload
    //   9559: ifnonnull -> 9567
    //   9562: goto_w -> 9916
    //   9567: aload #12
    //   9569: iload #20
    //   9571: aaload
    //   9572: invokevirtual trim : ()Ljava/lang/String;
    //   9575: invokevirtual length : ()I
    //   9578: ifgt -> 9586
    //   9581: goto_w -> 9916
    //   9586: aload #12
    //   9588: iload #20
    //   9590: aaload
    //   9591: ldc_w '/'
    //   9594: invokevirtual indexOf : (Ljava/lang/String;)I
    //   9597: ifge -> 9605
    //   9600: goto_w -> 9916
    //   9605: aload #12
    //   9607: iload #20
    //   9609: aaload
    //   9610: ldc_w '/'
    //   9613: invokevirtual indexOf : (Ljava/lang/String;)I
    //   9616: aload #12
    //   9618: iload #20
    //   9620: aaload
    //   9621: invokevirtual length : ()I
    //   9624: iconst_1
    //   9625: isub
    //   9626: if_icmplt -> 9634
    //   9629: goto_w -> 9916
    //   9634: new java/lang/StringBuilder
    //   9637: dup
    //   9638: aload #10
    //   9640: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   9643: invokespecial <init> : (Ljava/lang/String;)V
    //   9646: ldc_w 'var '
    //   9649: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9652: aload_1
    //   9653: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9656: ldc_w '_temp='<input type=checkbox style=font-size:1em; disabled id='
    //   9659: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9662: aload_1
    //   9663: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9666: ldc_w ' name='
    //   9669: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9672: aload_1
    //   9673: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9676: ldc_w ' value='
    //   9679: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9682: aload #12
    //   9684: iload #20
    //   9686: aaload
    //   9687: ldc_w '/'
    //   9690: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   9693: iconst_0
    //   9694: aaload
    //   9695: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9698: new java/lang/StringBuilder
    //   9701: dup
    //   9702: ldc_w ','
    //   9705: invokespecial <init> : (Ljava/lang/String;)V
    //   9708: aload #18
    //   9710: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9713: invokevirtual toString : ()Ljava/lang/String;
    //   9716: new java/lang/StringBuilder
    //   9719: dup
    //   9720: ldc_w ','
    //   9723: invokespecial <init> : (Ljava/lang/String;)V
    //   9726: aload #12
    //   9728: iload #20
    //   9730: aaload
    //   9731: ldc_w '/'
    //   9734: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   9737: iconst_0
    //   9738: aaload
    //   9739: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9742: ldc_w ','
    //   9745: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9748: invokevirtual toString : ()Ljava/lang/String;
    //   9751: invokevirtual indexOf : (Ljava/lang/String;)I
    //   9754: ifge -> 9762
    //   9757: goto_w -> 9770
    //   9762: ldc_w ' checked '
    //   9765: goto_w -> 9772
    //   9770: ldc ''
    //   9772: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9775: ldc_w '>';\\n'
    //   9778: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9781: invokevirtual toString : ()Ljava/lang/String;
    //   9784: astore #10
    //   9786: new java/lang/StringBuilder
    //   9789: dup
    //   9790: aload #10
    //   9792: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   9795: invokespecial <init> : (Ljava/lang/String;)V
    //   9798: ldc_w 'if(document.getElementById(''
    //   9801: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9804: aload #13
    //   9806: iconst_0
    //   9807: aaload
    //   9808: iconst_0
    //   9809: aaload
    //   9810: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9813: ldc_w '-'
    //   9816: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9819: aload_1
    //   9820: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9823: ldc_w ''))\\n{document.getElementById(''
    //   9826: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9829: aload #13
    //   9831: iconst_0
    //   9832: aaload
    //   9833: iconst_0
    //   9834: aaload
    //   9835: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9838: ldc_w '-'
    //   9841: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9844: aload_1
    //   9845: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9848: ldc_w '').innerHTML+='
    //   9851: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9854: aload_1
    //   9855: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9858: ldc_w '_temp;\\ndocument.getElementById(''
    //   9861: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9864: aload #13
    //   9866: iconst_0
    //   9867: aaload
    //   9868: iconst_0
    //   9869: aaload
    //   9870: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9873: ldc_w '-'
    //   9876: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9879: aload_1
    //   9880: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9883: ldc_w '').innerHTML+=''
    //   9886: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9889: aload #12
    //   9891: iload #20
    //   9893: aaload
    //   9894: ldc_w '/'
    //   9897: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   9900: iconst_1
    //   9901: aaload
    //   9902: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9905: ldc_w '';}'
    //   9908: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9911: invokevirtual toString : ()Ljava/lang/String;
    //   9914: astore #10
    //   9916: iinc #20, 1
    //   9919: iload #20
    //   9921: aload #12
    //   9923: arraylength
    //   9924: if_icmpge -> 9932
    //   9927: goto_w -> 9554
    //   9932: new java/lang/StringBuilder
    //   9935: dup
    //   9936: ldc_w 'if(document.getElementById(''
    //   9939: invokespecial <init> : (Ljava/lang/String;)V
    //   9942: aload #13
    //   9944: iconst_0
    //   9945: aaload
    //   9946: iconst_0
    //   9947: aaload
    //   9948: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9951: ldc_w '-'
    //   9954: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9957: aload_1
    //   9958: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9961: ldc_w ''))\\n{document.getElementById(''
    //   9964: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9967: aload #13
    //   9969: iconst_0
    //   9970: aaload
    //   9971: iconst_0
    //   9972: aaload
    //   9973: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9976: ldc_w '-'
    //   9979: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9982: aload_1
    //   9983: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9986: ldc_w '').innerHTML=''
    //   9989: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9992: aload #14
    //   9994: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9997: ldc_w '';}'
    //   10000: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10003: aload #10
    //   10005: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10008: invokevirtual toString : ()Ljava/lang/String;
    //   10011: astore #10
    //   10013: goto_w -> 12294
    //   10018: aload #11
    //   10020: ldc_w '@'
    //   10023: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   10026: ifne -> 10034
    //   10029: goto_w -> 10673
    //   10034: aload #11
    //   10036: aload #11
    //   10038: ldc_w ']['
    //   10041: invokevirtual indexOf : (Ljava/lang/String;)I
    //   10044: iconst_2
    //   10045: iadd
    //   10046: aload #11
    //   10048: invokevirtual length : ()I
    //   10051: iconst_1
    //   10052: isub
    //   10053: invokevirtual substring : (II)Ljava/lang/String;
    //   10056: astore #20
    //   10058: aconst_null
    //   10059: checkcast [[Ljava/lang/String;
    //   10062: astore #21
    //   10064: aload #16
    //   10066: new java/lang/StringBuilder
    //   10069: dup
    //   10070: ldc 'select '
    //   10072: invokespecial <init> : (Ljava/lang/String;)V
    //   10075: aload #20
    //   10077: iconst_0
    //   10078: aload #20
    //   10080: ldc_w '.'
    //   10083: invokevirtual indexOf : (Ljava/lang/String;)I
    //   10086: invokevirtual substring : (II)Ljava/lang/String;
    //   10089: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10092: ldc_w '_id,'
    //   10095: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10098: aload #20
    //   10100: aload #20
    //   10102: ldc_w '.'
    //   10105: invokevirtual indexOf : (Ljava/lang/String;)I
    //   10108: iconst_1
    //   10109: iadd
    //   10110: aload #20
    //   10112: invokevirtual length : ()I
    //   10115: invokevirtual substring : (II)Ljava/lang/String;
    //   10118: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10121: ldc ' from '
    //   10123: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10126: aload #20
    //   10128: iconst_0
    //   10129: aload #20
    //   10131: ldc_w '.'
    //   10134: invokevirtual indexOf : (Ljava/lang/String;)I
    //   10137: invokevirtual substring : (II)Ljava/lang/String;
    //   10140: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10143: invokevirtual toString : ()Ljava/lang/String;
    //   10146: invokevirtual executeQueryToStrArr2 : (Ljava/lang/String;)[[Ljava/lang/String;
    //   10149: astore #21
    //   10151: goto_w -> 10163
    //   10156: astore #22
    //   10158: goto_w -> 10163
    //   10163: aload #21
    //   10165: ifnonnull -> 10173
    //   10168: goto_w -> 10668
    //   10173: new java/lang/StringBuilder
    //   10176: dup
    //   10177: ldc_w 'if(document.getElementById(''
    //   10180: invokespecial <init> : (Ljava/lang/String;)V
    //   10183: aload #13
    //   10185: iconst_0
    //   10186: aaload
    //   10187: iconst_0
    //   10188: aaload
    //   10189: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10192: ldc_w '-'
    //   10195: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10198: aload_1
    //   10199: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10202: ldc_w ''))\\n{\\ndocument.getElementById(''
    //   10205: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10208: aload #13
    //   10210: iconst_0
    //   10211: aaload
    //   10212: iconst_0
    //   10213: aaload
    //   10214: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10217: ldc_w '-'
    //   10220: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10223: aload_1
    //   10224: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10227: ldc_w '').innerHTML=''
    //   10230: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10233: aload #14
    //   10235: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10238: ldc_w '';}'
    //   10241: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10244: invokevirtual toString : ()Ljava/lang/String;
    //   10247: astore #10
    //   10249: iconst_0
    //   10250: istore #22
    //   10252: goto_w -> 10655
    //   10257: new java/lang/StringBuilder
    //   10260: dup
    //   10261: aload #10
    //   10263: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   10266: invokespecial <init> : (Ljava/lang/String;)V
    //   10269: ldc_w 'var '
    //   10272: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10275: aload_1
    //   10276: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10279: ldc_w '_temp='<input type=checkbox style=font-size:1em; id='
    //   10282: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10285: aload_1
    //   10286: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10289: ldc_w ' name='
    //   10292: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10295: aload_1
    //   10296: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10299: ldc_w ' value='
    //   10302: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10305: aload #21
    //   10307: iload #22
    //   10309: aaload
    //   10310: iconst_0
    //   10311: aaload
    //   10312: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10315: aload #18
    //   10317: new java/lang/StringBuilder
    //   10320: dup
    //   10321: aload #21
    //   10323: iload #22
    //   10325: aaload
    //   10326: iconst_0
    //   10327: aaload
    //   10328: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   10331: invokespecial <init> : (Ljava/lang/String;)V
    //   10334: ldc_w ','
    //   10337: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10340: invokevirtual toString : ()Ljava/lang/String;
    //   10343: invokevirtual indexOf : (Ljava/lang/String;)I
    //   10346: ifge -> 10354
    //   10349: goto_w -> 10362
    //   10354: ldc_w ' checked '
    //   10357: goto_w -> 10364
    //   10362: ldc ''
    //   10364: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10367: ldc_w '>';\\n'
    //   10370: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10373: invokevirtual toString : ()Ljava/lang/String;
    //   10376: astore #10
    //   10378: new java/lang/StringBuilder
    //   10381: dup
    //   10382: aload #10
    //   10384: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   10387: invokespecial <init> : (Ljava/lang/String;)V
    //   10390: ldc_w 'if(document.getElementById(''
    //   10393: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10396: aload #13
    //   10398: iconst_0
    //   10399: aaload
    //   10400: iconst_0
    //   10401: aaload
    //   10402: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10405: ldc_w '-'
    //   10408: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10411: aload_1
    //   10412: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10415: ldc_w ''))\\n{document.getElementById(''
    //   10418: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10421: aload #13
    //   10423: iconst_0
    //   10424: aaload
    //   10425: iconst_0
    //   10426: aaload
    //   10427: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10430: ldc_w '-'
    //   10433: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10436: aload_1
    //   10437: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10440: ldc_w '').innerHTML+='
    //   10443: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10446: aload_1
    //   10447: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10450: ldc_w '_temp;\\ndocument.getElementById(''
    //   10453: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10456: aload #13
    //   10458: iconst_0
    //   10459: aaload
    //   10460: iconst_0
    //   10461: aaload
    //   10462: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10465: ldc_w '-'
    //   10468: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10471: aload_1
    //   10472: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10475: ldc_w '').innerHTML+=''
    //   10478: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10481: aload #21
    //   10483: iload #22
    //   10485: aaload
    //   10486: iconst_1
    //   10487: aaload
    //   10488: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10491: aload #13
    //   10493: iconst_0
    //   10494: aaload
    //   10495: iconst_3
    //   10496: aaload
    //   10497: ldc_w '1'
    //   10500: invokevirtual equals : (Ljava/lang/Object;)Z
    //   10503: ifne -> 10511
    //   10506: goto_w -> 10636
    //   10511: iload #22
    //   10513: aload #21
    //   10515: arraylength
    //   10516: iconst_1
    //   10517: isub
    //   10518: if_icmpeq -> 10526
    //   10521: goto_w -> 10636
    //   10526: aload #4
    //   10528: new java/lang/StringBuilder
    //   10531: dup
    //   10532: ldc_w ','
    //   10535: invokespecial <init> : (Ljava/lang/String;)V
    //   10538: aload #13
    //   10540: iconst_0
    //   10541: aaload
    //   10542: iconst_0
    //   10543: aaload
    //   10544: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10547: ldc_w ','
    //   10550: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10553: invokevirtual toString : ()Ljava/lang/String;
    //   10556: invokevirtual indexOf : (Ljava/lang/String;)I
    //   10559: iflt -> 10567
    //   10562: goto_w -> 10636
    //   10567: aload #4
    //   10569: new java/lang/StringBuilder
    //   10572: dup
    //   10573: ldc_w ','
    //   10576: invokespecial <init> : (Ljava/lang/String;)V
    //   10579: aload #13
    //   10581: iconst_0
    //   10582: aaload
    //   10583: iconst_5
    //   10584: aaload
    //   10585: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10588: ldc_w ','
    //   10591: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10594: invokevirtual toString : ()Ljava/lang/String;
    //   10597: invokevirtual indexOf : (Ljava/lang/String;)I
    //   10600: iflt -> 10608
    //   10603: goto_w -> 10636
    //   10608: new java/lang/StringBuilder
    //   10611: dup
    //   10612: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   10615: invokespecial <init> : (Ljava/lang/String;)V
    //   10618: aload_1
    //   10619: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10622: ldc_w '><label class=mustFillcolor>*</label>'
    //   10625: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10628: invokevirtual toString : ()Ljava/lang/String;
    //   10631: goto_w -> 10638
    //   10636: ldc ''
    //   10638: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10641: ldc_w '';}'
    //   10644: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10647: invokevirtual toString : ()Ljava/lang/String;
    //   10650: astore #10
    //   10652: iinc #22, 1
    //   10655: iload #22
    //   10657: aload #21
    //   10659: arraylength
    //   10660: if_icmpge -> 10668
    //   10663: goto_w -> 10257
    //   10668: goto_w -> 12294
    //   10673: aload #11
    //   10675: ldc_w '$'
    //   10678: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   10681: ifne -> 10689
    //   10684: goto_w -> 11488
    //   10689: ldc_w 'system'
    //   10692: astore #21
    //   10694: aload #11
    //   10696: ldc_w '].$['
    //   10699: invokevirtual indexOf : (Ljava/lang/String;)I
    //   10702: ifgt -> 10710
    //   10705: goto_w -> 10755
    //   10710: aload #11
    //   10712: iconst_2
    //   10713: aload #11
    //   10715: ldc_w '].$['
    //   10718: invokevirtual indexOf : (Ljava/lang/String;)I
    //   10721: invokevirtual substring : (II)Ljava/lang/String;
    //   10724: astore #21
    //   10726: aload #11
    //   10728: aload #11
    //   10730: ldc_w '].$['
    //   10733: invokevirtual indexOf : (Ljava/lang/String;)I
    //   10736: iconst_4
    //   10737: iadd
    //   10738: aload #11
    //   10740: invokevirtual length : ()I
    //   10743: iconst_1
    //   10744: isub
    //   10745: invokevirtual substring : (II)Ljava/lang/String;
    //   10748: astore #20
    //   10750: goto_w -> 10770
    //   10755: aload #11
    //   10757: iconst_2
    //   10758: aload #11
    //   10760: invokevirtual length : ()I
    //   10763: iconst_1
    //   10764: isub
    //   10765: invokevirtual substring : (II)Ljava/lang/String;
    //   10768: astore #20
    //   10770: aload #9
    //   10772: aload #20
    //   10774: invokestatic getValueFromRequest : (Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;
    //   10777: astore #20
    //   10779: aconst_null
    //   10780: checkcast [[Ljava/lang/String;
    //   10783: astore #22
    //   10785: aconst_null
    //   10786: astore #23
    //   10788: ldc_w 'system'
    //   10791: aload #21
    //   10793: invokevirtual equals : (Ljava/lang/Object;)Z
    //   10796: ifeq -> 10804
    //   10799: goto_w -> 10908
    //   10804: new com/js/oa/userdb/util/DbOpt
    //   10807: dup
    //   10808: aload #21
    //   10810: invokespecial <init> : (Ljava/lang/String;)V
    //   10813: astore #23
    //   10815: aload #21
    //   10817: invokestatic getUserDatabaseType : (Ljava/lang/String;)Ljava/lang/String;
    //   10820: astore #24
    //   10822: aload #24
    //   10824: ldc 'oracle'
    //   10826: invokevirtual indexOf : (Ljava/lang/String;)I
    //   10829: ifge -> 10837
    //   10832: goto_w -> 10889
    //   10837: aload #21
    //   10839: invokestatic getUserDatabaseLang : (Ljava/lang/String;)Ljava/lang/String;
    //   10842: astore #25
    //   10844: ldc ''
    //   10846: aload #25
    //   10848: invokevirtual equals : (Ljava/lang/Object;)Z
    //   10851: ifeq -> 10859
    //   10854: goto_w -> 10889
    //   10859: aload #23
    //   10861: new java/lang/StringBuilder
    //   10864: dup
    //   10865: ldc_w 'ALTER SESSION SET NLS_LANGUAGE=''
    //   10868: invokespecial <init> : (Ljava/lang/String;)V
    //   10871: aload #25
    //   10873: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10876: ldc_w '''
    //   10879: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10882: invokevirtual toString : ()Ljava/lang/String;
    //   10885: invokevirtual executeUpdate : (Ljava/lang/String;)I
    //   10888: pop
    //   10889: aload #23
    //   10891: aload #20
    //   10893: invokevirtual executeQueryToStrArr2 : (Ljava/lang/String;)[[Ljava/lang/String;
    //   10896: astore #22
    //   10898: aload #23
    //   10900: invokevirtual close : ()V
    //   10903: goto_w -> 10946
    //   10908: aload #20
    //   10910: invokevirtual length : ()I
    //   10913: ifgt -> 10921
    //   10916: goto_w -> 10946
    //   10921: aload #20
    //   10923: ldc_w '@$@selValue@$@'
    //   10926: invokevirtual indexOf : (Ljava/lang/String;)I
    //   10929: iflt -> 10937
    //   10932: goto_w -> 10946
    //   10937: aload #16
    //   10939: aload #20
    //   10941: invokevirtual executeQueryToStrArr2 : (Ljava/lang/String;)[[Ljava/lang/String;
    //   10944: astore #22
    //   10946: goto_w -> 10978
    //   10951: astore #24
    //   10953: aload #23
    //   10955: ifnonnull -> 10963
    //   10958: goto_w -> 10968
    //   10963: aload #23
    //   10965: invokevirtual close : ()V
    //   10968: aload #24
    //   10970: invokevirtual printStackTrace : ()V
    //   10973: goto_w -> 10978
    //   10978: aload #22
    //   10980: ifnonnull -> 10988
    //   10983: goto_w -> 11483
    //   10988: new java/lang/StringBuilder
    //   10991: dup
    //   10992: ldc_w 'if(document.getElementById(''
    //   10995: invokespecial <init> : (Ljava/lang/String;)V
    //   10998: aload #13
    //   11000: iconst_0
    //   11001: aaload
    //   11002: iconst_0
    //   11003: aaload
    //   11004: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11007: ldc_w '-'
    //   11010: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11013: aload_1
    //   11014: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11017: ldc_w ''))\\n{\\ndocument.getElementById(''
    //   11020: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11023: aload #13
    //   11025: iconst_0
    //   11026: aaload
    //   11027: iconst_0
    //   11028: aaload
    //   11029: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11032: ldc_w '-'
    //   11035: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11038: aload_1
    //   11039: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11042: ldc_w '').innerHTML=''
    //   11045: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11048: aload #14
    //   11050: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11053: ldc_w '';}'
    //   11056: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11059: invokevirtual toString : ()Ljava/lang/String;
    //   11062: astore #10
    //   11064: iconst_0
    //   11065: istore #24
    //   11067: goto_w -> 11470
    //   11072: new java/lang/StringBuilder
    //   11075: dup
    //   11076: aload #10
    //   11078: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   11081: invokespecial <init> : (Ljava/lang/String;)V
    //   11084: ldc_w 'var '
    //   11087: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11090: aload_1
    //   11091: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11094: ldc_w '_temp='<input type=checkbox style=font-size:1em; id='
    //   11097: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11100: aload_1
    //   11101: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11104: ldc_w ' name='
    //   11107: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11110: aload_1
    //   11111: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11114: ldc_w ' value='
    //   11117: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11120: aload #22
    //   11122: iload #24
    //   11124: aaload
    //   11125: iconst_0
    //   11126: aaload
    //   11127: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11130: aload #18
    //   11132: new java/lang/StringBuilder
    //   11135: dup
    //   11136: aload #22
    //   11138: iload #24
    //   11140: aaload
    //   11141: iconst_0
    //   11142: aaload
    //   11143: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   11146: invokespecial <init> : (Ljava/lang/String;)V
    //   11149: ldc_w ','
    //   11152: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11155: invokevirtual toString : ()Ljava/lang/String;
    //   11158: invokevirtual indexOf : (Ljava/lang/String;)I
    //   11161: ifge -> 11169
    //   11164: goto_w -> 11177
    //   11169: ldc_w ' checked '
    //   11172: goto_w -> 11179
    //   11177: ldc ''
    //   11179: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11182: ldc_w '>';\\n'
    //   11185: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11188: invokevirtual toString : ()Ljava/lang/String;
    //   11191: astore #10
    //   11193: new java/lang/StringBuilder
    //   11196: dup
    //   11197: aload #10
    //   11199: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   11202: invokespecial <init> : (Ljava/lang/String;)V
    //   11205: ldc_w 'if(document.getElementById(''
    //   11208: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11211: aload #13
    //   11213: iconst_0
    //   11214: aaload
    //   11215: iconst_0
    //   11216: aaload
    //   11217: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11220: ldc_w '-'
    //   11223: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11226: aload_1
    //   11227: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11230: ldc_w ''))\\n{document.getElementById(''
    //   11233: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11236: aload #13
    //   11238: iconst_0
    //   11239: aaload
    //   11240: iconst_0
    //   11241: aaload
    //   11242: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11245: ldc_w '-'
    //   11248: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11251: aload_1
    //   11252: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11255: ldc_w '').innerHTML+='
    //   11258: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11261: aload_1
    //   11262: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11265: ldc_w '_temp;\\ndocument.getElementById(''
    //   11268: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11271: aload #13
    //   11273: iconst_0
    //   11274: aaload
    //   11275: iconst_0
    //   11276: aaload
    //   11277: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11280: ldc_w '-'
    //   11283: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11286: aload_1
    //   11287: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11290: ldc_w '').innerHTML+=''
    //   11293: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11296: aload #22
    //   11298: iload #24
    //   11300: aaload
    //   11301: iconst_1
    //   11302: aaload
    //   11303: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11306: aload #13
    //   11308: iconst_0
    //   11309: aaload
    //   11310: iconst_3
    //   11311: aaload
    //   11312: ldc_w '1'
    //   11315: invokevirtual equals : (Ljava/lang/Object;)Z
    //   11318: ifne -> 11326
    //   11321: goto_w -> 11451
    //   11326: iload #24
    //   11328: aload #22
    //   11330: arraylength
    //   11331: iconst_1
    //   11332: isub
    //   11333: if_icmpeq -> 11341
    //   11336: goto_w -> 11451
    //   11341: aload #4
    //   11343: new java/lang/StringBuilder
    //   11346: dup
    //   11347: ldc_w ','
    //   11350: invokespecial <init> : (Ljava/lang/String;)V
    //   11353: aload #13
    //   11355: iconst_0
    //   11356: aaload
    //   11357: iconst_0
    //   11358: aaload
    //   11359: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11362: ldc_w ','
    //   11365: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11368: invokevirtual toString : ()Ljava/lang/String;
    //   11371: invokevirtual indexOf : (Ljava/lang/String;)I
    //   11374: iflt -> 11382
    //   11377: goto_w -> 11451
    //   11382: aload #4
    //   11384: new java/lang/StringBuilder
    //   11387: dup
    //   11388: ldc_w ','
    //   11391: invokespecial <init> : (Ljava/lang/String;)V
    //   11394: aload #13
    //   11396: iconst_0
    //   11397: aaload
    //   11398: iconst_5
    //   11399: aaload
    //   11400: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11403: ldc_w ','
    //   11406: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11409: invokevirtual toString : ()Ljava/lang/String;
    //   11412: invokevirtual indexOf : (Ljava/lang/String;)I
    //   11415: iflt -> 11423
    //   11418: goto_w -> 11451
    //   11423: new java/lang/StringBuilder
    //   11426: dup
    //   11427: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   11430: invokespecial <init> : (Ljava/lang/String;)V
    //   11433: aload_1
    //   11434: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11437: ldc_w '><label class=mustFillcolor>*</label>'
    //   11440: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11443: invokevirtual toString : ()Ljava/lang/String;
    //   11446: goto_w -> 11453
    //   11451: ldc ''
    //   11453: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11456: ldc_w '';}'
    //   11459: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11462: invokevirtual toString : ()Ljava/lang/String;
    //   11465: astore #10
    //   11467: iinc #24, 1
    //   11470: iload #24
    //   11472: aload #22
    //   11474: arraylength
    //   11475: if_icmpge -> 11483
    //   11478: goto_w -> 11072
    //   11483: goto_w -> 12294
    //   11488: iconst_0
    //   11489: istore #20
    //   11491: goto_w -> 12194
    //   11496: aload #12
    //   11498: iload #20
    //   11500: aaload
    //   11501: ifnonnull -> 11509
    //   11504: goto_w -> 12191
    //   11509: aload #12
    //   11511: iload #20
    //   11513: aaload
    //   11514: invokevirtual trim : ()Ljava/lang/String;
    //   11517: invokevirtual length : ()I
    //   11520: ifgt -> 11528
    //   11523: goto_w -> 12191
    //   11528: aload #12
    //   11530: iload #20
    //   11532: aaload
    //   11533: ldc_w '/'
    //   11536: invokevirtual indexOf : (Ljava/lang/String;)I
    //   11539: ifge -> 11547
    //   11542: goto_w -> 12191
    //   11547: aload #12
    //   11549: iload #20
    //   11551: aaload
    //   11552: ldc_w '/'
    //   11555: invokevirtual indexOf : (Ljava/lang/String;)I
    //   11558: aload #12
    //   11560: iload #20
    //   11562: aaload
    //   11563: invokevirtual length : ()I
    //   11566: iconst_1
    //   11567: isub
    //   11568: if_icmplt -> 11576
    //   11571: goto_w -> 12191
    //   11576: aload #4
    //   11578: ifnonnull -> 11586
    //   11581: goto_w -> 11759
    //   11586: aload #4
    //   11588: ldc_w 'ALL'
    //   11591: invokevirtual indexOf : (Ljava/lang/String;)I
    //   11594: ifge -> 11602
    //   11597: goto_w -> 11759
    //   11602: new java/lang/StringBuilder
    //   11605: dup
    //   11606: aload #10
    //   11608: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   11611: invokespecial <init> : (Ljava/lang/String;)V
    //   11614: ldc_w 'var '
    //   11617: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11620: aload_1
    //   11621: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11624: ldc_w '_temp='<input type=checkbox style=font-size:1em; disabled id='
    //   11627: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11630: aload_1
    //   11631: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11634: ldc_w ' name='
    //   11637: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11640: aload_1
    //   11641: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11644: ldc_w ' value='
    //   11647: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11650: aload #12
    //   11652: iload #20
    //   11654: aaload
    //   11655: ldc_w '/'
    //   11658: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   11661: iconst_0
    //   11662: aaload
    //   11663: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11666: new java/lang/StringBuilder
    //   11669: dup
    //   11670: ldc_w ','
    //   11673: invokespecial <init> : (Ljava/lang/String;)V
    //   11676: aload #18
    //   11678: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11681: invokevirtual toString : ()Ljava/lang/String;
    //   11684: new java/lang/StringBuilder
    //   11687: dup
    //   11688: ldc_w ','
    //   11691: invokespecial <init> : (Ljava/lang/String;)V
    //   11694: aload #12
    //   11696: iload #20
    //   11698: aaload
    //   11699: ldc_w '/'
    //   11702: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   11705: iconst_0
    //   11706: aaload
    //   11707: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11710: ldc_w ','
    //   11713: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11716: invokevirtual toString : ()Ljava/lang/String;
    //   11719: invokevirtual indexOf : (Ljava/lang/String;)I
    //   11722: ifge -> 11730
    //   11725: goto_w -> 11738
    //   11730: ldc_w ' checked '
    //   11733: goto_w -> 11740
    //   11738: ldc ''
    //   11740: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11743: ldc_w '>';\\n'
    //   11746: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11749: invokevirtual toString : ()Ljava/lang/String;
    //   11752: astore #10
    //   11754: goto_w -> 11911
    //   11759: new java/lang/StringBuilder
    //   11762: dup
    //   11763: aload #10
    //   11765: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   11768: invokespecial <init> : (Ljava/lang/String;)V
    //   11771: ldc_w 'var '
    //   11774: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11777: aload_1
    //   11778: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11781: ldc_w '_temp='<input type=checkbox style=font-size:1em; id='
    //   11784: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11787: aload_1
    //   11788: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11791: ldc_w ' name='
    //   11794: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11797: aload_1
    //   11798: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11801: ldc_w ' value='
    //   11804: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11807: aload #12
    //   11809: iload #20
    //   11811: aaload
    //   11812: ldc_w '/'
    //   11815: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   11818: iconst_0
    //   11819: aaload
    //   11820: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11823: new java/lang/StringBuilder
    //   11826: dup
    //   11827: ldc_w ','
    //   11830: invokespecial <init> : (Ljava/lang/String;)V
    //   11833: aload #18
    //   11835: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11838: invokevirtual toString : ()Ljava/lang/String;
    //   11841: new java/lang/StringBuilder
    //   11844: dup
    //   11845: ldc_w ','
    //   11848: invokespecial <init> : (Ljava/lang/String;)V
    //   11851: aload #12
    //   11853: iload #20
    //   11855: aaload
    //   11856: ldc_w '/'
    //   11859: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   11862: iconst_0
    //   11863: aaload
    //   11864: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11867: ldc_w ','
    //   11870: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11873: invokevirtual toString : ()Ljava/lang/String;
    //   11876: invokevirtual indexOf : (Ljava/lang/String;)I
    //   11879: ifge -> 11887
    //   11882: goto_w -> 11895
    //   11887: ldc_w ' checked '
    //   11890: goto_w -> 11897
    //   11895: ldc ''
    //   11897: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11900: ldc_w '>';\\n'
    //   11903: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11906: invokevirtual toString : ()Ljava/lang/String;
    //   11909: astore #10
    //   11911: new java/lang/StringBuilder
    //   11914: dup
    //   11915: aload #10
    //   11917: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   11920: invokespecial <init> : (Ljava/lang/String;)V
    //   11923: ldc_w 'if(document.getElementById(''
    //   11926: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11929: aload #13
    //   11931: iconst_0
    //   11932: aaload
    //   11933: iconst_0
    //   11934: aaload
    //   11935: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11938: ldc_w '-'
    //   11941: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11944: aload_1
    //   11945: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11948: ldc_w ''))\\n{document.getElementById(''
    //   11951: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11954: aload #13
    //   11956: iconst_0
    //   11957: aaload
    //   11958: iconst_0
    //   11959: aaload
    //   11960: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11963: ldc_w '-'
    //   11966: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11969: aload_1
    //   11970: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11973: ldc_w '').innerHTML+='
    //   11976: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11979: aload_1
    //   11980: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11983: ldc_w '_temp;\\ndocument.getElementById(''
    //   11986: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11989: aload #13
    //   11991: iconst_0
    //   11992: aaload
    //   11993: iconst_0
    //   11994: aaload
    //   11995: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   11998: ldc_w '-'
    //   12001: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12004: aload_1
    //   12005: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12008: ldc_w '').innerHTML+=''
    //   12011: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12014: aload #12
    //   12016: iload #20
    //   12018: aaload
    //   12019: ldc_w '/'
    //   12022: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   12025: iconst_1
    //   12026: aaload
    //   12027: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12030: aload #13
    //   12032: iconst_0
    //   12033: aaload
    //   12034: iconst_3
    //   12035: aaload
    //   12036: ldc_w '1'
    //   12039: invokevirtual equals : (Ljava/lang/Object;)Z
    //   12042: ifne -> 12050
    //   12045: goto_w -> 12175
    //   12050: iload #20
    //   12052: aload #12
    //   12054: arraylength
    //   12055: iconst_1
    //   12056: isub
    //   12057: if_icmpeq -> 12065
    //   12060: goto_w -> 12175
    //   12065: aload #4
    //   12067: new java/lang/StringBuilder
    //   12070: dup
    //   12071: ldc_w ','
    //   12074: invokespecial <init> : (Ljava/lang/String;)V
    //   12077: aload #13
    //   12079: iconst_0
    //   12080: aaload
    //   12081: iconst_0
    //   12082: aaload
    //   12083: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12086: ldc_w ','
    //   12089: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12092: invokevirtual toString : ()Ljava/lang/String;
    //   12095: invokevirtual indexOf : (Ljava/lang/String;)I
    //   12098: iflt -> 12106
    //   12101: goto_w -> 12175
    //   12106: aload #4
    //   12108: new java/lang/StringBuilder
    //   12111: dup
    //   12112: ldc_w ','
    //   12115: invokespecial <init> : (Ljava/lang/String;)V
    //   12118: aload #13
    //   12120: iconst_0
    //   12121: aaload
    //   12122: iconst_5
    //   12123: aaload
    //   12124: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12127: ldc_w ','
    //   12130: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12133: invokevirtual toString : ()Ljava/lang/String;
    //   12136: invokevirtual indexOf : (Ljava/lang/String;)I
    //   12139: iflt -> 12147
    //   12142: goto_w -> 12175
    //   12147: new java/lang/StringBuilder
    //   12150: dup
    //   12151: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   12154: invokespecial <init> : (Ljava/lang/String;)V
    //   12157: aload_1
    //   12158: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12161: ldc_w '><label class=mustFillcolor>*</label>'
    //   12164: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12167: invokevirtual toString : ()Ljava/lang/String;
    //   12170: goto_w -> 12177
    //   12175: ldc ''
    //   12177: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12180: ldc_w '';}'
    //   12183: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12186: invokevirtual toString : ()Ljava/lang/String;
    //   12189: astore #10
    //   12191: iinc #20, 1
    //   12194: iload #20
    //   12196: aload #12
    //   12198: arraylength
    //   12199: if_icmpge -> 12207
    //   12202: goto_w -> 11496
    //   12207: new java/lang/StringBuilder
    //   12210: dup
    //   12211: ldc_w 'if(document.getElementById(''
    //   12214: invokespecial <init> : (Ljava/lang/String;)V
    //   12217: aload #13
    //   12219: iconst_0
    //   12220: aaload
    //   12221: iconst_0
    //   12222: aaload
    //   12223: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12226: ldc_w '-'
    //   12229: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12232: aload_1
    //   12233: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12236: ldc_w ''))\\n{'
    //   12239: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12242: ldc_w 'document.getElementById(''
    //   12245: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12248: aload #13
    //   12250: iconst_0
    //   12251: aaload
    //   12252: iconst_0
    //   12253: aaload
    //   12254: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12257: ldc_w '-'
    //   12260: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12263: aload_1
    //   12264: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12267: ldc_w '').innerHTML=''
    //   12270: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12273: aload #14
    //   12275: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12278: ldc_w '';}'
    //   12281: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12284: aload #10
    //   12286: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12289: invokevirtual toString : ()Ljava/lang/String;
    //   12292: astore #10
    //   12294: goto_w -> 46733
    //   12299: aload #18
    //   12301: ifnonnull -> 12309
    //   12304: goto_w -> 12324
    //   12309: ldc ''
    //   12311: aload #18
    //   12313: invokevirtual equals : (Ljava/lang/Object;)Z
    //   12316: ifne -> 12324
    //   12319: goto_w -> 12369
    //   12324: aload #13
    //   12326: iconst_0
    //   12327: aaload
    //   12328: iconst_4
    //   12329: aaload
    //   12330: ifnull -> 12338
    //   12333: goto_w -> 12345
    //   12338: ldc ''
    //   12340: goto_w -> 12364
    //   12345: new java/lang/StringBuilder
    //   12348: dup
    //   12349: aload #13
    //   12351: iconst_0
    //   12352: aaload
    //   12353: iconst_4
    //   12354: aaload
    //   12355: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   12358: invokespecial <init> : (Ljava/lang/String;)V
    //   12361: invokevirtual toString : ()Ljava/lang/String;
    //   12364: goto_w -> 12371
    //   12369: aload #18
    //   12371: astore #18
    //   12373: ldc_w '1'
    //   12376: aload #13
    //   12378: iconst_0
    //   12379: aaload
    //   12380: bipush #13
    //   12382: aaload
    //   12383: invokevirtual equals : (Ljava/lang/Object;)Z
    //   12386: ifne -> 12394
    //   12389: goto_w -> 12404
    //   12394: ldc_w '<div style="width:100%;float:left;white-space:nowrap;"><div style="float:left;">'
    //   12397: astore #10
    //   12399: goto_w -> 12408
    //   12404: ldc ''
    //   12406: astore #10
    //   12408: new java/lang/StringBuilder
    //   12411: dup
    //   12412: aload #10
    //   12414: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   12417: invokespecial <init> : (Ljava/lang/String;)V
    //   12420: ldc_w '<select style=width:'
    //   12423: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12426: aload #13
    //   12428: iconst_0
    //   12429: aaload
    //   12430: iconst_3
    //   12431: aaload
    //   12432: ldc_w '1'
    //   12435: invokevirtual equals : (Ljava/lang/Object;)Z
    //   12438: ifne -> 12446
    //   12441: goto_w -> 12454
    //   12446: ldc_w '92'
    //   12449: goto_w -> 12457
    //   12454: ldc_w '100'
    //   12457: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12460: ldc_w '%;font-size:1em; id='
    //   12463: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12466: aload_1
    //   12467: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12470: ldc_w ' name='
    //   12473: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12476: aload_1
    //   12477: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12480: invokevirtual toString : ()Ljava/lang/String;
    //   12483: astore #10
    //   12485: aload #13
    //   12487: iconst_0
    //   12488: aaload
    //   12489: bipush #10
    //   12491: aaload
    //   12492: invokestatic parseInt : (Ljava/lang/String;)I
    //   12495: ifgt -> 12503
    //   12498: goto_w -> 12536
    //   12503: new java/lang/StringBuilder
    //   12506: dup
    //   12507: aload #10
    //   12509: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   12512: invokespecial <init> : (Ljava/lang/String;)V
    //   12515: ldc_w ' onchange="'
    //   12518: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12521: aload_1
    //   12522: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12525: ldc_w '_onchange(this);"'
    //   12528: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12531: invokevirtual toString : ()Ljava/lang/String;
    //   12534: astore #10
    //   12536: aload #8
    //   12538: aload_1
    //   12539: invokevirtual indexOf : (Ljava/lang/String;)I
    //   12542: ifge -> 12550
    //   12545: goto_w -> 12573
    //   12550: new java/lang/StringBuilder
    //   12553: dup
    //   12554: aload #10
    //   12556: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   12559: invokespecial <init> : (Ljava/lang/String;)V
    //   12562: ldc_w ' onblur=checkSize(this); '
    //   12565: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12568: invokevirtual toString : ()Ljava/lang/String;
    //   12571: astore #10
    //   12573: new java/lang/StringBuilder
    //   12576: dup
    //   12577: aload #10
    //   12579: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   12582: invokespecial <init> : (Ljava/lang/String;)V
    //   12585: ldc_w '><option value="">==请选择==</option>'
    //   12588: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12591: invokevirtual toString : ()Ljava/lang/String;
    //   12594: astore #10
    //   12596: aload_0
    //   12597: aload #16
    //   12599: aload #13
    //   12601: iconst_0
    //   12602: aaload
    //   12603: bipush #9
    //   12605: aaload
    //   12606: aload #6
    //   12608: aload #13
    //   12610: iconst_0
    //   12611: aaload
    //   12612: iconst_5
    //   12613: aaload
    //   12614: aload #18
    //   12616: aload_2
    //   12617: aload_3
    //   12618: aload #9
    //   12620: invokespecial fieldIsFromOther : (Lcom/js/oa/userdb/util/DbOpt;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)[[Ljava/lang/String;
    //   12623: astore #20
    //   12625: aload #20
    //   12627: ifnonnull -> 12635
    //   12630: goto_w -> 13560
    //   12635: aload #4
    //   12637: ifnonnull -> 12645
    //   12640: goto_w -> 12686
    //   12645: aload #4
    //   12647: new java/lang/StringBuilder
    //   12650: dup
    //   12651: ldc_w ','
    //   12654: invokespecial <init> : (Ljava/lang/String;)V
    //   12657: aload #13
    //   12659: iconst_0
    //   12660: aaload
    //   12661: iconst_0
    //   12662: aaload
    //   12663: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12666: ldc_w ','
    //   12669: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12672: invokevirtual toString : ()Ljava/lang/String;
    //   12675: invokevirtual indexOf : (Ljava/lang/String;)I
    //   12678: iflt -> 12686
    //   12681: goto_w -> 12727
    //   12686: aload #4
    //   12688: new java/lang/StringBuilder
    //   12691: dup
    //   12692: ldc_w ','
    //   12695: invokespecial <init> : (Ljava/lang/String;)V
    //   12698: aload #13
    //   12700: iconst_0
    //   12701: aaload
    //   12702: iconst_5
    //   12703: aaload
    //   12704: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12707: ldc_w ','
    //   12710: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12713: invokevirtual toString : ()Ljava/lang/String;
    //   12716: invokevirtual indexOf : (Ljava/lang/String;)I
    //   12719: ifge -> 12727
    //   12722: goto_w -> 12939
    //   12727: ldc ''
    //   12729: astore #10
    //   12731: iconst_0
    //   12732: istore #21
    //   12734: goto_w -> 12840
    //   12739: aload #18
    //   12741: aload #20
    //   12743: iload #21
    //   12745: aaload
    //   12746: iconst_0
    //   12747: aaload
    //   12748: invokevirtual equals : (Ljava/lang/Object;)Z
    //   12751: ifne -> 12759
    //   12754: goto_w -> 12837
    //   12759: new java/lang/StringBuilder
    //   12762: dup
    //   12763: ldc_w '<input type=hidden name='
    //   12766: invokespecial <init> : (Ljava/lang/String;)V
    //   12769: aload_1
    //   12770: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12773: ldc_w ' id='
    //   12776: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12779: aload_1
    //   12780: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12783: ldc_w ' value="'
    //   12786: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12789: aload #20
    //   12791: iload #21
    //   12793: aaload
    //   12794: iconst_0
    //   12795: aaload
    //   12796: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12799: ldc_w '">'
    //   12802: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12805: invokevirtual toString : ()Ljava/lang/String;
    //   12808: astore #10
    //   12810: new java/lang/StringBuilder
    //   12813: dup
    //   12814: aload #10
    //   12816: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   12819: invokespecial <init> : (Ljava/lang/String;)V
    //   12822: aload #20
    //   12824: iload #21
    //   12826: aaload
    //   12827: iconst_1
    //   12828: aaload
    //   12829: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12832: invokevirtual toString : ()Ljava/lang/String;
    //   12835: astore #10
    //   12837: iinc #21, 1
    //   12840: iload #21
    //   12842: aload #20
    //   12844: arraylength
    //   12845: if_icmpge -> 12853
    //   12848: goto_w -> 12739
    //   12853: new java/lang/StringBuilder
    //   12856: dup
    //   12857: ldc_w 'if(document.getElementById(''
    //   12860: invokespecial <init> : (Ljava/lang/String;)V
    //   12863: aload #13
    //   12865: iconst_0
    //   12866: aaload
    //   12867: iconst_0
    //   12868: aaload
    //   12869: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12872: ldc_w '-'
    //   12875: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12878: aload_1
    //   12879: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12882: ldc_w ''))\\n{document.getElementById(''
    //   12885: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12888: aload #13
    //   12890: iconst_0
    //   12891: aaload
    //   12892: iconst_0
    //   12893: aaload
    //   12894: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12897: ldc_w '-'
    //   12900: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12903: aload_1
    //   12904: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12907: ldc_w '').innerHTML=''
    //   12910: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12913: aload #14
    //   12915: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12918: aload #10
    //   12920: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12923: ldc_w '';}'
    //   12926: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12929: invokevirtual toString : ()Ljava/lang/String;
    //   12932: astore #10
    //   12934: goto_w -> 13555
    //   12939: iconst_0
    //   12940: istore #21
    //   12942: goto_w -> 13044
    //   12947: new java/lang/StringBuilder
    //   12950: dup
    //   12951: aload #10
    //   12953: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   12956: invokespecial <init> : (Ljava/lang/String;)V
    //   12959: ldc_w '<option value="'
    //   12962: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12965: aload #20
    //   12967: iload #21
    //   12969: aaload
    //   12970: iconst_0
    //   12971: aaload
    //   12972: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12975: ldc_w '"'
    //   12978: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12981: aload #20
    //   12983: iload #21
    //   12985: aaload
    //   12986: iconst_0
    //   12987: aaload
    //   12988: aload #18
    //   12990: invokevirtual equals : (Ljava/lang/Object;)Z
    //   12993: ifne -> 13001
    //   12996: goto_w -> 13009
    //   13001: ldc_w ' selected '
    //   13004: goto_w -> 13011
    //   13009: ldc ''
    //   13011: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13014: ldc_w '>'
    //   13017: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13020: aload #20
    //   13022: iload #21
    //   13024: aaload
    //   13025: iconst_1
    //   13026: aaload
    //   13027: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13030: ldc_w '</option>'
    //   13033: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13036: invokevirtual toString : ()Ljava/lang/String;
    //   13039: astore #10
    //   13041: iinc #21, 1
    //   13044: iload #21
    //   13046: aload #20
    //   13048: arraylength
    //   13049: if_icmpge -> 13057
    //   13052: goto_w -> 12947
    //   13057: new java/lang/StringBuilder
    //   13060: dup
    //   13061: aload #10
    //   13063: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   13066: invokespecial <init> : (Ljava/lang/String;)V
    //   13069: ldc_w '</select>'
    //   13072: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13075: invokevirtual toString : ()Ljava/lang/String;
    //   13078: astore #10
    //   13080: ldc_w '1'
    //   13083: aload #13
    //   13085: iconst_0
    //   13086: aaload
    //   13087: bipush #13
    //   13089: aaload
    //   13090: invokevirtual equals : (Ljava/lang/Object;)Z
    //   13093: ifne -> 13101
    //   13096: goto_w -> 13123
    //   13101: new java/lang/StringBuilder
    //   13104: dup
    //   13105: aload #10
    //   13107: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   13110: invokespecial <init> : (Ljava/lang/String;)V
    //   13113: ldc '</div>'
    //   13115: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13118: invokevirtual toString : ()Ljava/lang/String;
    //   13121: astore #10
    //   13123: aload #13
    //   13125: iconst_0
    //   13126: aaload
    //   13127: iconst_3
    //   13128: aaload
    //   13129: ldc_w '1'
    //   13132: invokevirtual equals : (Ljava/lang/Object;)Z
    //   13135: ifne -> 13143
    //   13138: goto_w -> 13394
    //   13143: aload #4
    //   13145: new java/lang/StringBuilder
    //   13148: dup
    //   13149: ldc_w ','
    //   13152: invokespecial <init> : (Ljava/lang/String;)V
    //   13155: aload #13
    //   13157: iconst_0
    //   13158: aaload
    //   13159: iconst_0
    //   13160: aaload
    //   13161: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13164: ldc_w ','
    //   13167: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13170: invokevirtual toString : ()Ljava/lang/String;
    //   13173: invokevirtual indexOf : (Ljava/lang/String;)I
    //   13176: iflt -> 13184
    //   13179: goto_w -> 13394
    //   13184: aload #4
    //   13186: new java/lang/StringBuilder
    //   13189: dup
    //   13190: ldc_w ','
    //   13193: invokespecial <init> : (Ljava/lang/String;)V
    //   13196: aload #13
    //   13198: iconst_0
    //   13199: aaload
    //   13200: iconst_5
    //   13201: aaload
    //   13202: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13205: ldc_w ','
    //   13208: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13211: invokevirtual toString : ()Ljava/lang/String;
    //   13214: invokevirtual indexOf : (Ljava/lang/String;)I
    //   13217: iflt -> 13225
    //   13220: goto_w -> 13394
    //   13225: new java/lang/StringBuilder
    //   13228: dup
    //   13229: aload #10
    //   13231: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   13234: invokespecial <init> : (Ljava/lang/String;)V
    //   13237: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   13240: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13243: aload_1
    //   13244: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13247: ldc_w '><label class=mustFillcolor '
    //   13250: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13253: invokevirtual toString : ()Ljava/lang/String;
    //   13256: astore #10
    //   13258: ldc_w '1'
    //   13261: aload #13
    //   13263: iconst_0
    //   13264: aaload
    //   13265: bipush #13
    //   13267: aaload
    //   13268: invokevirtual equals : (Ljava/lang/Object;)Z
    //   13271: ifne -> 13279
    //   13274: goto_w -> 13348
    //   13279: aload #9
    //   13281: invokestatic isMSIE : (Ljavax/servlet/http/HttpServletRequest;)Z
    //   13284: ifne -> 13292
    //   13287: goto_w -> 13320
    //   13292: new java/lang/StringBuilder
    //   13295: dup
    //   13296: aload #10
    //   13298: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   13301: invokespecial <init> : (Ljava/lang/String;)V
    //   13304: ldc_w 'style="padding-left:15px;padding-right:2px;">'
    //   13307: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13310: invokevirtual toString : ()Ljava/lang/String;
    //   13313: astore #10
    //   13315: goto_w -> 13343
    //   13320: new java/lang/StringBuilder
    //   13323: dup
    //   13324: aload #10
    //   13326: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   13329: invokespecial <init> : (Ljava/lang/String;)V
    //   13332: ldc_w 'style="padding-left:2px;padding-right:10px;">'
    //   13335: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13338: invokevirtual toString : ()Ljava/lang/String;
    //   13341: astore #10
    //   13343: goto_w -> 13371
    //   13348: new java/lang/StringBuilder
    //   13351: dup
    //   13352: aload #10
    //   13354: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   13357: invokespecial <init> : (Ljava/lang/String;)V
    //   13360: ldc_w '>'
    //   13363: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13366: invokevirtual toString : ()Ljava/lang/String;
    //   13369: astore #10
    //   13371: new java/lang/StringBuilder
    //   13374: dup
    //   13375: aload #10
    //   13377: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   13380: invokespecial <init> : (Ljava/lang/String;)V
    //   13383: ldc_w '*</label>'
    //   13386: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13389: invokevirtual toString : ()Ljava/lang/String;
    //   13392: astore #10
    //   13394: ldc_w '1'
    //   13397: aload #13
    //   13399: iconst_0
    //   13400: aaload
    //   13401: bipush #13
    //   13403: aaload
    //   13404: invokevirtual equals : (Ljava/lang/Object;)Z
    //   13407: ifne -> 13415
    //   13410: goto_w -> 13437
    //   13415: new java/lang/StringBuilder
    //   13418: dup
    //   13419: aload #10
    //   13421: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   13424: invokespecial <init> : (Ljava/lang/String;)V
    //   13427: ldc '</div>'
    //   13429: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13432: invokevirtual toString : ()Ljava/lang/String;
    //   13435: astore #10
    //   13437: new java/lang/StringBuilder
    //   13440: dup
    //   13441: ldc_w 'if(document.getElementById(''
    //   13444: invokespecial <init> : (Ljava/lang/String;)V
    //   13447: aload #13
    //   13449: iconst_0
    //   13450: aaload
    //   13451: iconst_0
    //   13452: aaload
    //   13453: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13456: ldc_w '-'
    //   13459: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13462: aload_1
    //   13463: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13466: ldc_w ''))\\n{document.getElementById(''
    //   13469: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13472: aload #13
    //   13474: iconst_0
    //   13475: aaload
    //   13476: iconst_0
    //   13477: aaload
    //   13478: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13481: ldc_w '-'
    //   13484: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13487: aload_1
    //   13488: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13491: ldc_w '').innerHTML=''
    //   13494: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13497: aload #14
    //   13499: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13502: ldc_w '';'
    //   13505: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13508: ldc_w 'document.getElementById(''
    //   13511: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13514: aload #13
    //   13516: iconst_0
    //   13517: aaload
    //   13518: iconst_0
    //   13519: aaload
    //   13520: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13523: ldc_w '-'
    //   13526: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13529: aload_1
    //   13530: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13533: ldc_w '').innerHTML+=''
    //   13536: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13539: aload #10
    //   13541: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13544: ldc_w '';}'
    //   13547: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13550: invokevirtual toString : ()Ljava/lang/String;
    //   13553: astore #10
    //   13555: goto_w -> 46733
    //   13560: aload #13
    //   13562: iconst_0
    //   13563: aaload
    //   13564: bipush #6
    //   13566: aaload
    //   13567: astore #11
    //   13569: aload #11
    //   13571: ifnonnull -> 13579
    //   13574: goto_w -> 13596
    //   13579: aload #11
    //   13581: invokevirtual trim : ()Ljava/lang/String;
    //   13584: invokevirtual length : ()I
    //   13587: iconst_1
    //   13588: if_icmplt -> 13596
    //   13591: goto_w -> 13601
    //   13596: goto_w -> 46733
    //   13601: aload #18
    //   13603: ldc_w '@#@'
    //   13606: invokevirtual contains : (Ljava/lang/CharSequence;)Z
    //   13609: ifne -> 13617
    //   13612: goto_w -> 13664
    //   13617: new java/lang/StringBuilder
    //   13620: dup
    //   13621: aload #18
    //   13623: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   13626: invokespecial <init> : (Ljava/lang/String;)V
    //   13629: ldc_w '/'
    //   13632: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13635: aload #18
    //   13637: ldc_w '@#@'
    //   13640: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   13643: iconst_1
    //   13644: aaload
    //   13645: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13648: ldc_w ';'
    //   13651: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13654: invokevirtual toString : ()Ljava/lang/String;
    //   13657: astore #11
    //   13659: goto_w -> 14049
    //   13664: aload #11
    //   13666: ldc_w '*'
    //   13669: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   13672: ifne -> 13680
    //   13675: goto_w -> 13723
    //   13680: aload #11
    //   13682: aload #11
    //   13684: ldc_w '.*['
    //   13687: invokevirtual indexOf : (Ljava/lang/String;)I
    //   13690: iconst_3
    //   13691: iadd
    //   13692: aload #11
    //   13694: invokevirtual length : ()I
    //   13697: iconst_1
    //   13698: isub
    //   13699: invokevirtual substring : (II)Ljava/lang/String;
    //   13702: astore #21
    //   13704: new com/js/oa/userdb/bean/BaseSetEJBBean
    //   13707: dup
    //   13708: invokespecial <init> : ()V
    //   13711: aload #21
    //   13713: invokevirtual getValue : (Ljava/lang/String;)Ljava/lang/String;
    //   13716: astore #11
    //   13718: goto_w -> 14049
    //   13723: aload #11
    //   13725: ldc_w '#[interface:'
    //   13728: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   13731: ifne -> 13739
    //   13734: goto_w -> 14049
    //   13739: ldc ''
    //   13741: aload #18
    //   13743: invokevirtual equals : (Ljava/lang/Object;)Z
    //   13746: ifne -> 13754
    //   13749: goto_w -> 14040
    //   13754: aload #9
    //   13756: invokeinterface getSession : ()Ljavax/servlet/http/HttpSession;
    //   13761: astore #21
    //   13763: new java/util/HashMap
    //   13766: dup
    //   13767: invokespecial <init> : ()V
    //   13770: astore #22
    //   13772: aload #22
    //   13774: ldc_w 'tableId'
    //   13777: aload #9
    //   13779: ldc_w 'tableId'
    //   13782: invokeinterface getParameter : (Ljava/lang/String;)Ljava/lang/String;
    //   13787: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   13792: pop
    //   13793: aload #22
    //   13795: ldc_w 'processId'
    //   13798: aload #9
    //   13800: ldc_w 'processId'
    //   13803: invokeinterface getParameter : (Ljava/lang/String;)Ljava/lang/String;
    //   13808: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   13813: pop
    //   13814: aload #22
    //   13816: ldc_w 'userId'
    //   13819: aload #21
    //   13821: ldc_w 'userId'
    //   13824: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   13829: invokevirtual toString : ()Ljava/lang/String;
    //   13832: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   13837: pop
    //   13838: aload #22
    //   13840: ldc_w 'userName'
    //   13843: aload #21
    //   13845: ldc_w 'userName'
    //   13848: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   13853: invokevirtual toString : ()Ljava/lang/String;
    //   13856: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   13861: pop
    //   13862: aload #22
    //   13864: ldc_w 'orgId'
    //   13867: aload #21
    //   13869: ldc_w 'orgId'
    //   13872: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   13877: invokevirtual toString : ()Ljava/lang/String;
    //   13880: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   13885: pop
    //   13886: aload #22
    //   13888: ldc_w 'orgName'
    //   13891: aload #21
    //   13893: ldc_w 'orgName'
    //   13896: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   13901: invokevirtual toString : ()Ljava/lang/String;
    //   13904: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   13909: pop
    //   13910: aload #22
    //   13912: ldc_w 'corpId'
    //   13915: aload #21
    //   13917: ldc_w 'orgName'
    //   13920: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   13925: invokevirtual toString : ()Ljava/lang/String;
    //   13928: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   13933: pop
    //   13934: aload #22
    //   13936: ldc_w 'userAccount'
    //   13939: aload #21
    //   13941: ldc_w 'userAccount'
    //   13944: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   13949: invokevirtual toString : ()Ljava/lang/String;
    //   13952: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   13957: pop
    //   13958: aload #9
    //   13960: ldc_w 'submitPerson'
    //   13963: invokeinterface getParameter : (Ljava/lang/String;)Ljava/lang/String;
    //   13968: astore #23
    //   13970: aload #23
    //   13972: ifnonnull -> 13980
    //   13975: goto_w -> 13996
    //   13980: ldc_w 'null'
    //   13983: aload #23
    //   13985: invokevirtual equals : (Ljava/lang/Object;)Z
    //   13988: ifne -> 13996
    //   13991: goto_w -> 14011
    //   13996: aload #21
    //   13998: ldc_w 'userName'
    //   14001: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   14006: invokevirtual toString : ()Ljava/lang/String;
    //   14009: astore #23
    //   14011: aload #22
    //   14013: ldc_w 'submitPerson'
    //   14016: aload #23
    //   14018: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   14023: pop
    //   14024: aload #11
    //   14026: aload #22
    //   14028: aload #9
    //   14030: invokestatic getKeyValue : (Ljava/lang/String;Ljava/util/Map;Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
    //   14033: astore #11
    //   14035: goto_w -> 14049
    //   14040: aload #11
    //   14042: aload #18
    //   14044: invokestatic getShowContext : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   14047: astore #11
    //   14049: aload #11
    //   14051: ldc_w ';'
    //   14054: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   14057: astore #12
    //   14059: aload #4
    //   14061: ifnonnull -> 14069
    //   14064: goto_w -> 14110
    //   14069: aload #4
    //   14071: new java/lang/StringBuilder
    //   14074: dup
    //   14075: ldc_w ','
    //   14078: invokespecial <init> : (Ljava/lang/String;)V
    //   14081: aload #13
    //   14083: iconst_0
    //   14084: aaload
    //   14085: iconst_0
    //   14086: aaload
    //   14087: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14090: ldc_w ','
    //   14093: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14096: invokevirtual toString : ()Ljava/lang/String;
    //   14099: invokevirtual indexOf : (Ljava/lang/String;)I
    //   14102: iflt -> 14110
    //   14105: goto_w -> 14151
    //   14110: aload #4
    //   14112: new java/lang/StringBuilder
    //   14115: dup
    //   14116: ldc_w ','
    //   14119: invokespecial <init> : (Ljava/lang/String;)V
    //   14122: aload #13
    //   14124: iconst_0
    //   14125: aaload
    //   14126: iconst_5
    //   14127: aaload
    //   14128: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14131: ldc_w ','
    //   14134: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14137: invokevirtual toString : ()Ljava/lang/String;
    //   14140: invokevirtual indexOf : (Ljava/lang/String;)I
    //   14143: ifge -> 14151
    //   14146: goto_w -> 15265
    //   14151: ldc ''
    //   14153: astore #10
    //   14155: aload #11
    //   14157: ldc_w '@'
    //   14160: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   14163: ifne -> 14171
    //   14166: goto_w -> 14452
    //   14171: aload #11
    //   14173: aload #11
    //   14175: ldc_w ']['
    //   14178: invokevirtual indexOf : (Ljava/lang/String;)I
    //   14181: iconst_2
    //   14182: iadd
    //   14183: aload #11
    //   14185: invokevirtual length : ()I
    //   14188: iconst_1
    //   14189: isub
    //   14190: invokevirtual substring : (II)Ljava/lang/String;
    //   14193: astore #21
    //   14195: aconst_null
    //   14196: checkcast [[Ljava/lang/String;
    //   14199: astore #22
    //   14201: aload #21
    //   14203: aload #21
    //   14205: ldc_w '.'
    //   14208: invokevirtual indexOf : (Ljava/lang/String;)I
    //   14211: iconst_1
    //   14212: iadd
    //   14213: aload #21
    //   14215: invokevirtual length : ()I
    //   14218: invokevirtual substring : (II)Ljava/lang/String;
    //   14221: astore #23
    //   14223: aload #16
    //   14225: new java/lang/StringBuilder
    //   14228: dup
    //   14229: ldc 'select '
    //   14231: invokespecial <init> : (Ljava/lang/String;)V
    //   14234: aload #21
    //   14236: iconst_0
    //   14237: aload #21
    //   14239: ldc_w '.'
    //   14242: invokevirtual indexOf : (Ljava/lang/String;)I
    //   14245: invokevirtual substring : (II)Ljava/lang/String;
    //   14248: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14251: ldc_w '_id,'
    //   14254: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14257: aload #23
    //   14259: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14262: ldc ' from '
    //   14264: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14267: aload #21
    //   14269: iconst_0
    //   14270: aload #21
    //   14272: ldc_w '.'
    //   14275: invokevirtual indexOf : (Ljava/lang/String;)I
    //   14278: invokevirtual substring : (II)Ljava/lang/String;
    //   14281: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14284: ldc_w ' order by '
    //   14287: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14290: aload #23
    //   14292: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14295: invokevirtual toString : ()Ljava/lang/String;
    //   14298: invokevirtual executeQueryToStrArr2 : (Ljava/lang/String;)[[Ljava/lang/String;
    //   14301: astore #22
    //   14303: goto_w -> 14315
    //   14308: astore #23
    //   14310: goto_w -> 14315
    //   14315: aload #22
    //   14317: ifnonnull -> 14325
    //   14320: goto_w -> 14447
    //   14325: iconst_0
    //   14326: istore #23
    //   14328: goto_w -> 14434
    //   14333: aload #18
    //   14335: aload #22
    //   14337: iload #23
    //   14339: aaload
    //   14340: iconst_0
    //   14341: aaload
    //   14342: invokevirtual indexOf : (Ljava/lang/String;)I
    //   14345: ifge -> 14353
    //   14348: goto_w -> 14431
    //   14353: new java/lang/StringBuilder
    //   14356: dup
    //   14357: ldc_w '<input type=hidden name='
    //   14360: invokespecial <init> : (Ljava/lang/String;)V
    //   14363: aload_1
    //   14364: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14367: ldc_w ' id='
    //   14370: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14373: aload_1
    //   14374: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14377: ldc_w ' value="'
    //   14380: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14383: aload #22
    //   14385: iload #23
    //   14387: aaload
    //   14388: iconst_0
    //   14389: aaload
    //   14390: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14393: ldc_w '">'
    //   14396: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14399: invokevirtual toString : ()Ljava/lang/String;
    //   14402: astore #10
    //   14404: new java/lang/StringBuilder
    //   14407: dup
    //   14408: aload #10
    //   14410: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   14413: invokespecial <init> : (Ljava/lang/String;)V
    //   14416: aload #22
    //   14418: iload #23
    //   14420: aaload
    //   14421: iconst_1
    //   14422: aaload
    //   14423: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14426: invokevirtual toString : ()Ljava/lang/String;
    //   14429: astore #10
    //   14431: iinc #23, 1
    //   14434: iload #23
    //   14436: aload #22
    //   14438: arraylength
    //   14439: if_icmpge -> 14447
    //   14442: goto_w -> 14333
    //   14447: goto_w -> 15179
    //   14452: aload #11
    //   14454: ldc_w '$'
    //   14457: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   14460: ifne -> 14468
    //   14463: goto_w -> 14964
    //   14468: ldc_w 'system'
    //   14471: astore #22
    //   14473: aload #11
    //   14475: ldc_w '].$['
    //   14478: invokevirtual indexOf : (Ljava/lang/String;)I
    //   14481: ifgt -> 14489
    //   14484: goto_w -> 14534
    //   14489: aload #11
    //   14491: iconst_2
    //   14492: aload #11
    //   14494: ldc_w '].$['
    //   14497: invokevirtual indexOf : (Ljava/lang/String;)I
    //   14500: invokevirtual substring : (II)Ljava/lang/String;
    //   14503: astore #22
    //   14505: aload #11
    //   14507: aload #11
    //   14509: ldc_w '].$['
    //   14512: invokevirtual indexOf : (Ljava/lang/String;)I
    //   14515: iconst_4
    //   14516: iadd
    //   14517: aload #11
    //   14519: invokevirtual length : ()I
    //   14522: iconst_1
    //   14523: isub
    //   14524: invokevirtual substring : (II)Ljava/lang/String;
    //   14527: astore #21
    //   14529: goto_w -> 14549
    //   14534: aload #11
    //   14536: iconst_2
    //   14537: aload #11
    //   14539: invokevirtual length : ()I
    //   14542: iconst_1
    //   14543: isub
    //   14544: invokevirtual substring : (II)Ljava/lang/String;
    //   14547: astore #21
    //   14549: aload #9
    //   14551: ldc_w 'submitPerson'
    //   14554: invokeinterface getParameter : (Ljava/lang/String;)Ljava/lang/String;
    //   14559: astore #23
    //   14561: aload #23
    //   14563: ifnonnull -> 14571
    //   14566: goto_w -> 14587
    //   14571: ldc_w 'null'
    //   14574: aload #23
    //   14576: invokevirtual equals : (Ljava/lang/Object;)Z
    //   14579: ifne -> 14587
    //   14582: goto_w -> 14607
    //   14587: aload #9
    //   14589: invokeinterface getSession : ()Ljavax/servlet/http/HttpSession;
    //   14594: ldc_w 'userName'
    //   14597: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   14602: invokevirtual toString : ()Ljava/lang/String;
    //   14605: astore #23
    //   14607: aload #21
    //   14609: ldc_w '@@submitPerson@@'
    //   14612: aload #23
    //   14614: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   14617: astore #21
    //   14619: aload #9
    //   14621: aload #21
    //   14623: invokestatic getValueFromRequest : (Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;
    //   14626: astore #21
    //   14628: aconst_null
    //   14629: checkcast [[Ljava/lang/String;
    //   14632: astore #24
    //   14634: aconst_null
    //   14635: astore #25
    //   14637: ldc_w 'system'
    //   14640: aload #22
    //   14642: invokevirtual equals : (Ljava/lang/Object;)Z
    //   14645: ifeq -> 14653
    //   14648: goto_w -> 14757
    //   14653: new com/js/oa/userdb/util/DbOpt
    //   14656: dup
    //   14657: aload #22
    //   14659: invokespecial <init> : (Ljava/lang/String;)V
    //   14662: astore #25
    //   14664: aload #22
    //   14666: invokestatic getUserDatabaseType : (Ljava/lang/String;)Ljava/lang/String;
    //   14669: astore #26
    //   14671: aload #26
    //   14673: ldc 'oracle'
    //   14675: invokevirtual indexOf : (Ljava/lang/String;)I
    //   14678: ifge -> 14686
    //   14681: goto_w -> 14738
    //   14686: aload #22
    //   14688: invokestatic getUserDatabaseLang : (Ljava/lang/String;)Ljava/lang/String;
    //   14691: astore #27
    //   14693: ldc ''
    //   14695: aload #27
    //   14697: invokevirtual equals : (Ljava/lang/Object;)Z
    //   14700: ifeq -> 14708
    //   14703: goto_w -> 14738
    //   14708: aload #25
    //   14710: new java/lang/StringBuilder
    //   14713: dup
    //   14714: ldc_w 'ALTER SESSION SET NLS_LANGUAGE=''
    //   14717: invokespecial <init> : (Ljava/lang/String;)V
    //   14720: aload #27
    //   14722: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14725: ldc_w '''
    //   14728: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14731: invokevirtual toString : ()Ljava/lang/String;
    //   14734: invokevirtual executeUpdate : (Ljava/lang/String;)I
    //   14737: pop
    //   14738: aload #25
    //   14740: aload #21
    //   14742: invokevirtual executeQueryToStrArr2 : (Ljava/lang/String;)[[Ljava/lang/String;
    //   14745: astore #24
    //   14747: aload #25
    //   14749: invokevirtual close : ()V
    //   14752: goto_w -> 14795
    //   14757: aload #21
    //   14759: invokevirtual length : ()I
    //   14762: ifgt -> 14770
    //   14765: goto_w -> 14795
    //   14770: aload #21
    //   14772: ldc_w '@$@selValue@$@'
    //   14775: invokevirtual indexOf : (Ljava/lang/String;)I
    //   14778: iflt -> 14786
    //   14781: goto_w -> 14795
    //   14786: aload #16
    //   14788: aload #21
    //   14790: invokevirtual executeQueryToStrArr2 : (Ljava/lang/String;)[[Ljava/lang/String;
    //   14793: astore #24
    //   14795: goto_w -> 14827
    //   14800: astore #26
    //   14802: aload #25
    //   14804: ifnonnull -> 14812
    //   14807: goto_w -> 14817
    //   14812: aload #25
    //   14814: invokevirtual close : ()V
    //   14817: aload #26
    //   14819: invokevirtual printStackTrace : ()V
    //   14822: goto_w -> 14827
    //   14827: aload #24
    //   14829: ifnonnull -> 14837
    //   14832: goto_w -> 14959
    //   14837: iconst_0
    //   14838: istore #26
    //   14840: goto_w -> 14946
    //   14845: aload #18
    //   14847: aload #24
    //   14849: iload #26
    //   14851: aaload
    //   14852: iconst_0
    //   14853: aaload
    //   14854: invokevirtual equals : (Ljava/lang/Object;)Z
    //   14857: ifne -> 14865
    //   14860: goto_w -> 14943
    //   14865: new java/lang/StringBuilder
    //   14868: dup
    //   14869: ldc_w '<input type=hidden name='
    //   14872: invokespecial <init> : (Ljava/lang/String;)V
    //   14875: aload_1
    //   14876: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14879: ldc_w ' id='
    //   14882: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14885: aload_1
    //   14886: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14889: ldc_w ' value="'
    //   14892: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14895: aload #24
    //   14897: iload #26
    //   14899: aaload
    //   14900: iconst_0
    //   14901: aaload
    //   14902: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14905: ldc_w '">'
    //   14908: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14911: invokevirtual toString : ()Ljava/lang/String;
    //   14914: astore #10
    //   14916: new java/lang/StringBuilder
    //   14919: dup
    //   14920: aload #10
    //   14922: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   14925: invokespecial <init> : (Ljava/lang/String;)V
    //   14928: aload #24
    //   14930: iload #26
    //   14932: aaload
    //   14933: iconst_1
    //   14934: aaload
    //   14935: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   14938: invokevirtual toString : ()Ljava/lang/String;
    //   14941: astore #10
    //   14943: iinc #26, 1
    //   14946: iload #26
    //   14948: aload #24
    //   14950: arraylength
    //   14951: if_icmpge -> 14959
    //   14954: goto_w -> 14845
    //   14959: goto_w -> 15179
    //   14964: iconst_0
    //   14965: istore #21
    //   14967: goto_w -> 15166
    //   14972: aload #12
    //   14974: iload #21
    //   14976: aaload
    //   14977: ifnonnull -> 14985
    //   14980: goto_w -> 15163
    //   14985: aload #12
    //   14987: iload #21
    //   14989: aaload
    //   14990: invokevirtual trim : ()Ljava/lang/String;
    //   14993: invokevirtual length : ()I
    //   14996: ifgt -> 15004
    //   14999: goto_w -> 15163
    //   15004: aload #12
    //   15006: iload #21
    //   15008: aaload
    //   15009: ldc_w '/'
    //   15012: invokevirtual indexOf : (Ljava/lang/String;)I
    //   15015: ifge -> 15023
    //   15018: goto_w -> 15163
    //   15023: aload #12
    //   15025: iload #21
    //   15027: aaload
    //   15028: ldc_w '/'
    //   15031: invokevirtual indexOf : (Ljava/lang/String;)I
    //   15034: aload #12
    //   15036: iload #21
    //   15038: aaload
    //   15039: invokevirtual length : ()I
    //   15042: iconst_1
    //   15043: isub
    //   15044: if_icmplt -> 15052
    //   15047: goto_w -> 15163
    //   15052: aload #12
    //   15054: iload #21
    //   15056: aaload
    //   15057: ldc_w '/'
    //   15060: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   15063: iconst_0
    //   15064: aaload
    //   15065: aload #18
    //   15067: invokevirtual equals : (Ljava/lang/Object;)Z
    //   15070: ifne -> 15078
    //   15073: goto_w -> 15163
    //   15078: aload #12
    //   15080: iload #21
    //   15082: aaload
    //   15083: ldc_w '/'
    //   15086: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   15089: iconst_1
    //   15090: aaload
    //   15091: astore #10
    //   15093: new java/lang/StringBuilder
    //   15096: dup
    //   15097: aload #10
    //   15099: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   15102: invokespecial <init> : (Ljava/lang/String;)V
    //   15105: ldc_w '<input type=hidden name='
    //   15108: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15111: aload_1
    //   15112: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15115: ldc_w ' id='
    //   15118: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15121: aload_1
    //   15122: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15125: ldc_w ' value="'
    //   15128: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15131: aload #12
    //   15133: iload #21
    //   15135: aaload
    //   15136: ldc_w '/'
    //   15139: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   15142: iconst_0
    //   15143: aaload
    //   15144: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15147: ldc_w '">'
    //   15150: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15153: invokevirtual toString : ()Ljava/lang/String;
    //   15156: astore #10
    //   15158: goto_w -> 15179
    //   15163: iinc #21, 1
    //   15166: iload #21
    //   15168: aload #12
    //   15170: arraylength
    //   15171: if_icmpge -> 15179
    //   15174: goto_w -> 14972
    //   15179: new java/lang/StringBuilder
    //   15182: dup
    //   15183: ldc_w 'if(document.getElementById(''
    //   15186: invokespecial <init> : (Ljava/lang/String;)V
    //   15189: aload #13
    //   15191: iconst_0
    //   15192: aaload
    //   15193: iconst_0
    //   15194: aaload
    //   15195: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15198: ldc_w '-'
    //   15201: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15204: aload_1
    //   15205: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15208: ldc_w ''))\\n{document.getElementById(''
    //   15211: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15214: aload #13
    //   15216: iconst_0
    //   15217: aaload
    //   15218: iconst_0
    //   15219: aaload
    //   15220: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15223: ldc_w '-'
    //   15226: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15229: aload_1
    //   15230: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15233: ldc_w '').innerHTML=''
    //   15236: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15239: aload #14
    //   15241: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15244: aload #10
    //   15246: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15249: ldc_w '';}'
    //   15252: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15255: invokevirtual toString : ()Ljava/lang/String;
    //   15258: astore #10
    //   15260: goto_w -> 17758
    //   15265: aload #11
    //   15267: ldc_w '@'
    //   15270: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   15273: ifne -> 15281
    //   15276: goto_w -> 16050
    //   15281: aload #11
    //   15283: aload #11
    //   15285: ldc_w ']['
    //   15288: invokevirtual indexOf : (Ljava/lang/String;)I
    //   15291: iconst_2
    //   15292: iadd
    //   15293: aload #11
    //   15295: invokevirtual length : ()I
    //   15298: iconst_1
    //   15299: isub
    //   15300: invokevirtual substring : (II)Ljava/lang/String;
    //   15303: astore #21
    //   15305: aconst_null
    //   15306: checkcast [[Ljava/lang/String;
    //   15309: astore #22
    //   15311: aload #21
    //   15313: aload #21
    //   15315: ldc_w '.'
    //   15318: invokevirtual indexOf : (Ljava/lang/String;)I
    //   15321: iconst_1
    //   15322: iadd
    //   15323: aload #21
    //   15325: invokevirtual length : ()I
    //   15328: invokevirtual substring : (II)Ljava/lang/String;
    //   15331: astore #23
    //   15333: aload #16
    //   15335: new java/lang/StringBuilder
    //   15338: dup
    //   15339: ldc 'select '
    //   15341: invokespecial <init> : (Ljava/lang/String;)V
    //   15344: aload #21
    //   15346: iconst_0
    //   15347: aload #21
    //   15349: ldc_w '.'
    //   15352: invokevirtual indexOf : (Ljava/lang/String;)I
    //   15355: invokevirtual substring : (II)Ljava/lang/String;
    //   15358: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15361: ldc_w '_id,'
    //   15364: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15367: aload #23
    //   15369: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15372: ldc ' from '
    //   15374: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15377: aload #21
    //   15379: iconst_0
    //   15380: aload #21
    //   15382: ldc_w '.'
    //   15385: invokevirtual indexOf : (Ljava/lang/String;)I
    //   15388: invokevirtual substring : (II)Ljava/lang/String;
    //   15391: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15394: ldc_w ' order by '
    //   15397: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15400: aload #23
    //   15402: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15405: invokevirtual toString : ()Ljava/lang/String;
    //   15408: invokevirtual executeQueryToStrArr2 : (Ljava/lang/String;)[[Ljava/lang/String;
    //   15411: astore #22
    //   15413: goto_w -> 15425
    //   15418: astore #23
    //   15420: goto_w -> 15425
    //   15425: aload #22
    //   15427: ifnonnull -> 15435
    //   15430: goto_w -> 15553
    //   15435: iconst_0
    //   15436: istore #23
    //   15438: goto_w -> 15540
    //   15443: new java/lang/StringBuilder
    //   15446: dup
    //   15447: aload #10
    //   15449: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   15452: invokespecial <init> : (Ljava/lang/String;)V
    //   15455: ldc_w '<option value="'
    //   15458: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15461: aload #22
    //   15463: iload #23
    //   15465: aaload
    //   15466: iconst_0
    //   15467: aaload
    //   15468: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15471: ldc_w '"'
    //   15474: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15477: aload #22
    //   15479: iload #23
    //   15481: aaload
    //   15482: iconst_0
    //   15483: aaload
    //   15484: aload #18
    //   15486: invokevirtual equals : (Ljava/lang/Object;)Z
    //   15489: ifne -> 15497
    //   15492: goto_w -> 15505
    //   15497: ldc_w ' selected '
    //   15500: goto_w -> 15507
    //   15505: ldc ''
    //   15507: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15510: ldc_w '>'
    //   15513: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15516: aload #22
    //   15518: iload #23
    //   15520: aaload
    //   15521: iconst_1
    //   15522: aaload
    //   15523: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15526: ldc_w '</option>'
    //   15529: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15532: invokevirtual toString : ()Ljava/lang/String;
    //   15535: astore #10
    //   15537: iinc #23, 1
    //   15540: iload #23
    //   15542: aload #22
    //   15544: arraylength
    //   15545: if_icmpge -> 15553
    //   15548: goto_w -> 15443
    //   15553: new java/lang/StringBuilder
    //   15556: dup
    //   15557: aload #10
    //   15559: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   15562: invokespecial <init> : (Ljava/lang/String;)V
    //   15565: ldc_w '</select>'
    //   15568: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15571: invokevirtual toString : ()Ljava/lang/String;
    //   15574: astore #10
    //   15576: ldc_w '1'
    //   15579: aload #13
    //   15581: iconst_0
    //   15582: aaload
    //   15583: bipush #13
    //   15585: aaload
    //   15586: invokevirtual equals : (Ljava/lang/Object;)Z
    //   15589: ifne -> 15597
    //   15592: goto_w -> 15619
    //   15597: new java/lang/StringBuilder
    //   15600: dup
    //   15601: aload #10
    //   15603: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   15606: invokespecial <init> : (Ljava/lang/String;)V
    //   15609: ldc '</div>'
    //   15611: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15614: invokevirtual toString : ()Ljava/lang/String;
    //   15617: astore #10
    //   15619: aload #13
    //   15621: iconst_0
    //   15622: aaload
    //   15623: iconst_3
    //   15624: aaload
    //   15625: ldc_w '1'
    //   15628: invokevirtual equals : (Ljava/lang/Object;)Z
    //   15631: ifne -> 15639
    //   15634: goto_w -> 15890
    //   15639: aload #4
    //   15641: new java/lang/StringBuilder
    //   15644: dup
    //   15645: ldc_w ','
    //   15648: invokespecial <init> : (Ljava/lang/String;)V
    //   15651: aload #13
    //   15653: iconst_0
    //   15654: aaload
    //   15655: iconst_0
    //   15656: aaload
    //   15657: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15660: ldc_w ','
    //   15663: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15666: invokevirtual toString : ()Ljava/lang/String;
    //   15669: invokevirtual indexOf : (Ljava/lang/String;)I
    //   15672: iflt -> 15680
    //   15675: goto_w -> 15890
    //   15680: aload #4
    //   15682: new java/lang/StringBuilder
    //   15685: dup
    //   15686: ldc_w ','
    //   15689: invokespecial <init> : (Ljava/lang/String;)V
    //   15692: aload #13
    //   15694: iconst_0
    //   15695: aaload
    //   15696: iconst_5
    //   15697: aaload
    //   15698: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15701: ldc_w ','
    //   15704: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15707: invokevirtual toString : ()Ljava/lang/String;
    //   15710: invokevirtual indexOf : (Ljava/lang/String;)I
    //   15713: iflt -> 15721
    //   15716: goto_w -> 15890
    //   15721: new java/lang/StringBuilder
    //   15724: dup
    //   15725: aload #10
    //   15727: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   15730: invokespecial <init> : (Ljava/lang/String;)V
    //   15733: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   15736: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15739: aload_1
    //   15740: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15743: ldc_w '><label class=mustFillcolor '
    //   15746: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15749: invokevirtual toString : ()Ljava/lang/String;
    //   15752: astore #10
    //   15754: ldc_w '1'
    //   15757: aload #13
    //   15759: iconst_0
    //   15760: aaload
    //   15761: bipush #13
    //   15763: aaload
    //   15764: invokevirtual equals : (Ljava/lang/Object;)Z
    //   15767: ifne -> 15775
    //   15770: goto_w -> 15844
    //   15775: aload #9
    //   15777: invokestatic isMSIE : (Ljavax/servlet/http/HttpServletRequest;)Z
    //   15780: ifne -> 15788
    //   15783: goto_w -> 15816
    //   15788: new java/lang/StringBuilder
    //   15791: dup
    //   15792: aload #10
    //   15794: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   15797: invokespecial <init> : (Ljava/lang/String;)V
    //   15800: ldc_w 'style="padding-left:15px;padding-right:2px;">'
    //   15803: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15806: invokevirtual toString : ()Ljava/lang/String;
    //   15809: astore #10
    //   15811: goto_w -> 15839
    //   15816: new java/lang/StringBuilder
    //   15819: dup
    //   15820: aload #10
    //   15822: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   15825: invokespecial <init> : (Ljava/lang/String;)V
    //   15828: ldc_w 'style="padding-left:2px;padding-right:10px;">'
    //   15831: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15834: invokevirtual toString : ()Ljava/lang/String;
    //   15837: astore #10
    //   15839: goto_w -> 15867
    //   15844: new java/lang/StringBuilder
    //   15847: dup
    //   15848: aload #10
    //   15850: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   15853: invokespecial <init> : (Ljava/lang/String;)V
    //   15856: ldc_w '>'
    //   15859: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15862: invokevirtual toString : ()Ljava/lang/String;
    //   15865: astore #10
    //   15867: new java/lang/StringBuilder
    //   15870: dup
    //   15871: aload #10
    //   15873: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   15876: invokespecial <init> : (Ljava/lang/String;)V
    //   15879: ldc_w '*</label>'
    //   15882: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15885: invokevirtual toString : ()Ljava/lang/String;
    //   15888: astore #10
    //   15890: ldc_w '1'
    //   15893: aload #13
    //   15895: iconst_0
    //   15896: aaload
    //   15897: bipush #13
    //   15899: aaload
    //   15900: invokevirtual equals : (Ljava/lang/Object;)Z
    //   15903: ifne -> 15911
    //   15906: goto_w -> 15933
    //   15911: new java/lang/StringBuilder
    //   15914: dup
    //   15915: aload #10
    //   15917: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   15920: invokespecial <init> : (Ljava/lang/String;)V
    //   15923: ldc '</div>'
    //   15925: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15928: invokevirtual toString : ()Ljava/lang/String;
    //   15931: astore #10
    //   15933: new java/lang/StringBuilder
    //   15936: dup
    //   15937: ldc_w 'if(document.getElementById(''
    //   15940: invokespecial <init> : (Ljava/lang/String;)V
    //   15943: aload #13
    //   15945: iconst_0
    //   15946: aaload
    //   15947: iconst_0
    //   15948: aaload
    //   15949: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15952: ldc_w '-'
    //   15955: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15958: aload_1
    //   15959: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15962: ldc_w ''))\\n{document.getElementById(''
    //   15965: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15968: aload #13
    //   15970: iconst_0
    //   15971: aaload
    //   15972: iconst_0
    //   15973: aaload
    //   15974: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15977: ldc_w '-'
    //   15980: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15983: aload_1
    //   15984: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15987: ldc_w '').innerHTML=''
    //   15990: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15993: aload #14
    //   15995: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   15998: ldc_w '';document.getElementById(''
    //   16001: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16004: aload #13
    //   16006: iconst_0
    //   16007: aaload
    //   16008: iconst_0
    //   16009: aaload
    //   16010: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16013: ldc_w '-'
    //   16016: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16019: aload_1
    //   16020: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16023: ldc_w '').innerHTML+=''
    //   16026: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16029: aload #10
    //   16031: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16034: ldc_w '';}'
    //   16037: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16040: invokevirtual toString : ()Ljava/lang/String;
    //   16043: astore #10
    //   16045: goto_w -> 17758
    //   16050: aload #11
    //   16052: ldc_w '$'
    //   16055: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   16058: ifne -> 16066
    //   16061: goto_w -> 17050
    //   16066: ldc_w 'system'
    //   16069: astore #22
    //   16071: aload #11
    //   16073: ldc_w '].$['
    //   16076: invokevirtual indexOf : (Ljava/lang/String;)I
    //   16079: ifgt -> 16087
    //   16082: goto_w -> 16132
    //   16087: aload #11
    //   16089: iconst_2
    //   16090: aload #11
    //   16092: ldc_w '].$['
    //   16095: invokevirtual indexOf : (Ljava/lang/String;)I
    //   16098: invokevirtual substring : (II)Ljava/lang/String;
    //   16101: astore #22
    //   16103: aload #11
    //   16105: aload #11
    //   16107: ldc_w '].$['
    //   16110: invokevirtual indexOf : (Ljava/lang/String;)I
    //   16113: iconst_4
    //   16114: iadd
    //   16115: aload #11
    //   16117: invokevirtual length : ()I
    //   16120: iconst_1
    //   16121: isub
    //   16122: invokevirtual substring : (II)Ljava/lang/String;
    //   16125: astore #21
    //   16127: goto_w -> 16147
    //   16132: aload #11
    //   16134: iconst_2
    //   16135: aload #11
    //   16137: invokevirtual length : ()I
    //   16140: iconst_1
    //   16141: isub
    //   16142: invokevirtual substring : (II)Ljava/lang/String;
    //   16145: astore #21
    //   16147: aload #9
    //   16149: ldc_w 'submitPerson'
    //   16152: invokeinterface getParameter : (Ljava/lang/String;)Ljava/lang/String;
    //   16157: astore #23
    //   16159: aload #23
    //   16161: ifnonnull -> 16169
    //   16164: goto_w -> 16185
    //   16169: ldc_w 'null'
    //   16172: aload #23
    //   16174: invokevirtual equals : (Ljava/lang/Object;)Z
    //   16177: ifne -> 16185
    //   16180: goto_w -> 16205
    //   16185: aload #9
    //   16187: invokeinterface getSession : ()Ljavax/servlet/http/HttpSession;
    //   16192: ldc_w 'userName'
    //   16195: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   16200: invokevirtual toString : ()Ljava/lang/String;
    //   16203: astore #23
    //   16205: aload #21
    //   16207: ldc_w '@@submitPerson@@'
    //   16210: aload #23
    //   16212: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   16215: astore #21
    //   16217: aload #9
    //   16219: aload #21
    //   16221: invokestatic getValueFromRequest : (Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;
    //   16224: astore #21
    //   16226: aconst_null
    //   16227: checkcast [[Ljava/lang/String;
    //   16230: astore #24
    //   16232: aconst_null
    //   16233: astore #25
    //   16235: ldc_w 'system'
    //   16238: aload #22
    //   16240: invokevirtual equals : (Ljava/lang/Object;)Z
    //   16243: ifeq -> 16251
    //   16246: goto_w -> 16355
    //   16251: new com/js/oa/userdb/util/DbOpt
    //   16254: dup
    //   16255: aload #22
    //   16257: invokespecial <init> : (Ljava/lang/String;)V
    //   16260: astore #25
    //   16262: aload #22
    //   16264: invokestatic getUserDatabaseType : (Ljava/lang/String;)Ljava/lang/String;
    //   16267: astore #26
    //   16269: aload #26
    //   16271: ldc 'oracle'
    //   16273: invokevirtual indexOf : (Ljava/lang/String;)I
    //   16276: ifge -> 16284
    //   16279: goto_w -> 16336
    //   16284: aload #22
    //   16286: invokestatic getUserDatabaseLang : (Ljava/lang/String;)Ljava/lang/String;
    //   16289: astore #27
    //   16291: ldc ''
    //   16293: aload #27
    //   16295: invokevirtual equals : (Ljava/lang/Object;)Z
    //   16298: ifeq -> 16306
    //   16301: goto_w -> 16336
    //   16306: aload #25
    //   16308: new java/lang/StringBuilder
    //   16311: dup
    //   16312: ldc_w 'ALTER SESSION SET NLS_LANGUAGE=''
    //   16315: invokespecial <init> : (Ljava/lang/String;)V
    //   16318: aload #27
    //   16320: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16323: ldc_w '''
    //   16326: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16329: invokevirtual toString : ()Ljava/lang/String;
    //   16332: invokevirtual executeUpdate : (Ljava/lang/String;)I
    //   16335: pop
    //   16336: aload #25
    //   16338: aload #21
    //   16340: invokevirtual executeQueryToStrArr2 : (Ljava/lang/String;)[[Ljava/lang/String;
    //   16343: astore #24
    //   16345: aload #25
    //   16347: invokevirtual close : ()V
    //   16350: goto_w -> 16393
    //   16355: aload #21
    //   16357: invokevirtual length : ()I
    //   16360: ifgt -> 16368
    //   16363: goto_w -> 16393
    //   16368: aload #21
    //   16370: ldc_w '@$@selValue@$@'
    //   16373: invokevirtual indexOf : (Ljava/lang/String;)I
    //   16376: iflt -> 16384
    //   16379: goto_w -> 16393
    //   16384: aload #16
    //   16386: aload #21
    //   16388: invokevirtual executeQueryToStrArr2 : (Ljava/lang/String;)[[Ljava/lang/String;
    //   16391: astore #24
    //   16393: goto_w -> 16425
    //   16398: astore #26
    //   16400: aload #25
    //   16402: ifnonnull -> 16410
    //   16405: goto_w -> 16415
    //   16410: aload #25
    //   16412: invokevirtual close : ()V
    //   16415: aload #26
    //   16417: invokevirtual printStackTrace : ()V
    //   16420: goto_w -> 16425
    //   16425: aload #24
    //   16427: ifnonnull -> 16435
    //   16430: goto_w -> 16553
    //   16435: iconst_0
    //   16436: istore #26
    //   16438: goto_w -> 16540
    //   16443: new java/lang/StringBuilder
    //   16446: dup
    //   16447: aload #10
    //   16449: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   16452: invokespecial <init> : (Ljava/lang/String;)V
    //   16455: ldc_w '<option value="'
    //   16458: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16461: aload #24
    //   16463: iload #26
    //   16465: aaload
    //   16466: iconst_0
    //   16467: aaload
    //   16468: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16471: ldc_w '"'
    //   16474: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16477: aload #24
    //   16479: iload #26
    //   16481: aaload
    //   16482: iconst_0
    //   16483: aaload
    //   16484: aload #18
    //   16486: invokevirtual equals : (Ljava/lang/Object;)Z
    //   16489: ifne -> 16497
    //   16492: goto_w -> 16505
    //   16497: ldc_w ' selected '
    //   16500: goto_w -> 16507
    //   16505: ldc ''
    //   16507: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16510: ldc_w '>'
    //   16513: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16516: aload #24
    //   16518: iload #26
    //   16520: aaload
    //   16521: iconst_1
    //   16522: aaload
    //   16523: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16526: ldc_w '</option>'
    //   16529: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16532: invokevirtual toString : ()Ljava/lang/String;
    //   16535: astore #10
    //   16537: iinc #26, 1
    //   16540: iload #26
    //   16542: aload #24
    //   16544: arraylength
    //   16545: if_icmpge -> 16553
    //   16548: goto_w -> 16443
    //   16553: new java/lang/StringBuilder
    //   16556: dup
    //   16557: aload #10
    //   16559: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   16562: invokespecial <init> : (Ljava/lang/String;)V
    //   16565: ldc_w '</select>'
    //   16568: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16571: invokevirtual toString : ()Ljava/lang/String;
    //   16574: astore #10
    //   16576: ldc_w '1'
    //   16579: aload #13
    //   16581: iconst_0
    //   16582: aaload
    //   16583: bipush #13
    //   16585: aaload
    //   16586: invokevirtual equals : (Ljava/lang/Object;)Z
    //   16589: ifne -> 16597
    //   16592: goto_w -> 16619
    //   16597: new java/lang/StringBuilder
    //   16600: dup
    //   16601: aload #10
    //   16603: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   16606: invokespecial <init> : (Ljava/lang/String;)V
    //   16609: ldc '</div>'
    //   16611: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16614: invokevirtual toString : ()Ljava/lang/String;
    //   16617: astore #10
    //   16619: aload #13
    //   16621: iconst_0
    //   16622: aaload
    //   16623: iconst_3
    //   16624: aaload
    //   16625: ldc_w '1'
    //   16628: invokevirtual equals : (Ljava/lang/Object;)Z
    //   16631: ifne -> 16639
    //   16634: goto_w -> 16890
    //   16639: aload #4
    //   16641: new java/lang/StringBuilder
    //   16644: dup
    //   16645: ldc_w ','
    //   16648: invokespecial <init> : (Ljava/lang/String;)V
    //   16651: aload #13
    //   16653: iconst_0
    //   16654: aaload
    //   16655: iconst_0
    //   16656: aaload
    //   16657: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16660: ldc_w ','
    //   16663: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16666: invokevirtual toString : ()Ljava/lang/String;
    //   16669: invokevirtual indexOf : (Ljava/lang/String;)I
    //   16672: iflt -> 16680
    //   16675: goto_w -> 16890
    //   16680: aload #4
    //   16682: new java/lang/StringBuilder
    //   16685: dup
    //   16686: ldc_w ','
    //   16689: invokespecial <init> : (Ljava/lang/String;)V
    //   16692: aload #13
    //   16694: iconst_0
    //   16695: aaload
    //   16696: iconst_5
    //   16697: aaload
    //   16698: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16701: ldc_w ','
    //   16704: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16707: invokevirtual toString : ()Ljava/lang/String;
    //   16710: invokevirtual indexOf : (Ljava/lang/String;)I
    //   16713: iflt -> 16721
    //   16716: goto_w -> 16890
    //   16721: new java/lang/StringBuilder
    //   16724: dup
    //   16725: aload #10
    //   16727: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   16730: invokespecial <init> : (Ljava/lang/String;)V
    //   16733: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   16736: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16739: aload_1
    //   16740: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16743: ldc_w '><label class=mustFillcolor '
    //   16746: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16749: invokevirtual toString : ()Ljava/lang/String;
    //   16752: astore #10
    //   16754: ldc_w '1'
    //   16757: aload #13
    //   16759: iconst_0
    //   16760: aaload
    //   16761: bipush #13
    //   16763: aaload
    //   16764: invokevirtual equals : (Ljava/lang/Object;)Z
    //   16767: ifne -> 16775
    //   16770: goto_w -> 16844
    //   16775: aload #9
    //   16777: invokestatic isMSIE : (Ljavax/servlet/http/HttpServletRequest;)Z
    //   16780: ifne -> 16788
    //   16783: goto_w -> 16816
    //   16788: new java/lang/StringBuilder
    //   16791: dup
    //   16792: aload #10
    //   16794: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   16797: invokespecial <init> : (Ljava/lang/String;)V
    //   16800: ldc_w 'style="padding-left:15px;padding-right:2px;">'
    //   16803: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16806: invokevirtual toString : ()Ljava/lang/String;
    //   16809: astore #10
    //   16811: goto_w -> 16839
    //   16816: new java/lang/StringBuilder
    //   16819: dup
    //   16820: aload #10
    //   16822: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   16825: invokespecial <init> : (Ljava/lang/String;)V
    //   16828: ldc_w 'style="padding-left:2px;padding-right:10px;">'
    //   16831: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16834: invokevirtual toString : ()Ljava/lang/String;
    //   16837: astore #10
    //   16839: goto_w -> 16867
    //   16844: new java/lang/StringBuilder
    //   16847: dup
    //   16848: aload #10
    //   16850: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   16853: invokespecial <init> : (Ljava/lang/String;)V
    //   16856: ldc_w '>'
    //   16859: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16862: invokevirtual toString : ()Ljava/lang/String;
    //   16865: astore #10
    //   16867: new java/lang/StringBuilder
    //   16870: dup
    //   16871: aload #10
    //   16873: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   16876: invokespecial <init> : (Ljava/lang/String;)V
    //   16879: ldc_w '*</label>'
    //   16882: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16885: invokevirtual toString : ()Ljava/lang/String;
    //   16888: astore #10
    //   16890: ldc_w '1'
    //   16893: aload #13
    //   16895: iconst_0
    //   16896: aaload
    //   16897: bipush #13
    //   16899: aaload
    //   16900: invokevirtual equals : (Ljava/lang/Object;)Z
    //   16903: ifne -> 16911
    //   16906: goto_w -> 16933
    //   16911: new java/lang/StringBuilder
    //   16914: dup
    //   16915: aload #10
    //   16917: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   16920: invokespecial <init> : (Ljava/lang/String;)V
    //   16923: ldc '</div>'
    //   16925: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16928: invokevirtual toString : ()Ljava/lang/String;
    //   16931: astore #10
    //   16933: new java/lang/StringBuilder
    //   16936: dup
    //   16937: ldc_w 'if(document.getElementById(''
    //   16940: invokespecial <init> : (Ljava/lang/String;)V
    //   16943: aload #13
    //   16945: iconst_0
    //   16946: aaload
    //   16947: iconst_0
    //   16948: aaload
    //   16949: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16952: ldc_w '-'
    //   16955: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16958: aload_1
    //   16959: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16962: ldc_w ''))\\n{document.getElementById(''
    //   16965: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16968: aload #13
    //   16970: iconst_0
    //   16971: aaload
    //   16972: iconst_0
    //   16973: aaload
    //   16974: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16977: ldc_w '-'
    //   16980: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16983: aload_1
    //   16984: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16987: ldc_w '').innerHTML=''
    //   16990: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16993: aload #14
    //   16995: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16998: ldc_w '';document.getElementById(''
    //   17001: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17004: aload #13
    //   17006: iconst_0
    //   17007: aaload
    //   17008: iconst_0
    //   17009: aaload
    //   17010: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17013: ldc_w '-'
    //   17016: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17019: aload_1
    //   17020: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17023: ldc_w '').innerHTML+=''
    //   17026: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17029: aload #10
    //   17031: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17034: ldc_w '';}'
    //   17037: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17040: invokevirtual toString : ()Ljava/lang/String;
    //   17043: astore #10
    //   17045: goto_w -> 17758
    //   17050: iconst_0
    //   17051: istore #21
    //   17053: goto_w -> 17253
    //   17058: aload #12
    //   17060: iload #21
    //   17062: aaload
    //   17063: ifnonnull -> 17071
    //   17066: goto_w -> 17250
    //   17071: aload #12
    //   17073: iload #21
    //   17075: aaload
    //   17076: invokevirtual trim : ()Ljava/lang/String;
    //   17079: invokevirtual length : ()I
    //   17082: ifgt -> 17090
    //   17085: goto_w -> 17250
    //   17090: aload #12
    //   17092: iload #21
    //   17094: aaload
    //   17095: ldc_w '/'
    //   17098: invokevirtual indexOf : (Ljava/lang/String;)I
    //   17101: ifge -> 17109
    //   17104: goto_w -> 17250
    //   17109: aload #12
    //   17111: iload #21
    //   17113: aaload
    //   17114: ldc_w '/'
    //   17117: invokevirtual indexOf : (Ljava/lang/String;)I
    //   17120: aload #12
    //   17122: iload #21
    //   17124: aaload
    //   17125: invokevirtual length : ()I
    //   17128: iconst_1
    //   17129: isub
    //   17130: if_icmplt -> 17138
    //   17133: goto_w -> 17250
    //   17138: new java/lang/StringBuilder
    //   17141: dup
    //   17142: aload #10
    //   17144: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   17147: invokespecial <init> : (Ljava/lang/String;)V
    //   17150: ldc_w '<option value="'
    //   17153: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17156: aload #12
    //   17158: iload #21
    //   17160: aaload
    //   17161: ldc_w '/'
    //   17164: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   17167: iconst_0
    //   17168: aaload
    //   17169: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17172: ldc_w '"'
    //   17175: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17178: aload #12
    //   17180: iload #21
    //   17182: aaload
    //   17183: ldc_w '/'
    //   17186: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   17189: iconst_0
    //   17190: aaload
    //   17191: aload #18
    //   17193: invokevirtual equals : (Ljava/lang/Object;)Z
    //   17196: ifne -> 17204
    //   17199: goto_w -> 17212
    //   17204: ldc_w ' selected '
    //   17207: goto_w -> 17214
    //   17212: ldc ''
    //   17214: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17217: ldc_w '>'
    //   17220: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17223: aload #12
    //   17225: iload #21
    //   17227: aaload
    //   17228: ldc_w '/'
    //   17231: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   17234: iconst_1
    //   17235: aaload
    //   17236: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17239: ldc_w '</option>'
    //   17242: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17245: invokevirtual toString : ()Ljava/lang/String;
    //   17248: astore #10
    //   17250: iinc #21, 1
    //   17253: iload #21
    //   17255: aload #12
    //   17257: arraylength
    //   17258: if_icmpge -> 17266
    //   17261: goto_w -> 17058
    //   17266: new java/lang/StringBuilder
    //   17269: dup
    //   17270: aload #10
    //   17272: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   17275: invokespecial <init> : (Ljava/lang/String;)V
    //   17278: ldc_w '</select>'
    //   17281: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17284: invokevirtual toString : ()Ljava/lang/String;
    //   17287: astore #10
    //   17289: ldc_w '1'
    //   17292: aload #13
    //   17294: iconst_0
    //   17295: aaload
    //   17296: bipush #13
    //   17298: aaload
    //   17299: invokevirtual equals : (Ljava/lang/Object;)Z
    //   17302: ifne -> 17310
    //   17305: goto_w -> 17332
    //   17310: new java/lang/StringBuilder
    //   17313: dup
    //   17314: aload #10
    //   17316: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   17319: invokespecial <init> : (Ljava/lang/String;)V
    //   17322: ldc '</div>'
    //   17324: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17327: invokevirtual toString : ()Ljava/lang/String;
    //   17330: astore #10
    //   17332: aload #13
    //   17334: iconst_0
    //   17335: aaload
    //   17336: iconst_3
    //   17337: aaload
    //   17338: ldc_w '1'
    //   17341: invokevirtual equals : (Ljava/lang/Object;)Z
    //   17344: ifne -> 17352
    //   17347: goto_w -> 17603
    //   17352: aload #4
    //   17354: new java/lang/StringBuilder
    //   17357: dup
    //   17358: ldc_w ','
    //   17361: invokespecial <init> : (Ljava/lang/String;)V
    //   17364: aload #13
    //   17366: iconst_0
    //   17367: aaload
    //   17368: iconst_0
    //   17369: aaload
    //   17370: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17373: ldc_w ','
    //   17376: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17379: invokevirtual toString : ()Ljava/lang/String;
    //   17382: invokevirtual indexOf : (Ljava/lang/String;)I
    //   17385: iflt -> 17393
    //   17388: goto_w -> 17603
    //   17393: aload #4
    //   17395: new java/lang/StringBuilder
    //   17398: dup
    //   17399: ldc_w ','
    //   17402: invokespecial <init> : (Ljava/lang/String;)V
    //   17405: aload #13
    //   17407: iconst_0
    //   17408: aaload
    //   17409: iconst_5
    //   17410: aaload
    //   17411: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17414: ldc_w ','
    //   17417: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17420: invokevirtual toString : ()Ljava/lang/String;
    //   17423: invokevirtual indexOf : (Ljava/lang/String;)I
    //   17426: iflt -> 17434
    //   17429: goto_w -> 17603
    //   17434: new java/lang/StringBuilder
    //   17437: dup
    //   17438: aload #10
    //   17440: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   17443: invokespecial <init> : (Ljava/lang/String;)V
    //   17446: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   17449: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17452: aload_1
    //   17453: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17456: ldc_w '><label class=mustFillcolor '
    //   17459: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17462: invokevirtual toString : ()Ljava/lang/String;
    //   17465: astore #10
    //   17467: ldc_w '1'
    //   17470: aload #13
    //   17472: iconst_0
    //   17473: aaload
    //   17474: bipush #13
    //   17476: aaload
    //   17477: invokevirtual equals : (Ljava/lang/Object;)Z
    //   17480: ifne -> 17488
    //   17483: goto_w -> 17557
    //   17488: aload #9
    //   17490: invokestatic isMSIE : (Ljavax/servlet/http/HttpServletRequest;)Z
    //   17493: ifne -> 17501
    //   17496: goto_w -> 17529
    //   17501: new java/lang/StringBuilder
    //   17504: dup
    //   17505: aload #10
    //   17507: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   17510: invokespecial <init> : (Ljava/lang/String;)V
    //   17513: ldc_w 'style="padding-left:15px;padding-right:2px;">'
    //   17516: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17519: invokevirtual toString : ()Ljava/lang/String;
    //   17522: astore #10
    //   17524: goto_w -> 17552
    //   17529: new java/lang/StringBuilder
    //   17532: dup
    //   17533: aload #10
    //   17535: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   17538: invokespecial <init> : (Ljava/lang/String;)V
    //   17541: ldc_w 'style="padding-left:2px;padding-right:10px;">'
    //   17544: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17547: invokevirtual toString : ()Ljava/lang/String;
    //   17550: astore #10
    //   17552: goto_w -> 17580
    //   17557: new java/lang/StringBuilder
    //   17560: dup
    //   17561: aload #10
    //   17563: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   17566: invokespecial <init> : (Ljava/lang/String;)V
    //   17569: ldc_w '>'
    //   17572: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17575: invokevirtual toString : ()Ljava/lang/String;
    //   17578: astore #10
    //   17580: new java/lang/StringBuilder
    //   17583: dup
    //   17584: aload #10
    //   17586: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   17589: invokespecial <init> : (Ljava/lang/String;)V
    //   17592: ldc_w '*</label>'
    //   17595: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17598: invokevirtual toString : ()Ljava/lang/String;
    //   17601: astore #10
    //   17603: ldc_w '1'
    //   17606: aload #13
    //   17608: iconst_0
    //   17609: aaload
    //   17610: bipush #13
    //   17612: aaload
    //   17613: invokevirtual equals : (Ljava/lang/Object;)Z
    //   17616: ifne -> 17624
    //   17619: goto_w -> 17646
    //   17624: new java/lang/StringBuilder
    //   17627: dup
    //   17628: aload #10
    //   17630: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   17633: invokespecial <init> : (Ljava/lang/String;)V
    //   17636: ldc '</div>'
    //   17638: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17641: invokevirtual toString : ()Ljava/lang/String;
    //   17644: astore #10
    //   17646: new java/lang/StringBuilder
    //   17649: dup
    //   17650: ldc_w 'if(document.getElementById(''
    //   17653: invokespecial <init> : (Ljava/lang/String;)V
    //   17656: aload #13
    //   17658: iconst_0
    //   17659: aaload
    //   17660: iconst_0
    //   17661: aaload
    //   17662: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17665: ldc_w '-'
    //   17668: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17671: aload_1
    //   17672: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17675: ldc_w ''))\\n{document.getElementById(''
    //   17678: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17681: aload #13
    //   17683: iconst_0
    //   17684: aaload
    //   17685: iconst_0
    //   17686: aaload
    //   17687: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17690: ldc_w '-'
    //   17693: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17696: aload_1
    //   17697: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17700: ldc_w '').innerHTML=''
    //   17703: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17706: aload #14
    //   17708: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17711: ldc_w '';document.getElementById(''
    //   17714: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17717: aload #13
    //   17719: iconst_0
    //   17720: aaload
    //   17721: iconst_0
    //   17722: aaload
    //   17723: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17726: ldc_w '-'
    //   17729: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17732: aload_1
    //   17733: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17736: ldc_w '').innerHTML+=''
    //   17739: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17742: aload #10
    //   17744: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17747: ldc_w '';}'
    //   17750: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17753: invokevirtual toString : ()Ljava/lang/String;
    //   17756: astore #10
    //   17758: goto_w -> 46733
    //   17763: new java/lang/StringBuilder
    //   17766: dup
    //   17767: ldc_w '<input type=hidden name='
    //   17770: invokespecial <init> : (Ljava/lang/String;)V
    //   17773: aload_1
    //   17774: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17777: ldc_w '_type id='
    //   17780: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17783: aload_1
    //   17784: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17787: ldc_w '_type value=jsdate>'
    //   17790: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17793: invokevirtual toString : ()Ljava/lang/String;
    //   17796: astore #14
    //   17798: aload #4
    //   17800: ifnonnull -> 17808
    //   17803: goto_w -> 18064
    //   17808: aload #4
    //   17810: new java/lang/StringBuilder
    //   17813: dup
    //   17814: ldc_w ','
    //   17817: invokespecial <init> : (Ljava/lang/String;)V
    //   17820: aload #13
    //   17822: iconst_0
    //   17823: aaload
    //   17824: iconst_0
    //   17825: aaload
    //   17826: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17829: ldc_w ','
    //   17832: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17835: invokevirtual toString : ()Ljava/lang/String;
    //   17838: invokevirtual indexOf : (Ljava/lang/String;)I
    //   17841: iflt -> 17849
    //   17844: goto_w -> 17890
    //   17849: aload #4
    //   17851: new java/lang/StringBuilder
    //   17854: dup
    //   17855: ldc_w ','
    //   17858: invokespecial <init> : (Ljava/lang/String;)V
    //   17861: aload #13
    //   17863: iconst_0
    //   17864: aaload
    //   17865: iconst_5
    //   17866: aaload
    //   17867: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17870: ldc_w ','
    //   17873: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17876: invokevirtual toString : ()Ljava/lang/String;
    //   17879: invokevirtual indexOf : (Ljava/lang/String;)I
    //   17882: ifge -> 17890
    //   17885: goto_w -> 18064
    //   17890: new java/lang/StringBuilder
    //   17893: dup
    //   17894: aload #14
    //   17896: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   17899: invokespecial <init> : (Ljava/lang/String;)V
    //   17902: ldc_w '<span>'
    //   17905: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17908: aload #18
    //   17910: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17913: ldc_w '</span>'
    //   17916: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17919: invokevirtual toString : ()Ljava/lang/String;
    //   17922: astore #14
    //   17924: new java/lang/StringBuilder
    //   17927: dup
    //   17928: aload #14
    //   17930: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   17933: invokespecial <init> : (Ljava/lang/String;)V
    //   17936: ldc_w '<input type=hidden name='
    //   17939: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17942: aload_1
    //   17943: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17946: ldc_w ' id='
    //   17949: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17952: aload_1
    //   17953: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17956: ldc_w ' value=''
    //   17959: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17962: aload #18
    //   17964: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17967: ldc_w '' />'
    //   17970: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17973: invokevirtual toString : ()Ljava/lang/String;
    //   17976: astore #14
    //   17978: new java/lang/StringBuilder
    //   17981: dup
    //   17982: ldc_w 'if(document.getElementById(''
    //   17985: invokespecial <init> : (Ljava/lang/String;)V
    //   17988: aload #13
    //   17990: iconst_0
    //   17991: aaload
    //   17992: iconst_0
    //   17993: aaload
    //   17994: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   17997: ldc_w '-'
    //   18000: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18003: aload_1
    //   18004: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18007: ldc_w ''))\\n{document.getElementById(''
    //   18010: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18013: aload #13
    //   18015: iconst_0
    //   18016: aaload
    //   18017: iconst_0
    //   18018: aaload
    //   18019: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18022: ldc_w '-'
    //   18025: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18028: aload_1
    //   18029: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18032: ldc_w '').innerHTML="'
    //   18035: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18038: aload #14
    //   18040: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18043: aload #10
    //   18045: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18048: ldc_w '";}'
    //   18051: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18054: invokevirtual toString : ()Ljava/lang/String;
    //   18057: astore #10
    //   18059: goto_w -> 18337
    //   18064: new java/lang/StringBuilder
    //   18067: dup
    //   18068: aload #14
    //   18070: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   18073: invokespecial <init> : (Ljava/lang/String;)V
    //   18076: ldc_w '<input readonly=\"readonly\" type=text style=\"width:75px;font-size:1em;\"  class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) name='
    //   18079: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18082: aload_1
    //   18083: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18086: ldc_w ' id='
    //   18089: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18092: aload_1
    //   18093: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18096: ldc_w ' onclick=setDay(this) value=''
    //   18099: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18102: aload #18
    //   18104: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18107: ldc_w '' >'
    //   18110: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18113: aload #13
    //   18115: iconst_0
    //   18116: aaload
    //   18117: iconst_3
    //   18118: aaload
    //   18119: ldc_w '1'
    //   18122: invokevirtual equals : (Ljava/lang/Object;)Z
    //   18125: ifne -> 18133
    //   18128: goto_w -> 18243
    //   18133: aload #4
    //   18135: new java/lang/StringBuilder
    //   18138: dup
    //   18139: ldc_w ','
    //   18142: invokespecial <init> : (Ljava/lang/String;)V
    //   18145: aload #13
    //   18147: iconst_0
    //   18148: aaload
    //   18149: iconst_0
    //   18150: aaload
    //   18151: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18154: ldc_w ','
    //   18157: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18160: invokevirtual toString : ()Ljava/lang/String;
    //   18163: invokevirtual indexOf : (Ljava/lang/String;)I
    //   18166: iflt -> 18174
    //   18169: goto_w -> 18243
    //   18174: aload #4
    //   18176: new java/lang/StringBuilder
    //   18179: dup
    //   18180: ldc_w ','
    //   18183: invokespecial <init> : (Ljava/lang/String;)V
    //   18186: aload #13
    //   18188: iconst_0
    //   18189: aaload
    //   18190: iconst_5
    //   18191: aaload
    //   18192: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18195: ldc_w ','
    //   18198: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18201: invokevirtual toString : ()Ljava/lang/String;
    //   18204: invokevirtual indexOf : (Ljava/lang/String;)I
    //   18207: iflt -> 18215
    //   18210: goto_w -> 18243
    //   18215: new java/lang/StringBuilder
    //   18218: dup
    //   18219: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   18222: invokespecial <init> : (Ljava/lang/String;)V
    //   18225: aload_1
    //   18226: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18229: ldc_w '><label class=mustFillcolor>*</label>'
    //   18232: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18235: invokevirtual toString : ()Ljava/lang/String;
    //   18238: goto_w -> 18245
    //   18243: ldc ''
    //   18245: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18248: invokevirtual toString : ()Ljava/lang/String;
    //   18251: astore #14
    //   18253: new java/lang/StringBuilder
    //   18256: dup
    //   18257: aload #10
    //   18259: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   18262: invokespecial <init> : (Ljava/lang/String;)V
    //   18265: ldc_w 'if(document.getElementById(''
    //   18268: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18271: aload #13
    //   18273: iconst_0
    //   18274: aaload
    //   18275: iconst_0
    //   18276: aaload
    //   18277: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18280: ldc_w '-'
    //   18283: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18286: aload_1
    //   18287: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18290: ldc_w ''))\\n{document.getElementById(''
    //   18293: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18296: aload #13
    //   18298: iconst_0
    //   18299: aaload
    //   18300: iconst_0
    //   18301: aaload
    //   18302: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18305: ldc_w '-'
    //   18308: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18311: aload_1
    //   18312: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18315: ldc_w '').innerHTML="'
    //   18318: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18321: aload #14
    //   18323: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18326: ldc_w '";}'
    //   18329: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18332: invokevirtual toString : ()Ljava/lang/String;
    //   18335: astore #10
    //   18337: ldc ''
    //   18339: aload #13
    //   18341: iconst_0
    //   18342: aaload
    //   18343: iconst_4
    //   18344: aaload
    //   18345: invokevirtual equals : (Ljava/lang/Object;)Z
    //   18348: ifeq -> 18356
    //   18351: goto_w -> 18447
    //   18356: ldc_w 'null'
    //   18359: new java/lang/StringBuilder
    //   18362: dup
    //   18363: aload #13
    //   18365: iconst_0
    //   18366: aaload
    //   18367: iconst_4
    //   18368: aaload
    //   18369: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   18372: invokespecial <init> : (Ljava/lang/String;)V
    //   18375: invokevirtual toString : ()Ljava/lang/String;
    //   18378: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   18381: ifeq -> 18389
    //   18384: goto_w -> 18447
    //   18389: aload #13
    //   18391: iconst_0
    //   18392: aaload
    //   18393: iconst_4
    //   18394: aaload
    //   18395: ldc_w ').beforeDate('
    //   18398: invokevirtual contains : (Ljava/lang/CharSequence;)Z
    //   18401: ifne -> 18409
    //   18404: goto_w -> 18447
    //   18409: new java/lang/StringBuilder
    //   18412: dup
    //   18413: aload #10
    //   18415: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   18418: invokespecial <init> : (Ljava/lang/String;)V
    //   18421: ldc_w '\\ndocument.getElementById('dateCompare').value=document.getElementById('dateCompare').value+'{'
    //   18424: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18427: aload #13
    //   18429: iconst_0
    //   18430: aaload
    //   18431: iconst_4
    //   18432: aaload
    //   18433: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18436: ldc_w '}';\\n'
    //   18439: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18442: invokevirtual toString : ()Ljava/lang/String;
    //   18445: astore #10
    //   18447: goto_w -> 46733
    //   18452: new java/lang/StringBuilder
    //   18455: dup
    //   18456: ldc_w '<input type=hidden name='
    //   18459: invokespecial <init> : (Ljava/lang/String;)V
    //   18462: aload_1
    //   18463: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18466: ldc_w '_type id='
    //   18469: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18472: aload_1
    //   18473: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18476: ldc_w '_type value=jstime>'
    //   18479: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18482: invokevirtual toString : ()Ljava/lang/String;
    //   18485: astore #14
    //   18487: new java/text/SimpleDateFormat
    //   18490: dup
    //   18491: ldc_w 'HH:mm:ss'
    //   18494: invokespecial <init> : (Ljava/lang/String;)V
    //   18497: aload #15
    //   18499: invokevirtual format : (Ljava/util/Date;)Ljava/lang/String;
    //   18502: astore #21
    //   18504: aload #18
    //   18506: ifnonnull -> 18514
    //   18509: goto_w -> 18529
    //   18514: ldc ''
    //   18516: aload #18
    //   18518: invokevirtual equals : (Ljava/lang/Object;)Z
    //   18521: ifne -> 18529
    //   18524: goto_w -> 18533
    //   18529: ldc ''
    //   18531: astore #18
    //   18533: aload #4
    //   18535: ifnonnull -> 18543
    //   18538: goto_w -> 18768
    //   18543: aload #4
    //   18545: new java/lang/StringBuilder
    //   18548: dup
    //   18549: ldc_w ','
    //   18552: invokespecial <init> : (Ljava/lang/String;)V
    //   18555: aload #13
    //   18557: iconst_0
    //   18558: aaload
    //   18559: iconst_0
    //   18560: aaload
    //   18561: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18564: ldc_w ','
    //   18567: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18570: invokevirtual toString : ()Ljava/lang/String;
    //   18573: invokevirtual indexOf : (Ljava/lang/String;)I
    //   18576: iflt -> 18584
    //   18579: goto_w -> 18625
    //   18584: aload #4
    //   18586: new java/lang/StringBuilder
    //   18589: dup
    //   18590: ldc_w ','
    //   18593: invokespecial <init> : (Ljava/lang/String;)V
    //   18596: aload #13
    //   18598: iconst_0
    //   18599: aaload
    //   18600: iconst_5
    //   18601: aaload
    //   18602: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18605: ldc_w ','
    //   18608: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18611: invokevirtual toString : ()Ljava/lang/String;
    //   18614: invokevirtual indexOf : (Ljava/lang/String;)I
    //   18617: ifge -> 18625
    //   18620: goto_w -> 18768
    //   18625: new java/lang/StringBuilder
    //   18628: dup
    //   18629: ldc_w '<span>'
    //   18632: invokespecial <init> : (Ljava/lang/String;)V
    //   18635: aload #18
    //   18637: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18640: ldc_w '</span><input type=hidden id='
    //   18643: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18646: aload_1
    //   18647: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18650: ldc_w ' name='
    //   18653: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18656: aload_1
    //   18657: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18660: ldc_w ' value=\"'
    //   18663: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18666: aload #18
    //   18668: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18671: ldc_w '\" />'
    //   18674: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18677: invokevirtual toString : ()Ljava/lang/String;
    //   18680: astore #10
    //   18682: new java/lang/StringBuilder
    //   18685: dup
    //   18686: ldc_w 'if(document.getElementById(''
    //   18689: invokespecial <init> : (Ljava/lang/String;)V
    //   18692: aload #13
    //   18694: iconst_0
    //   18695: aaload
    //   18696: iconst_0
    //   18697: aaload
    //   18698: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18701: ldc_w '-'
    //   18704: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18707: aload_1
    //   18708: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18711: ldc_w ''))\\n{document.getElementById(''
    //   18714: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18717: aload #13
    //   18719: iconst_0
    //   18720: aaload
    //   18721: iconst_0
    //   18722: aaload
    //   18723: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18726: ldc_w '-'
    //   18729: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18732: aload_1
    //   18733: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18736: ldc_w '').innerHTML=''
    //   18739: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18742: aload #14
    //   18744: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18747: aload #10
    //   18749: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18752: ldc_w '';}'
    //   18755: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18758: invokevirtual toString : ()Ljava/lang/String;
    //   18761: astore #10
    //   18763: goto_w -> 19157
    //   18768: new java/lang/StringBuilder
    //   18771: dup
    //   18772: ldc_w '<INPUT readonly=\"readonly\" type=text class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) id='
    //   18775: invokespecial <init> : (Ljava/lang/String;)V
    //   18778: aload_1
    //   18779: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18782: ldc_w ' name='
    //   18785: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18788: aload_1
    //   18789: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18792: ldc_w ' onclick='showDateTimeBar(this, \"h:n:s\", \"'
    //   18795: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18798: aload #15
    //   18800: invokevirtual getMonth : ()I
    //   18803: iconst_1
    //   18804: iadd
    //   18805: invokestatic valueOf : (I)Ljava/lang/String;
    //   18808: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18811: ldc_w '/'
    //   18814: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18817: aload #15
    //   18819: invokevirtual getDate : ()I
    //   18822: iconst_1
    //   18823: iadd
    //   18824: invokestatic valueOf : (I)Ljava/lang/String;
    //   18827: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18830: ldc_w '/'
    //   18833: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18836: aload #15
    //   18838: invokevirtual getYear : ()I
    //   18841: sipush #1900
    //   18844: iadd
    //   18845: invokestatic valueOf : (I)Ljava/lang/String;
    //   18848: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18851: ldc_w ' '
    //   18854: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18857: aload #18
    //   18859: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18862: ldc_w '\", '
    //   18865: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18868: ldc_w 'test, \"hello world\")' name='
    //   18871: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18874: aload_1
    //   18875: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18878: ldc_w ' id='
    //   18881: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18884: aload_1
    //   18885: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18888: ldc_w ' value=\"'
    //   18891: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18894: aload #18
    //   18896: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18899: ldc_w '\" style=\"background:url('/jsoa/eform/images/down_arrow.gif');font-size:1em;\">'
    //   18902: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18905: aload #13
    //   18907: iconst_0
    //   18908: aaload
    //   18909: iconst_3
    //   18910: aaload
    //   18911: ldc_w '1'
    //   18914: invokevirtual equals : (Ljava/lang/Object;)Z
    //   18917: ifne -> 18925
    //   18920: goto_w -> 19035
    //   18925: aload #4
    //   18927: new java/lang/StringBuilder
    //   18930: dup
    //   18931: ldc_w ','
    //   18934: invokespecial <init> : (Ljava/lang/String;)V
    //   18937: aload #13
    //   18939: iconst_0
    //   18940: aaload
    //   18941: iconst_0
    //   18942: aaload
    //   18943: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18946: ldc_w ','
    //   18949: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18952: invokevirtual toString : ()Ljava/lang/String;
    //   18955: invokevirtual indexOf : (Ljava/lang/String;)I
    //   18958: iflt -> 18966
    //   18961: goto_w -> 19035
    //   18966: aload #4
    //   18968: new java/lang/StringBuilder
    //   18971: dup
    //   18972: ldc_w ','
    //   18975: invokespecial <init> : (Ljava/lang/String;)V
    //   18978: aload #13
    //   18980: iconst_0
    //   18981: aaload
    //   18982: iconst_5
    //   18983: aaload
    //   18984: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18987: ldc_w ','
    //   18990: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   18993: invokevirtual toString : ()Ljava/lang/String;
    //   18996: invokevirtual indexOf : (Ljava/lang/String;)I
    //   18999: iflt -> 19007
    //   19002: goto_w -> 19035
    //   19007: new java/lang/StringBuilder
    //   19010: dup
    //   19011: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   19014: invokespecial <init> : (Ljava/lang/String;)V
    //   19017: aload_1
    //   19018: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19021: ldc_w '><label class=mustFillcolor>*</label>'
    //   19024: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19027: invokevirtual toString : ()Ljava/lang/String;
    //   19030: goto_w -> 19037
    //   19035: ldc ''
    //   19037: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19040: invokevirtual toString : ()Ljava/lang/String;
    //   19043: astore #10
    //   19045: new java/lang/StringBuilder
    //   19048: dup
    //   19049: ldc_w 'if(document.getElementById(''
    //   19052: invokespecial <init> : (Ljava/lang/String;)V
    //   19055: aload #13
    //   19057: iconst_0
    //   19058: aaload
    //   19059: iconst_0
    //   19060: aaload
    //   19061: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19064: ldc_w '-'
    //   19067: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19070: aload_1
    //   19071: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19074: ldc_w ''))\\n{document.getElementById(''
    //   19077: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19080: aload #13
    //   19082: iconst_0
    //   19083: aaload
    //   19084: iconst_0
    //   19085: aaload
    //   19086: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19089: ldc_w '-'
    //   19092: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19095: aload_1
    //   19096: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19099: ldc_w '').innerHTML=''
    //   19102: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19105: aload #14
    //   19107: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19110: ldc_w '';document.getElementById(''
    //   19113: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19116: aload #13
    //   19118: iconst_0
    //   19119: aaload
    //   19120: iconst_0
    //   19121: aaload
    //   19122: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19125: ldc_w '-'
    //   19128: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19131: aload_1
    //   19132: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19135: ldc_w '').innerHTML+="'
    //   19138: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19141: aload #10
    //   19143: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19146: ldc_w '";}'
    //   19149: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19152: invokevirtual toString : ()Ljava/lang/String;
    //   19155: astore #10
    //   19157: goto_w -> 46733
    //   19162: ldc ''
    //   19164: astore #22
    //   19166: new java/lang/StringBuilder
    //   19169: dup
    //   19170: ldc_w '<input type=hidden name='
    //   19173: invokespecial <init> : (Ljava/lang/String;)V
    //   19176: aload_1
    //   19177: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19180: ldc_w '_type id='
    //   19183: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19186: aload_1
    //   19187: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19190: ldc_w '_type value=datetime>'
    //   19193: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19196: invokevirtual toString : ()Ljava/lang/String;
    //   19199: astore #14
    //   19201: aload #4
    //   19203: ifnonnull -> 19211
    //   19206: goto_w -> 20442
    //   19211: aload #4
    //   19213: new java/lang/StringBuilder
    //   19216: dup
    //   19217: ldc_w ','
    //   19220: invokespecial <init> : (Ljava/lang/String;)V
    //   19223: aload #13
    //   19225: iconst_0
    //   19226: aaload
    //   19227: iconst_0
    //   19228: aaload
    //   19229: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19232: ldc_w ','
    //   19235: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19238: invokevirtual toString : ()Ljava/lang/String;
    //   19241: invokevirtual indexOf : (Ljava/lang/String;)I
    //   19244: iflt -> 19252
    //   19247: goto_w -> 19293
    //   19252: aload #4
    //   19254: new java/lang/StringBuilder
    //   19257: dup
    //   19258: ldc_w ','
    //   19261: invokespecial <init> : (Ljava/lang/String;)V
    //   19264: aload #13
    //   19266: iconst_0
    //   19267: aaload
    //   19268: iconst_5
    //   19269: aaload
    //   19270: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19273: ldc_w ','
    //   19276: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19279: invokevirtual toString : ()Ljava/lang/String;
    //   19282: invokevirtual indexOf : (Ljava/lang/String;)I
    //   19285: ifge -> 19293
    //   19288: goto_w -> 20442
    //   19293: ldc ''
    //   19295: astore #23
    //   19297: ldc ''
    //   19299: astore #24
    //   19301: ldc ''
    //   19303: astore #25
    //   19305: ldc ''
    //   19307: astore #26
    //   19309: ldc_w '::'
    //   19312: invokevirtual trim : ()Ljava/lang/String;
    //   19315: aload #18
    //   19317: invokevirtual equals : (Ljava/lang/Object;)Z
    //   19320: ifeq -> 19328
    //   19323: goto_w -> 20111
    //   19328: ldc_w '00:00:00'
    //   19331: invokevirtual trim : ()Ljava/lang/String;
    //   19334: aload #18
    //   19336: invokevirtual equals : (Ljava/lang/Object;)Z
    //   19339: ifeq -> 19347
    //   19342: goto_w -> 20111
    //   19347: ldc_w '0:0:00'
    //   19350: invokevirtual trim : ()Ljava/lang/String;
    //   19353: aload #18
    //   19355: invokevirtual equals : (Ljava/lang/Object;)Z
    //   19358: ifeq -> 19366
    //   19361: goto_w -> 20111
    //   19366: aload #18
    //   19368: ifnonnull -> 19376
    //   19371: goto_w -> 19728
    //   19376: ldc_w 'null'
    //   19379: aload #18
    //   19381: invokevirtual equals : (Ljava/lang/Object;)Z
    //   19384: ifeq -> 19392
    //   19387: goto_w -> 19728
    //   19392: ldc ''
    //   19394: aload #18
    //   19396: invokevirtual equals : (Ljava/lang/Object;)Z
    //   19399: ifne -> 19407
    //   19402: goto_w -> 19416
    //   19407: ldc ''
    //   19409: astore #22
    //   19411: goto_w -> 19723
    //   19416: aload #18
    //   19418: ldc_w ' ::'
    //   19421: invokevirtual indexOf : (Ljava/lang/String;)I
    //   19424: ifgt -> 19432
    //   19427: goto_w -> 19468
    //   19432: aload #18
    //   19434: iconst_0
    //   19435: aload #18
    //   19437: ldc_w ' '
    //   19440: invokevirtual indexOf : (Ljava/lang/String;)I
    //   19443: invokevirtual substring : (II)Ljava/lang/String;
    //   19446: astore #23
    //   19448: ldc_w '00'
    //   19451: astore #25
    //   19453: ldc_w '00'
    //   19456: astore #24
    //   19458: ldc_w '00'
    //   19461: astore #26
    //   19463: goto_w -> 19655
    //   19468: aload #18
    //   19470: ldc_w ':'
    //   19473: invokevirtual indexOf : (Ljava/lang/String;)I
    //   19476: ifgt -> 19484
    //   19479: goto_w -> 19636
    //   19484: aload #18
    //   19486: iconst_0
    //   19487: aload #18
    //   19489: ldc_w ' '
    //   19492: invokevirtual indexOf : (Ljava/lang/String;)I
    //   19495: invokevirtual substring : (II)Ljava/lang/String;
    //   19498: astore #23
    //   19500: aload #18
    //   19502: aload #18
    //   19504: ldc_w ' '
    //   19507: invokevirtual indexOf : (Ljava/lang/String;)I
    //   19510: iconst_1
    //   19511: iadd
    //   19512: invokevirtual substring : (I)Ljava/lang/String;
    //   19515: astore #25
    //   19517: aload #25
    //   19519: iconst_0
    //   19520: aload #25
    //   19522: ldc_w ':'
    //   19525: invokevirtual indexOf : (Ljava/lang/String;)I
    //   19528: invokevirtual substring : (II)Ljava/lang/String;
    //   19531: astore #25
    //   19533: aload #18
    //   19535: invokevirtual trim : ()Ljava/lang/String;
    //   19538: ldc_w ' '
    //   19541: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   19544: iconst_1
    //   19545: aaload
    //   19546: ldc_w ':'
    //   19549: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   19552: arraylength
    //   19553: iconst_3
    //   19554: if_icmpge -> 19562
    //   19557: goto_w -> 19609
    //   19562: aload #18
    //   19564: aload #18
    //   19566: ldc_w ':'
    //   19569: invokevirtual indexOf : (Ljava/lang/String;)I
    //   19572: iconst_1
    //   19573: iadd
    //   19574: aload #18
    //   19576: ldc_w ':'
    //   19579: invokevirtual lastIndexOf : (Ljava/lang/String;)I
    //   19582: invokevirtual substring : (II)Ljava/lang/String;
    //   19585: astore #24
    //   19587: aload #18
    //   19589: aload #18
    //   19591: ldc_w ':'
    //   19594: invokevirtual lastIndexOf : (Ljava/lang/String;)I
    //   19597: iconst_1
    //   19598: iadd
    //   19599: invokevirtual substring : (I)Ljava/lang/String;
    //   19602: astore #26
    //   19604: goto_w -> 19631
    //   19609: aload #18
    //   19611: aload #18
    //   19613: ldc_w ':'
    //   19616: invokevirtual indexOf : (Ljava/lang/String;)I
    //   19619: iconst_1
    //   19620: iadd
    //   19621: invokevirtual substring : (I)Ljava/lang/String;
    //   19624: astore #24
    //   19626: ldc_w '00'
    //   19629: astore #26
    //   19631: goto_w -> 19655
    //   19636: aload #18
    //   19638: astore #23
    //   19640: ldc_w '00'
    //   19643: astore #25
    //   19645: ldc_w '00'
    //   19648: astore #24
    //   19650: ldc_w '00'
    //   19653: astore #26
    //   19655: new java/lang/StringBuilder
    //   19658: dup
    //   19659: aload #23
    //   19661: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   19664: invokespecial <init> : (Ljava/lang/String;)V
    //   19667: ldc_w ' '
    //   19670: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19673: aload #25
    //   19675: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19678: ldc_w ':'
    //   19681: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19684: aload #24
    //   19686: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19689: ldc_w ':'
    //   19692: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19695: aload #26
    //   19697: ifnull -> 19705
    //   19700: goto_w -> 19713
    //   19705: ldc_w '00'
    //   19708: goto_w -> 19715
    //   19713: aload #26
    //   19715: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19718: invokevirtual toString : ()Ljava/lang/String;
    //   19721: astore #22
    //   19723: goto_w -> 20111
    //   19728: aload #15
    //   19730: invokevirtual getMinutes : ()I
    //   19733: bipush #9
    //   19735: if_icmpgt -> 19743
    //   19738: goto_w -> 19756
    //   19743: aload #15
    //   19745: invokevirtual getMinutes : ()I
    //   19748: invokestatic valueOf : (I)Ljava/lang/String;
    //   19751: goto_w -> 19780
    //   19756: new java/lang/StringBuilder
    //   19759: dup
    //   19760: ldc_w '0'
    //   19763: invokespecial <init> : (Ljava/lang/String;)V
    //   19766: aload #15
    //   19768: invokevirtual getMinutes : ()I
    //   19771: invokestatic valueOf : (I)Ljava/lang/String;
    //   19774: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19777: invokevirtual toString : ()Ljava/lang/String;
    //   19780: astore #24
    //   19782: aload #15
    //   19784: invokevirtual getSeconds : ()I
    //   19787: bipush #9
    //   19789: if_icmpgt -> 19797
    //   19792: goto_w -> 19810
    //   19797: aload #15
    //   19799: invokevirtual getSeconds : ()I
    //   19802: invokestatic valueOf : (I)Ljava/lang/String;
    //   19805: goto_w -> 19834
    //   19810: new java/lang/StringBuilder
    //   19813: dup
    //   19814: ldc_w '0'
    //   19817: invokespecial <init> : (Ljava/lang/String;)V
    //   19820: aload #15
    //   19822: invokevirtual getSeconds : ()I
    //   19825: invokestatic valueOf : (I)Ljava/lang/String;
    //   19828: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19831: invokevirtual toString : ()Ljava/lang/String;
    //   19834: astore #26
    //   19836: aload #15
    //   19838: invokevirtual getHours : ()I
    //   19841: bipush #9
    //   19843: if_icmpgt -> 19851
    //   19846: goto_w -> 19864
    //   19851: aload #15
    //   19853: invokevirtual getHours : ()I
    //   19856: invokestatic valueOf : (I)Ljava/lang/String;
    //   19859: goto_w -> 19888
    //   19864: new java/lang/StringBuilder
    //   19867: dup
    //   19868: ldc_w '0'
    //   19871: invokespecial <init> : (Ljava/lang/String;)V
    //   19874: aload #15
    //   19876: invokevirtual getHours : ()I
    //   19879: invokestatic valueOf : (I)Ljava/lang/String;
    //   19882: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19885: invokevirtual toString : ()Ljava/lang/String;
    //   19888: astore #25
    //   19890: new java/lang/StringBuilder
    //   19893: dup
    //   19894: aload #15
    //   19896: invokevirtual getYear : ()I
    //   19899: sipush #1900
    //   19902: iadd
    //   19903: invokestatic valueOf : (I)Ljava/lang/String;
    //   19906: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   19909: invokespecial <init> : (Ljava/lang/String;)V
    //   19912: ldc_w '-'
    //   19915: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19918: aload #15
    //   19920: invokevirtual getMonth : ()I
    //   19923: bipush #9
    //   19925: if_icmpge -> 19933
    //   19928: goto_w -> 19948
    //   19933: aload #15
    //   19935: invokevirtual getMonth : ()I
    //   19938: iconst_1
    //   19939: iadd
    //   19940: invokestatic valueOf : (I)Ljava/lang/String;
    //   19943: goto_w -> 19974
    //   19948: new java/lang/StringBuilder
    //   19951: dup
    //   19952: ldc_w '0'
    //   19955: invokespecial <init> : (Ljava/lang/String;)V
    //   19958: aload #15
    //   19960: invokevirtual getMonth : ()I
    //   19963: iconst_1
    //   19964: iadd
    //   19965: invokestatic valueOf : (I)Ljava/lang/String;
    //   19968: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19971: invokevirtual toString : ()Ljava/lang/String;
    //   19974: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19977: ldc_w '-'
    //   19980: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   19983: aload #15
    //   19985: invokevirtual getDate : ()I
    //   19988: bipush #9
    //   19990: if_icmpgt -> 19998
    //   19993: goto_w -> 20011
    //   19998: aload #15
    //   20000: invokevirtual getDate : ()I
    //   20003: invokestatic valueOf : (I)Ljava/lang/String;
    //   20006: goto_w -> 20035
    //   20011: new java/lang/StringBuilder
    //   20014: dup
    //   20015: ldc_w '0'
    //   20018: invokespecial <init> : (Ljava/lang/String;)V
    //   20021: aload #15
    //   20023: invokevirtual getDate : ()I
    //   20026: invokestatic valueOf : (I)Ljava/lang/String;
    //   20029: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20032: invokevirtual toString : ()Ljava/lang/String;
    //   20035: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20038: invokevirtual toString : ()Ljava/lang/String;
    //   20041: astore #23
    //   20043: new java/lang/StringBuilder
    //   20046: dup
    //   20047: aload #23
    //   20049: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   20052: invokespecial <init> : (Ljava/lang/String;)V
    //   20055: ldc_w ' '
    //   20058: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20061: aload #25
    //   20063: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20066: ldc_w ':'
    //   20069: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20072: aload #24
    //   20074: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20077: ldc_w ':'
    //   20080: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20083: aload #26
    //   20085: ifnull -> 20093
    //   20088: goto_w -> 20101
    //   20093: ldc_w '00'
    //   20096: goto_w -> 20103
    //   20101: aload #26
    //   20103: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20106: invokevirtual toString : ()Ljava/lang/String;
    //   20109: astore #22
    //   20111: new java/lang/StringBuilder
    //   20114: dup
    //   20115: aload #14
    //   20117: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   20120: invokespecial <init> : (Ljava/lang/String;)V
    //   20123: ldc_w '<span>'
    //   20126: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20129: aload #22
    //   20131: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20134: ldc_w '</span>'
    //   20137: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20140: invokevirtual toString : ()Ljava/lang/String;
    //   20143: astore #14
    //   20145: new java/lang/StringBuilder
    //   20148: dup
    //   20149: aload #14
    //   20151: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   20154: invokespecial <init> : (Ljava/lang/String;)V
    //   20157: ldc_w '<input type=hidden id='
    //   20160: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20163: aload_1
    //   20164: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20167: ldc_w ' name='
    //   20170: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20173: aload_1
    //   20174: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20177: ldc_w ' value=''
    //   20180: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20183: aload #23
    //   20185: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20188: ldc_w ''>'
    //   20191: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20194: invokevirtual toString : ()Ljava/lang/String;
    //   20197: astore #14
    //   20199: new java/lang/StringBuilder
    //   20202: dup
    //   20203: aload #14
    //   20205: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   20208: invokespecial <init> : (Ljava/lang/String;)V
    //   20211: ldc_w '<input type=hidden id='
    //   20214: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20217: aload_1
    //   20218: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20221: ldc_w 'hours name='
    //   20224: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20227: aload_1
    //   20228: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20231: ldc_w 'hours value=''
    //   20234: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20237: aload #25
    //   20239: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20242: ldc_w ''>'
    //   20245: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20248: invokevirtual toString : ()Ljava/lang/String;
    //   20251: astore #14
    //   20253: new java/lang/StringBuilder
    //   20256: dup
    //   20257: aload #14
    //   20259: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   20262: invokespecial <init> : (Ljava/lang/String;)V
    //   20265: ldc_w '<input type=hidden id='
    //   20268: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20271: aload_1
    //   20272: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20275: ldc_w 'minutes name='
    //   20278: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20281: aload_1
    //   20282: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20285: ldc_w 'minutes value=''
    //   20288: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20291: aload #24
    //   20293: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20296: ldc_w ''>'
    //   20299: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20302: invokevirtual toString : ()Ljava/lang/String;
    //   20305: astore #14
    //   20307: new java/lang/StringBuilder
    //   20310: dup
    //   20311: aload #14
    //   20313: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   20316: invokespecial <init> : (Ljava/lang/String;)V
    //   20319: ldc_w '<input type=hidden id='
    //   20322: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20325: aload_1
    //   20326: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20329: ldc_w 'second name='
    //   20332: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20335: aload_1
    //   20336: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20339: ldc_w 'second value=''
    //   20342: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20345: aload #26
    //   20347: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20350: ldc_w ''>'
    //   20353: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20356: invokevirtual toString : ()Ljava/lang/String;
    //   20359: astore #14
    //   20361: new java/lang/StringBuilder
    //   20364: dup
    //   20365: ldc_w 'if(document.getElementById(''
    //   20368: invokespecial <init> : (Ljava/lang/String;)V
    //   20371: aload #13
    //   20373: iconst_0
    //   20374: aaload
    //   20375: iconst_0
    //   20376: aaload
    //   20377: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20380: ldc_w '-'
    //   20383: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20386: aload_1
    //   20387: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20390: ldc_w ''))\\n{document.getElementById(''
    //   20393: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20396: aload #13
    //   20398: iconst_0
    //   20399: aaload
    //   20400: iconst_0
    //   20401: aaload
    //   20402: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20405: ldc_w '-'
    //   20408: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20411: aload_1
    //   20412: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20415: ldc_w '').innerHTML="'
    //   20418: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20421: aload #14
    //   20423: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20426: ldc_w '";}'
    //   20429: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20432: invokevirtual toString : ()Ljava/lang/String;
    //   20435: astore #10
    //   20437: goto_w -> 22529
    //   20442: ldc_w '::'
    //   20445: invokevirtual trim : ()Ljava/lang/String;
    //   20448: aload #18
    //   20450: invokevirtual equals : (Ljava/lang/Object;)Z
    //   20453: ifne -> 20461
    //   20456: goto_w -> 20864
    //   20461: ldc ''
    //   20463: astore #23
    //   20465: ldc ''
    //   20467: astore #24
    //   20469: ldc ''
    //   20471: astore #25
    //   20473: ldc ''
    //   20475: astore #26
    //   20477: aload #15
    //   20479: invokevirtual getMinutes : ()I
    //   20482: bipush #9
    //   20484: if_icmpgt -> 20492
    //   20487: goto_w -> 20505
    //   20492: aload #15
    //   20494: invokevirtual getMinutes : ()I
    //   20497: invokestatic valueOf : (I)Ljava/lang/String;
    //   20500: goto_w -> 20529
    //   20505: new java/lang/StringBuilder
    //   20508: dup
    //   20509: ldc_w '0'
    //   20512: invokespecial <init> : (Ljava/lang/String;)V
    //   20515: aload #15
    //   20517: invokevirtual getMinutes : ()I
    //   20520: invokestatic valueOf : (I)Ljava/lang/String;
    //   20523: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20526: invokevirtual toString : ()Ljava/lang/String;
    //   20529: astore #24
    //   20531: aload #15
    //   20533: invokevirtual getSeconds : ()I
    //   20536: bipush #9
    //   20538: if_icmpgt -> 20546
    //   20541: goto_w -> 20559
    //   20546: aload #15
    //   20548: invokevirtual getSeconds : ()I
    //   20551: invokestatic valueOf : (I)Ljava/lang/String;
    //   20554: goto_w -> 20583
    //   20559: new java/lang/StringBuilder
    //   20562: dup
    //   20563: ldc_w '0'
    //   20566: invokespecial <init> : (Ljava/lang/String;)V
    //   20569: aload #15
    //   20571: invokevirtual getSeconds : ()I
    //   20574: invokestatic valueOf : (I)Ljava/lang/String;
    //   20577: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20580: invokevirtual toString : ()Ljava/lang/String;
    //   20583: astore #23
    //   20585: aload #15
    //   20587: invokevirtual getHours : ()I
    //   20590: bipush #9
    //   20592: if_icmpgt -> 20600
    //   20595: goto_w -> 20613
    //   20600: aload #15
    //   20602: invokevirtual getHours : ()I
    //   20605: invokestatic valueOf : (I)Ljava/lang/String;
    //   20608: goto_w -> 20637
    //   20613: new java/lang/StringBuilder
    //   20616: dup
    //   20617: ldc_w '0'
    //   20620: invokespecial <init> : (Ljava/lang/String;)V
    //   20623: aload #15
    //   20625: invokevirtual getHours : ()I
    //   20628: invokestatic valueOf : (I)Ljava/lang/String;
    //   20631: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20634: invokevirtual toString : ()Ljava/lang/String;
    //   20637: astore #25
    //   20639: new java/lang/StringBuilder
    //   20642: dup
    //   20643: aload #15
    //   20645: invokevirtual getYear : ()I
    //   20648: sipush #1900
    //   20651: iadd
    //   20652: invokestatic valueOf : (I)Ljava/lang/String;
    //   20655: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   20658: invokespecial <init> : (Ljava/lang/String;)V
    //   20661: ldc_w '-'
    //   20664: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20667: aload #15
    //   20669: invokevirtual getMonth : ()I
    //   20672: bipush #9
    //   20674: if_icmpge -> 20682
    //   20677: goto_w -> 20697
    //   20682: aload #15
    //   20684: invokevirtual getMonth : ()I
    //   20687: iconst_1
    //   20688: iadd
    //   20689: invokestatic valueOf : (I)Ljava/lang/String;
    //   20692: goto_w -> 20723
    //   20697: new java/lang/StringBuilder
    //   20700: dup
    //   20701: ldc_w '0'
    //   20704: invokespecial <init> : (Ljava/lang/String;)V
    //   20707: aload #15
    //   20709: invokevirtual getMonth : ()I
    //   20712: iconst_1
    //   20713: iadd
    //   20714: invokestatic valueOf : (I)Ljava/lang/String;
    //   20717: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20720: invokevirtual toString : ()Ljava/lang/String;
    //   20723: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20726: ldc_w '-'
    //   20729: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20732: aload #15
    //   20734: invokevirtual getDate : ()I
    //   20737: bipush #9
    //   20739: if_icmpgt -> 20747
    //   20742: goto_w -> 20760
    //   20747: aload #15
    //   20749: invokevirtual getDate : ()I
    //   20752: invokestatic valueOf : (I)Ljava/lang/String;
    //   20755: goto_w -> 20784
    //   20760: new java/lang/StringBuilder
    //   20763: dup
    //   20764: ldc_w '0'
    //   20767: invokespecial <init> : (Ljava/lang/String;)V
    //   20770: aload #15
    //   20772: invokevirtual getDate : ()I
    //   20775: invokestatic valueOf : (I)Ljava/lang/String;
    //   20778: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20781: invokevirtual toString : ()Ljava/lang/String;
    //   20784: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20787: invokevirtual toString : ()Ljava/lang/String;
    //   20790: astore #26
    //   20792: new java/lang/StringBuilder
    //   20795: dup
    //   20796: aload #26
    //   20798: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   20801: invokespecial <init> : (Ljava/lang/String;)V
    //   20804: ldc_w ' '
    //   20807: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20810: aload #25
    //   20812: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20815: ldc_w ':'
    //   20818: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20821: aload #24
    //   20823: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20826: ldc_w ':'
    //   20829: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20832: aload #23
    //   20834: ifnull -> 20842
    //   20837: goto_w -> 20850
    //   20842: ldc_w '00'
    //   20845: goto_w -> 20852
    //   20850: aload #23
    //   20852: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20855: invokevirtual toString : ()Ljava/lang/String;
    //   20858: astore #22
    //   20860: aload #22
    //   20862: astore #18
    //   20864: new java/lang/StringBuilder
    //   20867: dup
    //   20868: aload #14
    //   20870: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   20873: invokespecial <init> : (Ljava/lang/String;)V
    //   20876: ldc_w '<input readonly=\"readonly\" type=text class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) size=12 name='
    //   20879: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20882: aload_1
    //   20883: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20886: ldc_w ' id='
    //   20889: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20892: aload_1
    //   20893: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20896: ldc_w ' onclick=setDay(this) value=''
    //   20899: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20902: aload #18
    //   20904: ifnonnull -> 20912
    //   20907: goto_w -> 20946
    //   20912: aload #18
    //   20914: invokevirtual trim : ()Ljava/lang/String;
    //   20917: invokevirtual length : ()I
    //   20920: bipush #9
    //   20922: if_icmpge -> 20930
    //   20925: goto_w -> 20946
    //   20930: aload #18
    //   20932: ldc_w ' '
    //   20935: invokevirtual indexOf : (Ljava/lang/String;)I
    //   20938: iflt -> 20946
    //   20941: goto_w -> 20953
    //   20946: aload #18
    //   20948: goto_w -> 20963
    //   20953: aload #18
    //   20955: ldc_w ' '
    //   20958: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   20961: iconst_0
    //   20962: aaload
    //   20963: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20966: ldc_w '' style=\"background:url('/jsoa/eform/images/down_arrow.gif');font-size:1em;\">'
    //   20969: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   20972: aload #13
    //   20974: iconst_0
    //   20975: aaload
    //   20976: iconst_3
    //   20977: aaload
    //   20978: ldc_w '1'
    //   20981: invokevirtual equals : (Ljava/lang/Object;)Z
    //   20984: ifne -> 20992
    //   20987: goto_w -> 21102
    //   20992: aload #4
    //   20994: new java/lang/StringBuilder
    //   20997: dup
    //   20998: ldc_w ','
    //   21001: invokespecial <init> : (Ljava/lang/String;)V
    //   21004: aload #13
    //   21006: iconst_0
    //   21007: aaload
    //   21008: iconst_0
    //   21009: aaload
    //   21010: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21013: ldc_w ','
    //   21016: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21019: invokevirtual toString : ()Ljava/lang/String;
    //   21022: invokevirtual indexOf : (Ljava/lang/String;)I
    //   21025: iflt -> 21033
    //   21028: goto_w -> 21102
    //   21033: aload #4
    //   21035: new java/lang/StringBuilder
    //   21038: dup
    //   21039: ldc_w ','
    //   21042: invokespecial <init> : (Ljava/lang/String;)V
    //   21045: aload #13
    //   21047: iconst_0
    //   21048: aaload
    //   21049: iconst_5
    //   21050: aaload
    //   21051: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21054: ldc_w ','
    //   21057: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21060: invokevirtual toString : ()Ljava/lang/String;
    //   21063: invokevirtual indexOf : (Ljava/lang/String;)I
    //   21066: iflt -> 21074
    //   21069: goto_w -> 21102
    //   21074: new java/lang/StringBuilder
    //   21077: dup
    //   21078: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   21081: invokespecial <init> : (Ljava/lang/String;)V
    //   21084: aload_1
    //   21085: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21088: ldc_w '><label class=mustFillcolor>*</label>'
    //   21091: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21094: invokevirtual toString : ()Ljava/lang/String;
    //   21097: goto_w -> 21104
    //   21102: ldc ''
    //   21104: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21107: invokevirtual toString : ()Ljava/lang/String;
    //   21110: astore #14
    //   21112: iconst_m1
    //   21113: istore #23
    //   21115: iconst_m1
    //   21116: istore #24
    //   21118: iconst_m1
    //   21119: istore #25
    //   21121: iconst_0
    //   21122: istore #26
    //   21124: aload #18
    //   21126: ifnonnull -> 21134
    //   21129: goto_w -> 21338
    //   21134: aload #18
    //   21136: invokevirtual trim : ()Ljava/lang/String;
    //   21139: invokevirtual length : ()I
    //   21142: bipush #12
    //   21144: if_icmpge -> 21152
    //   21147: goto_w -> 21338
    //   21152: aload #18
    //   21154: ldc_w ' '
    //   21157: invokevirtual indexOf : (Ljava/lang/String;)I
    //   21160: ifgt -> 21168
    //   21163: goto_w -> 21338
    //   21168: aload #18
    //   21170: ldc_w ' ::'
    //   21173: invokevirtual indexOf : (Ljava/lang/String;)I
    //   21176: ifgt -> 21184
    //   21179: goto_w -> 21198
    //   21184: iconst_0
    //   21185: istore #23
    //   21187: iconst_0
    //   21188: istore #24
    //   21190: iconst_0
    //   21191: istore #25
    //   21193: goto_w -> 21338
    //   21198: aload #18
    //   21200: ldc_w ':'
    //   21203: invokevirtual indexOf : (Ljava/lang/String;)I
    //   21206: ifgt -> 21214
    //   21209: goto_w -> 21329
    //   21214: aload #18
    //   21216: invokevirtual trim : ()Ljava/lang/String;
    //   21219: ldc_w ' '
    //   21222: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   21225: iconst_1
    //   21226: aaload
    //   21227: ldc_w ':'
    //   21230: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   21233: iconst_0
    //   21234: aaload
    //   21235: invokestatic parseInt : (Ljava/lang/String;)I
    //   21238: istore #23
    //   21240: aload #18
    //   21242: invokevirtual trim : ()Ljava/lang/String;
    //   21245: ldc_w ' '
    //   21248: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   21251: iconst_1
    //   21252: aaload
    //   21253: ldc_w ':'
    //   21256: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   21259: iconst_1
    //   21260: aaload
    //   21261: invokestatic parseInt : (Ljava/lang/String;)I
    //   21264: istore #24
    //   21266: aload #18
    //   21268: invokevirtual trim : ()Ljava/lang/String;
    //   21271: ldc_w ' '
    //   21274: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   21277: iconst_1
    //   21278: aaload
    //   21279: ldc_w ':'
    //   21282: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   21285: arraylength
    //   21286: iconst_3
    //   21287: if_icmpge -> 21295
    //   21290: goto_w -> 21324
    //   21295: aload #18
    //   21297: invokevirtual trim : ()Ljava/lang/String;
    //   21300: ldc_w ' '
    //   21303: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   21306: iconst_1
    //   21307: aaload
    //   21308: ldc_w ':'
    //   21311: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   21314: iconst_2
    //   21315: aaload
    //   21316: invokestatic parseInt : (Ljava/lang/String;)I
    //   21319: istore #25
    //   21321: iconst_1
    //   21322: istore #26
    //   21324: goto_w -> 21338
    //   21329: iconst_0
    //   21330: istore #23
    //   21332: iconst_0
    //   21333: istore #24
    //   21335: iconst_0
    //   21336: istore #25
    //   21338: iload #23
    //   21340: bipush #24
    //   21342: if_icmpeq -> 21350
    //   21345: goto_w -> 21353
    //   21350: iconst_0
    //   21351: istore #23
    //   21353: new java/lang/StringBuilder
    //   21356: dup
    //   21357: aload #14
    //   21359: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   21362: invokespecial <init> : (Ljava/lang/String;)V
    //   21365: ldc_w '日&nbsp;<select style=font-size:1em; name='
    //   21368: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21371: aload_1
    //   21372: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21375: ldc_w 'hours id='
    //   21378: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21381: aload_1
    //   21382: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21385: ldc_w 'hours>'
    //   21388: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21391: invokevirtual toString : ()Ljava/lang/String;
    //   21394: astore #14
    //   21396: iconst_0
    //   21397: istore #27
    //   21399: goto_w -> 21767
    //   21404: ldc ''
    //   21406: astore #28
    //   21408: iload #27
    //   21410: ifge -> 21418
    //   21413: goto_w -> 21458
    //   21418: iload #27
    //   21420: bipush #10
    //   21422: if_icmplt -> 21430
    //   21425: goto_w -> 21458
    //   21430: new java/lang/StringBuilder
    //   21433: dup
    //   21434: ldc_w '0'
    //   21437: invokespecial <init> : (Ljava/lang/String;)V
    //   21440: iload #27
    //   21442: invokestatic valueOf : (I)Ljava/lang/String;
    //   21445: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21448: invokevirtual toString : ()Ljava/lang/String;
    //   21451: astore #28
    //   21453: goto_w -> 21465
    //   21458: iload #27
    //   21460: invokestatic valueOf : (I)Ljava/lang/String;
    //   21463: astore #28
    //   21465: iload #26
    //   21467: ifne -> 21475
    //   21470: goto_w -> 21622
    //   21475: new java/lang/StringBuilder
    //   21478: dup
    //   21479: aload #14
    //   21481: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   21484: invokespecial <init> : (Ljava/lang/String;)V
    //   21487: ldc_w '<option value='
    //   21490: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21493: ldc ''
    //   21495: aload #28
    //   21497: invokevirtual equals : (Ljava/lang/Object;)Z
    //   21500: ifeq -> 21508
    //   21503: goto_w -> 21518
    //   21508: aload #28
    //   21510: ifnull -> 21518
    //   21513: goto_w -> 21526
    //   21518: ldc_w '00'
    //   21521: goto_w -> 21528
    //   21526: aload #28
    //   21528: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   21531: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21534: iload #27
    //   21536: iload #23
    //   21538: if_icmpeq -> 21546
    //   21541: goto_w -> 21554
    //   21546: ldc_w ' selected'
    //   21549: goto_w -> 21556
    //   21554: ldc ''
    //   21556: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21559: ldc_w '>'
    //   21562: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21565: ldc ''
    //   21567: aload #28
    //   21569: invokevirtual equals : (Ljava/lang/Object;)Z
    //   21572: ifeq -> 21580
    //   21575: goto_w -> 21590
    //   21580: aload #28
    //   21582: ifnull -> 21590
    //   21585: goto_w -> 21598
    //   21590: ldc_w '00'
    //   21593: goto_w -> 21600
    //   21598: aload #28
    //   21600: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   21603: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21606: ldc_w '</option>'
    //   21609: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21612: invokevirtual toString : ()Ljava/lang/String;
    //   21615: astore #14
    //   21617: goto_w -> 21764
    //   21622: new java/lang/StringBuilder
    //   21625: dup
    //   21626: aload #14
    //   21628: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   21631: invokespecial <init> : (Ljava/lang/String;)V
    //   21634: ldc_w '<option value='
    //   21637: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21640: ldc ''
    //   21642: aload #28
    //   21644: invokevirtual equals : (Ljava/lang/Object;)Z
    //   21647: ifeq -> 21655
    //   21650: goto_w -> 21665
    //   21655: aload #28
    //   21657: ifnull -> 21665
    //   21660: goto_w -> 21673
    //   21665: ldc_w '00'
    //   21668: goto_w -> 21675
    //   21673: aload #28
    //   21675: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   21678: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21681: iload #27
    //   21683: iload #23
    //   21685: if_icmpeq -> 21693
    //   21688: goto_w -> 21701
    //   21693: ldc_w ' selected'
    //   21696: goto_w -> 21703
    //   21701: ldc ''
    //   21703: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21706: ldc_w '>'
    //   21709: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21712: ldc ''
    //   21714: aload #28
    //   21716: invokevirtual equals : (Ljava/lang/Object;)Z
    //   21719: ifeq -> 21727
    //   21722: goto_w -> 21737
    //   21727: aload #28
    //   21729: ifnull -> 21737
    //   21732: goto_w -> 21745
    //   21737: ldc_w '00'
    //   21740: goto_w -> 21747
    //   21745: aload #28
    //   21747: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   21750: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21753: ldc_w '</option>'
    //   21756: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21759: invokevirtual toString : ()Ljava/lang/String;
    //   21762: astore #14
    //   21764: iinc #27, 1
    //   21767: iload #27
    //   21769: bipush #24
    //   21771: if_icmpge -> 21779
    //   21774: goto_w -> 21404
    //   21779: new java/lang/StringBuilder
    //   21782: dup
    //   21783: aload #14
    //   21785: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   21788: invokespecial <init> : (Ljava/lang/String;)V
    //   21791: ldc_w '</select>'
    //   21794: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21797: invokevirtual toString : ()Ljava/lang/String;
    //   21800: astore #14
    //   21802: new java/lang/StringBuilder
    //   21805: dup
    //   21806: aload #14
    //   21808: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   21811: invokespecial <init> : (Ljava/lang/String;)V
    //   21814: ldc_w '时&nbsp;<select style=font-size:1em; name='
    //   21817: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21820: aload_1
    //   21821: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21824: ldc_w 'minutes id='
    //   21827: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21830: aload_1
    //   21831: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21834: ldc_w 'minutes>'
    //   21837: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21840: invokevirtual toString : ()Ljava/lang/String;
    //   21843: astore #14
    //   21845: iconst_0
    //   21846: istore #27
    //   21848: goto_w -> 22084
    //   21853: ldc ''
    //   21855: astore #28
    //   21857: iload #27
    //   21859: ifge -> 21867
    //   21862: goto_w -> 21907
    //   21867: iload #27
    //   21869: bipush #10
    //   21871: if_icmplt -> 21879
    //   21874: goto_w -> 21907
    //   21879: new java/lang/StringBuilder
    //   21882: dup
    //   21883: ldc_w '0'
    //   21886: invokespecial <init> : (Ljava/lang/String;)V
    //   21889: iload #27
    //   21891: invokestatic valueOf : (I)Ljava/lang/String;
    //   21894: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21897: invokevirtual toString : ()Ljava/lang/String;
    //   21900: astore #28
    //   21902: goto_w -> 21914
    //   21907: iload #27
    //   21909: invokestatic valueOf : (I)Ljava/lang/String;
    //   21912: astore #28
    //   21914: iload #26
    //   21916: ifne -> 21924
    //   21919: goto_w -> 22005
    //   21924: new java/lang/StringBuilder
    //   21927: dup
    //   21928: aload #14
    //   21930: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   21933: invokespecial <init> : (Ljava/lang/String;)V
    //   21936: ldc_w '<option value='
    //   21939: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21942: aload #28
    //   21944: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   21947: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21950: iload #27
    //   21952: iload #24
    //   21954: if_icmpeq -> 21962
    //   21957: goto_w -> 21970
    //   21962: ldc_w ' selected'
    //   21965: goto_w -> 21972
    //   21970: ldc ''
    //   21972: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21975: ldc_w '>'
    //   21978: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21981: aload #28
    //   21983: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   21986: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21989: ldc_w '</option>'
    //   21992: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   21995: invokevirtual toString : ()Ljava/lang/String;
    //   21998: astore #14
    //   22000: goto_w -> 22081
    //   22005: new java/lang/StringBuilder
    //   22008: dup
    //   22009: aload #14
    //   22011: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   22014: invokespecial <init> : (Ljava/lang/String;)V
    //   22017: ldc_w '<option value='
    //   22020: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22023: aload #28
    //   22025: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   22028: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22031: iload #27
    //   22033: iload #24
    //   22035: if_icmpeq -> 22043
    //   22038: goto_w -> 22051
    //   22043: ldc_w ' selected'
    //   22046: goto_w -> 22053
    //   22051: ldc ''
    //   22053: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22056: ldc_w '>'
    //   22059: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22062: aload #28
    //   22064: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   22067: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22070: ldc_w '</option>'
    //   22073: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22076: invokevirtual toString : ()Ljava/lang/String;
    //   22079: astore #14
    //   22081: iinc #27, 1
    //   22084: iload #27
    //   22086: bipush #60
    //   22088: if_icmpge -> 22096
    //   22091: goto_w -> 21853
    //   22096: new java/lang/StringBuilder
    //   22099: dup
    //   22100: aload #14
    //   22102: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   22105: invokespecial <init> : (Ljava/lang/String;)V
    //   22108: ldc_w '</select>分'
    //   22111: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22114: invokevirtual toString : ()Ljava/lang/String;
    //   22117: astore #14
    //   22119: ldc_w 'pengchi'
    //   22122: invokestatic getCustomerName : ()Ljava/lang/String;
    //   22125: invokevirtual equals : (Ljava/lang/Object;)Z
    //   22128: ifeq -> 22136
    //   22131: goto_w -> 22453
    //   22136: new java/lang/StringBuilder
    //   22139: dup
    //   22140: aload #14
    //   22142: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   22145: invokespecial <init> : (Ljava/lang/String;)V
    //   22148: ldc_w '<select name='
    //   22151: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22154: aload_1
    //   22155: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22158: ldc_w 'second style=font-size:1em; id='
    //   22161: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22164: aload_1
    //   22165: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22168: ldc_w 'second>'
    //   22171: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22174: invokevirtual toString : ()Ljava/lang/String;
    //   22177: astore #14
    //   22179: iconst_0
    //   22180: istore #27
    //   22182: goto_w -> 22418
    //   22187: ldc ''
    //   22189: astore #28
    //   22191: iload #27
    //   22193: ifge -> 22201
    //   22196: goto_w -> 22241
    //   22201: iload #27
    //   22203: bipush #10
    //   22205: if_icmplt -> 22213
    //   22208: goto_w -> 22241
    //   22213: new java/lang/StringBuilder
    //   22216: dup
    //   22217: ldc_w '0'
    //   22220: invokespecial <init> : (Ljava/lang/String;)V
    //   22223: iload #27
    //   22225: invokestatic valueOf : (I)Ljava/lang/String;
    //   22228: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22231: invokevirtual toString : ()Ljava/lang/String;
    //   22234: astore #28
    //   22236: goto_w -> 22248
    //   22241: iload #27
    //   22243: invokestatic valueOf : (I)Ljava/lang/String;
    //   22246: astore #28
    //   22248: iload #26
    //   22250: ifne -> 22258
    //   22253: goto_w -> 22339
    //   22258: new java/lang/StringBuilder
    //   22261: dup
    //   22262: aload #14
    //   22264: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   22267: invokespecial <init> : (Ljava/lang/String;)V
    //   22270: ldc_w '<option value='
    //   22273: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22276: aload #28
    //   22278: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   22281: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22284: iload #27
    //   22286: iload #25
    //   22288: if_icmpeq -> 22296
    //   22291: goto_w -> 22304
    //   22296: ldc_w ' selected'
    //   22299: goto_w -> 22306
    //   22304: ldc ''
    //   22306: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22309: ldc_w '>'
    //   22312: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22315: aload #28
    //   22317: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   22320: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22323: ldc_w '</option>'
    //   22326: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22329: invokevirtual toString : ()Ljava/lang/String;
    //   22332: astore #14
    //   22334: goto_w -> 22415
    //   22339: new java/lang/StringBuilder
    //   22342: dup
    //   22343: aload #14
    //   22345: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   22348: invokespecial <init> : (Ljava/lang/String;)V
    //   22351: ldc_w '<option value='
    //   22354: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22357: aload #28
    //   22359: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   22362: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22365: iload #27
    //   22367: iload #25
    //   22369: if_icmpeq -> 22377
    //   22372: goto_w -> 22385
    //   22377: ldc_w ' selected'
    //   22380: goto_w -> 22387
    //   22385: ldc ''
    //   22387: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22390: ldc_w '>'
    //   22393: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22396: aload #28
    //   22398: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   22401: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22404: ldc_w '</option>'
    //   22407: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22410: invokevirtual toString : ()Ljava/lang/String;
    //   22413: astore #14
    //   22415: iinc #27, 1
    //   22418: iload #27
    //   22420: bipush #60
    //   22422: if_icmpge -> 22430
    //   22425: goto_w -> 22187
    //   22430: new java/lang/StringBuilder
    //   22433: dup
    //   22434: aload #14
    //   22436: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   22439: invokespecial <init> : (Ljava/lang/String;)V
    //   22442: ldc_w '</select>秒&nbsp;'
    //   22445: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22448: invokevirtual toString : ()Ljava/lang/String;
    //   22451: astore #14
    //   22453: new java/lang/StringBuilder
    //   22456: dup
    //   22457: ldc_w 'if(document.getElementById(''
    //   22460: invokespecial <init> : (Ljava/lang/String;)V
    //   22463: aload #13
    //   22465: iconst_0
    //   22466: aaload
    //   22467: iconst_0
    //   22468: aaload
    //   22469: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22472: ldc_w '-'
    //   22475: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22478: aload_1
    //   22479: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22482: ldc_w ''))\\n{document.getElementById(''
    //   22485: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22488: aload #13
    //   22490: iconst_0
    //   22491: aaload
    //   22492: iconst_0
    //   22493: aaload
    //   22494: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22497: ldc_w '-'
    //   22500: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22503: aload_1
    //   22504: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22507: ldc_w '').innerHTML="'
    //   22510: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22513: aload #14
    //   22515: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22518: ldc_w '";}'
    //   22521: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22524: invokevirtual toString : ()Ljava/lang/String;
    //   22527: astore #10
    //   22529: ldc ''
    //   22531: aload #13
    //   22533: iconst_0
    //   22534: aaload
    //   22535: iconst_4
    //   22536: aaload
    //   22537: invokevirtual equals : (Ljava/lang/Object;)Z
    //   22540: ifeq -> 22548
    //   22543: goto_w -> 22639
    //   22548: ldc_w 'null'
    //   22551: new java/lang/StringBuilder
    //   22554: dup
    //   22555: aload #13
    //   22557: iconst_0
    //   22558: aaload
    //   22559: iconst_4
    //   22560: aaload
    //   22561: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   22564: invokespecial <init> : (Ljava/lang/String;)V
    //   22567: invokevirtual toString : ()Ljava/lang/String;
    //   22570: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   22573: ifeq -> 22581
    //   22576: goto_w -> 22639
    //   22581: aload #13
    //   22583: iconst_0
    //   22584: aaload
    //   22585: iconst_4
    //   22586: aaload
    //   22587: ldc_w ').beforeDate('
    //   22590: invokevirtual contains : (Ljava/lang/CharSequence;)Z
    //   22593: ifne -> 22601
    //   22596: goto_w -> 22639
    //   22601: new java/lang/StringBuilder
    //   22604: dup
    //   22605: aload #10
    //   22607: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   22610: invokespecial <init> : (Ljava/lang/String;)V
    //   22613: ldc_w '\\ndocument.getElementById('dateCompare').value=document.getElementById('dateCompare').value+'{'
    //   22616: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22619: aload #13
    //   22621: iconst_0
    //   22622: aaload
    //   22623: iconst_4
    //   22624: aaload
    //   22625: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22628: ldc_w '}';\\n'
    //   22631: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22634: invokevirtual toString : ()Ljava/lang/String;
    //   22637: astore #10
    //   22639: goto_w -> 46733
    //   22644: aload #18
    //   22646: ldc_w '\\'
    //   22649: ldc_w '\\\\'
    //   22652: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   22655: astore #18
    //   22657: aload #4
    //   22659: ifnonnull -> 22667
    //   22662: goto_w -> 23355
    //   22667: aload #4
    //   22669: new java/lang/StringBuilder
    //   22672: dup
    //   22673: ldc_w ','
    //   22676: invokespecial <init> : (Ljava/lang/String;)V
    //   22679: aload #13
    //   22681: iconst_0
    //   22682: aaload
    //   22683: iconst_0
    //   22684: aaload
    //   22685: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22688: ldc_w ','
    //   22691: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22694: invokevirtual toString : ()Ljava/lang/String;
    //   22697: invokevirtual indexOf : (Ljava/lang/String;)I
    //   22700: iflt -> 22708
    //   22703: goto_w -> 22749
    //   22708: aload #4
    //   22710: new java/lang/StringBuilder
    //   22713: dup
    //   22714: ldc_w ','
    //   22717: invokespecial <init> : (Ljava/lang/String;)V
    //   22720: aload #13
    //   22722: iconst_0
    //   22723: aaload
    //   22724: iconst_5
    //   22725: aaload
    //   22726: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22729: ldc_w ','
    //   22732: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22735: invokevirtual toString : ()Ljava/lang/String;
    //   22738: invokevirtual indexOf : (Ljava/lang/String;)I
    //   22741: ifge -> 22749
    //   22744: goto_w -> 23355
    //   22749: invokestatic getSYWorkflowHR : ()I
    //   22752: iconst_1
    //   22753: if_icmpeq -> 22761
    //   22756: goto_w -> 23081
    //   22761: new java/lang/StringBuilder
    //   22764: dup
    //   22765: ldc_w '    <input type=hidden name='
    //   22768: invokespecial <init> : (Ljava/lang/String;)V
    //   22771: aload_1
    //   22772: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22775: ldc_w ' id='
    //   22778: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22781: aload_1
    //   22782: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22785: ldc_w ' value=''
    //   22788: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22791: aload #18
    //   22793: ifnull -> 22801
    //   22796: goto_w -> 22809
    //   22801: ldc_w '&nbsp'
    //   22804: goto_w -> 22828
    //   22809: aload #18
    //   22811: ldc_w '\\n'
    //   22814: ldc_w '<br>'
    //   22817: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   22820: ldc_w '\\r'
    //   22823: ldc ''
    //   22825: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   22828: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22831: ldc_w ''/>'
    //   22834: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22837: invokevirtual toString : ()Ljava/lang/String;
    //   22840: astore #23
    //   22842: aload #18
    //   22844: ifnull -> 22852
    //   22847: goto_w -> 22860
    //   22852: ldc_w '&nbsp'
    //   22855: goto_w -> 22879
    //   22860: aload #18
    //   22862: ldc_w '\\n'
    //   22865: ldc_w '<br>'
    //   22868: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   22871: ldc_w '\\r'
    //   22874: ldc ''
    //   22876: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   22879: astore #24
    //   22881: new java/lang/StringBuilder
    //   22884: dup
    //   22885: ldc_w 'if(document.getElementById(''
    //   22888: invokespecial <init> : (Ljava/lang/String;)V
    //   22891: aload #13
    //   22893: iconst_0
    //   22894: aaload
    //   22895: iconst_0
    //   22896: aaload
    //   22897: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22900: ldc_w '-'
    //   22903: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22906: aload_1
    //   22907: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22910: ldc_w ''))\\n{document.getElementById(''
    //   22913: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22916: aload #13
    //   22918: iconst_0
    //   22919: aaload
    //   22920: iconst_0
    //   22921: aaload
    //   22922: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22925: ldc_w '-'
    //   22928: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22931: aload_1
    //   22932: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22935: ldc_w '').innerHTML="'
    //   22938: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22941: aload #23
    //   22943: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22946: ldc_w '";}'
    //   22949: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22952: invokevirtual toString : ()Ljava/lang/String;
    //   22955: astore #10
    //   22957: new java/lang/StringBuilder
    //   22960: dup
    //   22961: aload #10
    //   22963: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   22966: invokespecial <init> : (Ljava/lang/String;)V
    //   22969: ldc_w 'if(document.getElementById(''
    //   22972: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22975: aload #13
    //   22977: iconst_0
    //   22978: aaload
    //   22979: iconst_0
    //   22980: aaload
    //   22981: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22984: ldc_w '-'
    //   22987: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22990: aload_1
    //   22991: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   22994: ldc_w ''))\\n{document.getElementById(''
    //   22997: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23000: aload #13
    //   23002: iconst_0
    //   23003: aaload
    //   23004: iconst_0
    //   23005: aaload
    //   23006: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23009: ldc_w '-'
    //   23012: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23015: aload_1
    //   23016: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23019: ldc_w '').innerHTML+=''
    //   23022: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23025: aload #18
    //   23027: ifnull -> 23035
    //   23030: goto_w -> 23043
    //   23035: ldc_w '&nbsp'
    //   23038: goto_w -> 23062
    //   23043: aload #18
    //   23045: ldc_w '\\n'
    //   23048: ldc_w '<br>'
    //   23051: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   23054: ldc_w '\\r'
    //   23057: ldc ''
    //   23059: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   23062: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23065: ldc_w '';}'
    //   23068: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23071: invokevirtual toString : ()Ljava/lang/String;
    //   23074: astore #10
    //   23076: goto_w -> 23350
    //   23081: ldc_w '1'
    //   23084: invokestatic getIsSsdz : ()Ljava/lang/String;
    //   23087: invokevirtual equals : (Ljava/lang/Object;)Z
    //   23090: ifne -> 23098
    //   23093: goto_w -> 23239
    //   23098: new java/lang/StringBuilder
    //   23101: dup
    //   23102: ldc_w 'if(document.getElementById(''
    //   23105: invokespecial <init> : (Ljava/lang/String;)V
    //   23108: aload #13
    //   23110: iconst_0
    //   23111: aaload
    //   23112: iconst_0
    //   23113: aaload
    //   23114: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23117: ldc_w '-'
    //   23120: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23123: aload_1
    //   23124: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23127: ldc_w ''))\\n{document.getElementById(''
    //   23130: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23133: aload #13
    //   23135: iconst_0
    //   23136: aaload
    //   23137: iconst_0
    //   23138: aaload
    //   23139: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23142: ldc_w '-'
    //   23145: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23148: aload_1
    //   23149: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23152: ldc_w '').innerHTML=''
    //   23155: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23158: aload #18
    //   23160: ifnull -> 23168
    //   23163: goto_w -> 23176
    //   23168: ldc_w '&nbsp'
    //   23171: goto_w -> 23195
    //   23176: aload #18
    //   23178: ldc_w '\\n'
    //   23181: ldc_w '<br>'
    //   23184: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   23187: ldc_w '\\r'
    //   23190: ldc ''
    //   23192: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   23195: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23198: ldc_w '';document.getElementById(''
    //   23201: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23204: aload #13
    //   23206: iconst_0
    //   23207: aaload
    //   23208: iconst_0
    //   23209: aaload
    //   23210: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23213: ldc_w '-'
    //   23216: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23219: aload_1
    //   23220: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23223: ldc_w '').style.lineHeight=1.4;}'
    //   23226: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23229: invokevirtual toString : ()Ljava/lang/String;
    //   23232: astore #10
    //   23234: goto_w -> 23350
    //   23239: new java/lang/StringBuilder
    //   23242: dup
    //   23243: ldc_w 'if(document.getElementById(''
    //   23246: invokespecial <init> : (Ljava/lang/String;)V
    //   23249: aload #13
    //   23251: iconst_0
    //   23252: aaload
    //   23253: iconst_0
    //   23254: aaload
    //   23255: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23258: ldc_w '-'
    //   23261: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23264: aload_1
    //   23265: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23268: ldc_w ''))\\n{document.getElementById(''
    //   23271: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23274: aload #13
    //   23276: iconst_0
    //   23277: aaload
    //   23278: iconst_0
    //   23279: aaload
    //   23280: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23283: ldc_w '-'
    //   23286: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23289: aload_1
    //   23290: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23293: ldc_w '').innerHTML=''
    //   23296: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23299: aload #18
    //   23301: ifnull -> 23309
    //   23304: goto_w -> 23317
    //   23309: ldc_w '&nbsp'
    //   23312: goto_w -> 23336
    //   23317: aload #18
    //   23319: ldc_w '\\n'
    //   23322: ldc_w '<br>'
    //   23325: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   23328: ldc_w '\\r'
    //   23331: ldc ''
    //   23333: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   23336: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23339: ldc_w '';}'
    //   23342: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23345: invokevirtual toString : ()Ljava/lang/String;
    //   23348: astore #10
    //   23350: goto_w -> 23724
    //   23355: new java/lang/StringBuilder
    //   23358: dup
    //   23359: ldc_w '<textarea class=flowInput  onblur=checkSize(this) onmouseover=setStyle(this) onmouseout=setStyle(this) id='
    //   23362: invokespecial <init> : (Ljava/lang/String;)V
    //   23365: aload_1
    //   23366: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23369: ldc_w ' name='
    //   23372: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23375: aload_1
    //   23376: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23379: ldc_w ' style="width:'
    //   23382: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23385: aload #13
    //   23387: iconst_0
    //   23388: aaload
    //   23389: iconst_3
    //   23390: aaload
    //   23391: ldc_w '1'
    //   23394: invokevirtual equals : (Ljava/lang/Object;)Z
    //   23397: ifne -> 23405
    //   23400: goto_w -> 23413
    //   23405: ldc_w '92'
    //   23408: goto_w -> 23416
    //   23413: ldc_w '100'
    //   23416: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23419: ldc_w '%;font-size:1em;" rows="6">'
    //   23422: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23425: aload #18
    //   23427: ifnull -> 23435
    //   23430: goto_w -> 23443
    //   23435: ldc_w '&nbsp'
    //   23438: goto_w -> 23463
    //   23443: aload #18
    //   23445: ldc_w '\\n'
    //   23448: ldc_w '\\n'+''
    //   23451: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   23454: ldc_w '\\r'
    //   23457: ldc_w '\\r'+''
    //   23460: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   23463: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23466: ldc_w '</textarea>'
    //   23469: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23472: aload #13
    //   23474: iconst_0
    //   23475: aaload
    //   23476: iconst_3
    //   23477: aaload
    //   23478: ldc_w '1'
    //   23481: invokevirtual equals : (Ljava/lang/Object;)Z
    //   23484: ifne -> 23492
    //   23487: goto_w -> 23602
    //   23492: aload #4
    //   23494: new java/lang/StringBuilder
    //   23497: dup
    //   23498: ldc_w ','
    //   23501: invokespecial <init> : (Ljava/lang/String;)V
    //   23504: aload #13
    //   23506: iconst_0
    //   23507: aaload
    //   23508: iconst_0
    //   23509: aaload
    //   23510: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23513: ldc_w ','
    //   23516: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23519: invokevirtual toString : ()Ljava/lang/String;
    //   23522: invokevirtual indexOf : (Ljava/lang/String;)I
    //   23525: iflt -> 23533
    //   23528: goto_w -> 23602
    //   23533: aload #4
    //   23535: new java/lang/StringBuilder
    //   23538: dup
    //   23539: ldc_w ','
    //   23542: invokespecial <init> : (Ljava/lang/String;)V
    //   23545: aload #13
    //   23547: iconst_0
    //   23548: aaload
    //   23549: iconst_5
    //   23550: aaload
    //   23551: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23554: ldc_w ','
    //   23557: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23560: invokevirtual toString : ()Ljava/lang/String;
    //   23563: invokevirtual indexOf : (Ljava/lang/String;)I
    //   23566: iflt -> 23574
    //   23569: goto_w -> 23602
    //   23574: new java/lang/StringBuilder
    //   23577: dup
    //   23578: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   23581: invokespecial <init> : (Ljava/lang/String;)V
    //   23584: aload_1
    //   23585: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23588: ldc_w '><label class=mustFillcolor>*</label>'
    //   23591: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23594: invokevirtual toString : ()Ljava/lang/String;
    //   23597: goto_w -> 23604
    //   23602: ldc ''
    //   23604: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23607: invokevirtual toString : ()Ljava/lang/String;
    //   23610: astore #10
    //   23612: new java/lang/StringBuilder
    //   23615: dup
    //   23616: ldc_w 'if(document.getElementById(''
    //   23619: invokespecial <init> : (Ljava/lang/String;)V
    //   23622: aload #13
    //   23624: iconst_0
    //   23625: aaload
    //   23626: iconst_0
    //   23627: aaload
    //   23628: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23631: ldc_w '-'
    //   23634: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23637: aload_1
    //   23638: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23641: ldc_w ''))\\n{document.getElementById(''
    //   23644: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23647: aload #13
    //   23649: iconst_0
    //   23650: aaload
    //   23651: iconst_0
    //   23652: aaload
    //   23653: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23656: ldc_w '-'
    //   23659: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23662: aload_1
    //   23663: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23666: ldc_w '').innerHTML=''
    //   23669: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23672: aload #14
    //   23674: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23677: ldc_w '';document.getElementById(''
    //   23680: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23683: aload #13
    //   23685: iconst_0
    //   23686: aaload
    //   23687: iconst_0
    //   23688: aaload
    //   23689: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23692: ldc_w '-'
    //   23695: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23698: aload_1
    //   23699: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23702: ldc_w '').innerHTML+=''
    //   23705: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23708: aload #10
    //   23710: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23713: ldc_w '';}'
    //   23716: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23719: invokevirtual toString : ()Ljava/lang/String;
    //   23722: astore #10
    //   23724: goto_w -> 46733
    //   23729: aload #9
    //   23731: invokeinterface getSession : ()Ljavax/servlet/http/HttpSession;
    //   23736: ldc_w 'automaticNumberReCalculation'
    //   23739: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   23744: checkcast java/lang/String
    //   23747: astore #23
    //   23749: aload #23
    //   23751: ifnonnull -> 23759
    //   23754: goto_w -> 23808
    //   23759: ldc_w '1'
    //   23762: aload #23
    //   23764: invokevirtual equals : (Ljava/lang/Object;)Z
    //   23767: ifne -> 23775
    //   23770: goto_w -> 23808
    //   23775: aload_0
    //   23776: aload #13
    //   23778: iconst_0
    //   23779: aaload
    //   23780: iconst_5
    //   23781: aaload
    //   23782: aload #13
    //   23784: iconst_0
    //   23785: aaload
    //   23786: iconst_0
    //   23787: aaload
    //   23788: invokevirtual getAutoCode : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   23791: astore #18
    //   23793: aload #9
    //   23795: invokeinterface getSession : ()Ljavax/servlet/http/HttpSession;
    //   23800: ldc_w 'automaticNumberReCalculation'
    //   23803: invokeinterface removeAttribute : (Ljava/lang/String;)V
    //   23808: aload #4
    //   23810: ifnonnull -> 23818
    //   23813: goto_w -> 24236
    //   23818: aload #4
    //   23820: new java/lang/StringBuilder
    //   23823: dup
    //   23824: ldc_w ','
    //   23827: invokespecial <init> : (Ljava/lang/String;)V
    //   23830: aload #13
    //   23832: iconst_0
    //   23833: aaload
    //   23834: iconst_0
    //   23835: aaload
    //   23836: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23839: ldc_w ','
    //   23842: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23845: invokevirtual toString : ()Ljava/lang/String;
    //   23848: invokevirtual indexOf : (Ljava/lang/String;)I
    //   23851: iflt -> 23859
    //   23854: goto_w -> 23900
    //   23859: aload #4
    //   23861: new java/lang/StringBuilder
    //   23864: dup
    //   23865: ldc_w ','
    //   23868: invokespecial <init> : (Ljava/lang/String;)V
    //   23871: aload #13
    //   23873: iconst_0
    //   23874: aaload
    //   23875: iconst_5
    //   23876: aaload
    //   23877: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23880: ldc_w ','
    //   23883: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23886: invokevirtual toString : ()Ljava/lang/String;
    //   23889: invokevirtual indexOf : (Ljava/lang/String;)I
    //   23892: ifge -> 23900
    //   23895: goto_w -> 24236
    //   23900: aload #18
    //   23902: ifnull -> 23910
    //   23905: goto_w -> 23918
    //   23910: ldc_w '&nbsp'
    //   23913: goto_w -> 23937
    //   23918: aload #18
    //   23920: ldc_w '\\n'
    //   23923: ldc_w '<br>'
    //   23926: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   23929: ldc_w '\\r'
    //   23932: ldc ''
    //   23934: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   23937: astore #10
    //   23939: aload #9
    //   23941: ldc_w 'fromDealwithResend'
    //   23944: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   23949: ifnonnull -> 23957
    //   23952: goto_w -> 24100
    //   23957: ldc_w '1'
    //   23960: aload #9
    //   23962: ldc_w 'fromDealwithResend'
    //   23965: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   23970: invokevirtual toString : ()Ljava/lang/String;
    //   23973: invokevirtual equals : (Ljava/lang/Object;)Z
    //   23976: ifne -> 23984
    //   23979: goto_w -> 24100
    //   23984: new java/lang/StringBuilder
    //   23987: dup
    //   23988: aload #10
    //   23990: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   23993: invokespecial <init> : (Ljava/lang/String;)V
    //   23996: ldc_w '<input type=hidden  id='
    //   23999: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24002: aload_1
    //   24003: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24006: ldc_w ' name='
    //   24009: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24012: aload_1
    //   24013: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24016: ldc_w ' value="'
    //   24019: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24022: aload #18
    //   24024: ifnull -> 24032
    //   24027: goto_w -> 24040
    //   24032: ldc_w '&nbsp'
    //   24035: goto_w -> 24058
    //   24040: aload #18
    //   24042: ldc_w '\\n'
    //   24045: ldc ''
    //   24047: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24050: ldc_w '\\r'
    //   24053: ldc ''
    //   24055: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24058: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24061: ldc_w '" '
    //   24064: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24067: ldc_w '>'
    //   24070: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24073: invokevirtual toString : ()Ljava/lang/String;
    //   24076: astore #10
    //   24078: new java/lang/StringBuilder
    //   24081: dup
    //   24082: aload #10
    //   24084: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   24087: invokespecial <init> : (Ljava/lang/String;)V
    //   24090: invokevirtual toString : ()Ljava/lang/String;
    //   24093: astore #10
    //   24095: goto_w -> 24231
    //   24100: ldc_w '1'
    //   24103: aload #7
    //   24105: invokevirtual equals : (Ljava/lang/Object;)Z
    //   24108: ifeq -> 24116
    //   24111: goto_w -> 24128
    //   24116: invokestatic getSYWorkflowHR : ()I
    //   24119: iconst_1
    //   24120: if_icmpeq -> 24128
    //   24123: goto_w -> 24227
    //   24128: new java/lang/StringBuilder
    //   24131: dup
    //   24132: aload #10
    //   24134: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   24137: invokespecial <init> : (Ljava/lang/String;)V
    //   24140: ldc_w '<input type=hidden  id='
    //   24143: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24146: aload_1
    //   24147: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24150: ldc_w ' name='
    //   24153: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24156: aload_1
    //   24157: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24160: ldc_w ' value="'
    //   24163: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24166: aload #18
    //   24168: ifnull -> 24176
    //   24171: goto_w -> 24184
    //   24176: ldc_w '&nbsp'
    //   24179: goto_w -> 24202
    //   24184: aload #18
    //   24186: ldc_w '\\n'
    //   24189: ldc ''
    //   24191: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24194: ldc_w '\\r'
    //   24197: ldc ''
    //   24199: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24202: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24205: ldc_w '" '
    //   24208: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24211: ldc_w ' readonly>'
    //   24214: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24217: invokevirtual toString : ()Ljava/lang/String;
    //   24220: astore #10
    //   24222: goto_w -> 24231
    //   24227: ldc ''
    //   24229: astore #14
    //   24231: goto_w -> 24608
    //   24236: aload #18
    //   24238: ifnonnull -> 24246
    //   24241: goto_w -> 24277
    //   24246: ldc_w 'null'
    //   24249: aload #18
    //   24251: invokevirtual equals : (Ljava/lang/Object;)Z
    //   24254: ifeq -> 24262
    //   24257: goto_w -> 24277
    //   24262: ldc ''
    //   24264: aload #18
    //   24266: invokevirtual equals : (Ljava/lang/Object;)Z
    //   24269: ifne -> 24277
    //   24272: goto_w -> 24286
    //   24277: aload_0
    //   24278: aload_1
    //   24279: aload #6
    //   24281: invokevirtual getAutoCode : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24284: astore #18
    //   24286: new java/lang/StringBuilder
    //   24289: dup
    //   24290: ldc_w '<input type=text class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) id='
    //   24293: invokespecial <init> : (Ljava/lang/String;)V
    //   24296: aload_1
    //   24297: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24300: ldc_w ' name='
    //   24303: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24306: aload_1
    //   24307: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24310: ldc_w ' value="'
    //   24313: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24316: aload #18
    //   24318: ifnull -> 24326
    //   24321: goto_w -> 24334
    //   24326: ldc_w '&nbsp'
    //   24329: goto_w -> 24352
    //   24334: aload #18
    //   24336: ldc_w '\\n'
    //   24339: ldc ''
    //   24341: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24344: ldc_w '\\r'
    //   24347: ldc ''
    //   24349: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   24352: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24355: ldc_w '" '
    //   24358: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24361: iload #17
    //   24363: ifne -> 24371
    //   24366: goto_w -> 24420
    //   24371: new java/lang/StringBuilder
    //   24374: dup
    //   24375: ldc_w '  onblur=checkNum(this);checkSize(this);bianhaoBlur(this,'
    //   24378: invokespecial <init> : (Ljava/lang/String;)V
    //   24381: aload #13
    //   24383: iconst_0
    //   24384: aaload
    //   24385: iconst_0
    //   24386: aaload
    //   24387: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24390: ldc_w ',"'
    //   24393: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24396: aload #13
    //   24398: iconst_0
    //   24399: aaload
    //   24400: bipush #6
    //   24402: aaload
    //   24403: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24406: ldc_w '");'
    //   24409: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24412: invokevirtual toString : ()Ljava/lang/String;
    //   24415: goto_w -> 24464
    //   24420: new java/lang/StringBuilder
    //   24423: dup
    //   24424: ldc_w ' onblur=checkSize(this);bianhaoBlur(this,'
    //   24427: invokespecial <init> : (Ljava/lang/String;)V
    //   24430: aload #13
    //   24432: iconst_0
    //   24433: aaload
    //   24434: iconst_0
    //   24435: aaload
    //   24436: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24439: ldc_w ',"'
    //   24442: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24445: aload #13
    //   24447: iconst_0
    //   24448: aaload
    //   24449: bipush #6
    //   24451: aaload
    //   24452: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24455: ldc_w '");'
    //   24458: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24461: invokevirtual toString : ()Ljava/lang/String;
    //   24464: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24467: aload #13
    //   24469: iconst_0
    //   24470: aaload
    //   24471: iconst_3
    //   24472: aaload
    //   24473: ldc_w '1'
    //   24476: invokevirtual equals : (Ljava/lang/Object;)Z
    //   24479: ifne -> 24487
    //   24482: goto_w -> 24597
    //   24487: aload #4
    //   24489: new java/lang/StringBuilder
    //   24492: dup
    //   24493: ldc_w ','
    //   24496: invokespecial <init> : (Ljava/lang/String;)V
    //   24499: aload #13
    //   24501: iconst_0
    //   24502: aaload
    //   24503: iconst_0
    //   24504: aaload
    //   24505: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24508: ldc_w ','
    //   24511: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24514: invokevirtual toString : ()Ljava/lang/String;
    //   24517: invokevirtual indexOf : (Ljava/lang/String;)I
    //   24520: iflt -> 24528
    //   24523: goto_w -> 24597
    //   24528: aload #4
    //   24530: new java/lang/StringBuilder
    //   24533: dup
    //   24534: ldc_w ','
    //   24537: invokespecial <init> : (Ljava/lang/String;)V
    //   24540: aload #13
    //   24542: iconst_0
    //   24543: aaload
    //   24544: iconst_5
    //   24545: aaload
    //   24546: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24549: ldc_w ','
    //   24552: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24555: invokevirtual toString : ()Ljava/lang/String;
    //   24558: invokevirtual indexOf : (Ljava/lang/String;)I
    //   24561: iflt -> 24569
    //   24564: goto_w -> 24597
    //   24569: new java/lang/StringBuilder
    //   24572: dup
    //   24573: ldc_w ' sytle=width:80%;font-size:1em; ><input type=hidden name=mustWrite id=mustWrite value='
    //   24576: invokespecial <init> : (Ljava/lang/String;)V
    //   24579: aload_1
    //   24580: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24583: ldc_w '><label class=mustFillcolor>*</label>'
    //   24586: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24589: invokevirtual toString : ()Ljava/lang/String;
    //   24592: goto_w -> 24600
    //   24597: ldc_w ' sytle=width:95%;font-size:1em; >'
    //   24600: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24603: invokevirtual toString : ()Ljava/lang/String;
    //   24606: astore #10
    //   24608: new java/lang/StringBuilder
    //   24611: dup
    //   24612: ldc_w 'if(document.getElementById(''
    //   24615: invokespecial <init> : (Ljava/lang/String;)V
    //   24618: aload #13
    //   24620: iconst_0
    //   24621: aaload
    //   24622: iconst_0
    //   24623: aaload
    //   24624: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24627: ldc_w '-'
    //   24630: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24633: aload_1
    //   24634: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24637: ldc_w ''))\\n{document.getElementById(''
    //   24640: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24643: aload #13
    //   24645: iconst_0
    //   24646: aaload
    //   24647: iconst_0
    //   24648: aaload
    //   24649: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24652: ldc_w '-'
    //   24655: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24658: aload_1
    //   24659: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24662: ldc_w '').innerHTML=''
    //   24665: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24668: aload #14
    //   24670: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24673: ldc_w '';document.getElementById(''
    //   24676: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24679: aload #13
    //   24681: iconst_0
    //   24682: aaload
    //   24683: iconst_0
    //   24684: aaload
    //   24685: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24688: ldc_w '-'
    //   24691: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24694: aload_1
    //   24695: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24698: ldc_w '').innerHTML+=''
    //   24701: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24704: aload #10
    //   24706: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24709: ldc_w '';}'
    //   24712: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24715: invokevirtual toString : ()Ljava/lang/String;
    //   24718: astore #10
    //   24720: goto_w -> 46733
    //   24725: aload #4
    //   24727: ifnonnull -> 24735
    //   24730: goto_w -> 24830
    //   24735: aload #4
    //   24737: new java/lang/StringBuilder
    //   24740: dup
    //   24741: ldc_w ','
    //   24744: invokespecial <init> : (Ljava/lang/String;)V
    //   24747: aload #13
    //   24749: iconst_0
    //   24750: aaload
    //   24751: iconst_0
    //   24752: aaload
    //   24753: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24756: ldc_w ','
    //   24759: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24762: invokevirtual toString : ()Ljava/lang/String;
    //   24765: invokevirtual indexOf : (Ljava/lang/String;)I
    //   24768: iflt -> 24776
    //   24771: goto_w -> 24817
    //   24776: aload #4
    //   24778: new java/lang/StringBuilder
    //   24781: dup
    //   24782: ldc_w ','
    //   24785: invokespecial <init> : (Ljava/lang/String;)V
    //   24788: aload #13
    //   24790: iconst_0
    //   24791: aaload
    //   24792: iconst_5
    //   24793: aaload
    //   24794: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24797: ldc_w ','
    //   24800: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24803: invokevirtual toString : ()Ljava/lang/String;
    //   24806: invokevirtual indexOf : (Ljava/lang/String;)I
    //   24809: ifge -> 24817
    //   24812: goto_w -> 24830
    //   24817: aload #18
    //   24819: astore #10
    //   24821: ldc ''
    //   24823: astore #14
    //   24825: goto_w -> 24919
    //   24830: new java/lang/StringBuilder
    //   24833: dup
    //   24834: ldc_w '<input type=hidden id='
    //   24837: invokespecial <init> : (Ljava/lang/String;)V
    //   24840: aload_1
    //   24841: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24844: ldc_w '_codeId name='
    //   24847: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24850: aload_1
    //   24851: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24854: ldc_w '_codeId value="">'
    //   24857: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24860: invokevirtual toString : ()Ljava/lang/String;
    //   24863: astore #10
    //   24865: new java/lang/StringBuilder
    //   24868: dup
    //   24869: aload #10
    //   24871: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   24874: invokespecial <init> : (Ljava/lang/String;)V
    //   24877: ldc_w '<input type=text  class=flowInput id='
    //   24880: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24883: aload_1
    //   24884: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24887: ldc_w ' name='
    //   24890: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24893: aload_1
    //   24894: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24897: ldc_w ' value="'
    //   24900: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24903: aload #18
    //   24905: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24908: ldc_w '" style=width:85%;font-size:1em;vertical-align:middle; readonly  ><img  title=选择编号  src=/jsoa/images/bianhaoicon.gif  onclick=getNewAutoCode(this)  style=float:right;cursor:pointer;vertical-align:middle />'
    //   24911: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24914: invokevirtual toString : ()Ljava/lang/String;
    //   24917: astore #10
    //   24919: new java/lang/StringBuilder
    //   24922: dup
    //   24923: ldc_w 'if(document.getElementById(''
    //   24926: invokespecial <init> : (Ljava/lang/String;)V
    //   24929: aload #13
    //   24931: iconst_0
    //   24932: aaload
    //   24933: iconst_0
    //   24934: aaload
    //   24935: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24938: ldc_w '-'
    //   24941: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24944: aload_1
    //   24945: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24948: ldc_w ''))\\n{document.getElementById(''
    //   24951: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24954: aload #13
    //   24956: iconst_0
    //   24957: aaload
    //   24958: iconst_0
    //   24959: aaload
    //   24960: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24963: ldc_w '-'
    //   24966: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24969: aload_1
    //   24970: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24973: ldc_w '').innerHTML=''
    //   24976: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24979: aload #14
    //   24981: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24984: ldc_w '';document.getElementById(''
    //   24987: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24990: aload #13
    //   24992: iconst_0
    //   24993: aaload
    //   24994: iconst_0
    //   24995: aaload
    //   24996: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   24999: ldc_w '-'
    //   25002: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25005: aload_1
    //   25006: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25009: ldc_w '').innerHTML+=''
    //   25012: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25015: aload #10
    //   25017: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25020: ldc_w '';}'
    //   25023: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25026: invokevirtual toString : ()Ljava/lang/String;
    //   25029: astore #10
    //   25031: goto_w -> 46733
    //   25036: goto_w -> 46733
    //   25041: aload #4
    //   25043: ifnonnull -> 25051
    //   25046: goto_w -> 25358
    //   25051: aload #4
    //   25053: new java/lang/StringBuilder
    //   25056: dup
    //   25057: ldc_w ','
    //   25060: invokespecial <init> : (Ljava/lang/String;)V
    //   25063: aload #13
    //   25065: iconst_0
    //   25066: aaload
    //   25067: iconst_0
    //   25068: aaload
    //   25069: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25072: ldc_w ','
    //   25075: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25078: invokevirtual toString : ()Ljava/lang/String;
    //   25081: invokevirtual indexOf : (Ljava/lang/String;)I
    //   25084: iflt -> 25092
    //   25087: goto_w -> 25133
    //   25092: aload #4
    //   25094: new java/lang/StringBuilder
    //   25097: dup
    //   25098: ldc_w ','
    //   25101: invokespecial <init> : (Ljava/lang/String;)V
    //   25104: aload #13
    //   25106: iconst_0
    //   25107: aaload
    //   25108: iconst_5
    //   25109: aaload
    //   25110: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25113: ldc_w ','
    //   25116: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25119: invokevirtual toString : ()Ljava/lang/String;
    //   25122: invokevirtual indexOf : (Ljava/lang/String;)I
    //   25125: ifge -> 25133
    //   25128: goto_w -> 25358
    //   25133: new java/lang/StringBuilder
    //   25136: dup
    //   25137: ldc_w 'if(document.getElementById(''
    //   25140: invokespecial <init> : (Ljava/lang/String;)V
    //   25143: aload #13
    //   25145: iconst_0
    //   25146: aaload
    //   25147: iconst_0
    //   25148: aaload
    //   25149: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25152: ldc_w '-'
    //   25155: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25158: aload_1
    //   25159: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25162: ldc_w ''))\\n{'
    //   25165: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25168: ldc_w 'document.getElementById(''
    //   25171: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25174: aload #13
    //   25176: iconst_0
    //   25177: aaload
    //   25178: iconst_0
    //   25179: aaload
    //   25180: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25183: ldc_w '-'
    //   25186: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25189: aload_1
    //   25190: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25193: ldc_w '').innerHTML=''
    //   25196: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25199: aload #18
    //   25201: ifnull -> 25209
    //   25204: goto_w -> 25217
    //   25209: ldc_w '&nbsp'
    //   25212: goto_w -> 25244
    //   25217: aload #18
    //   25219: ldc_w '\\n'
    //   25222: ldc ''
    //   25224: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   25227: ldc_w '\\r'
    //   25230: ldc ''
    //   25232: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   25235: ldc_w '&quot;'
    //   25238: ldc_w '"'
    //   25241: invokevirtual replace : (Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
    //   25244: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25247: ldc_w '';}'
    //   25250: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25253: invokevirtual toString : ()Ljava/lang/String;
    //   25256: astore #10
    //   25258: new java/lang/StringBuilder
    //   25261: dup
    //   25262: ldc_w 'if(document.getElementById('mainFormHTMLcontent'))\\n{document.getElementById('mainFormHTMLcontent').innerHTML+='<iframe id=frmhtmlId src="/jsoa/jsflow/showHtml.jsp?fieldName='
    //   25265: invokespecial <init> : (Ljava/lang/String;)V
    //   25268: aload_1
    //   25269: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25272: ldc_w '&divName='
    //   25275: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25278: aload #13
    //   25280: iconst_0
    //   25281: aaload
    //   25282: iconst_0
    //   25283: aaload
    //   25284: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25287: ldc_w '-'
    //   25290: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25293: aload_1
    //   25294: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25297: ldc_w '&tableId='
    //   25300: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25303: aload #13
    //   25305: iconst_0
    //   25306: aaload
    //   25307: bipush #9
    //   25309: aaload
    //   25310: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25313: ldc_w '&infoId='
    //   25316: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25319: aload_2
    //   25320: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25323: ldc_w '&time='
    //   25326: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25329: new java/util/Date
    //   25332: dup
    //   25333: invokespecial <init> : ()V
    //   25336: invokevirtual getTime : ()J
    //   25339: invokevirtual append : (J)Ljava/lang/StringBuilder;
    //   25342: ldc_w '" style="width:110px;height:110px;display:;">';}'
    //   25345: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25348: invokevirtual toString : ()Ljava/lang/String;
    //   25351: astore #10
    //   25353: goto_w -> 25916
    //   25358: ldc_w 'edit8'
    //   25361: astore #24
    //   25363: aload #9
    //   25365: invokestatic isMSIE : (Ljavax/servlet/http/HttpServletRequest;)Z
    //   25368: ifne -> 25376
    //   25371: goto_w -> 25381
    //   25376: ldc_w 'edit'
    //   25379: astore #24
    //   25381: new java/lang/StringBuilder
    //   25384: dup
    //   25385: ldc_w '<input type=hidden id='
    //   25388: invokespecial <init> : (Ljava/lang/String;)V
    //   25391: aload_1
    //   25392: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25395: ldc_w ' name='
    //   25398: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25401: aload_1
    //   25402: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25405: ldc_w ' value=''>'
    //   25408: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25411: invokevirtual toString : ()Ljava/lang/String;
    //   25414: astore #25
    //   25416: new java/lang/StringBuilder
    //   25419: dup
    //   25420: ldc_w '<IFRAME id=''
    //   25423: invokespecial <init> : (Ljava/lang/String;)V
    //   25426: aload_1
    //   25427: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25430: ldc_w '_html' src='/jsoa/public/'
    //   25433: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25436: aload #24
    //   25438: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25441: ldc_w '/ewebeditor.htm?id='
    //   25444: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25447: aload_1
    //   25448: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25451: ldc_w '&style=coolblue&lang=zh_cn' '
    //   25454: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25457: ldc_w 'frameborder=0 scrolling='no' width='98%' height='350'></IFRAME>'
    //   25460: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25463: ldc_w '<input type=hidden name=hasHtml value='
    //   25466: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25469: aload_1
    //   25470: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25473: ldc_w '>'
    //   25476: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25479: aload #13
    //   25481: iconst_0
    //   25482: aaload
    //   25483: iconst_3
    //   25484: aaload
    //   25485: ldc_w '1'
    //   25488: invokevirtual equals : (Ljava/lang/Object;)Z
    //   25491: ifne -> 25499
    //   25494: goto_w -> 25631
    //   25499: aload #4
    //   25501: new java/lang/StringBuilder
    //   25504: dup
    //   25505: ldc_w ','
    //   25508: invokespecial <init> : (Ljava/lang/String;)V
    //   25511: aload #13
    //   25513: iconst_0
    //   25514: aaload
    //   25515: iconst_0
    //   25516: aaload
    //   25517: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25520: ldc_w ','
    //   25523: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25526: invokevirtual toString : ()Ljava/lang/String;
    //   25529: invokevirtual indexOf : (Ljava/lang/String;)I
    //   25532: iflt -> 25540
    //   25535: goto_w -> 25631
    //   25540: aload #4
    //   25542: new java/lang/StringBuilder
    //   25545: dup
    //   25546: ldc_w ','
    //   25549: invokespecial <init> : (Ljava/lang/String;)V
    //   25552: aload #13
    //   25554: iconst_0
    //   25555: aaload
    //   25556: iconst_5
    //   25557: aaload
    //   25558: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25561: ldc_w ','
    //   25564: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25567: invokevirtual toString : ()Ljava/lang/String;
    //   25570: invokevirtual indexOf : (Ljava/lang/String;)I
    //   25573: iflt -> 25581
    //   25576: goto_w -> 25631
    //   25581: new java/lang/StringBuilder
    //   25584: dup
    //   25585: ldc_w '<input type=hidden name=hasHtml id=hasHtml value='
    //   25588: invokespecial <init> : (Ljava/lang/String;)V
    //   25591: aload_1
    //   25592: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25595: ldc_w '>'
    //   25598: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25601: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   25604: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25607: aload_1
    //   25608: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25611: ldc_w '>'
    //   25614: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25617: ldc_w '<label class=mustFillcolor>*</label>'
    //   25620: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25623: invokevirtual toString : ()Ljava/lang/String;
    //   25626: goto_w -> 25633
    //   25631: ldc ''
    //   25633: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25636: invokevirtual toString : ()Ljava/lang/String;
    //   25639: astore #26
    //   25641: new java/lang/StringBuilder
    //   25644: dup
    //   25645: ldc_w 'if(document.getElementById(''
    //   25648: invokespecial <init> : (Ljava/lang/String;)V
    //   25651: aload #13
    //   25653: iconst_0
    //   25654: aaload
    //   25655: iconst_0
    //   25656: aaload
    //   25657: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25660: ldc_w '-'
    //   25663: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25666: aload_1
    //   25667: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25670: ldc_w ''))\\n{'
    //   25673: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25676: ldc_w 'document.getElementById(''
    //   25679: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25682: aload #13
    //   25684: iconst_0
    //   25685: aaload
    //   25686: iconst_0
    //   25687: aaload
    //   25688: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25691: ldc_w '-'
    //   25694: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25697: aload_1
    //   25698: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25701: ldc_w '').innerHTML=''
    //   25704: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25707: aload #14
    //   25709: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25712: ldc_w '';'
    //   25715: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25718: ldc_w 'document.getElementById(''
    //   25721: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25724: aload #13
    //   25726: iconst_0
    //   25727: aaload
    //   25728: iconst_0
    //   25729: aaload
    //   25730: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25733: ldc_w '-'
    //   25736: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25739: aload_1
    //   25740: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25743: ldc_w '').innerHTML+="'
    //   25746: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25749: aload #25
    //   25751: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25754: ldc_w '";'
    //   25757: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25760: ldc_w 'document.getElementById(''
    //   25763: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25766: aload #13
    //   25768: iconst_0
    //   25769: aaload
    //   25770: iconst_0
    //   25771: aaload
    //   25772: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25775: ldc_w '-'
    //   25778: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25781: aload_1
    //   25782: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25785: ldc_w '').innerHTML+="'
    //   25788: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25791: aload #26
    //   25793: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25796: ldc_w '";}'
    //   25799: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25802: invokevirtual toString : ()Ljava/lang/String;
    //   25805: astore #10
    //   25807: new java/lang/StringBuilder
    //   25810: dup
    //   25811: aload #10
    //   25813: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   25816: invokespecial <init> : (Ljava/lang/String;)V
    //   25819: ldc_w 'if(document.getElementById('mainFormHTMLcontent'))\\n{document.getElementById('mainFormHTMLcontent').innerHTML+='<iframe id=frmhtmlId src="/jsoa/jsflow/showHtml.jsp?fieldName='
    //   25822: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25825: aload_1
    //   25826: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25829: ldc_w '&divName='
    //   25832: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25835: aload #13
    //   25837: iconst_0
    //   25838: aaload
    //   25839: iconst_0
    //   25840: aaload
    //   25841: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25844: ldc_w '-'
    //   25847: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25850: aload_1
    //   25851: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25854: ldc_w '&tableId='
    //   25857: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25860: aload #13
    //   25862: iconst_0
    //   25863: aaload
    //   25864: bipush #9
    //   25866: aaload
    //   25867: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25870: ldc_w '&infoId='
    //   25873: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25876: aload_2
    //   25877: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25880: ldc_w '&isEdit=1'
    //   25883: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25886: ldc_w '&time='
    //   25889: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25892: new java/util/Date
    //   25895: dup
    //   25896: invokespecial <init> : ()V
    //   25899: invokevirtual getTime : ()J
    //   25902: invokevirtual append : (J)Ljava/lang/StringBuilder;
    //   25905: ldc_w '" style="width:110px;height:110px;display:;">';}'
    //   25908: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25911: invokevirtual toString : ()Ljava/lang/String;
    //   25914: astore #10
    //   25916: goto_w -> 46733
    //   25921: goto_w -> 46733
    //   25926: bipush #25
    //   25928: istore #24
    //   25930: aload #18
    //   25932: ifnonnull -> 25940
    //   25935: goto_w -> 26028
    //   25940: aload #18
    //   25942: ldc_w ';'
    //   25945: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   25948: arraylength
    //   25949: iconst_2
    //   25950: if_icmpge -> 25958
    //   25953: goto_w -> 26028
    //   25958: aload #18
    //   25960: ldc_w ';'
    //   25963: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   25966: iconst_0
    //   25967: aaload
    //   25968: ifnonnull -> 25976
    //   25971: goto_w -> 26023
    //   25976: aload #18
    //   25978: ldc_w ';'
    //   25981: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   25984: iconst_0
    //   25985: aaload
    //   25986: ldc_w ','
    //   25989: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   25992: arraylength
    //   25993: ifgt -> 26001
    //   25996: goto_w -> 26023
    //   26001: aload #18
    //   26003: ldc_w ';'
    //   26006: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   26009: iconst_0
    //   26010: aaload
    //   26011: ldc_w ','
    //   26014: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   26017: arraylength
    //   26018: iload #24
    //   26020: imul
    //   26021: istore #24
    //   26023: goto_w -> 26121
    //   26028: aload #18
    //   26030: ifnonnull -> 26038
    //   26033: goto_w -> 26121
    //   26038: aload #18
    //   26040: ldc_w ':'
    //   26043: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   26046: arraylength
    //   26047: iconst_2
    //   26048: if_icmpge -> 26056
    //   26051: goto_w -> 26121
    //   26056: aload #18
    //   26058: ldc_w ':'
    //   26061: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   26064: iconst_0
    //   26065: aaload
    //   26066: ifnonnull -> 26074
    //   26069: goto_w -> 26121
    //   26074: aload #18
    //   26076: ldc_w ':'
    //   26079: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   26082: iconst_0
    //   26083: aaload
    //   26084: ldc_w ','
    //   26087: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   26090: arraylength
    //   26091: ifgt -> 26099
    //   26094: goto_w -> 26121
    //   26099: aload #18
    //   26101: ldc_w ';'
    //   26104: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   26107: iconst_0
    //   26108: aaload
    //   26109: ldc_w ','
    //   26112: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   26115: arraylength
    //   26116: iload #24
    //   26118: imul
    //   26119: istore #24
    //   26121: iload #24
    //   26123: bipush #30
    //   26125: if_icmplt -> 26133
    //   26128: goto_w -> 26137
    //   26133: bipush #30
    //   26135: istore #24
    //   26137: aload #4
    //   26139: ifnonnull -> 26147
    //   26142: goto_w -> 27259
    //   26147: aload #4
    //   26149: new java/lang/StringBuilder
    //   26152: dup
    //   26153: ldc_w ','
    //   26156: invokespecial <init> : (Ljava/lang/String;)V
    //   26159: aload #13
    //   26161: iconst_0
    //   26162: aaload
    //   26163: iconst_0
    //   26164: aaload
    //   26165: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26168: ldc_w ','
    //   26171: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26174: invokevirtual toString : ()Ljava/lang/String;
    //   26177: invokevirtual indexOf : (Ljava/lang/String;)I
    //   26180: iflt -> 26188
    //   26183: goto_w -> 26229
    //   26188: aload #4
    //   26190: new java/lang/StringBuilder
    //   26193: dup
    //   26194: ldc_w ','
    //   26197: invokespecial <init> : (Ljava/lang/String;)V
    //   26200: aload #13
    //   26202: iconst_0
    //   26203: aaload
    //   26204: iconst_5
    //   26205: aaload
    //   26206: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26209: ldc_w ','
    //   26212: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26215: invokevirtual toString : ()Ljava/lang/String;
    //   26218: invokevirtual indexOf : (Ljava/lang/String;)I
    //   26221: ifge -> 26229
    //   26224: goto_w -> 27259
    //   26229: ldc ''
    //   26231: astore #25
    //   26233: ldc ''
    //   26235: astore #27
    //   26237: aload #18
    //   26239: invokevirtual length : ()I
    //   26242: ifgt -> 26250
    //   26245: goto_w -> 26447
    //   26250: iconst_0
    //   26251: anewarray java/lang/String
    //   26254: astore #29
    //   26256: iconst_0
    //   26257: anewarray java/lang/String
    //   26260: astore #30
    //   26262: aload #18
    //   26264: ldc_w ';'
    //   26267: invokevirtual indexOf : (Ljava/lang/String;)I
    //   26270: ifge -> 26278
    //   26273: goto_w -> 26331
    //   26278: aload #18
    //   26280: iconst_0
    //   26281: aload #18
    //   26283: ldc_w ';'
    //   26286: invokevirtual indexOf : (Ljava/lang/String;)I
    //   26289: invokevirtual substring : (II)Ljava/lang/String;
    //   26292: astore #26
    //   26294: aload #18
    //   26296: aload #18
    //   26298: ldc_w ';'
    //   26301: invokevirtual indexOf : (Ljava/lang/String;)I
    //   26304: iconst_1
    //   26305: iadd
    //   26306: invokevirtual substring : (I)Ljava/lang/String;
    //   26309: astore #28
    //   26311: aload #26
    //   26313: ldc_w ','
    //   26316: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   26319: astore #29
    //   26321: aload #28
    //   26323: ldc_w ','
    //   26326: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   26329: astore #30
    //   26331: iconst_0
    //   26332: istore #31
    //   26334: goto_w -> 26434
    //   26339: ldc ''
    //   26341: aload #29
    //   26343: iload #31
    //   26345: aaload
    //   26346: invokevirtual equals : (Ljava/lang/Object;)Z
    //   26349: ifeq -> 26357
    //   26352: goto_w -> 26431
    //   26357: new java/lang/StringBuilder
    //   26360: dup
    //   26361: aload #25
    //   26363: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   26366: invokespecial <init> : (Ljava/lang/String;)V
    //   26369: ldc_w ';'
    //   26372: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26375: aload #29
    //   26377: iload #31
    //   26379: aaload
    //   26380: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26383: ldc_w ';'
    //   26386: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26389: invokevirtual toString : ()Ljava/lang/String;
    //   26392: astore #25
    //   26394: new java/lang/StringBuilder
    //   26397: dup
    //   26398: aload #27
    //   26400: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   26403: invokespecial <init> : (Ljava/lang/String;)V
    //   26406: ldc_w ';'
    //   26409: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26412: aload #30
    //   26414: iload #31
    //   26416: aaload
    //   26417: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26420: ldc_w ';'
    //   26423: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26426: invokevirtual toString : ()Ljava/lang/String;
    //   26429: astore #27
    //   26431: iinc #31, 1
    //   26434: iload #31
    //   26436: aload #29
    //   26438: arraylength
    //   26439: if_icmpge -> 26447
    //   26442: goto_w -> 26339
    //   26447: aload #18
    //   26449: ldc_w ';'
    //   26452: invokevirtual indexOf : (Ljava/lang/String;)I
    //   26455: ifgt -> 26463
    //   26458: goto_w -> 27172
    //   26463: aload #18
    //   26465: ldc_w ';'
    //   26468: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   26471: astore #29
    //   26473: aload #29
    //   26475: iconst_0
    //   26476: aaload
    //   26477: ldc_w ','
    //   26480: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   26483: astore #30
    //   26485: aload #29
    //   26487: iconst_1
    //   26488: aaload
    //   26489: ldc_w ','
    //   26492: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   26495: astore #31
    //   26497: aload #9
    //   26499: ldc_w 'user-agent'
    //   26502: invokeinterface getHeader : (Ljava/lang/String;)Ljava/lang/String;
    //   26507: astore #32
    //   26509: iconst_0
    //   26510: istore #33
    //   26512: aload #32
    //   26514: ldc_w 'iPad'
    //   26517: invokevirtual indexOf : (Ljava/lang/String;)I
    //   26520: iconst_m1
    //   26521: if_icmpeq -> 26529
    //   26524: goto_w -> 26546
    //   26529: aload #32
    //   26531: ldc_w 'ipad'
    //   26534: invokevirtual indexOf : (Ljava/lang/String;)I
    //   26537: iconst_m1
    //   26538: if_icmpne -> 26546
    //   26541: goto_w -> 26549
    //   26546: iconst_1
    //   26547: istore #33
    //   26549: invokestatic getFujianWatchType : ()Ljava/lang/String;
    //   26552: ldc_w '0'
    //   26555: invokevirtual equals : (Ljava/lang/Object;)Z
    //   26558: ifne -> 26566
    //   26561: goto_w -> 26974
    //   26566: iconst_0
    //   26567: istore #34
    //   26569: goto_w -> 26779
    //   26574: new java/lang/StringBuilder
    //   26577: dup
    //   26578: ldc_w '/jsoa/download.jsp?'
    //   26581: invokespecial <init> : (Ljava/lang/String;)V
    //   26584: new java/lang/StringBuilder
    //   26587: dup
    //   26588: ldc_w 'FileName='
    //   26591: invokespecial <init> : (Ljava/lang/String;)V
    //   26594: aload #30
    //   26596: iload #34
    //   26598: aaload
    //   26599: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26602: ldc_w '&name='
    //   26605: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26608: aload #31
    //   26610: iload #34
    //   26612: aaload
    //   26613: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26616: ldc_w '&path=customform'
    //   26619: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26622: invokevirtual toString : ()Ljava/lang/String;
    //   26625: invokestatic BASE64EncoderNoBR : (Ljava/lang/String;)Ljava/lang/String;
    //   26628: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26631: invokevirtual toString : ()Ljava/lang/String;
    //   26634: astore #35
    //   26636: ldc_w 'JSMainWinOpen'
    //   26639: astore #36
    //   26641: ldc_w 'ynnt'
    //   26644: invokestatic getCustomerName : ()Ljava/lang/String;
    //   26647: invokevirtual equals : (Ljava/lang/Object;)Z
    //   26650: ifne -> 26658
    //   26653: goto_w -> 26663
    //   26658: ldc_w 'downloadwindow'
    //   26661: astore #36
    //   26663: new java/lang/StringBuilder
    //   26666: dup
    //   26667: aload #10
    //   26669: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   26672: invokespecial <init> : (Ljava/lang/String;)V
    //   26675: ldc_w '<div align="left" title="点击下载">&nbsp;<a style=font-size:'
    //   26678: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26681: invokestatic getFujianFontSize : ()Ljava/lang/String;
    //   26684: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26687: ldc_w ' href="javascript:'
    //   26690: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26693: aload #36
    //   26695: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26698: ldc_w '(\''
    //   26701: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26704: aload #35
    //   26706: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26709: ldc_w '\',\''
    //   26712: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26715: invokestatic getFileShowUse : ()I
    //   26718: iconst_1
    //   26719: if_icmpne -> 26727
    //   26722: goto_w -> 26737
    //   26727: iload #33
    //   26729: ifne -> 26737
    //   26732: goto_w -> 26745
    //   26737: ldc_w 'showPage'
    //   26740: goto_w -> 26748
    //   26745: ldc_w 'myIframe'
    //   26748: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26751: ldc_w '\')">'
    //   26754: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26757: aload #31
    //   26759: iload #34
    //   26761: aaload
    //   26762: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26765: ldc_w '</a></div>'
    //   26768: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26771: invokevirtual toString : ()Ljava/lang/String;
    //   26774: astore #10
    //   26776: iinc #34, 1
    //   26779: iload #34
    //   26781: aload #30
    //   26783: arraylength
    //   26784: if_icmpge -> 26792
    //   26787: goto_w -> 26574
    //   26792: invokestatic getFujianBatchDownload : ()Ljava/lang/String;
    //   26795: ldc_w '1'
    //   26798: invokevirtual equals : (Ljava/lang/Object;)Z
    //   26801: ifne -> 26809
    //   26804: goto_w -> 26969
    //   26809: aload #30
    //   26811: arraylength
    //   26812: iconst_1
    //   26813: if_icmpgt -> 26821
    //   26816: goto_w -> 26969
    //   26821: new java/lang/StringBuilder
    //   26824: dup
    //   26825: ldc_w '/jsoa/downloadBatch.jsp?'
    //   26828: invokespecial <init> : (Ljava/lang/String;)V
    //   26831: new java/lang/StringBuilder
    //   26834: dup
    //   26835: ldc_w 'FileName='
    //   26838: invokespecial <init> : (Ljava/lang/String;)V
    //   26841: aload #29
    //   26843: iconst_0
    //   26844: aaload
    //   26845: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26848: ldc_w '&name='
    //   26851: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26854: aload #29
    //   26856: iconst_1
    //   26857: aaload
    //   26858: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26861: ldc_w '&path=customform'
    //   26864: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26867: invokevirtual toString : ()Ljava/lang/String;
    //   26870: invokestatic BASE64EncoderNoBR : (Ljava/lang/String;)Ljava/lang/String;
    //   26873: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26876: invokevirtual toString : ()Ljava/lang/String;
    //   26879: astore #34
    //   26881: new java/lang/StringBuilder
    //   26884: dup
    //   26885: aload #10
    //   26887: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   26890: invokespecial <init> : (Ljava/lang/String;)V
    //   26893: ldc_w '<div align="left" title="全部下载">&nbsp;<a style=color:blue;font-size:'
    //   26896: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26899: invokestatic getFujianFontSize : ()Ljava/lang/String;
    //   26902: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26905: ldc_w ' href="javascript:JSMainWinOpen(\''
    //   26908: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26911: aload #34
    //   26913: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26916: ldc_w '\',\''
    //   26919: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26922: invokestatic getFileShowUse : ()I
    //   26925: iconst_1
    //   26926: if_icmpne -> 26934
    //   26929: goto_w -> 26944
    //   26934: iload #33
    //   26936: ifne -> 26944
    //   26939: goto_w -> 26952
    //   26944: ldc_w 'showPage'
    //   26947: goto_w -> 26955
    //   26952: ldc_w 'myIframe'
    //   26955: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26958: ldc_w '\')"><b>全部下载</b></a></div>'
    //   26961: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   26964: invokevirtual toString : ()Ljava/lang/String;
    //   26967: astore #10
    //   26969: goto_w -> 27172
    //   26974: ldc ''
    //   26976: astore #34
    //   26978: aload #30
    //   26980: arraylength
    //   26981: iconst_1
    //   26982: if_icmpeq -> 26990
    //   26985: goto_w -> 27055
    //   26990: new java/lang/StringBuilder
    //   26993: dup
    //   26994: ldc_w '/jsoa/download.jsp?'
    //   26997: invokespecial <init> : (Ljava/lang/String;)V
    //   27000: new java/lang/StringBuilder
    //   27003: dup
    //   27004: ldc_w 'FileName='
    //   27007: invokespecial <init> : (Ljava/lang/String;)V
    //   27010: aload #30
    //   27012: iconst_0
    //   27013: aaload
    //   27014: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27017: ldc_w '&name='
    //   27020: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27023: aload #31
    //   27025: iconst_0
    //   27026: aaload
    //   27027: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27030: ldc_w '&path=customform'
    //   27033: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27036: invokevirtual toString : ()Ljava/lang/String;
    //   27039: invokestatic BASE64EncoderNoBR : (Ljava/lang/String;)Ljava/lang/String;
    //   27042: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27045: invokevirtual toString : ()Ljava/lang/String;
    //   27048: astore #34
    //   27050: goto_w -> 27115
    //   27055: new java/lang/StringBuilder
    //   27058: dup
    //   27059: ldc_w '/jsoa/public/jsp/doc_receivewatchpro.jsp?'
    //   27062: invokespecial <init> : (Ljava/lang/String;)V
    //   27065: new java/lang/StringBuilder
    //   27068: dup
    //   27069: ldc_w 'FileName='
    //   27072: invokespecial <init> : (Ljava/lang/String;)V
    //   27075: aload #29
    //   27077: iconst_0
    //   27078: aaload
    //   27079: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27082: ldc_w '&name='
    //   27085: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27088: aload #29
    //   27090: iconst_1
    //   27091: aaload
    //   27092: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27095: ldc_w '&path=customform'
    //   27098: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27101: invokevirtual toString : ()Ljava/lang/String;
    //   27104: invokestatic BASE64EncoderNoBR : (Ljava/lang/String;)Ljava/lang/String;
    //   27107: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27110: invokevirtual toString : ()Ljava/lang/String;
    //   27113: astore #34
    //   27115: aload #30
    //   27117: arraylength
    //   27118: ifne -> 27126
    //   27121: goto_w -> 27172
    //   27126: new java/lang/StringBuilder
    //   27129: dup
    //   27130: aload #10
    //   27132: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   27135: invokespecial <init> : (Ljava/lang/String;)V
    //   27138: ldc_w '<div style="cursor:pointer;" onclick="JSMainWinOpen4(\''
    //   27141: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27144: aload #34
    //   27146: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27149: ldc_w '\',\'\',\'\',\'1100\',\'680\')">查看附件（<span name = "sp_num">'
    //   27152: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27155: aload #30
    //   27157: arraylength
    //   27158: invokevirtual append : (I)Ljava/lang/StringBuilder;
    //   27161: ldc_w '</span>）</div>'
    //   27164: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27167: invokevirtual toString : ()Ljava/lang/String;
    //   27170: astore #10
    //   27172: new java/lang/StringBuilder
    //   27175: dup
    //   27176: ldc_w 'if(document.getElementById(''
    //   27179: invokespecial <init> : (Ljava/lang/String;)V
    //   27182: aload #13
    //   27184: iconst_0
    //   27185: aaload
    //   27186: iconst_0
    //   27187: aaload
    //   27188: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27191: ldc_w '-'
    //   27194: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27197: aload_1
    //   27198: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27201: ldc_w '')){'
    //   27204: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27207: ldc_w '\\ndocument.getElementById(''
    //   27210: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27213: aload #13
    //   27215: iconst_0
    //   27216: aaload
    //   27217: iconst_0
    //   27218: aaload
    //   27219: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27222: ldc_w '-'
    //   27225: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27228: aload_1
    //   27229: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27232: ldc_w '').innerHTML=''
    //   27235: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27238: aload #10
    //   27240: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27243: ldc_w '';}'
    //   27246: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27249: invokevirtual toString : ()Ljava/lang/String;
    //   27252: astore #10
    //   27254: goto_w -> 27934
    //   27259: ldc ''
    //   27261: astore #25
    //   27263: ldc ''
    //   27265: astore #27
    //   27267: aload #18
    //   27269: invokevirtual length : ()I
    //   27272: ifgt -> 27280
    //   27275: goto_w -> 27449
    //   27280: aload #18
    //   27282: iconst_0
    //   27283: aload #18
    //   27285: ldc_w ';'
    //   27288: invokevirtual indexOf : (Ljava/lang/String;)I
    //   27291: invokevirtual substring : (II)Ljava/lang/String;
    //   27294: astore #26
    //   27296: aload #18
    //   27298: aload #18
    //   27300: ldc_w ';'
    //   27303: invokevirtual indexOf : (Ljava/lang/String;)I
    //   27306: iconst_1
    //   27307: iadd
    //   27308: invokevirtual substring : (I)Ljava/lang/String;
    //   27311: astore #28
    //   27313: aload #26
    //   27315: ldc_w ','
    //   27318: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   27321: astore #29
    //   27323: aload #28
    //   27325: ldc_w ','
    //   27328: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   27331: astore #30
    //   27333: iconst_0
    //   27334: istore #31
    //   27336: goto_w -> 27436
    //   27341: ldc ''
    //   27343: aload #29
    //   27345: iload #31
    //   27347: aaload
    //   27348: invokevirtual equals : (Ljava/lang/Object;)Z
    //   27351: ifeq -> 27359
    //   27354: goto_w -> 27433
    //   27359: new java/lang/StringBuilder
    //   27362: dup
    //   27363: aload #25
    //   27365: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   27368: invokespecial <init> : (Ljava/lang/String;)V
    //   27371: ldc_w ';'
    //   27374: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27377: aload #29
    //   27379: iload #31
    //   27381: aaload
    //   27382: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27385: ldc_w ';'
    //   27388: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27391: invokevirtual toString : ()Ljava/lang/String;
    //   27394: astore #25
    //   27396: new java/lang/StringBuilder
    //   27399: dup
    //   27400: aload #27
    //   27402: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   27405: invokespecial <init> : (Ljava/lang/String;)V
    //   27408: ldc_w ';'
    //   27411: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27414: aload #30
    //   27416: iload #31
    //   27418: aaload
    //   27419: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27422: ldc_w ';'
    //   27425: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27428: invokevirtual toString : ()Ljava/lang/String;
    //   27431: astore #27
    //   27433: iinc #31, 1
    //   27436: iload #31
    //   27438: aload #29
    //   27440: arraylength
    //   27441: if_icmpge -> 27449
    //   27444: goto_w -> 27341
    //   27449: new java/lang/StringBuilder
    //   27452: dup
    //   27453: ldc_w '<input type=hidden name='
    //   27456: invokespecial <init> : (Ljava/lang/String;)V
    //   27459: aload_1
    //   27460: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27463: ldc_w '_type id='
    //   27466: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27469: aload_1
    //   27470: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27473: ldc_w '_type value=file>'
    //   27476: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27479: invokevirtual toString : ()Ljava/lang/String;
    //   27482: astore #14
    //   27484: new java/lang/StringBuilder
    //   27487: dup
    //   27488: ldc_w '<IFRAME name='
    //   27491: invokespecial <init> : (Ljava/lang/String;)V
    //   27494: aload_1
    //   27495: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27498: ldc_w ' id='
    //   27501: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27504: aload_1
    //   27505: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27508: ldc_w ' src="/jsoa/eform/modifyupload.jsp?fileName='
    //   27511: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27514: aload_1
    //   27515: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27518: ldc_w '_fileName&saveName='
    //   27521: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27524: aload_1
    //   27525: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27528: ldc_w '_saveName&canModify=true&files='
    //   27531: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27534: aload #18
    //   27536: ldc_w 'GBK'
    //   27539: invokestatic encode : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   27542: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27545: ldc_w '" frameborder=0'
    //   27548: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27551: ldc_w ' marginwidth=0 marginheight=0 scrolling=auto width=98% height='
    //   27554: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27557: iload #24
    //   27559: bipush #30
    //   27561: iadd
    //   27562: invokestatic valueOf : (I)Ljava/lang/String;
    //   27565: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27568: ldc_w '></IFRAME>'
    //   27571: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27574: aload #13
    //   27576: iconst_0
    //   27577: aaload
    //   27578: iconst_3
    //   27579: aaload
    //   27580: ldc_w '1'
    //   27583: invokevirtual equals : (Ljava/lang/Object;)Z
    //   27586: ifne -> 27594
    //   27589: goto_w -> 27704
    //   27594: aload #4
    //   27596: new java/lang/StringBuilder
    //   27599: dup
    //   27600: ldc_w ','
    //   27603: invokespecial <init> : (Ljava/lang/String;)V
    //   27606: aload #13
    //   27608: iconst_0
    //   27609: aaload
    //   27610: iconst_0
    //   27611: aaload
    //   27612: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27615: ldc_w ','
    //   27618: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27621: invokevirtual toString : ()Ljava/lang/String;
    //   27624: invokevirtual indexOf : (Ljava/lang/String;)I
    //   27627: iflt -> 27635
    //   27630: goto_w -> 27704
    //   27635: aload #4
    //   27637: new java/lang/StringBuilder
    //   27640: dup
    //   27641: ldc_w ','
    //   27644: invokespecial <init> : (Ljava/lang/String;)V
    //   27647: aload #13
    //   27649: iconst_0
    //   27650: aaload
    //   27651: iconst_5
    //   27652: aaload
    //   27653: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27656: ldc_w ','
    //   27659: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27662: invokevirtual toString : ()Ljava/lang/String;
    //   27665: invokevirtual indexOf : (Ljava/lang/String;)I
    //   27668: iflt -> 27676
    //   27671: goto_w -> 27704
    //   27676: new java/lang/StringBuilder
    //   27679: dup
    //   27680: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   27683: invokespecial <init> : (Ljava/lang/String;)V
    //   27686: aload_1
    //   27687: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27690: ldc_w '_fileName><label class=mustFillcolor>*</label>'
    //   27693: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27696: invokevirtual toString : ()Ljava/lang/String;
    //   27699: goto_w -> 27706
    //   27704: ldc ''
    //   27706: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27709: invokevirtual toString : ()Ljava/lang/String;
    //   27712: astore #10
    //   27714: new java/lang/StringBuilder
    //   27717: dup
    //   27718: aload #10
    //   27720: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   27723: invokespecial <init> : (Ljava/lang/String;)V
    //   27726: ldc_w '<input type=hidden name='
    //   27729: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27732: aload_1
    //   27733: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27736: ldc_w '_fileName id='
    //   27739: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27742: aload_1
    //   27743: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27746: ldc_w '_fileName value="'
    //   27749: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27752: aload #27
    //   27754: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27757: ldc_w '">'
    //   27760: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27763: invokevirtual toString : ()Ljava/lang/String;
    //   27766: astore #10
    //   27768: new java/lang/StringBuilder
    //   27771: dup
    //   27772: aload #10
    //   27774: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   27777: invokespecial <init> : (Ljava/lang/String;)V
    //   27780: ldc_w '<input type=hidden name='
    //   27783: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27786: aload_1
    //   27787: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27790: ldc_w '_saveName id='
    //   27793: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27796: aload_1
    //   27797: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27800: ldc_w '_saveName value="'
    //   27803: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27806: aload #25
    //   27808: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27811: ldc_w '">'
    //   27814: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27817: invokevirtual toString : ()Ljava/lang/String;
    //   27820: astore #10
    //   27822: new java/lang/StringBuilder
    //   27825: dup
    //   27826: ldc_w 'if(document.getElementById(''
    //   27829: invokespecial <init> : (Ljava/lang/String;)V
    //   27832: aload #13
    //   27834: iconst_0
    //   27835: aaload
    //   27836: iconst_0
    //   27837: aaload
    //   27838: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27841: ldc_w '-'
    //   27844: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27847: aload_1
    //   27848: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27851: ldc_w ''))\\n{document.getElementById(''
    //   27854: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27857: aload #13
    //   27859: iconst_0
    //   27860: aaload
    //   27861: iconst_0
    //   27862: aaload
    //   27863: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27866: ldc_w '-'
    //   27869: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27872: aload_1
    //   27873: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27876: ldc_w '').innerHTML=''
    //   27879: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27882: aload #14
    //   27884: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27887: ldc_w '';document.getElementById(''
    //   27890: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27893: aload #13
    //   27895: iconst_0
    //   27896: aaload
    //   27897: iconst_0
    //   27898: aaload
    //   27899: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27902: ldc_w '-'
    //   27905: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27908: aload_1
    //   27909: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27912: ldc_w '').innerHTML+=''
    //   27915: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27918: aload #10
    //   27920: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27923: ldc_w '';}'
    //   27926: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27929: invokevirtual toString : ()Ljava/lang/String;
    //   27932: astore #10
    //   27934: goto_w -> 46733
    //   27939: aload #4
    //   27941: ifnonnull -> 27949
    //   27944: goto_w -> 28145
    //   27949: aload #4
    //   27951: new java/lang/StringBuilder
    //   27954: dup
    //   27955: ldc_w ','
    //   27958: invokespecial <init> : (Ljava/lang/String;)V
    //   27961: aload #13
    //   27963: iconst_0
    //   27964: aaload
    //   27965: iconst_0
    //   27966: aaload
    //   27967: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27970: ldc_w ','
    //   27973: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   27976: invokevirtual toString : ()Ljava/lang/String;
    //   27979: invokevirtual indexOf : (Ljava/lang/String;)I
    //   27982: iflt -> 27990
    //   27985: goto_w -> 28031
    //   27990: aload #4
    //   27992: new java/lang/StringBuilder
    //   27995: dup
    //   27996: ldc_w ','
    //   27999: invokespecial <init> : (Ljava/lang/String;)V
    //   28002: aload #13
    //   28004: iconst_0
    //   28005: aaload
    //   28006: iconst_5
    //   28007: aaload
    //   28008: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28011: ldc_w ','
    //   28014: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28017: invokevirtual toString : ()Ljava/lang/String;
    //   28020: invokevirtual indexOf : (Ljava/lang/String;)I
    //   28023: ifge -> 28031
    //   28026: goto_w -> 28145
    //   28031: new java/lang/StringBuilder
    //   28034: dup
    //   28035: ldc_w '<input type=hidden id='
    //   28038: invokespecial <init> : (Ljava/lang/String;)V
    //   28041: aload_1
    //   28042: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28045: ldc_w ' name='
    //   28048: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28051: aload_1
    //   28052: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28055: ldc_w ' value=\"'
    //   28058: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28061: aload #18
    //   28063: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28066: ldc_w '\">'
    //   28069: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28072: invokevirtual toString : ()Ljava/lang/String;
    //   28075: astore #10
    //   28077: new java/lang/StringBuilder
    //   28080: dup
    //   28081: aload #10
    //   28083: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   28086: invokespecial <init> : (Ljava/lang/String;)V
    //   28089: ldc_w '<input type=\"button\" id=_weboffice_view name=_weboffice_view class=btnButton4font onclick=\"window.open('/jsoa/iWebOfficeSign/DocumentEdit.jsp?RecordID='+document.all.'
    //   28092: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28095: aload_1
    //   28096: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28099: ldc_w '.value+'&EditType=0,0&UserName='+document.all.user_Name.value+'&ShowSign=0&CanSave=0&moduleType=information&saveHtmlImage=0&saveDocFile=0&field='
    //   28102: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28105: aload_1
    //   28106: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28109: ldc_w '&FileType=.doc&showSignButton=1&Template='
    //   28112: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28115: aload #13
    //   28117: iconst_0
    //   28118: aaload
    //   28119: bipush #6
    //   28121: aaload
    //   28122: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28125: ldc_w '', '', 'status=no,menubar=no,scrollbars=yes,resizable=yes,width=500,Height=400,left=0,top=0')\" value=\"查看正文\" />'
    //   28128: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28131: invokevirtual toString : ()Ljava/lang/String;
    //   28134: astore #10
    //   28136: ldc ''
    //   28138: astore #14
    //   28140: goto_w -> 28413
    //   28145: new java/lang/StringBuilder
    //   28148: dup
    //   28149: ldc_w '<input type=hidden id='
    //   28152: invokespecial <init> : (Ljava/lang/String;)V
    //   28155: aload_1
    //   28156: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28159: ldc_w ' name='
    //   28162: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28165: aload_1
    //   28166: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28169: ldc_w ' value=\"'
    //   28172: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28175: aload #18
    //   28177: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28180: ldc_w '\">'
    //   28183: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28186: invokevirtual toString : ()Ljava/lang/String;
    //   28189: astore #10
    //   28191: ldc_w '编辑正文'
    //   28194: astore #25
    //   28196: ldc_w 'shandongguotou'
    //   28199: invokestatic getCustomerName : ()Ljava/lang/String;
    //   28202: invokevirtual equals : (Ljava/lang/Object;)Z
    //   28205: ifne -> 28213
    //   28208: goto_w -> 28218
    //   28213: ldc_w '打开正文'
    //   28216: astore #25
    //   28218: new java/lang/StringBuilder
    //   28221: dup
    //   28222: aload #10
    //   28224: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   28227: invokespecial <init> : (Ljava/lang/String;)V
    //   28230: ldc_w '<input type=\"button\" id=_weboffice_view name=_weboffice_view class=btnButton4font onclick=\"editOffices(''
    //   28233: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28236: aload_1
    //   28237: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28240: ldc_w '','doc',''
    //   28243: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28246: aload #13
    //   28248: iconst_0
    //   28249: aaload
    //   28250: bipush #6
    //   28252: aaload
    //   28253: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28256: ldc_w '','0');\" value=\"'
    //   28259: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28262: aload #25
    //   28264: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28267: ldc_w '\" />'
    //   28270: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28273: aload #13
    //   28275: iconst_0
    //   28276: aaload
    //   28277: iconst_3
    //   28278: aaload
    //   28279: ldc_w '1'
    //   28282: invokevirtual equals : (Ljava/lang/Object;)Z
    //   28285: ifne -> 28293
    //   28288: goto_w -> 28403
    //   28293: aload #4
    //   28295: new java/lang/StringBuilder
    //   28298: dup
    //   28299: ldc_w ','
    //   28302: invokespecial <init> : (Ljava/lang/String;)V
    //   28305: aload #13
    //   28307: iconst_0
    //   28308: aaload
    //   28309: iconst_0
    //   28310: aaload
    //   28311: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28314: ldc_w ','
    //   28317: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28320: invokevirtual toString : ()Ljava/lang/String;
    //   28323: invokevirtual indexOf : (Ljava/lang/String;)I
    //   28326: iflt -> 28334
    //   28329: goto_w -> 28403
    //   28334: aload #4
    //   28336: new java/lang/StringBuilder
    //   28339: dup
    //   28340: ldc_w ','
    //   28343: invokespecial <init> : (Ljava/lang/String;)V
    //   28346: aload #13
    //   28348: iconst_0
    //   28349: aaload
    //   28350: iconst_5
    //   28351: aaload
    //   28352: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28355: ldc_w ','
    //   28358: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28361: invokevirtual toString : ()Ljava/lang/String;
    //   28364: invokevirtual indexOf : (Ljava/lang/String;)I
    //   28367: iflt -> 28375
    //   28370: goto_w -> 28403
    //   28375: new java/lang/StringBuilder
    //   28378: dup
    //   28379: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   28382: invokespecial <init> : (Ljava/lang/String;)V
    //   28385: aload_1
    //   28386: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28389: ldc_w '><label class=mustFillcolor>*</label>'
    //   28392: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28395: invokevirtual toString : ()Ljava/lang/String;
    //   28398: goto_w -> 28405
    //   28403: ldc ''
    //   28405: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28408: invokevirtual toString : ()Ljava/lang/String;
    //   28411: astore #10
    //   28413: new java/lang/StringBuilder
    //   28416: dup
    //   28417: ldc_w 'if(document.getElementById(''
    //   28420: invokespecial <init> : (Ljava/lang/String;)V
    //   28423: aload #13
    //   28425: iconst_0
    //   28426: aaload
    //   28427: iconst_0
    //   28428: aaload
    //   28429: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28432: ldc_w '-'
    //   28435: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28438: aload_1
    //   28439: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28442: ldc_w ''))\\n{document.getElementById(''
    //   28445: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28448: aload #13
    //   28450: iconst_0
    //   28451: aaload
    //   28452: iconst_0
    //   28453: aaload
    //   28454: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28457: ldc_w '-'
    //   28460: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28463: aload_1
    //   28464: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28467: ldc_w '').innerHTML=''
    //   28470: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28473: aload #14
    //   28475: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28478: ldc_w '';document.getElementById(''
    //   28481: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28484: aload #13
    //   28486: iconst_0
    //   28487: aaload
    //   28488: iconst_0
    //   28489: aaload
    //   28490: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28493: ldc_w '-'
    //   28496: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28499: aload_1
    //   28500: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28503: ldc_w '').innerHTML+="'
    //   28506: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28509: aload #10
    //   28511: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28514: ldc_w '";}'
    //   28517: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28520: invokevirtual toString : ()Ljava/lang/String;
    //   28523: astore #10
    //   28525: goto_w -> 46733
    //   28530: aload #4
    //   28532: ifnonnull -> 28540
    //   28535: goto_w -> 28736
    //   28540: aload #4
    //   28542: new java/lang/StringBuilder
    //   28545: dup
    //   28546: ldc_w ','
    //   28549: invokespecial <init> : (Ljava/lang/String;)V
    //   28552: aload #13
    //   28554: iconst_0
    //   28555: aaload
    //   28556: iconst_0
    //   28557: aaload
    //   28558: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28561: ldc_w ','
    //   28564: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28567: invokevirtual toString : ()Ljava/lang/String;
    //   28570: invokevirtual indexOf : (Ljava/lang/String;)I
    //   28573: iflt -> 28581
    //   28576: goto_w -> 28622
    //   28581: aload #4
    //   28583: new java/lang/StringBuilder
    //   28586: dup
    //   28587: ldc_w ','
    //   28590: invokespecial <init> : (Ljava/lang/String;)V
    //   28593: aload #13
    //   28595: iconst_0
    //   28596: aaload
    //   28597: iconst_5
    //   28598: aaload
    //   28599: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28602: ldc_w ','
    //   28605: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28608: invokevirtual toString : ()Ljava/lang/String;
    //   28611: invokevirtual indexOf : (Ljava/lang/String;)I
    //   28614: ifge -> 28622
    //   28617: goto_w -> 28736
    //   28622: new java/lang/StringBuilder
    //   28625: dup
    //   28626: ldc_w '<input type=hidden id='
    //   28629: invokespecial <init> : (Ljava/lang/String;)V
    //   28632: aload_1
    //   28633: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28636: ldc_w ' name='
    //   28639: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28642: aload_1
    //   28643: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28646: ldc_w ' value=\"'
    //   28649: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28652: aload #18
    //   28654: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28657: ldc_w '\">'
    //   28660: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28663: invokevirtual toString : ()Ljava/lang/String;
    //   28666: astore #10
    //   28668: new java/lang/StringBuilder
    //   28671: dup
    //   28672: aload #10
    //   28674: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   28677: invokespecial <init> : (Ljava/lang/String;)V
    //   28680: ldc_w '<input type=\"button\" id=_weboffice_view name=_weboffice_view  class=btnButton4font onclick=\"window.open('/jsoa/iWebOfficeSign/DocumentEdit.jsp?RecordID='+document.all.'
    //   28683: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28686: aload_1
    //   28687: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28690: ldc_w '.value+'&EditType=1&UserName='+document.all.user_Name.value+'&ShowSign=0&CanSave=0&moduleType=information&saveHtmlImage=0&saveDocFile=0&field='
    //   28693: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28696: aload_1
    //   28697: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28700: ldc_w '&FileType=.xls&Template='
    //   28703: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28706: aload #13
    //   28708: iconst_0
    //   28709: aaload
    //   28710: bipush #6
    //   28712: aaload
    //   28713: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28716: ldc_w '', '', 'status=no,menubar=no,scrollbars=yes,resizable=yes,width=500,Height=400,left=0,top=0')\" value=\"查看正文\" />'
    //   28719: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28722: invokevirtual toString : ()Ljava/lang/String;
    //   28725: astore #10
    //   28727: ldc ''
    //   28729: astore #14
    //   28731: goto_w -> 29004
    //   28736: new java/lang/StringBuilder
    //   28739: dup
    //   28740: ldc_w '<input type=hidden id='
    //   28743: invokespecial <init> : (Ljava/lang/String;)V
    //   28746: aload_1
    //   28747: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28750: ldc_w ' name='
    //   28753: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28756: aload_1
    //   28757: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28760: ldc_w ' value=\"'
    //   28763: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28766: aload #18
    //   28768: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28771: ldc_w '\">'
    //   28774: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28777: invokevirtual toString : ()Ljava/lang/String;
    //   28780: astore #10
    //   28782: ldc_w '编辑正文'
    //   28785: astore #25
    //   28787: ldc_w 'shandongguotou'
    //   28790: invokestatic getCustomerName : ()Ljava/lang/String;
    //   28793: invokevirtual equals : (Ljava/lang/Object;)Z
    //   28796: ifne -> 28804
    //   28799: goto_w -> 28809
    //   28804: ldc_w '打开正文'
    //   28807: astore #25
    //   28809: new java/lang/StringBuilder
    //   28812: dup
    //   28813: aload #10
    //   28815: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   28818: invokespecial <init> : (Ljava/lang/String;)V
    //   28821: ldc_w '<input type=\"button\" id=_weboffice_view name=_weboffice_view class=btnButton4font onclick=\"editOffices(''
    //   28824: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28827: aload_1
    //   28828: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28831: ldc_w '','xls',''
    //   28834: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28837: aload #13
    //   28839: iconst_0
    //   28840: aaload
    //   28841: bipush #6
    //   28843: aaload
    //   28844: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28847: ldc_w '','0');\" value=\"'
    //   28850: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28853: aload #25
    //   28855: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28858: ldc_w '\" />'
    //   28861: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28864: aload #13
    //   28866: iconst_0
    //   28867: aaload
    //   28868: iconst_3
    //   28869: aaload
    //   28870: ldc_w '1'
    //   28873: invokevirtual equals : (Ljava/lang/Object;)Z
    //   28876: ifne -> 28884
    //   28879: goto_w -> 28994
    //   28884: aload #4
    //   28886: new java/lang/StringBuilder
    //   28889: dup
    //   28890: ldc_w ','
    //   28893: invokespecial <init> : (Ljava/lang/String;)V
    //   28896: aload #13
    //   28898: iconst_0
    //   28899: aaload
    //   28900: iconst_0
    //   28901: aaload
    //   28902: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28905: ldc_w ','
    //   28908: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28911: invokevirtual toString : ()Ljava/lang/String;
    //   28914: invokevirtual indexOf : (Ljava/lang/String;)I
    //   28917: iflt -> 28925
    //   28920: goto_w -> 28994
    //   28925: aload #4
    //   28927: new java/lang/StringBuilder
    //   28930: dup
    //   28931: ldc_w ','
    //   28934: invokespecial <init> : (Ljava/lang/String;)V
    //   28937: aload #13
    //   28939: iconst_0
    //   28940: aaload
    //   28941: iconst_5
    //   28942: aaload
    //   28943: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28946: ldc_w ','
    //   28949: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28952: invokevirtual toString : ()Ljava/lang/String;
    //   28955: invokevirtual indexOf : (Ljava/lang/String;)I
    //   28958: iflt -> 28966
    //   28961: goto_w -> 28994
    //   28966: new java/lang/StringBuilder
    //   28969: dup
    //   28970: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   28973: invokespecial <init> : (Ljava/lang/String;)V
    //   28976: aload_1
    //   28977: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28980: ldc_w '><label class=mustFillcolor>*</label>'
    //   28983: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28986: invokevirtual toString : ()Ljava/lang/String;
    //   28989: goto_w -> 28996
    //   28994: ldc ''
    //   28996: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   28999: invokevirtual toString : ()Ljava/lang/String;
    //   29002: astore #10
    //   29004: new java/lang/StringBuilder
    //   29007: dup
    //   29008: ldc_w 'if(document.getElementById(''
    //   29011: invokespecial <init> : (Ljava/lang/String;)V
    //   29014: aload #13
    //   29016: iconst_0
    //   29017: aaload
    //   29018: iconst_0
    //   29019: aaload
    //   29020: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29023: ldc_w '-'
    //   29026: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29029: aload_1
    //   29030: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29033: ldc_w ''))\\n{document.getElementById(''
    //   29036: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29039: aload #13
    //   29041: iconst_0
    //   29042: aaload
    //   29043: iconst_0
    //   29044: aaload
    //   29045: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29048: ldc_w '-'
    //   29051: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29054: aload_1
    //   29055: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29058: ldc_w '').innerHTML=''
    //   29061: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29064: aload #14
    //   29066: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29069: ldc_w '';document.getElementById(''
    //   29072: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29075: aload #13
    //   29077: iconst_0
    //   29078: aaload
    //   29079: iconst_0
    //   29080: aaload
    //   29081: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29084: ldc_w '-'
    //   29087: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29090: aload_1
    //   29091: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29094: ldc_w '').innerHTML+="'
    //   29097: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29100: aload #10
    //   29102: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29105: ldc_w '";}'
    //   29108: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29111: invokevirtual toString : ()Ljava/lang/String;
    //   29114: astore #10
    //   29116: goto_w -> 46733
    //   29121: aload #4
    //   29123: ifnonnull -> 29131
    //   29126: goto_w -> 29311
    //   29131: aload #4
    //   29133: new java/lang/StringBuilder
    //   29136: dup
    //   29137: ldc_w ','
    //   29140: invokespecial <init> : (Ljava/lang/String;)V
    //   29143: aload #13
    //   29145: iconst_0
    //   29146: aaload
    //   29147: iconst_0
    //   29148: aaload
    //   29149: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29152: ldc_w ','
    //   29155: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29158: invokevirtual toString : ()Ljava/lang/String;
    //   29161: invokevirtual indexOf : (Ljava/lang/String;)I
    //   29164: iflt -> 29172
    //   29167: goto_w -> 29213
    //   29172: aload #4
    //   29174: new java/lang/StringBuilder
    //   29177: dup
    //   29178: ldc_w ','
    //   29181: invokespecial <init> : (Ljava/lang/String;)V
    //   29184: aload #13
    //   29186: iconst_0
    //   29187: aaload
    //   29188: iconst_5
    //   29189: aaload
    //   29190: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29193: ldc_w ','
    //   29196: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29199: invokevirtual toString : ()Ljava/lang/String;
    //   29202: invokevirtual indexOf : (Ljava/lang/String;)I
    //   29205: ifge -> 29213
    //   29208: goto_w -> 29311
    //   29213: new java/lang/StringBuilder
    //   29216: dup
    //   29217: ldc_w '<input type=hidden id='
    //   29220: invokespecial <init> : (Ljava/lang/String;)V
    //   29223: aload_1
    //   29224: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29227: ldc_w ' name='
    //   29230: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29233: aload_1
    //   29234: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29237: ldc_w ' value=\"'
    //   29240: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29243: aload #18
    //   29245: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29248: ldc_w '\">'
    //   29251: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29254: invokevirtual toString : ()Ljava/lang/String;
    //   29257: astore #10
    //   29259: new java/lang/StringBuilder
    //   29262: dup
    //   29263: aload #10
    //   29265: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   29268: invokespecial <init> : (Ljava/lang/String;)V
    //   29271: ldc_w '<input type=\"button\" id=_weboffice_view name=_weboffice_view  class=btnButton4font onclick=\"window.open('/jsoa/iWebOfficeSign/DocumentEdit.jsp?RecordID='+document.all.'
    //   29274: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29277: aload_1
    //   29278: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29281: ldc_w '.value+'&EditType=1&UserName='+document.all.user_Name.value+'&ShowSign=0&CanSave=0&moduleType=information&saveHtmlImage=0&saveDocFile=0&field='
    //   29284: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29287: aload_1
    //   29288: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29291: ldc_w '&FileType=.wps', '', 'status=no,menubar=no,scrollbars=yes,resizable=yes,width=500,Height=400,left=0,top=0')\" value=\"查看正文\" />'
    //   29294: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29297: invokevirtual toString : ()Ljava/lang/String;
    //   29300: astore #10
    //   29302: ldc ''
    //   29304: astore #14
    //   29306: goto_w -> 29579
    //   29311: new java/lang/StringBuilder
    //   29314: dup
    //   29315: ldc_w '<input type=hidden id='
    //   29318: invokespecial <init> : (Ljava/lang/String;)V
    //   29321: aload_1
    //   29322: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29325: ldc_w ' name='
    //   29328: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29331: aload_1
    //   29332: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29335: ldc_w ' value=\"'
    //   29338: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29341: aload #18
    //   29343: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29346: ldc_w '\">'
    //   29349: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29352: invokevirtual toString : ()Ljava/lang/String;
    //   29355: astore #10
    //   29357: ldc_w '编辑正文'
    //   29360: astore #25
    //   29362: ldc_w 'shandongguotou'
    //   29365: invokestatic getCustomerName : ()Ljava/lang/String;
    //   29368: invokevirtual equals : (Ljava/lang/Object;)Z
    //   29371: ifne -> 29379
    //   29374: goto_w -> 29384
    //   29379: ldc_w '打开正文'
    //   29382: astore #25
    //   29384: new java/lang/StringBuilder
    //   29387: dup
    //   29388: aload #10
    //   29390: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   29393: invokespecial <init> : (Ljava/lang/String;)V
    //   29396: ldc_w '<input type=\"button\" id=_weboffice_view name=_weboffice_view  class=btnButton4font onclick=\"editOffices(''
    //   29399: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29402: aload_1
    //   29403: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29406: ldc_w '','wps',''
    //   29409: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29412: aload #13
    //   29414: iconst_0
    //   29415: aaload
    //   29416: bipush #6
    //   29418: aaload
    //   29419: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29422: ldc_w '','0');\" value=\"'
    //   29425: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29428: aload #25
    //   29430: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29433: ldc_w '\" />'
    //   29436: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29439: aload #13
    //   29441: iconst_0
    //   29442: aaload
    //   29443: iconst_3
    //   29444: aaload
    //   29445: ldc_w '1'
    //   29448: invokevirtual equals : (Ljava/lang/Object;)Z
    //   29451: ifne -> 29459
    //   29454: goto_w -> 29569
    //   29459: aload #4
    //   29461: new java/lang/StringBuilder
    //   29464: dup
    //   29465: ldc_w ','
    //   29468: invokespecial <init> : (Ljava/lang/String;)V
    //   29471: aload #13
    //   29473: iconst_0
    //   29474: aaload
    //   29475: iconst_0
    //   29476: aaload
    //   29477: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29480: ldc_w ','
    //   29483: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29486: invokevirtual toString : ()Ljava/lang/String;
    //   29489: invokevirtual indexOf : (Ljava/lang/String;)I
    //   29492: iflt -> 29500
    //   29495: goto_w -> 29569
    //   29500: aload #4
    //   29502: new java/lang/StringBuilder
    //   29505: dup
    //   29506: ldc_w ','
    //   29509: invokespecial <init> : (Ljava/lang/String;)V
    //   29512: aload #13
    //   29514: iconst_0
    //   29515: aaload
    //   29516: iconst_5
    //   29517: aaload
    //   29518: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29521: ldc_w ','
    //   29524: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29527: invokevirtual toString : ()Ljava/lang/String;
    //   29530: invokevirtual indexOf : (Ljava/lang/String;)I
    //   29533: iflt -> 29541
    //   29536: goto_w -> 29569
    //   29541: new java/lang/StringBuilder
    //   29544: dup
    //   29545: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   29548: invokespecial <init> : (Ljava/lang/String;)V
    //   29551: aload_1
    //   29552: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29555: ldc_w '><label class=mustFillcolor>*</label>'
    //   29558: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29561: invokevirtual toString : ()Ljava/lang/String;
    //   29564: goto_w -> 29571
    //   29569: ldc ''
    //   29571: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29574: invokevirtual toString : ()Ljava/lang/String;
    //   29577: astore #10
    //   29579: new java/lang/StringBuilder
    //   29582: dup
    //   29583: ldc_w 'if(document.getElementById(''
    //   29586: invokespecial <init> : (Ljava/lang/String;)V
    //   29589: aload #13
    //   29591: iconst_0
    //   29592: aaload
    //   29593: iconst_0
    //   29594: aaload
    //   29595: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29598: ldc_w '-'
    //   29601: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29604: aload_1
    //   29605: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29608: ldc_w ''))\\n{document.getElementById(''
    //   29611: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29614: aload #13
    //   29616: iconst_0
    //   29617: aaload
    //   29618: iconst_0
    //   29619: aaload
    //   29620: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29623: ldc_w '-'
    //   29626: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29629: aload_1
    //   29630: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29633: ldc_w '').innerHTML=''
    //   29636: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29639: aload #14
    //   29641: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29644: ldc_w '';document.getElementById(''
    //   29647: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29650: aload #13
    //   29652: iconst_0
    //   29653: aaload
    //   29654: iconst_0
    //   29655: aaload
    //   29656: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29659: ldc_w '-'
    //   29662: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29665: aload_1
    //   29666: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29669: ldc_w '').innerHTML+="'
    //   29672: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29675: aload #10
    //   29677: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29680: ldc_w '";}'
    //   29683: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29686: invokevirtual toString : ()Ljava/lang/String;
    //   29689: astore #10
    //   29691: goto_w -> 46733
    //   29696: aload #4
    //   29698: ifnonnull -> 29706
    //   29701: goto_w -> 30085
    //   29706: aload #4
    //   29708: new java/lang/StringBuilder
    //   29711: dup
    //   29712: ldc_w ','
    //   29715: invokespecial <init> : (Ljava/lang/String;)V
    //   29718: aload #13
    //   29720: iconst_0
    //   29721: aaload
    //   29722: iconst_0
    //   29723: aaload
    //   29724: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29727: ldc_w ','
    //   29730: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29733: invokevirtual toString : ()Ljava/lang/String;
    //   29736: invokevirtual indexOf : (Ljava/lang/String;)I
    //   29739: iflt -> 29747
    //   29742: goto_w -> 29788
    //   29747: aload #4
    //   29749: new java/lang/StringBuilder
    //   29752: dup
    //   29753: ldc_w ','
    //   29756: invokespecial <init> : (Ljava/lang/String;)V
    //   29759: aload #13
    //   29761: iconst_0
    //   29762: aaload
    //   29763: iconst_5
    //   29764: aaload
    //   29765: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29768: ldc_w ','
    //   29771: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29774: invokevirtual toString : ()Ljava/lang/String;
    //   29777: invokevirtual indexOf : (Ljava/lang/String;)I
    //   29780: ifge -> 29788
    //   29783: goto_w -> 30085
    //   29788: iconst_2
    //   29789: anewarray java/lang/String
    //   29792: dup
    //   29793: iconst_0
    //   29794: ldc ''
    //   29796: aastore
    //   29797: dup
    //   29798: iconst_1
    //   29799: ldc ''
    //   29801: aastore
    //   29802: astore #25
    //   29804: aload #18
    //   29806: ldc_w '\\n'
    //   29809: ldc_w '<br>'
    //   29812: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   29815: ldc_w '\\r'
    //   29818: ldc ''
    //   29820: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   29823: astore #26
    //   29825: aload #18
    //   29827: ldc_w '*id*'
    //   29830: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   29833: ifne -> 29841
    //   29836: goto_w -> 29986
    //   29841: aload_0
    //   29842: aload #18
    //   29844: iconst_4
    //   29845: invokevirtual substring : (I)Ljava/lang/String;
    //   29848: invokevirtual qianMingTu : (Ljava/lang/String;)[Ljava/lang/String;
    //   29851: astore #25
    //   29853: ldc_w '0000'
    //   29856: astore #27
    //   29858: aload #25
    //   29860: iconst_1
    //   29861: aaload
    //   29862: invokevirtual length : ()I
    //   29865: bipush #6
    //   29867: if_icmpgt -> 29875
    //   29870: goto_w -> 29914
    //   29875: aload #25
    //   29877: iconst_1
    //   29878: aaload
    //   29879: iconst_4
    //   29880: iconst_5
    //   29881: invokevirtual substring : (II)Ljava/lang/String;
    //   29884: ldc_w '_'
    //   29887: invokevirtual equals : (Ljava/lang/Object;)Z
    //   29890: ifne -> 29898
    //   29893: goto_w -> 29914
    //   29898: aload #25
    //   29900: iconst_1
    //   29901: aaload
    //   29902: iconst_0
    //   29903: iconst_4
    //   29904: invokevirtual substring : (II)Ljava/lang/String;
    //   29907: astore #27
    //   29909: goto_w -> 29919
    //   29914: ldc_w '0000'
    //   29917: astore #27
    //   29919: ldc ''
    //   29921: aload #25
    //   29923: iconst_1
    //   29924: aaload
    //   29925: invokevirtual equals : (Ljava/lang/Object;)Z
    //   29928: ifne -> 29936
    //   29931: goto_w -> 29947
    //   29936: aload #25
    //   29938: iconst_0
    //   29939: aaload
    //   29940: astore #26
    //   29942: goto_w -> 29986
    //   29947: new java/lang/StringBuilder
    //   29950: dup
    //   29951: ldc_w '<img src="/jsoa/upload/'
    //   29954: invokespecial <init> : (Ljava/lang/String;)V
    //   29957: aload #27
    //   29959: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29962: ldc_w '/peopleinfo/'
    //   29965: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29968: aload #25
    //   29970: iconst_1
    //   29971: aaload
    //   29972: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29975: ldc_w '" style="width:80px;">'
    //   29978: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29981: invokevirtual toString : ()Ljava/lang/String;
    //   29984: astore #26
    //   29986: new java/lang/StringBuilder
    //   29989: dup
    //   29990: ldc_w 'if(document.getElementById(''
    //   29993: invokespecial <init> : (Ljava/lang/String;)V
    //   29996: aload #13
    //   29998: iconst_0
    //   29999: aaload
    //   30000: iconst_0
    //   30001: aaload
    //   30002: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30005: ldc_w '-'
    //   30008: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30011: aload_1
    //   30012: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30015: ldc_w ''))\\n{document.getElementById(''
    //   30018: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30021: aload #13
    //   30023: iconst_0
    //   30024: aaload
    //   30025: iconst_0
    //   30026: aaload
    //   30027: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30030: ldc_w '-'
    //   30033: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30036: aload_1
    //   30037: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30040: ldc_w '').innerHTML=''
    //   30043: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30046: aload #18
    //   30048: ifnull -> 30056
    //   30051: goto_w -> 30064
    //   30056: ldc_w '&nbsp'
    //   30059: goto_w -> 30066
    //   30064: aload #26
    //   30066: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30069: ldc_w '';}'
    //   30072: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30075: invokevirtual toString : ()Ljava/lang/String;
    //   30078: astore #10
    //   30080: goto_w -> 30649
    //   30085: aload #9
    //   30087: invokeinterface getSession : ()Ljavax/servlet/http/HttpSession;
    //   30092: astore #25
    //   30094: aload #25
    //   30096: ldc_w 'userId'
    //   30099: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   30104: invokevirtual toString : ()Ljava/lang/String;
    //   30107: astore #26
    //   30109: aload_0
    //   30110: aload #26
    //   30112: invokevirtual qianMingTu : (Ljava/lang/String;)[Ljava/lang/String;
    //   30115: astore #27
    //   30117: ldc_w '0000'
    //   30120: astore #28
    //   30122: aload #27
    //   30124: iconst_1
    //   30125: aaload
    //   30126: invokevirtual length : ()I
    //   30129: bipush #6
    //   30131: if_icmpgt -> 30139
    //   30134: goto_w -> 30178
    //   30139: aload #27
    //   30141: iconst_1
    //   30142: aaload
    //   30143: iconst_4
    //   30144: iconst_5
    //   30145: invokevirtual substring : (II)Ljava/lang/String;
    //   30148: ldc_w '_'
    //   30151: invokevirtual equals : (Ljava/lang/Object;)Z
    //   30154: ifne -> 30162
    //   30157: goto_w -> 30178
    //   30162: aload #27
    //   30164: iconst_1
    //   30165: aaload
    //   30166: iconst_0
    //   30167: iconst_4
    //   30168: invokevirtual substring : (II)Ljava/lang/String;
    //   30171: astore #28
    //   30173: goto_w -> 30183
    //   30178: ldc_w '0000'
    //   30181: astore #28
    //   30183: ldc ''
    //   30185: astore #29
    //   30187: aload #13
    //   30189: iconst_0
    //   30190: aaload
    //   30191: iconst_3
    //   30192: aaload
    //   30193: ldc_w '1'
    //   30196: invokevirtual equals : (Ljava/lang/Object;)Z
    //   30199: ifne -> 30207
    //   30202: goto_w -> 30328
    //   30207: aload #4
    //   30209: new java/lang/StringBuilder
    //   30212: dup
    //   30213: ldc_w ','
    //   30216: invokespecial <init> : (Ljava/lang/String;)V
    //   30219: aload #13
    //   30221: iconst_0
    //   30222: aaload
    //   30223: iconst_0
    //   30224: aaload
    //   30225: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30228: ldc_w ','
    //   30231: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30234: invokevirtual toString : ()Ljava/lang/String;
    //   30237: invokevirtual indexOf : (Ljava/lang/String;)I
    //   30240: iflt -> 30248
    //   30243: goto_w -> 30328
    //   30248: aload #4
    //   30250: new java/lang/StringBuilder
    //   30253: dup
    //   30254: ldc_w ','
    //   30257: invokespecial <init> : (Ljava/lang/String;)V
    //   30260: aload #13
    //   30262: iconst_0
    //   30263: aaload
    //   30264: iconst_5
    //   30265: aaload
    //   30266: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30269: ldc_w ','
    //   30272: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30275: invokevirtual toString : ()Ljava/lang/String;
    //   30278: invokevirtual indexOf : (Ljava/lang/String;)I
    //   30281: iflt -> 30289
    //   30284: goto_w -> 30328
    //   30289: new java/lang/StringBuilder
    //   30292: dup
    //   30293: aload #29
    //   30295: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   30298: invokespecial <init> : (Ljava/lang/String;)V
    //   30301: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   30304: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30307: aload_1
    //   30308: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30311: ldc_w '>'
    //   30314: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30317: ldc_w '<label class=mustFillcolor>*</label>'
    //   30320: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30323: invokevirtual toString : ()Ljava/lang/String;
    //   30326: astore #29
    //   30328: new java/lang/StringBuilder
    //   30331: dup
    //   30332: ldc_w ''<input type=hidden style="width:80%" name='
    //   30335: invokespecial <init> : (Ljava/lang/String;)V
    //   30338: aload_1
    //   30339: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30342: ldc_w '_type id='
    //   30345: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30348: aload_1
    //   30349: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30352: ldc_w '_type value=varchar>'
    //   30355: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30358: ldc_w '<input type=hidden name='
    //   30361: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30364: aload_1
    //   30365: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30368: ldc_w '_size id='
    //   30371: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30374: aload_1
    //   30375: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30378: ldc_w '_size value=255>'
    //   30381: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30384: invokevirtual toString : ()Ljava/lang/String;
    //   30387: astore #30
    //   30389: ldc ''
    //   30391: aload #27
    //   30393: iconst_1
    //   30394: aaload
    //   30395: invokevirtual equals : (Ljava/lang/Object;)Z
    //   30398: ifne -> 30406
    //   30401: goto_w -> 30478
    //   30406: new java/lang/StringBuilder
    //   30409: dup
    //   30410: aload #30
    //   30412: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   30415: invokespecial <init> : (Ljava/lang/String;)V
    //   30418: ldc_w '<input type="text" style=font-size:1em; name="'
    //   30421: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30424: aload_1
    //   30425: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30428: ldc_w '" id="'
    //   30431: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30434: aload_1
    //   30435: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30438: ldc_w '" value="'
    //   30441: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30444: aload #27
    //   30446: iconst_0
    //   30447: aaload
    //   30448: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30451: ldc_w '" />'
    //   30454: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30457: aload #29
    //   30459: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30462: ldc_w '';'
    //   30465: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30468: invokevirtual toString : ()Ljava/lang/String;
    //   30471: astore #30
    //   30473: goto_w -> 30573
    //   30478: new java/lang/StringBuilder
    //   30481: dup
    //   30482: aload #30
    //   30484: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   30487: invokespecial <init> : (Ljava/lang/String;)V
    //   30490: ldc_w '<input type="hidden" name="'
    //   30493: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30496: aload_1
    //   30497: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30500: ldc_w '" id="'
    //   30503: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30506: aload_1
    //   30507: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30510: ldc_w '" value="*id*'
    //   30513: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30516: aload #26
    //   30518: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30521: ldc_w '" />'
    //   30524: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30527: ldc_w '<img src="/jsoa/upload/'
    //   30530: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30533: aload #28
    //   30535: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30538: ldc_w '/peopleinfo/'
    //   30541: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30544: aload #27
    //   30546: iconst_1
    //   30547: aaload
    //   30548: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30551: ldc_w '" style="width:80px;" > '
    //   30554: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30557: aload #29
    //   30559: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30562: ldc_w '';'
    //   30565: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30568: invokevirtual toString : ()Ljava/lang/String;
    //   30571: astore #30
    //   30573: new java/lang/StringBuilder
    //   30576: dup
    //   30577: ldc_w 'if(document.getElementById(''
    //   30580: invokespecial <init> : (Ljava/lang/String;)V
    //   30583: aload #13
    //   30585: iconst_0
    //   30586: aaload
    //   30587: iconst_0
    //   30588: aaload
    //   30589: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30592: ldc_w '-'
    //   30595: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30598: aload_1
    //   30599: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30602: ldc_w ''))\\n{document.getElementById(''
    //   30605: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30608: aload #13
    //   30610: iconst_0
    //   30611: aaload
    //   30612: iconst_0
    //   30613: aaload
    //   30614: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30617: ldc_w '-'
    //   30620: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30623: aload_1
    //   30624: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30627: ldc_w '').innerHTML='
    //   30630: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30633: aload #30
    //   30635: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30638: ldc_w '}'
    //   30641: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30644: invokevirtual toString : ()Ljava/lang/String;
    //   30647: astore #10
    //   30649: goto_w -> 46733
    //   30654: aload #4
    //   30656: ifnonnull -> 30664
    //   30659: goto_w -> 30865
    //   30664: aload #4
    //   30666: new java/lang/StringBuilder
    //   30669: dup
    //   30670: ldc_w ','
    //   30673: invokespecial <init> : (Ljava/lang/String;)V
    //   30676: aload #13
    //   30678: iconst_0
    //   30679: aaload
    //   30680: iconst_0
    //   30681: aaload
    //   30682: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30685: ldc_w ','
    //   30688: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30691: invokevirtual toString : ()Ljava/lang/String;
    //   30694: invokevirtual indexOf : (Ljava/lang/String;)I
    //   30697: iflt -> 30705
    //   30700: goto_w -> 30746
    //   30705: aload #4
    //   30707: new java/lang/StringBuilder
    //   30710: dup
    //   30711: ldc_w ','
    //   30714: invokespecial <init> : (Ljava/lang/String;)V
    //   30717: aload #13
    //   30719: iconst_0
    //   30720: aaload
    //   30721: iconst_5
    //   30722: aaload
    //   30723: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30726: ldc_w ','
    //   30729: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30732: invokevirtual toString : ()Ljava/lang/String;
    //   30735: invokevirtual indexOf : (Ljava/lang/String;)I
    //   30738: ifge -> 30746
    //   30741: goto_w -> 30865
    //   30746: new java/lang/StringBuilder
    //   30749: dup
    //   30750: ldc_w 'if(document.getElementById(''
    //   30753: invokespecial <init> : (Ljava/lang/String;)V
    //   30756: aload #13
    //   30758: iconst_0
    //   30759: aaload
    //   30760: iconst_0
    //   30761: aaload
    //   30762: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30765: ldc_w '-'
    //   30768: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30771: aload_1
    //   30772: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30775: ldc_w ''))\\n{document.getElementById(''
    //   30778: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30781: aload #13
    //   30783: iconst_0
    //   30784: aaload
    //   30785: iconst_0
    //   30786: aaload
    //   30787: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30790: ldc_w '-'
    //   30793: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30796: aload_1
    //   30797: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30800: ldc_w '').innerHTML=''
    //   30803: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30806: aload #18
    //   30808: ifnull -> 30816
    //   30811: goto_w -> 30824
    //   30816: ldc_w '&nbsp'
    //   30819: goto_w -> 30846
    //   30824: aload #18
    //   30826: ldc_w '\\n'
    //   30829: ldc_w '<br>'
    //   30832: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   30835: ldc_w '\\r'
    //   30838: ldc ''
    //   30840: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   30843: invokestatic getOrgByNum : (Ljava/lang/String;)Ljava/lang/String;
    //   30846: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30849: ldc_w '';}'
    //   30852: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30855: invokevirtual toString : ()Ljava/lang/String;
    //   30858: astore #10
    //   30860: goto_w -> 31080
    //   30865: ldc ''
    //   30867: astore #25
    //   30869: new java/lang/StringBuilder
    //   30872: dup
    //   30873: ldc_w 'document.getElementById("'
    //   30876: invokespecial <init> : (Ljava/lang/String;)V
    //   30879: aload_1
    //   30880: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30883: ldc_w '_span").innerHTML=orgNameShow(document.all.org_Name.value,'
    //   30886: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30889: invokestatic getInnerShow : ()I
    //   30892: invokevirtual append : (I)Ljava/lang/StringBuilder;
    //   30895: ldc_w ');;'
    //   30898: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30901: ldc_w 'document.getElementById("'
    //   30904: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30907: aload_1
    //   30908: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30911: ldc_w '").value=document.all.org_Name.value;'
    //   30914: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30917: invokevirtual toString : ()Ljava/lang/String;
    //   30920: astore #25
    //   30922: new java/lang/StringBuilder
    //   30925: dup
    //   30926: ldc_w 'if(document.getElementById(''
    //   30929: invokespecial <init> : (Ljava/lang/String;)V
    //   30932: aload #13
    //   30934: iconst_0
    //   30935: aaload
    //   30936: iconst_0
    //   30937: aaload
    //   30938: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30941: ldc_w '-'
    //   30944: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30947: aload_1
    //   30948: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30951: ldc_w ''))\\n{document.getElementById(''
    //   30954: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30957: aload #13
    //   30959: iconst_0
    //   30960: aaload
    //   30961: iconst_0
    //   30962: aaload
    //   30963: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30966: ldc_w '-'
    //   30969: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30972: aload_1
    //   30973: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30976: ldc_w '').innerHTML='<input type=hidden name='
    //   30979: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30982: aload_1
    //   30983: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30986: ldc_w '_type id='
    //   30989: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30992: aload_1
    //   30993: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   30996: ldc_w '_type value=varchar>'
    //   30999: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31002: ldc_w '<input type=hidden name='
    //   31005: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31008: aload_1
    //   31009: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31012: ldc_w '_size id='
    //   31015: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31018: aload_1
    //   31019: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31022: ldc_w '_size value=255>'
    //   31025: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31028: ldc_w '<input type="hidden" name="'
    //   31031: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31034: aload_1
    //   31035: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31038: ldc_w '" id="'
    //   31041: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31044: aload_1
    //   31045: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31048: ldc_w '" value="" /><span id="'
    //   31051: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31054: aload_1
    //   31055: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31058: ldc_w '_span"></span>';'
    //   31061: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31064: aload #25
    //   31066: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31069: ldc_w '}'
    //   31072: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31075: invokevirtual toString : ()Ljava/lang/String;
    //   31078: astore #10
    //   31080: goto_w -> 46733
    //   31085: aload #4
    //   31087: ifnonnull -> 31095
    //   31090: goto_w -> 31293
    //   31095: aload #4
    //   31097: new java/lang/StringBuilder
    //   31100: dup
    //   31101: ldc_w ','
    //   31104: invokespecial <init> : (Ljava/lang/String;)V
    //   31107: aload #13
    //   31109: iconst_0
    //   31110: aaload
    //   31111: iconst_0
    //   31112: aaload
    //   31113: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31116: ldc_w ','
    //   31119: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31122: invokevirtual toString : ()Ljava/lang/String;
    //   31125: invokevirtual indexOf : (Ljava/lang/String;)I
    //   31128: iflt -> 31136
    //   31131: goto_w -> 31177
    //   31136: aload #4
    //   31138: new java/lang/StringBuilder
    //   31141: dup
    //   31142: ldc_w ','
    //   31145: invokespecial <init> : (Ljava/lang/String;)V
    //   31148: aload #13
    //   31150: iconst_0
    //   31151: aaload
    //   31152: iconst_5
    //   31153: aaload
    //   31154: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31157: ldc_w ','
    //   31160: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31163: invokevirtual toString : ()Ljava/lang/String;
    //   31166: invokevirtual indexOf : (Ljava/lang/String;)I
    //   31169: ifge -> 31177
    //   31172: goto_w -> 31293
    //   31177: new java/lang/StringBuilder
    //   31180: dup
    //   31181: ldc_w 'if(document.getElementById(''
    //   31184: invokespecial <init> : (Ljava/lang/String;)V
    //   31187: aload #13
    //   31189: iconst_0
    //   31190: aaload
    //   31191: iconst_0
    //   31192: aaload
    //   31193: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31196: ldc_w '-'
    //   31199: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31202: aload_1
    //   31203: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31206: ldc_w ''))\\n{document.getElementById(''
    //   31209: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31212: aload #13
    //   31214: iconst_0
    //   31215: aaload
    //   31216: iconst_0
    //   31217: aaload
    //   31218: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31221: ldc_w '-'
    //   31224: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31227: aload_1
    //   31228: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31231: ldc_w '').innerHTML=''
    //   31234: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31237: aload #18
    //   31239: ifnull -> 31247
    //   31242: goto_w -> 31255
    //   31247: ldc_w '&nbsp'
    //   31250: goto_w -> 31274
    //   31255: aload #18
    //   31257: ldc_w '\\n'
    //   31260: ldc_w '<br>'
    //   31263: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   31266: ldc_w '\\r'
    //   31269: ldc ''
    //   31271: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   31274: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31277: ldc_w '';}'
    //   31280: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31283: invokevirtual toString : ()Ljava/lang/String;
    //   31286: astore #10
    //   31288: goto_w -> 31506
    //   31293: aload #13
    //   31295: iconst_0
    //   31296: aaload
    //   31297: bipush #6
    //   31299: aaload
    //   31300: astore #11
    //   31302: aload #11
    //   31304: ldc ''
    //   31306: invokevirtual equals : (Ljava/lang/Object;)Z
    //   31309: ifne -> 31317
    //   31312: goto_w -> 31322
    //   31317: ldc_w 'yyyy-MM-dd HH:mm'
    //   31320: astore #11
    //   31322: new java/text/SimpleDateFormat
    //   31325: dup
    //   31326: aload #11
    //   31328: invokespecial <init> : (Ljava/lang/String;)V
    //   31331: astore #25
    //   31333: aload #25
    //   31335: new java/util/Date
    //   31338: dup
    //   31339: invokespecial <init> : ()V
    //   31342: invokevirtual format : (Ljava/util/Date;)Ljava/lang/String;
    //   31345: astore #26
    //   31347: new java/lang/StringBuilder
    //   31350: dup
    //   31351: ldc_w 'if(document.getElementById(''
    //   31354: invokespecial <init> : (Ljava/lang/String;)V
    //   31357: aload #13
    //   31359: iconst_0
    //   31360: aaload
    //   31361: iconst_0
    //   31362: aaload
    //   31363: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31366: ldc_w '-'
    //   31369: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31372: aload_1
    //   31373: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31376: ldc_w ''))\\n{document.getElementById(''
    //   31379: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31382: aload #13
    //   31384: iconst_0
    //   31385: aaload
    //   31386: iconst_0
    //   31387: aaload
    //   31388: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31391: ldc_w '-'
    //   31394: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31397: aload_1
    //   31398: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31401: ldc_w '').innerHTML='<input type=hidden name='
    //   31404: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31407: aload_1
    //   31408: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31411: ldc_w '_type id='
    //   31414: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31417: aload_1
    //   31418: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31421: ldc_w '_type value=varchar>'
    //   31424: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31427: ldc_w '<input type=hidden name='
    //   31430: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31433: aload_1
    //   31434: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31437: ldc_w '_size id='
    //   31440: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31443: aload_1
    //   31444: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31447: ldc_w '_size value=255>'
    //   31450: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31453: ldc_w '<input type="hidden" name="'
    //   31456: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31459: aload_1
    //   31460: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31463: ldc_w '" id="'
    //   31466: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31469: aload_1
    //   31470: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31473: ldc_w '" value="'
    //   31476: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31479: aload #26
    //   31481: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31484: ldc_w '" />'
    //   31487: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31490: aload #26
    //   31492: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31495: ldc_w '';}'
    //   31498: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31501: invokevirtual toString : ()Ljava/lang/String;
    //   31504: astore #10
    //   31506: goto_w -> 46733
    //   31511: aload #4
    //   31513: ifnonnull -> 31521
    //   31516: goto_w -> 31810
    //   31521: aload #4
    //   31523: new java/lang/StringBuilder
    //   31526: dup
    //   31527: ldc_w ','
    //   31530: invokespecial <init> : (Ljava/lang/String;)V
    //   31533: aload #13
    //   31535: iconst_0
    //   31536: aaload
    //   31537: iconst_0
    //   31538: aaload
    //   31539: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31542: ldc_w ','
    //   31545: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31548: invokevirtual toString : ()Ljava/lang/String;
    //   31551: invokevirtual indexOf : (Ljava/lang/String;)I
    //   31554: iflt -> 31562
    //   31557: goto_w -> 31603
    //   31562: aload #4
    //   31564: new java/lang/StringBuilder
    //   31567: dup
    //   31568: ldc_w ','
    //   31571: invokespecial <init> : (Ljava/lang/String;)V
    //   31574: aload #13
    //   31576: iconst_0
    //   31577: aaload
    //   31578: iconst_5
    //   31579: aaload
    //   31580: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31583: ldc_w ','
    //   31586: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31589: invokevirtual toString : ()Ljava/lang/String;
    //   31592: invokevirtual indexOf : (Ljava/lang/String;)I
    //   31595: ifge -> 31603
    //   31598: goto_w -> 31810
    //   31603: aload #18
    //   31605: ifnull -> 31613
    //   31608: goto_w -> 31620
    //   31613: ldc ''
    //   31615: goto_w -> 31622
    //   31620: aload #18
    //   31622: astore #25
    //   31624: ldc ''
    //   31626: astore #26
    //   31628: ldc_w '#'
    //   31631: astore #27
    //   31633: ldc ''
    //   31635: aload #25
    //   31637: invokevirtual equals : (Ljava/lang/Object;)Z
    //   31640: ifeq -> 31648
    //   31643: goto_w -> 31686
    //   31648: aload #25
    //   31650: ldc_w '`~`~`'
    //   31653: invokevirtual indexOf : (Ljava/lang/String;)I
    //   31656: ifge -> 31664
    //   31659: goto_w -> 31686
    //   31664: aload #25
    //   31666: ldc_w '`~`~`'
    //   31669: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   31672: astore #28
    //   31674: aload #28
    //   31676: iconst_0
    //   31677: aaload
    //   31678: astore #26
    //   31680: aload #28
    //   31682: iconst_1
    //   31683: aaload
    //   31684: astore #27
    //   31686: new java/lang/StringBuilder
    //   31689: dup
    //   31690: ldc_w '<a href="#" style="cursor:pointer;" onclick=JSMainWinOpen("'
    //   31693: invokespecial <init> : (Ljava/lang/String;)V
    //   31696: aload #27
    //   31698: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31701: ldc_w '","","");>'
    //   31704: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31707: aload #26
    //   31709: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31712: ldc_w '</a>'
    //   31715: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31718: invokevirtual toString : ()Ljava/lang/String;
    //   31721: astore #27
    //   31723: new java/lang/StringBuilder
    //   31726: dup
    //   31727: ldc_w '\\n\\nif(document.getElementById(''
    //   31730: invokespecial <init> : (Ljava/lang/String;)V
    //   31733: aload #13
    //   31735: iconst_0
    //   31736: aaload
    //   31737: iconst_0
    //   31738: aaload
    //   31739: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31742: ldc_w '-'
    //   31745: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31748: aload_1
    //   31749: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31752: ldc_w ''))\\n{'
    //   31755: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31758: ldc_w '\\ndocument.getElementById(''
    //   31761: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31764: aload #13
    //   31766: iconst_0
    //   31767: aaload
    //   31768: iconst_0
    //   31769: aaload
    //   31770: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31773: ldc_w '-'
    //   31776: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31779: aload_1
    //   31780: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31783: ldc_w '').innerHTML=''
    //   31786: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31789: aload #27
    //   31791: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31794: ldc_w '';\\n}\\n'
    //   31797: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31800: invokevirtual toString : ()Ljava/lang/String;
    //   31803: astore #10
    //   31805: goto_w -> 32329
    //   31810: aload #18
    //   31812: ifnull -> 31820
    //   31815: goto_w -> 31827
    //   31820: ldc ''
    //   31822: goto_w -> 31829
    //   31827: aload #18
    //   31829: astore #25
    //   31831: ldc ''
    //   31833: astore #26
    //   31835: ldc ''
    //   31837: astore #27
    //   31839: ldc ''
    //   31841: aload #25
    //   31843: invokevirtual equals : (Ljava/lang/Object;)Z
    //   31846: ifeq -> 31854
    //   31849: goto_w -> 31912
    //   31854: aload #25
    //   31856: ldc_w '`~`~`'
    //   31859: invokevirtual indexOf : (Ljava/lang/String;)I
    //   31862: ifge -> 31870
    //   31865: goto_w -> 31892
    //   31870: aload #25
    //   31872: ldc_w '`~`~`'
    //   31875: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   31878: astore #28
    //   31880: aload #28
    //   31882: iconst_0
    //   31883: aaload
    //   31884: astore #26
    //   31886: aload #28
    //   31888: iconst_1
    //   31889: aaload
    //   31890: astore #27
    //   31892: ldc_w '#'
    //   31895: aload #27
    //   31897: invokevirtual equals : (Ljava/lang/Object;)Z
    //   31900: ifne -> 31908
    //   31903: goto_w -> 31912
    //   31908: ldc ''
    //   31910: astore #27
    //   31912: new java/lang/StringBuilder
    //   31915: dup
    //   31916: ldc_w '<input type=hidden name='
    //   31919: invokespecial <init> : (Ljava/lang/String;)V
    //   31922: aload_1
    //   31923: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31926: ldc_w '_type id='
    //   31929: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31932: aload_1
    //   31933: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31936: ldc_w '_type value=varchar>'
    //   31939: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31942: ldc_w '<input type=hidden name='
    //   31945: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31948: aload_1
    //   31949: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31952: ldc_w '_size id='
    //   31955: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31958: aload_1
    //   31959: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31962: ldc_w '_size value=255>'
    //   31965: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31968: invokevirtual toString : ()Ljava/lang/String;
    //   31971: astore #10
    //   31973: new java/lang/StringBuilder
    //   31976: dup
    //   31977: aload #10
    //   31979: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   31982: invokespecial <init> : (Ljava/lang/String;)V
    //   31985: ldc_w '<input type=hidden id='
    //   31988: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31991: aload_1
    //   31992: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   31995: ldc_w ' name='
    //   31998: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32001: aload_1
    //   32002: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32005: ldc_w ' value="'
    //   32008: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32011: aload #25
    //   32013: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32016: ldc_w '" />'
    //   32019: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32022: ldc_w '标题：<input type=text id='
    //   32025: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32028: aload_1
    //   32029: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32032: ldc_w '_title name='
    //   32035: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32038: aload_1
    //   32039: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32042: ldc_w '_title value="'
    //   32045: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32048: aload #26
    //   32050: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32053: ldc_w '" onblur=comURL("'
    //   32056: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32059: aload_1
    //   32060: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32063: ldc_w '"); style="width:20%;font-size:1em;" />'
    //   32066: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32069: ldc_w '&nbsp;链接：<input type=text id='
    //   32072: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32075: aload_1
    //   32076: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32079: ldc_w '_url name='
    //   32082: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32085: aload_1
    //   32086: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32089: ldc_w '_url value="'
    //   32092: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32095: aload #27
    //   32097: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32100: ldc_w '" onblur=comURL("'
    //   32103: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32106: aload_1
    //   32107: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32110: ldc_w '"); '
    //   32113: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32116: ldc_w 'style=width:'
    //   32119: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32122: aload #13
    //   32124: iconst_0
    //   32125: aaload
    //   32126: iconst_3
    //   32127: aaload
    //   32128: ldc_w '1'
    //   32131: invokevirtual equals : (Ljava/lang/Object;)Z
    //   32134: ifne -> 32142
    //   32137: goto_w -> 32150
    //   32142: ldc_w '20'
    //   32145: goto_w -> 32153
    //   32150: ldc_w '30'
    //   32153: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32156: ldc_w '%;font-size:1em;'
    //   32159: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32162: ldc_w ' class=flowInput  maxlength="'
    //   32165: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32168: iload #19
    //   32170: invokevirtual append : (I)Ljava/lang/StringBuilder;
    //   32173: ldc_w '" >'
    //   32176: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32179: aload #13
    //   32181: iconst_0
    //   32182: aaload
    //   32183: iconst_3
    //   32184: aaload
    //   32185: ldc_w '1'
    //   32188: invokevirtual equals : (Ljava/lang/Object;)Z
    //   32191: ifne -> 32199
    //   32194: goto_w -> 32237
    //   32199: new java/lang/StringBuilder
    //   32202: dup
    //   32203: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   32206: invokespecial <init> : (Ljava/lang/String;)V
    //   32209: aload_1
    //   32210: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32213: ldc_w '_title><input type=hidden name=mustWrite id=mustWrite value='
    //   32216: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32219: aload_1
    //   32220: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32223: ldc_w '_url><label class=mustFillcolor>*</label>'
    //   32226: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32229: invokevirtual toString : ()Ljava/lang/String;
    //   32232: goto_w -> 32239
    //   32237: ldc ''
    //   32239: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32242: invokevirtual toString : ()Ljava/lang/String;
    //   32245: astore #10
    //   32247: new java/lang/StringBuilder
    //   32250: dup
    //   32251: ldc_w '\\n\\nif(document.getElementById(''
    //   32254: invokespecial <init> : (Ljava/lang/String;)V
    //   32257: aload #13
    //   32259: iconst_0
    //   32260: aaload
    //   32261: iconst_0
    //   32262: aaload
    //   32263: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32266: ldc_w '-'
    //   32269: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32272: aload_1
    //   32273: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32276: ldc_w ''))\\n{\\n'
    //   32279: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32282: ldc_w 'document.getElementById(''
    //   32285: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32288: aload #13
    //   32290: iconst_0
    //   32291: aaload
    //   32292: iconst_0
    //   32293: aaload
    //   32294: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32297: ldc_w '-'
    //   32300: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32303: aload_1
    //   32304: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32307: ldc_w '').innerHTML=''
    //   32310: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32313: aload #10
    //   32315: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32318: ldc_w '';\\n}\\n\\n'
    //   32321: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32324: invokevirtual toString : ()Ljava/lang/String;
    //   32327: astore #10
    //   32329: goto_w -> 46733
    //   32334: aload #4
    //   32336: ifnonnull -> 32344
    //   32339: goto_w -> 32713
    //   32344: aload #4
    //   32346: new java/lang/StringBuilder
    //   32349: dup
    //   32350: ldc_w ','
    //   32353: invokespecial <init> : (Ljava/lang/String;)V
    //   32356: aload #13
    //   32358: iconst_0
    //   32359: aaload
    //   32360: iconst_0
    //   32361: aaload
    //   32362: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32365: ldc_w ','
    //   32368: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32371: invokevirtual toString : ()Ljava/lang/String;
    //   32374: invokevirtual indexOf : (Ljava/lang/String;)I
    //   32377: iflt -> 32385
    //   32380: goto_w -> 32426
    //   32385: aload #4
    //   32387: new java/lang/StringBuilder
    //   32390: dup
    //   32391: ldc_w ','
    //   32394: invokespecial <init> : (Ljava/lang/String;)V
    //   32397: aload #13
    //   32399: iconst_0
    //   32400: aaload
    //   32401: iconst_5
    //   32402: aaload
    //   32403: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32406: ldc_w ','
    //   32409: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32412: invokevirtual toString : ()Ljava/lang/String;
    //   32415: invokevirtual indexOf : (Ljava/lang/String;)I
    //   32418: ifge -> 32426
    //   32421: goto_w -> 32713
    //   32426: aload #18
    //   32428: ifnull -> 32436
    //   32431: goto_w -> 32443
    //   32436: ldc ''
    //   32438: goto_w -> 32445
    //   32443: aload #18
    //   32445: astore #25
    //   32447: ldc ''
    //   32449: astore #26
    //   32451: aload #25
    //   32453: ldc_w '86'
    //   32456: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   32459: ifne -> 32467
    //   32462: goto_w -> 32480
    //   32467: aload #25
    //   32469: iconst_2
    //   32470: invokevirtual substring : (I)Ljava/lang/String;
    //   32473: astore #26
    //   32475: goto_w -> 32513
    //   32480: aload #25
    //   32482: ldc_w '+86'
    //   32485: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   32488: ifne -> 32496
    //   32491: goto_w -> 32509
    //   32496: aload #25
    //   32498: iconst_3
    //   32499: invokevirtual substring : (I)Ljava/lang/String;
    //   32502: astore #26
    //   32504: goto_w -> 32513
    //   32509: aload #25
    //   32511: astore #26
    //   32513: aload #26
    //   32515: ldc_w '-'
    //   32518: ldc ''
    //   32520: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   32523: astore #26
    //   32525: new java/lang/StringBuilder
    //   32528: dup
    //   32529: ldc_w '<a href="tel:'
    //   32532: invokespecial <init> : (Ljava/lang/String;)V
    //   32535: aload #26
    //   32537: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32540: ldc_w '"><img src="/jsoa/jsflow/images/dianhua.png" '
    //   32543: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32546: ldc_w 'style="cursor:pointer;width:20px;height:20px;border=0;" title="拨打电话" /></a>&nbsp;&nbsp;'
    //   32549: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32552: ldc_w '<a href="sms:'
    //   32555: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32558: aload #26
    //   32560: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32563: ldc_w '"><img src="/jsoa/jsflow/images/duanxin.png" '
    //   32566: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32569: ldc_w 'style="cursor:pointer;width:20px;height:20px;border=0;" title="发短信" /></a>'
    //   32572: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32575: invokevirtual toString : ()Ljava/lang/String;
    //   32578: astore #27
    //   32580: ldc_w 'if(navigator.userAgent.indexOf("Android")>0||navigator.userAgent.indexOf("iPad")>0||navigator.userAgent.indexOf("iPhone")>0) '
    //   32583: astore #28
    //   32585: new java/lang/StringBuilder
    //   32588: dup
    //   32589: ldc_w '\\n\\nif(document.getElementById(''
    //   32592: invokespecial <init> : (Ljava/lang/String;)V
    //   32595: aload #13
    //   32597: iconst_0
    //   32598: aaload
    //   32599: iconst_0
    //   32600: aaload
    //   32601: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32604: ldc_w '-'
    //   32607: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32610: aload_1
    //   32611: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32614: ldc_w ''))\\n{\\ndocument.getElementById(''
    //   32617: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32620: aload #13
    //   32622: iconst_0
    //   32623: aaload
    //   32624: iconst_0
    //   32625: aaload
    //   32626: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32629: ldc_w '-'
    //   32632: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32635: aload_1
    //   32636: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32639: ldc_w '').innerHTML=''
    //   32642: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32645: aload #25
    //   32647: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32650: ldc_w '&nbsp;&nbsp;';\\n'
    //   32653: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32656: aload #28
    //   32658: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32661: ldc_w '{\\ndocument.getElementById(''
    //   32664: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32667: aload #13
    //   32669: iconst_0
    //   32670: aaload
    //   32671: iconst_0
    //   32672: aaload
    //   32673: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32676: ldc_w '-'
    //   32679: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32682: aload_1
    //   32683: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32686: ldc_w '').innerHTML+='&nbsp;'
    //   32689: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32692: aload #27
    //   32694: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32697: ldc_w '';\\n}\\n}\\n'
    //   32700: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32703: invokevirtual toString : ()Ljava/lang/String;
    //   32706: astore #10
    //   32708: goto_w -> 33174
    //   32713: aload #18
    //   32715: ifnull -> 32723
    //   32718: goto_w -> 32730
    //   32723: ldc ''
    //   32725: goto_w -> 32732
    //   32730: aload #18
    //   32732: astore #25
    //   32734: aload #25
    //   32736: ldc ''
    //   32738: invokevirtual equals : (Ljava/lang/Object;)Z
    //   32741: ifne -> 32749
    //   32744: goto_w -> 32781
    //   32749: aload #13
    //   32751: iconst_0
    //   32752: aaload
    //   32753: iconst_4
    //   32754: aaload
    //   32755: ifnull -> 32763
    //   32758: goto_w -> 32770
    //   32763: ldc ''
    //   32765: goto_w -> 32776
    //   32770: aload #13
    //   32772: iconst_0
    //   32773: aaload
    //   32774: iconst_4
    //   32775: aaload
    //   32776: goto_w -> 32783
    //   32781: aload #25
    //   32783: astore #25
    //   32785: new java/lang/StringBuilder
    //   32788: dup
    //   32789: ldc_w '<input type=hidden name='
    //   32792: invokespecial <init> : (Ljava/lang/String;)V
    //   32795: aload_1
    //   32796: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32799: ldc_w '_type id='
    //   32802: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32805: aload_1
    //   32806: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32809: ldc_w '_type value=varchar>'
    //   32812: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32815: ldc_w '<input type=hidden name='
    //   32818: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32821: aload_1
    //   32822: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32825: ldc_w '_size id='
    //   32828: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32831: aload_1
    //   32832: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32835: ldc_w '_size value=255>'
    //   32838: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32841: invokevirtual toString : ()Ljava/lang/String;
    //   32844: astore #10
    //   32846: new java/lang/StringBuilder
    //   32849: dup
    //   32850: aload #10
    //   32852: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   32855: invokespecial <init> : (Ljava/lang/String;)V
    //   32858: ldc_w '<input type=text id='
    //   32861: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32864: aload_1
    //   32865: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32868: ldc_w ' name='
    //   32871: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32874: aload_1
    //   32875: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32878: ldc_w ' style=width:'
    //   32881: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32884: aload #13
    //   32886: iconst_0
    //   32887: aaload
    //   32888: iconst_3
    //   32889: aaload
    //   32890: ldc_w '1'
    //   32893: invokevirtual equals : (Ljava/lang/Object;)Z
    //   32896: ifne -> 32904
    //   32899: goto_w -> 32912
    //   32904: ldc_w '92'
    //   32907: goto_w -> 32915
    //   32912: ldc_w '100'
    //   32915: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32918: ldc_w '%;font-size:1em;'
    //   32921: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32924: ldc_w ' class=flowInput onblur=isPhone(this); maxlength="'
    //   32927: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32930: iload #19
    //   32932: invokevirtual append : (I)Ljava/lang/StringBuilder;
    //   32935: ldc_w '"'
    //   32938: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32941: ldc_w ' value="'
    //   32944: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32947: aload #25
    //   32949: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32952: ldc_w '">'
    //   32955: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32958: aload #13
    //   32960: iconst_0
    //   32961: aaload
    //   32962: iconst_3
    //   32963: aaload
    //   32964: ldc_w '1'
    //   32967: invokevirtual equals : (Ljava/lang/Object;)Z
    //   32970: ifne -> 32978
    //   32973: goto_w -> 33088
    //   32978: aload #4
    //   32980: new java/lang/StringBuilder
    //   32983: dup
    //   32984: ldc_w ','
    //   32987: invokespecial <init> : (Ljava/lang/String;)V
    //   32990: aload #13
    //   32992: iconst_0
    //   32993: aaload
    //   32994: iconst_0
    //   32995: aaload
    //   32996: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   32999: ldc_w ','
    //   33002: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33005: invokevirtual toString : ()Ljava/lang/String;
    //   33008: invokevirtual indexOf : (Ljava/lang/String;)I
    //   33011: iflt -> 33019
    //   33014: goto_w -> 33088
    //   33019: aload #4
    //   33021: new java/lang/StringBuilder
    //   33024: dup
    //   33025: ldc_w ','
    //   33028: invokespecial <init> : (Ljava/lang/String;)V
    //   33031: aload #13
    //   33033: iconst_0
    //   33034: aaload
    //   33035: iconst_5
    //   33036: aaload
    //   33037: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33040: ldc_w ','
    //   33043: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33046: invokevirtual toString : ()Ljava/lang/String;
    //   33049: invokevirtual indexOf : (Ljava/lang/String;)I
    //   33052: iflt -> 33060
    //   33055: goto_w -> 33088
    //   33060: new java/lang/StringBuilder
    //   33063: dup
    //   33064: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   33067: invokespecial <init> : (Ljava/lang/String;)V
    //   33070: aload_1
    //   33071: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33074: ldc_w '><label class=mustFillcolor>*</label>'
    //   33077: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33080: invokevirtual toString : ()Ljava/lang/String;
    //   33083: goto_w -> 33090
    //   33088: ldc ''
    //   33090: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33093: invokevirtual toString : ()Ljava/lang/String;
    //   33096: astore #10
    //   33098: new java/lang/StringBuilder
    //   33101: dup
    //   33102: ldc_w '\\n\\nif(document.getElementById(''
    //   33105: invokespecial <init> : (Ljava/lang/String;)V
    //   33108: aload #13
    //   33110: iconst_0
    //   33111: aaload
    //   33112: iconst_0
    //   33113: aaload
    //   33114: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33117: ldc_w '-'
    //   33120: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33123: aload_1
    //   33124: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33127: ldc_w ''))\\n{\\ndocument.getElementById(''
    //   33130: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33133: aload #13
    //   33135: iconst_0
    //   33136: aaload
    //   33137: iconst_0
    //   33138: aaload
    //   33139: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33142: ldc_w '-'
    //   33145: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33148: aload_1
    //   33149: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33152: ldc_w '').innerHTML=''
    //   33155: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33158: aload #10
    //   33160: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33163: ldc_w '';\\n}\\n\\n'
    //   33166: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33169: invokevirtual toString : ()Ljava/lang/String;
    //   33172: astore #10
    //   33174: goto_w -> 46733
    //   33179: aload #4
    //   33181: ifnonnull -> 33189
    //   33184: goto_w -> 33387
    //   33189: aload #4
    //   33191: new java/lang/StringBuilder
    //   33194: dup
    //   33195: ldc_w ','
    //   33198: invokespecial <init> : (Ljava/lang/String;)V
    //   33201: aload #13
    //   33203: iconst_0
    //   33204: aaload
    //   33205: iconst_0
    //   33206: aaload
    //   33207: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33210: ldc_w ','
    //   33213: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33216: invokevirtual toString : ()Ljava/lang/String;
    //   33219: invokevirtual indexOf : (Ljava/lang/String;)I
    //   33222: iflt -> 33230
    //   33225: goto_w -> 33271
    //   33230: aload #4
    //   33232: new java/lang/StringBuilder
    //   33235: dup
    //   33236: ldc_w ','
    //   33239: invokespecial <init> : (Ljava/lang/String;)V
    //   33242: aload #13
    //   33244: iconst_0
    //   33245: aaload
    //   33246: iconst_5
    //   33247: aaload
    //   33248: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33251: ldc_w ','
    //   33254: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33257: invokevirtual toString : ()Ljava/lang/String;
    //   33260: invokevirtual indexOf : (Ljava/lang/String;)I
    //   33263: ifge -> 33271
    //   33266: goto_w -> 33387
    //   33271: new java/lang/StringBuilder
    //   33274: dup
    //   33275: ldc_w 'if(document.getElementById(''
    //   33278: invokespecial <init> : (Ljava/lang/String;)V
    //   33281: aload #13
    //   33283: iconst_0
    //   33284: aaload
    //   33285: iconst_0
    //   33286: aaload
    //   33287: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33290: ldc_w '-'
    //   33293: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33296: aload_1
    //   33297: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33300: ldc_w ''))\\n{document.getElementById(''
    //   33303: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33306: aload #13
    //   33308: iconst_0
    //   33309: aaload
    //   33310: iconst_0
    //   33311: aaload
    //   33312: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33315: ldc_w '-'
    //   33318: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33321: aload_1
    //   33322: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33325: ldc_w '').innerHTML=''
    //   33328: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33331: aload #18
    //   33333: ifnull -> 33341
    //   33336: goto_w -> 33349
    //   33341: ldc_w '&nbsp'
    //   33344: goto_w -> 33368
    //   33349: aload #18
    //   33351: ldc_w '\\n'
    //   33354: ldc_w '<br>'
    //   33357: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   33360: ldc_w '\\r'
    //   33363: ldc ''
    //   33365: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   33368: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33371: ldc_w '';}'
    //   33374: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33377: invokevirtual toString : ()Ljava/lang/String;
    //   33380: astore #10
    //   33382: goto_w -> 33696
    //   33387: new java/lang/StringBuilder
    //   33390: dup
    //   33391: ldc_w '<input style=width:'
    //   33394: invokespecial <init> : (Ljava/lang/String;)V
    //   33397: aload #13
    //   33399: iconst_0
    //   33400: aaload
    //   33401: iconst_3
    //   33402: aaload
    //   33403: ldc_w '1'
    //   33406: invokevirtual equals : (Ljava/lang/Object;)Z
    //   33409: ifne -> 33417
    //   33412: goto_w -> 33425
    //   33417: ldc_w '92'
    //   33420: goto_w -> 33428
    //   33425: ldc_w '100'
    //   33428: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33431: ldc_w '%;font-size:1em; type=text id='
    //   33434: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33437: aload_1
    //   33438: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33441: ldc_w ' name='
    //   33444: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33447: aload_1
    //   33448: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33451: ldc_w ' value=''
    //   33454: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33457: aload #18
    //   33459: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33462: ldc_w '' '
    //   33465: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33468: ldc_w ' readonly style=border:0px solid white;>'
    //   33471: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33474: invokevirtual toString : ()Ljava/lang/String;
    //   33477: astore #10
    //   33479: new java/lang/StringBuilder
    //   33482: dup
    //   33483: ldc_w 'var '
    //   33486: invokespecial <init> : (Ljava/lang/String;)V
    //   33489: aload_1
    //   33490: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33493: ldc_w '_temp=document.createElement('SCRIPT');'
    //   33496: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33499: invokevirtual toString : ()Ljava/lang/String;
    //   33502: astore #25
    //   33504: new java/lang/StringBuilder
    //   33507: dup
    //   33508: aload #25
    //   33510: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   33513: invokespecial <init> : (Ljava/lang/String;)V
    //   33516: aload_1
    //   33517: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33520: ldc_w '_temp.text="document.all.'
    //   33523: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33526: aload_1
    //   33527: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33530: ldc_w '.value=document.all.user_Id.value;";'
    //   33533: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33536: invokevirtual toString : ()Ljava/lang/String;
    //   33539: astore #25
    //   33541: new java/lang/StringBuilder
    //   33544: dup
    //   33545: aload #25
    //   33547: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   33550: invokespecial <init> : (Ljava/lang/String;)V
    //   33553: ldc_w 'if(document.getElementById(''
    //   33556: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33559: aload #13
    //   33561: iconst_0
    //   33562: aaload
    //   33563: iconst_0
    //   33564: aaload
    //   33565: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33568: ldc_w '-'
    //   33571: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33574: aload_1
    //   33575: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33578: ldc_w ''))\\n{document.getElementById(''
    //   33581: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33584: aload #13
    //   33586: iconst_0
    //   33587: aaload
    //   33588: iconst_0
    //   33589: aaload
    //   33590: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33593: ldc_w '-'
    //   33596: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33599: aload_1
    //   33600: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33603: ldc_w '').innerHTML=''
    //   33606: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33609: aload #14
    //   33611: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33614: ldc_w '';document.getElementById(''
    //   33617: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33620: aload #13
    //   33622: iconst_0
    //   33623: aaload
    //   33624: iconst_0
    //   33625: aaload
    //   33626: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33629: ldc_w '-'
    //   33632: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33635: aload_1
    //   33636: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33639: ldc_w '').innerHTML+="'
    //   33642: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33645: aload #10
    //   33647: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33650: ldc_w '";document.getElementById(''
    //   33653: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33656: aload #13
    //   33658: iconst_0
    //   33659: aaload
    //   33660: iconst_0
    //   33661: aaload
    //   33662: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33665: ldc_w '-'
    //   33668: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33671: aload_1
    //   33672: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33675: ldc_w '').appendChild('
    //   33678: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33681: aload_1
    //   33682: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33685: ldc_w '_temp);}'
    //   33688: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33691: invokevirtual toString : ()Ljava/lang/String;
    //   33694: astore #10
    //   33696: goto_w -> 46733
    //   33701: aload #18
    //   33703: invokestatic parseInt : (Ljava/lang/String;)I
    //   33706: pop
    //   33707: aload #16
    //   33709: new java/lang/StringBuilder
    //   33712: dup
    //   33713: ldc_w 'select EMPNAME from ORG_EMPLOYEE where EMP_ID='
    //   33716: invokespecial <init> : (Ljava/lang/String;)V
    //   33719: aload #18
    //   33721: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33724: invokevirtual toString : ()Ljava/lang/String;
    //   33727: invokevirtual executeQueryToStr : (Ljava/lang/String;)Ljava/lang/String;
    //   33730: astore #18
    //   33732: goto_w -> 33744
    //   33737: astore #25
    //   33739: goto_w -> 33744
    //   33744: aload #4
    //   33746: ifnonnull -> 33754
    //   33749: goto_w -> 33952
    //   33754: aload #4
    //   33756: new java/lang/StringBuilder
    //   33759: dup
    //   33760: ldc_w ','
    //   33763: invokespecial <init> : (Ljava/lang/String;)V
    //   33766: aload #13
    //   33768: iconst_0
    //   33769: aaload
    //   33770: iconst_0
    //   33771: aaload
    //   33772: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33775: ldc_w ','
    //   33778: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33781: invokevirtual toString : ()Ljava/lang/String;
    //   33784: invokevirtual indexOf : (Ljava/lang/String;)I
    //   33787: iflt -> 33795
    //   33790: goto_w -> 33836
    //   33795: aload #4
    //   33797: new java/lang/StringBuilder
    //   33800: dup
    //   33801: ldc_w ','
    //   33804: invokespecial <init> : (Ljava/lang/String;)V
    //   33807: aload #13
    //   33809: iconst_0
    //   33810: aaload
    //   33811: iconst_5
    //   33812: aaload
    //   33813: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33816: ldc_w ','
    //   33819: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33822: invokevirtual toString : ()Ljava/lang/String;
    //   33825: invokevirtual indexOf : (Ljava/lang/String;)I
    //   33828: ifge -> 33836
    //   33831: goto_w -> 33952
    //   33836: new java/lang/StringBuilder
    //   33839: dup
    //   33840: ldc_w 'if(document.getElementById(''
    //   33843: invokespecial <init> : (Ljava/lang/String;)V
    //   33846: aload #13
    //   33848: iconst_0
    //   33849: aaload
    //   33850: iconst_0
    //   33851: aaload
    //   33852: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33855: ldc_w '-'
    //   33858: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33861: aload_1
    //   33862: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33865: ldc_w ''))\\n{document.getElementById(''
    //   33868: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33871: aload #13
    //   33873: iconst_0
    //   33874: aaload
    //   33875: iconst_0
    //   33876: aaload
    //   33877: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33880: ldc_w '-'
    //   33883: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33886: aload_1
    //   33887: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33890: ldc_w '').innerHTML=''
    //   33893: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33896: aload #18
    //   33898: ifnull -> 33906
    //   33901: goto_w -> 33914
    //   33906: ldc_w '&nbsp'
    //   33909: goto_w -> 33933
    //   33914: aload #18
    //   33916: ldc_w '\\n'
    //   33919: ldc_w '<br>'
    //   33922: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   33925: ldc_w '\\r'
    //   33928: ldc ''
    //   33930: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   33933: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33936: ldc_w '';}'
    //   33939: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33942: invokevirtual toString : ()Ljava/lang/String;
    //   33945: astore #10
    //   33947: goto_w -> 34266
    //   33952: new java/lang/StringBuilder
    //   33955: dup
    //   33956: ldc_w '<input  style=width:'
    //   33959: invokespecial <init> : (Ljava/lang/String;)V
    //   33962: aload #13
    //   33964: iconst_0
    //   33965: aaload
    //   33966: iconst_3
    //   33967: aaload
    //   33968: ldc_w '1'
    //   33971: invokevirtual equals : (Ljava/lang/Object;)Z
    //   33974: ifne -> 33982
    //   33977: goto_w -> 33990
    //   33982: ldc_w '92'
    //   33985: goto_w -> 33993
    //   33990: ldc_w '100'
    //   33993: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   33996: ldc_w '%; type=text id='
    //   33999: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34002: aload_1
    //   34003: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34006: ldc_w ' name='
    //   34009: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34012: aload_1
    //   34013: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34016: ldc_w ' value=''
    //   34019: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34022: aload #18
    //   34024: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34027: ldc_w '' style=border:0px;solid;white;font-size:1em; readonly >'
    //   34030: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34033: invokevirtual toString : ()Ljava/lang/String;
    //   34036: astore #10
    //   34038: new java/lang/StringBuilder
    //   34041: dup
    //   34042: ldc_w 'var '
    //   34045: invokespecial <init> : (Ljava/lang/String;)V
    //   34048: aload_1
    //   34049: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34052: ldc_w '_temp=document.createElement('SCRIPT');'
    //   34055: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34058: invokevirtual toString : ()Ljava/lang/String;
    //   34061: astore #25
    //   34063: new java/lang/StringBuilder
    //   34066: dup
    //   34067: aload #25
    //   34069: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   34072: invokespecial <init> : (Ljava/lang/String;)V
    //   34075: aload_1
    //   34076: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34079: ldc_w '_temp.text="document.all.'
    //   34082: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34085: aload_1
    //   34086: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34089: ldc_w '.value=document.all.user_Name.value;var renyuanName = ''
    //   34092: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34095: aload #18
    //   34097: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34100: ldc_w '';";'
    //   34103: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34106: invokevirtual toString : ()Ljava/lang/String;
    //   34109: astore #25
    //   34111: new java/lang/StringBuilder
    //   34114: dup
    //   34115: aload #25
    //   34117: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   34120: invokespecial <init> : (Ljava/lang/String;)V
    //   34123: ldc_w 'if(document.getElementById(''
    //   34126: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34129: aload #13
    //   34131: iconst_0
    //   34132: aaload
    //   34133: iconst_0
    //   34134: aaload
    //   34135: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34138: ldc_w '-'
    //   34141: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34144: aload_1
    //   34145: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34148: ldc_w ''))\\n{document.getElementById(''
    //   34151: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34154: aload #13
    //   34156: iconst_0
    //   34157: aaload
    //   34158: iconst_0
    //   34159: aaload
    //   34160: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34163: ldc_w '-'
    //   34166: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34169: aload_1
    //   34170: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34173: ldc_w '').innerHTML=''
    //   34176: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34179: aload #14
    //   34181: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34184: ldc_w '';document.getElementById(''
    //   34187: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34190: aload #13
    //   34192: iconst_0
    //   34193: aaload
    //   34194: iconst_0
    //   34195: aaload
    //   34196: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34199: ldc_w '-'
    //   34202: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34205: aload_1
    //   34206: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34209: ldc_w '').innerHTML+="'
    //   34212: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34215: aload #10
    //   34217: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34220: ldc_w '";document.getElementById(''
    //   34223: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34226: aload #13
    //   34228: iconst_0
    //   34229: aaload
    //   34230: iconst_0
    //   34231: aaload
    //   34232: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34235: ldc_w '-'
    //   34238: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34241: aload_1
    //   34242: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34245: ldc_w '').appendChild('
    //   34248: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34251: aload_1
    //   34252: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34255: ldc_w '_temp);}'
    //   34258: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34261: invokevirtual toString : ()Ljava/lang/String;
    //   34264: astore #10
    //   34266: goto_w -> 46733
    //   34271: ldc ''
    //   34273: astore #25
    //   34275: aload #13
    //   34277: iconst_0
    //   34278: aaload
    //   34279: bipush #6
    //   34281: aaload
    //   34282: invokevirtual length : ()I
    //   34285: ifgt -> 34293
    //   34288: goto_w -> 34676
    //   34293: aload #13
    //   34295: iconst_0
    //   34296: aaload
    //   34297: bipush #6
    //   34299: aaload
    //   34300: iconst_0
    //   34301: aload #13
    //   34303: iconst_0
    //   34304: aaload
    //   34305: bipush #6
    //   34307: aaload
    //   34308: invokevirtual length : ()I
    //   34311: iconst_1
    //   34312: isub
    //   34313: invokevirtual substring : (II)Ljava/lang/String;
    //   34316: ldc_w '\]\.\['
    //   34319: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   34322: astore #26
    //   34324: aload #26
    //   34326: arraylength
    //   34327: iconst_2
    //   34328: if_icmpgt -> 34336
    //   34331: goto_w -> 34676
    //   34336: aload #26
    //   34338: iconst_3
    //   34339: aaload
    //   34340: ldc_w '1'
    //   34343: invokevirtual equals : (Ljava/lang/Object;)Z
    //   34346: ifne -> 34354
    //   34349: goto_w -> 34584
    //   34354: ldc ''
    //   34356: aload #26
    //   34358: iconst_2
    //   34359: aaload
    //   34360: invokevirtual equals : (Ljava/lang/Object;)Z
    //   34363: ifeq -> 34371
    //   34366: goto_w -> 34584
    //   34371: aload #18
    //   34373: ldc ''
    //   34375: invokevirtual equals : (Ljava/lang/Object;)Z
    //   34378: ifeq -> 34386
    //   34381: goto_w -> 34584
    //   34386: aload #18
    //   34388: ldc_w '.'
    //   34391: invokevirtual indexOf : (Ljava/lang/String;)I
    //   34394: ifge -> 34402
    //   34397: goto_w -> 34507
    //   34402: aload #18
    //   34404: aload #18
    //   34406: ldc_w '.'
    //   34409: invokevirtual indexOf : (Ljava/lang/String;)I
    //   34412: iconst_1
    //   34413: iadd
    //   34414: invokevirtual substring : (I)Ljava/lang/String;
    //   34417: astore #27
    //   34419: iconst_0
    //   34420: istore #28
    //   34422: goto_w -> 34453
    //   34427: new java/lang/StringBuilder
    //   34430: dup
    //   34431: aload #18
    //   34433: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   34436: invokespecial <init> : (Ljava/lang/String;)V
    //   34439: ldc_w '0'
    //   34442: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34445: invokevirtual toString : ()Ljava/lang/String;
    //   34448: astore #18
    //   34450: iinc #28, 1
    //   34453: aload #27
    //   34455: invokevirtual length : ()I
    //   34458: aload #26
    //   34460: iconst_2
    //   34461: aaload
    //   34462: invokestatic valueOf : (Ljava/lang/String;)Ljava/lang/Integer;
    //   34465: invokevirtual intValue : ()I
    //   34468: if_icmplt -> 34476
    //   34471: goto_w -> 34502
    //   34476: iload #28
    //   34478: aload #26
    //   34480: iconst_2
    //   34481: aaload
    //   34482: invokestatic valueOf : (Ljava/lang/String;)Ljava/lang/Integer;
    //   34485: invokevirtual intValue : ()I
    //   34488: aload #27
    //   34490: invokevirtual length : ()I
    //   34493: isub
    //   34494: if_icmpge -> 34502
    //   34497: goto_w -> 34427
    //   34502: goto_w -> 34584
    //   34507: new java/lang/StringBuilder
    //   34510: dup
    //   34511: aload #18
    //   34513: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   34516: invokespecial <init> : (Ljava/lang/String;)V
    //   34519: ldc_w '.'
    //   34522: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34525: invokevirtual toString : ()Ljava/lang/String;
    //   34528: astore #18
    //   34530: iconst_0
    //   34531: istore #27
    //   34533: goto_w -> 34564
    //   34538: new java/lang/StringBuilder
    //   34541: dup
    //   34542: aload #18
    //   34544: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   34547: invokespecial <init> : (Ljava/lang/String;)V
    //   34550: ldc_w '0'
    //   34553: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34556: invokevirtual toString : ()Ljava/lang/String;
    //   34559: astore #18
    //   34561: iinc #27, 1
    //   34564: iload #27
    //   34566: aload #26
    //   34568: iconst_2
    //   34569: aaload
    //   34570: invokestatic valueOf : (Ljava/lang/String;)Ljava/lang/Integer;
    //   34573: invokevirtual intValue : ()I
    //   34576: if_icmpge -> 34584
    //   34579: goto_w -> 34538
    //   34584: aload #18
    //   34586: ldc_w '.'
    //   34589: invokevirtual endsWith : (Ljava/lang/String;)Z
    //   34592: ifne -> 34600
    //   34595: goto_w -> 34615
    //   34600: aload #18
    //   34602: iconst_0
    //   34603: aload #18
    //   34605: invokevirtual length : ()I
    //   34608: iconst_1
    //   34609: isub
    //   34610: invokevirtual substring : (II)Ljava/lang/String;
    //   34613: astore #18
    //   34615: new java/lang/StringBuilder
    //   34618: dup
    //   34619: ldc_w '<input type=\'hidden\' value=\''
    //   34622: invokespecial <init> : (Ljava/lang/String;)V
    //   34625: aload #26
    //   34627: iconst_2
    //   34628: aaload
    //   34629: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34632: ldc_w ':'
    //   34635: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34638: aload #26
    //   34640: iconst_3
    //   34641: aaload
    //   34642: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34645: ldc_w '\' name=\''
    //   34648: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34651: aload_1
    //   34652: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34655: ldc_w '_js\' id=\''
    //   34658: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34661: aload_1
    //   34662: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34665: ldc_w '_js\' />'
    //   34668: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34671: invokevirtual toString : ()Ljava/lang/String;
    //   34674: astore #25
    //   34676: aload #4
    //   34678: ifnonnull -> 34686
    //   34681: goto_w -> 34727
    //   34686: aload #4
    //   34688: new java/lang/StringBuilder
    //   34691: dup
    //   34692: ldc_w ','
    //   34695: invokespecial <init> : (Ljava/lang/String;)V
    //   34698: aload #13
    //   34700: iconst_0
    //   34701: aaload
    //   34702: iconst_0
    //   34703: aaload
    //   34704: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34707: ldc_w ','
    //   34710: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34713: invokevirtual toString : ()Ljava/lang/String;
    //   34716: invokevirtual indexOf : (Ljava/lang/String;)I
    //   34719: iflt -> 34727
    //   34722: goto_w -> 34768
    //   34727: aload #4
    //   34729: new java/lang/StringBuilder
    //   34732: dup
    //   34733: ldc_w ','
    //   34736: invokespecial <init> : (Ljava/lang/String;)V
    //   34739: aload #13
    //   34741: iconst_0
    //   34742: aaload
    //   34743: iconst_5
    //   34744: aaload
    //   34745: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34748: ldc_w ','
    //   34751: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34754: invokevirtual toString : ()Ljava/lang/String;
    //   34757: invokevirtual indexOf : (Ljava/lang/String;)I
    //   34760: ifge -> 34768
    //   34763: goto_w -> 34868
    //   34768: new java/lang/StringBuilder
    //   34771: dup
    //   34772: ldc_w '<input style=width:'
    //   34775: invokespecial <init> : (Ljava/lang/String;)V
    //   34778: aload #13
    //   34780: iconst_0
    //   34781: aaload
    //   34782: iconst_3
    //   34783: aaload
    //   34784: ldc_w '1'
    //   34787: invokevirtual equals : (Ljava/lang/Object;)Z
    //   34790: ifne -> 34798
    //   34793: goto_w -> 34806
    //   34798: ldc_w '92'
    //   34801: goto_w -> 34809
    //   34806: ldc_w '100'
    //   34809: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34812: ldc_w '%;font-size:1em; type=hidden name='
    //   34815: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34818: aload_1
    //   34819: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34822: ldc_w '_cmp id='
    //   34825: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34828: aload_1
    //   34829: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34832: ldc_w '_cmp class=flowInputRed value=''
    //   34835: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34838: aload #18
    //   34840: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34843: ldc_w '' readonly>'
    //   34846: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34849: aload #18
    //   34851: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34854: invokevirtual toString : ()Ljava/lang/String;
    //   34857: astore #10
    //   34859: ldc ''
    //   34861: astore #14
    //   34863: goto_w -> 34954
    //   34868: new java/lang/StringBuilder
    //   34871: dup
    //   34872: ldc_w '<input style=width:'
    //   34875: invokespecial <init> : (Ljava/lang/String;)V
    //   34878: aload #13
    //   34880: iconst_0
    //   34881: aaload
    //   34882: iconst_3
    //   34883: aaload
    //   34884: ldc_w '1'
    //   34887: invokevirtual equals : (Ljava/lang/Object;)Z
    //   34890: ifne -> 34898
    //   34893: goto_w -> 34906
    //   34898: ldc_w '92'
    //   34901: goto_w -> 34909
    //   34906: ldc_w '100'
    //   34909: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34912: ldc_w '%;font-size:1em; type=text name='
    //   34915: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34918: aload_1
    //   34919: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34922: ldc_w '_cmp id='
    //   34925: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34928: aload_1
    //   34929: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34932: ldc_w '_cmp class=flowInputRed onmouseover=setStyle(this) onmouseout=setStyle(this) value=''
    //   34935: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34938: aload #18
    //   34940: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34943: ldc_w '' readonly>'
    //   34946: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34949: invokevirtual toString : ()Ljava/lang/String;
    //   34952: astore #10
    //   34954: new java/lang/StringBuilder
    //   34957: dup
    //   34958: aload #10
    //   34960: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   34963: invokespecial <init> : (Ljava/lang/String;)V
    //   34966: ldc_w '<input type=hidden name='
    //   34969: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34972: aload_1
    //   34973: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34976: ldc_w ' id='
    //   34979: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34982: aload_1
    //   34983: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34986: ldc_w ' value=''
    //   34989: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34992: aload #18
    //   34994: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   34997: ldc_w ''>'
    //   35000: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35003: invokevirtual toString : ()Ljava/lang/String;
    //   35006: astore #10
    //   35008: aload #13
    //   35010: iconst_0
    //   35011: aaload
    //   35012: iconst_2
    //   35013: aaload
    //   35014: ldc '1000000'
    //   35016: invokevirtual equals : (Ljava/lang/Object;)Z
    //   35019: ifeq -> 35027
    //   35022: goto_w -> 35047
    //   35027: aload #13
    //   35029: iconst_0
    //   35030: aaload
    //   35031: iconst_2
    //   35032: aaload
    //   35033: ldc_w '1000001'
    //   35036: invokevirtual equals : (Ljava/lang/Object;)Z
    //   35039: ifne -> 35047
    //   35042: goto_w -> 35090
    //   35047: new java/lang/StringBuilder
    //   35050: dup
    //   35051: ldc_w '<input type=hidden name='
    //   35054: invokespecial <init> : (Ljava/lang/String;)V
    //   35057: aload_1
    //   35058: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35061: ldc_w '_type id='
    //   35064: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35067: aload_1
    //   35068: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35071: ldc_w '_type value=numbercompute>'
    //   35074: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35077: invokevirtual toString : ()Ljava/lang/String;
    //   35080: astore #14
    //   35082: iconst_1
    //   35083: istore #17
    //   35085: goto_w -> 35125
    //   35090: new java/lang/StringBuilder
    //   35093: dup
    //   35094: ldc_w '<input type=hidden name='
    //   35097: invokespecial <init> : (Ljava/lang/String;)V
    //   35100: aload_1
    //   35101: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35104: ldc_w '_type id='
    //   35107: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35110: aload_1
    //   35111: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35114: ldc_w '_type value=varcharcompute>'
    //   35117: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35120: invokevirtual toString : ()Ljava/lang/String;
    //   35123: astore #14
    //   35125: new java/lang/StringBuilder
    //   35128: dup
    //   35129: ldc_w 'if(document.getElementById(''
    //   35132: invokespecial <init> : (Ljava/lang/String;)V
    //   35135: aload #13
    //   35137: iconst_0
    //   35138: aaload
    //   35139: iconst_0
    //   35140: aaload
    //   35141: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35144: ldc_w '-'
    //   35147: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35150: aload_1
    //   35151: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35154: ldc_w ''))\\n{document.getElementById(''
    //   35157: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35160: aload #13
    //   35162: iconst_0
    //   35163: aaload
    //   35164: iconst_0
    //   35165: aaload
    //   35166: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35169: ldc_w '-'
    //   35172: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35175: aload_1
    //   35176: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35179: ldc_w '').innerHTML="'
    //   35182: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35185: aload #10
    //   35187: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35190: aload #14
    //   35192: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35195: aload #25
    //   35197: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35200: ldc_w '";}'
    //   35203: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35206: invokevirtual toString : ()Ljava/lang/String;
    //   35209: astore #10
    //   35211: goto_w -> 46733
    //   35216: aload #4
    //   35218: ifnonnull -> 35226
    //   35221: goto_w -> 35267
    //   35226: aload #4
    //   35228: new java/lang/StringBuilder
    //   35231: dup
    //   35232: ldc_w ','
    //   35235: invokespecial <init> : (Ljava/lang/String;)V
    //   35238: aload #13
    //   35240: iconst_0
    //   35241: aaload
    //   35242: iconst_0
    //   35243: aaload
    //   35244: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35247: ldc_w ','
    //   35250: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35253: invokevirtual toString : ()Ljava/lang/String;
    //   35256: invokevirtual indexOf : (Ljava/lang/String;)I
    //   35259: iflt -> 35267
    //   35262: goto_w -> 35308
    //   35267: aload #4
    //   35269: new java/lang/StringBuilder
    //   35272: dup
    //   35273: ldc_w ','
    //   35276: invokespecial <init> : (Ljava/lang/String;)V
    //   35279: aload #13
    //   35281: iconst_0
    //   35282: aaload
    //   35283: iconst_5
    //   35284: aaload
    //   35285: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35288: ldc_w ','
    //   35291: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35294: invokevirtual toString : ()Ljava/lang/String;
    //   35297: invokevirtual indexOf : (Ljava/lang/String;)I
    //   35300: ifge -> 35308
    //   35303: goto_w -> 35584
    //   35308: aload #18
    //   35310: ifnonnull -> 35318
    //   35313: goto_w -> 35333
    //   35318: aload #18
    //   35320: invokevirtual length : ()I
    //   35323: bipush #8
    //   35325: if_icmplt -> 35333
    //   35328: goto_w -> 35486
    //   35333: new java/lang/StringBuilder
    //   35336: dup
    //   35337: aload #15
    //   35339: invokevirtual getYear : ()I
    //   35342: sipush #1900
    //   35345: iadd
    //   35346: invokestatic valueOf : (I)Ljava/lang/String;
    //   35349: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   35352: invokespecial <init> : (Ljava/lang/String;)V
    //   35355: ldc_w '-'
    //   35358: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35361: aload #15
    //   35363: invokevirtual getMonth : ()I
    //   35366: bipush #9
    //   35368: if_icmpge -> 35376
    //   35371: goto_w -> 35391
    //   35376: aload #15
    //   35378: invokevirtual getMonth : ()I
    //   35381: iconst_1
    //   35382: iadd
    //   35383: invokestatic valueOf : (I)Ljava/lang/String;
    //   35386: goto_w -> 35417
    //   35391: new java/lang/StringBuilder
    //   35394: dup
    //   35395: ldc_w '0'
    //   35398: invokespecial <init> : (Ljava/lang/String;)V
    //   35401: aload #15
    //   35403: invokevirtual getMonth : ()I
    //   35406: iconst_1
    //   35407: iadd
    //   35408: invokestatic valueOf : (I)Ljava/lang/String;
    //   35411: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35414: invokevirtual toString : ()Ljava/lang/String;
    //   35417: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35420: ldc_w '-'
    //   35423: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35426: aload #15
    //   35428: invokevirtual getDate : ()I
    //   35431: bipush #9
    //   35433: if_icmpgt -> 35441
    //   35436: goto_w -> 35454
    //   35441: aload #15
    //   35443: invokevirtual getDate : ()I
    //   35446: invokestatic valueOf : (I)Ljava/lang/String;
    //   35449: goto_w -> 35478
    //   35454: new java/lang/StringBuilder
    //   35457: dup
    //   35458: ldc_w '0'
    //   35461: invokespecial <init> : (Ljava/lang/String;)V
    //   35464: aload #15
    //   35466: invokevirtual getDate : ()I
    //   35469: invokestatic valueOf : (I)Ljava/lang/String;
    //   35472: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35475: invokevirtual toString : ()Ljava/lang/String;
    //   35478: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35481: invokevirtual toString : ()Ljava/lang/String;
    //   35484: astore #18
    //   35486: aload #18
    //   35488: ifnull -> 35496
    //   35491: goto_w -> 35504
    //   35496: ldc_w '&nbsp'
    //   35499: goto_w -> 35523
    //   35504: aload #18
    //   35506: ldc_w '\\n'
    //   35509: ldc_w '<br>'
    //   35512: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   35515: ldc_w '\\r'
    //   35518: ldc ''
    //   35520: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   35523: astore #10
    //   35525: new java/lang/StringBuilder
    //   35528: dup
    //   35529: aload #10
    //   35531: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   35534: invokespecial <init> : (Ljava/lang/String;)V
    //   35537: ldc_w '<input type=hidden id='
    //   35540: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35543: aload_1
    //   35544: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35547: ldc_w ' name='
    //   35550: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35553: aload_1
    //   35554: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35557: ldc_w ' value=''
    //   35560: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35563: aload #18
    //   35565: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35568: ldc_w ''>'
    //   35571: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35574: invokevirtual toString : ()Ljava/lang/String;
    //   35577: astore #10
    //   35579: goto_w -> 35816
    //   35584: aload #18
    //   35586: ifnonnull -> 35594
    //   35589: goto_w -> 35609
    //   35594: aload #18
    //   35596: invokevirtual length : ()I
    //   35599: bipush #8
    //   35601: if_icmplt -> 35609
    //   35604: goto_w -> 35762
    //   35609: new java/lang/StringBuilder
    //   35612: dup
    //   35613: aload #15
    //   35615: invokevirtual getYear : ()I
    //   35618: sipush #1900
    //   35621: iadd
    //   35622: invokestatic valueOf : (I)Ljava/lang/String;
    //   35625: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   35628: invokespecial <init> : (Ljava/lang/String;)V
    //   35631: ldc_w '-'
    //   35634: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35637: aload #15
    //   35639: invokevirtual getMonth : ()I
    //   35642: bipush #9
    //   35644: if_icmpge -> 35652
    //   35647: goto_w -> 35667
    //   35652: aload #15
    //   35654: invokevirtual getMonth : ()I
    //   35657: iconst_1
    //   35658: iadd
    //   35659: invokestatic valueOf : (I)Ljava/lang/String;
    //   35662: goto_w -> 35693
    //   35667: new java/lang/StringBuilder
    //   35670: dup
    //   35671: ldc_w '0'
    //   35674: invokespecial <init> : (Ljava/lang/String;)V
    //   35677: aload #15
    //   35679: invokevirtual getMonth : ()I
    //   35682: iconst_1
    //   35683: iadd
    //   35684: invokestatic valueOf : (I)Ljava/lang/String;
    //   35687: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35690: invokevirtual toString : ()Ljava/lang/String;
    //   35693: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35696: ldc_w '-'
    //   35699: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35702: aload #15
    //   35704: invokevirtual getDate : ()I
    //   35707: bipush #9
    //   35709: if_icmpgt -> 35717
    //   35712: goto_w -> 35730
    //   35717: aload #15
    //   35719: invokevirtual getDate : ()I
    //   35722: invokestatic valueOf : (I)Ljava/lang/String;
    //   35725: goto_w -> 35754
    //   35730: new java/lang/StringBuilder
    //   35733: dup
    //   35734: ldc_w '0'
    //   35737: invokespecial <init> : (Ljava/lang/String;)V
    //   35740: aload #15
    //   35742: invokevirtual getDate : ()I
    //   35745: invokestatic valueOf : (I)Ljava/lang/String;
    //   35748: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35751: invokevirtual toString : ()Ljava/lang/String;
    //   35754: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35757: invokevirtual toString : ()Ljava/lang/String;
    //   35760: astore #18
    //   35762: new java/lang/StringBuilder
    //   35765: dup
    //   35766: aload #18
    //   35768: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   35771: invokespecial <init> : (Ljava/lang/String;)V
    //   35774: ldc_w '<input type=hidden id='
    //   35777: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35780: aload_1
    //   35781: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35784: ldc_w ' name='
    //   35787: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35790: aload_1
    //   35791: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35794: ldc_w ' value=''
    //   35797: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35800: aload #18
    //   35802: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35805: ldc_w ''>'
    //   35808: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35811: invokevirtual toString : ()Ljava/lang/String;
    //   35814: astore #10
    //   35816: new java/lang/StringBuilder
    //   35819: dup
    //   35820: ldc_w 'if(document.getElementById(''
    //   35823: invokespecial <init> : (Ljava/lang/String;)V
    //   35826: aload #13
    //   35828: iconst_0
    //   35829: aaload
    //   35830: iconst_0
    //   35831: aaload
    //   35832: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35835: ldc_w '-'
    //   35838: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35841: aload_1
    //   35842: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35845: ldc_w ''))\\n{document.getElementById(''
    //   35848: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35851: aload #13
    //   35853: iconst_0
    //   35854: aaload
    //   35855: iconst_0
    //   35856: aaload
    //   35857: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35860: ldc_w '-'
    //   35863: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35866: aload_1
    //   35867: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35870: ldc_w '').innerHTML="'
    //   35873: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35876: aload #10
    //   35878: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35881: aload #14
    //   35883: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35886: ldc_w '";}'
    //   35889: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35892: invokevirtual toString : ()Ljava/lang/String;
    //   35895: astore #10
    //   35897: goto_w -> 46733
    //   35902: goto_w -> 46733
    //   35907: aload #4
    //   35909: ifnonnull -> 35917
    //   35912: goto_w -> 35999
    //   35917: aload #4
    //   35919: new java/lang/StringBuilder
    //   35922: dup
    //   35923: ldc_w ','
    //   35926: invokespecial <init> : (Ljava/lang/String;)V
    //   35929: aload #13
    //   35931: iconst_0
    //   35932: aaload
    //   35933: iconst_0
    //   35934: aaload
    //   35935: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35938: ldc_w ','
    //   35941: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35944: invokevirtual toString : ()Ljava/lang/String;
    //   35947: invokevirtual indexOf : (Ljava/lang/String;)I
    //   35950: iflt -> 35958
    //   35953: goto_w -> 36031
    //   35958: aload #4
    //   35960: new java/lang/StringBuilder
    //   35963: dup
    //   35964: ldc_w ','
    //   35967: invokespecial <init> : (Ljava/lang/String;)V
    //   35970: aload #13
    //   35972: iconst_0
    //   35973: aaload
    //   35974: iconst_5
    //   35975: aaload
    //   35976: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35979: ldc_w ','
    //   35982: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   35985: invokevirtual toString : ()Ljava/lang/String;
    //   35988: invokevirtual indexOf : (Ljava/lang/String;)I
    //   35991: iflt -> 35999
    //   35994: goto_w -> 36031
    //   35999: ldc_w 'qingdaojinwang'
    //   36002: invokestatic getCustomerName : ()Ljava/lang/String;
    //   36005: invokevirtual equals : (Ljava/lang/Object;)Z
    //   36008: ifne -> 36016
    //   36011: goto_w -> 36232
    //   36016: ldc_w 'bmys_bm'
    //   36019: aload_1
    //   36020: invokevirtual equals : (Ljava/lang/Object;)Z
    //   36023: ifne -> 36031
    //   36026: goto_w -> 36232
    //   36031: new java/lang/StringBuilder
    //   36034: dup
    //   36035: ldc_w '   <input type=hidden id='
    //   36038: invokespecial <init> : (Ljava/lang/String;)V
    //   36041: aload_1
    //   36042: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36045: ldc_w ' name='
    //   36048: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36051: aload_1
    //   36052: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36055: ldc_w ' value='
    //   36058: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36061: aload #18
    //   36063: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36066: ldc_w '>'
    //   36069: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36072: invokevirtual toString : ()Ljava/lang/String;
    //   36075: astore #26
    //   36077: new java/lang/StringBuilder
    //   36080: dup
    //   36081: ldc_w 'if(document.getElementById(''
    //   36084: invokespecial <init> : (Ljava/lang/String;)V
    //   36087: aload #13
    //   36089: iconst_0
    //   36090: aaload
    //   36091: iconst_0
    //   36092: aaload
    //   36093: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36096: ldc_w '-'
    //   36099: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36102: aload_1
    //   36103: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36106: ldc_w ''))\\n{document.getElementById(''
    //   36109: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36112: aload #13
    //   36114: iconst_0
    //   36115: aaload
    //   36116: iconst_0
    //   36117: aaload
    //   36118: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36121: ldc_w '-'
    //   36124: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36127: aload_1
    //   36128: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36131: ldc_w '').innerHTML='
    //   36134: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36137: aload #18
    //   36139: ifnull -> 36147
    //   36142: goto_w -> 36155
    //   36147: ldc_w ''&nbsp''
    //   36150: goto_w -> 36190
    //   36155: new java/lang/StringBuilder
    //   36158: dup
    //   36159: ldc_w 'orgNameShow(''
    //   36162: invokespecial <init> : (Ljava/lang/String;)V
    //   36165: aload #18
    //   36167: ldc_w '\\n'
    //   36170: ldc_w '<br>'
    //   36173: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   36176: ldc_w '\\r'
    //   36179: ldc ''
    //   36181: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   36184: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36187: invokevirtual toString : ()Ljava/lang/String;
    //   36190: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36193: ldc_w '','
    //   36196: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36199: invokestatic getInnerShow : ()I
    //   36202: invokevirtual append : (I)Ljava/lang/StringBuilder;
    //   36205: ldc_w ')+''
    //   36208: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36211: aload #26
    //   36213: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36216: ldc_w '' ;}'
    //   36219: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36222: invokevirtual toString : ()Ljava/lang/String;
    //   36225: astore #10
    //   36227: goto_w -> 36855
    //   36232: new java/lang/StringBuilder
    //   36235: dup
    //   36236: invokespecial <init> : ()V
    //   36239: aload #9
    //   36241: invokeinterface getSession : ()Ljavax/servlet/http/HttpSession;
    //   36246: ldc_w 'userId'
    //   36249: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   36254: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   36257: invokevirtual toString : ()Ljava/lang/String;
    //   36260: astore #26
    //   36262: aload #26
    //   36264: invokestatic haveSidelineOrg : (Ljava/lang/String;)Ljava/util/List;
    //   36267: astore #27
    //   36269: aload #27
    //   36271: ifnull -> 36279
    //   36274: goto_w -> 36571
    //   36279: new java/lang/StringBuilder
    //   36282: dup
    //   36283: ldc_w '<input type=hidden id='
    //   36286: invokespecial <init> : (Ljava/lang/String;)V
    //   36289: aload_1
    //   36290: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36293: ldc_w ' name='
    //   36296: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36299: aload_1
    //   36300: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36303: ldc_w ' value=''
    //   36306: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36309: aload #18
    //   36311: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36314: ldc_w ''>'
    //   36317: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36320: invokevirtual toString : ()Ljava/lang/String;
    //   36323: astore #10
    //   36325: new java/lang/StringBuilder
    //   36328: dup
    //   36329: ldc_w 'var '
    //   36332: invokespecial <init> : (Ljava/lang/String;)V
    //   36335: aload_1
    //   36336: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36339: ldc_w '_temp=document.createElement('SCRIPT');'
    //   36342: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36345: invokevirtual toString : ()Ljava/lang/String;
    //   36348: astore #28
    //   36350: new java/lang/StringBuilder
    //   36353: dup
    //   36354: aload #28
    //   36356: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   36359: invokespecial <init> : (Ljava/lang/String;)V
    //   36362: aload_1
    //   36363: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36366: ldc_w '_temp.text="document.all.'
    //   36369: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36372: aload_1
    //   36373: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36376: ldc_w '.value=orgNameShow(document.all.org_Name.value,'
    //   36379: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36382: invokestatic getInnerShow : ()I
    //   36385: invokevirtual append : (I)Ljava/lang/StringBuilder;
    //   36388: ldc_w ');";'
    //   36391: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36394: invokevirtual toString : ()Ljava/lang/String;
    //   36397: astore #28
    //   36399: new java/lang/StringBuilder
    //   36402: dup
    //   36403: aload #28
    //   36405: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   36408: invokespecial <init> : (Ljava/lang/String;)V
    //   36411: ldc_w 'if(document.getElementById(''
    //   36414: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36417: aload #13
    //   36419: iconst_0
    //   36420: aaload
    //   36421: iconst_0
    //   36422: aaload
    //   36423: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36426: ldc_w '-'
    //   36429: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36432: aload_1
    //   36433: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36436: ldc_w ''))\\n{document.getElementById(''
    //   36439: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36442: aload #13
    //   36444: iconst_0
    //   36445: aaload
    //   36446: iconst_0
    //   36447: aaload
    //   36448: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36451: ldc_w '-'
    //   36454: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36457: aload_1
    //   36458: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36461: ldc_w '').innerHTML=orgNameShow(document.all.org_Name.value,'
    //   36464: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36467: invokestatic getInnerShow : ()I
    //   36470: invokevirtual append : (I)Ljava/lang/StringBuilder;
    //   36473: ldc_w ')+''
    //   36476: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36479: aload #14
    //   36481: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36484: ldc_w '';document.getElementById(''
    //   36487: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36490: aload #13
    //   36492: iconst_0
    //   36493: aaload
    //   36494: iconst_0
    //   36495: aaload
    //   36496: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36499: ldc_w '-'
    //   36502: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36505: aload_1
    //   36506: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36509: ldc_w '').innerHTML+="'
    //   36512: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36515: aload #10
    //   36517: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36520: ldc_w '";document.getElementById(''
    //   36523: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36526: aload #13
    //   36528: iconst_0
    //   36529: aaload
    //   36530: iconst_0
    //   36531: aaload
    //   36532: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36535: ldc_w '-'
    //   36538: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36541: aload_1
    //   36542: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36545: ldc_w '').appendChild('
    //   36548: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36551: aload_1
    //   36552: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36555: ldc_w '_temp);}'
    //   36558: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36561: invokevirtual toString : ()Ljava/lang/String;
    //   36564: astore #10
    //   36566: goto_w -> 36855
    //   36571: new java/lang/StringBuilder
    //   36574: dup
    //   36575: ldc_w '<input type=hidden id='
    //   36578: invokespecial <init> : (Ljava/lang/String;)V
    //   36581: aload_1
    //   36582: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36585: ldc_w '_type name='
    //   36588: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36591: aload_1
    //   36592: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36595: ldc_w '_type value=varchar><select style=font-size:1em; id='
    //   36598: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36601: aload_1
    //   36602: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36605: ldc_w ' name='
    //   36608: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36611: aload_1
    //   36612: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36615: ldc_w ' >'
    //   36618: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36621: invokevirtual toString : ()Ljava/lang/String;
    //   36624: astore #28
    //   36626: iconst_0
    //   36627: istore #29
    //   36629: goto_w -> 36733
    //   36634: aload #27
    //   36636: iload #29
    //   36638: invokeinterface get : (I)Ljava/lang/Object;
    //   36643: checkcast [Ljava/lang/String;
    //   36646: astore #30
    //   36648: new java/lang/StringBuilder
    //   36651: dup
    //   36652: aload #28
    //   36654: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   36657: invokespecial <init> : (Ljava/lang/String;)V
    //   36660: ldc_w '<option value='
    //   36663: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36666: aload #30
    //   36668: iconst_1
    //   36669: aaload
    //   36670: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36673: aload #18
    //   36675: aload #30
    //   36677: iconst_1
    //   36678: aaload
    //   36679: invokevirtual equals : (Ljava/lang/Object;)Z
    //   36682: ifne -> 36690
    //   36685: goto_w -> 36698
    //   36690: ldc_w ' selected'
    //   36693: goto_w -> 36700
    //   36698: ldc ''
    //   36700: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36703: ldc_w '>'
    //   36706: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36709: aload #30
    //   36711: iconst_1
    //   36712: aaload
    //   36713: invokestatic getOrgByNum : (Ljava/lang/String;)Ljava/lang/String;
    //   36716: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36719: ldc_w '</option>'
    //   36722: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36725: invokevirtual toString : ()Ljava/lang/String;
    //   36728: astore #28
    //   36730: iinc #29, 1
    //   36733: iload #29
    //   36735: aload #27
    //   36737: invokeinterface size : ()I
    //   36742: if_icmpge -> 36750
    //   36745: goto_w -> 36634
    //   36750: new java/lang/StringBuilder
    //   36753: dup
    //   36754: aload #28
    //   36756: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   36759: invokespecial <init> : (Ljava/lang/String;)V
    //   36762: ldc_w '</select>'
    //   36765: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36768: invokevirtual toString : ()Ljava/lang/String;
    //   36771: astore #28
    //   36773: new java/lang/StringBuilder
    //   36776: dup
    //   36777: ldc_w '\\nif(document.getElementById(''
    //   36780: invokespecial <init> : (Ljava/lang/String;)V
    //   36783: aload #13
    //   36785: iconst_0
    //   36786: aaload
    //   36787: iconst_0
    //   36788: aaload
    //   36789: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36792: ldc_w '-'
    //   36795: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36798: aload_1
    //   36799: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36802: ldc_w '')){\\n'
    //   36805: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36808: ldc_w 'document.getElementById(''
    //   36811: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36814: aload #13
    //   36816: iconst_0
    //   36817: aaload
    //   36818: iconst_0
    //   36819: aaload
    //   36820: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36823: ldc_w '-'
    //   36826: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36829: aload_1
    //   36830: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36833: ldc_w '').innerHTML=''
    //   36836: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36839: aload #28
    //   36841: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36844: ldc_w '';\\n}\\n'
    //   36847: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36850: invokevirtual toString : ()Ljava/lang/String;
    //   36853: astore #10
    //   36855: goto_w -> 46733
    //   36860: goto_w -> 46733
    //   36865: goto_w -> 46733
    //   36870: new java/lang/StringBuilder
    //   36873: dup
    //   36874: ldc_w '<input type=hidden name='
    //   36877: invokespecial <init> : (Ljava/lang/String;)V
    //   36880: aload_1
    //   36881: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36884: ldc_w '_type id='
    //   36887: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36890: aload_1
    //   36891: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36894: ldc_w '_type value=personorg>'
    //   36897: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36900: invokevirtual toString : ()Ljava/lang/String;
    //   36903: astore #14
    //   36905: aload #4
    //   36907: ifnonnull -> 36915
    //   36910: goto_w -> 37265
    //   36915: aload #4
    //   36917: new java/lang/StringBuilder
    //   36920: dup
    //   36921: ldc_w ','
    //   36924: invokespecial <init> : (Ljava/lang/String;)V
    //   36927: aload #13
    //   36929: iconst_0
    //   36930: aaload
    //   36931: iconst_0
    //   36932: aaload
    //   36933: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36936: ldc_w ','
    //   36939: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36942: invokevirtual toString : ()Ljava/lang/String;
    //   36945: invokevirtual indexOf : (Ljava/lang/String;)I
    //   36948: iflt -> 36956
    //   36951: goto_w -> 36997
    //   36956: aload #4
    //   36958: new java/lang/StringBuilder
    //   36961: dup
    //   36962: ldc_w ','
    //   36965: invokespecial <init> : (Ljava/lang/String;)V
    //   36968: aload #13
    //   36970: iconst_0
    //   36971: aaload
    //   36972: iconst_5
    //   36973: aaload
    //   36974: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36977: ldc_w ','
    //   36980: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36983: invokevirtual toString : ()Ljava/lang/String;
    //   36986: invokevirtual indexOf : (Ljava/lang/String;)I
    //   36989: ifge -> 36997
    //   36992: goto_w -> 37265
    //   36997: ldc ''
    //   36999: astore #14
    //   37001: new java/lang/StringBuilder
    //   37004: dup
    //   37005: aload #10
    //   37007: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   37010: invokespecial <init> : (Ljava/lang/String;)V
    //   37013: aload #18
    //   37015: ifnonnull -> 37023
    //   37018: goto_w -> 37056
    //   37023: aload #18
    //   37025: ldc_w ';'
    //   37028: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   37031: arraylength
    //   37032: iconst_1
    //   37033: if_icmpgt -> 37041
    //   37036: goto_w -> 37056
    //   37041: aload #18
    //   37043: ldc_w ';'
    //   37046: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   37049: iconst_0
    //   37050: aaload
    //   37051: goto_w -> 37058
    //   37056: ldc ''
    //   37058: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37061: invokevirtual toString : ()Ljava/lang/String;
    //   37064: astore #10
    //   37066: new java/lang/StringBuilder
    //   37069: dup
    //   37070: aload #10
    //   37072: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   37075: invokespecial <init> : (Ljava/lang/String;)V
    //   37078: ldc_w '<input type=hidden id='
    //   37081: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37084: aload_1
    //   37085: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37088: ldc_w '_Id name='
    //   37091: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37094: aload_1
    //   37095: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37098: ldc_w '_Id value=\"'
    //   37101: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37104: aload #18
    //   37106: ifnonnull -> 37114
    //   37109: goto_w -> 37147
    //   37114: aload #18
    //   37116: ldc_w ';'
    //   37119: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   37122: arraylength
    //   37123: iconst_1
    //   37124: if_icmpgt -> 37132
    //   37127: goto_w -> 37147
    //   37132: aload #18
    //   37134: ldc_w ';'
    //   37137: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   37140: iconst_1
    //   37141: aaload
    //   37142: goto_w -> 37149
    //   37147: ldc ''
    //   37149: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37152: ldc_w '\">'
    //   37155: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37158: invokevirtual toString : ()Ljava/lang/String;
    //   37161: astore #10
    //   37163: new java/lang/StringBuilder
    //   37166: dup
    //   37167: aload #10
    //   37169: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   37172: invokespecial <init> : (Ljava/lang/String;)V
    //   37175: ldc_w '<input type=hidden id='
    //   37178: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37181: aload_1
    //   37182: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37185: ldc_w '_Name name='
    //   37188: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37191: aload_1
    //   37192: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37195: ldc_w '_Name value=\"'
    //   37198: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37201: aload #18
    //   37203: ifnonnull -> 37211
    //   37206: goto_w -> 37244
    //   37211: aload #18
    //   37213: ldc_w ';'
    //   37216: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   37219: arraylength
    //   37220: iconst_1
    //   37221: if_icmpgt -> 37229
    //   37224: goto_w -> 37244
    //   37229: aload #18
    //   37231: ldc_w ';'
    //   37234: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   37237: iconst_0
    //   37238: aaload
    //   37239: goto_w -> 37246
    //   37244: ldc ''
    //   37246: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37249: ldc_w '\">'
    //   37252: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37255: invokevirtual toString : ()Ljava/lang/String;
    //   37258: astore #10
    //   37260: goto_w -> 37626
    //   37265: new java/lang/StringBuilder
    //   37268: dup
    //   37269: ldc_w '<input style=width:80%;font-size:1em; type=text class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) id='
    //   37272: invokespecial <init> : (Ljava/lang/String;)V
    //   37275: aload_1
    //   37276: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37279: ldc_w '_Name name='
    //   37282: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37285: aload_1
    //   37286: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37289: ldc_w '_Name readonly title=\"请点击选择\" value=\"'
    //   37292: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37295: aload #18
    //   37297: ifnonnull -> 37305
    //   37300: goto_w -> 37338
    //   37305: aload #18
    //   37307: ldc_w ';'
    //   37310: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   37313: arraylength
    //   37314: iconst_1
    //   37315: if_icmpgt -> 37323
    //   37318: goto_w -> 37338
    //   37323: aload #18
    //   37325: ldc_w ';'
    //   37328: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   37331: iconst_0
    //   37332: aaload
    //   37333: goto_w -> 37340
    //   37338: ldc ''
    //   37340: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37343: ldc_w '\" onClick=\"openEndow(''
    //   37346: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37349: aload_1
    //   37350: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37353: ldc_w '_Id',''
    //   37356: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37359: aload_1
    //   37360: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37363: ldc_w '_Name',document.all.'
    //   37366: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37369: aload_1
    //   37370: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37373: ldc_w '_Id.value,document.all.'
    //   37376: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37379: aload_1
    //   37380: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37383: ldc_w '_Name.value,'user','yes','user','-100',this)\" readonly=readonly />'
    //   37386: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37389: invokevirtual toString : ()Ljava/lang/String;
    //   37392: astore #10
    //   37394: new java/lang/StringBuilder
    //   37397: dup
    //   37398: aload #10
    //   37400: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   37403: invokespecial <init> : (Ljava/lang/String;)V
    //   37406: ldc_w '<input type=hidden id='
    //   37409: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37412: aload_1
    //   37413: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37416: ldc_w '_Id name='
    //   37419: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37422: aload_1
    //   37423: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37426: ldc_w '_Id value=\"'
    //   37429: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37432: aload #18
    //   37434: ifnonnull -> 37442
    //   37437: goto_w -> 37475
    //   37442: aload #18
    //   37444: ldc_w ';'
    //   37447: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   37450: arraylength
    //   37451: iconst_1
    //   37452: if_icmpgt -> 37460
    //   37455: goto_w -> 37475
    //   37460: aload #18
    //   37462: ldc_w ';'
    //   37465: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   37468: iconst_1
    //   37469: aaload
    //   37470: goto_w -> 37477
    //   37475: ldc ''
    //   37477: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37480: ldc_w '\">'
    //   37483: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37486: aload #13
    //   37488: iconst_0
    //   37489: aaload
    //   37490: iconst_3
    //   37491: aaload
    //   37492: ldc_w '1'
    //   37495: invokevirtual equals : (Ljava/lang/Object;)Z
    //   37498: ifne -> 37506
    //   37501: goto_w -> 37616
    //   37506: aload #4
    //   37508: new java/lang/StringBuilder
    //   37511: dup
    //   37512: ldc_w ','
    //   37515: invokespecial <init> : (Ljava/lang/String;)V
    //   37518: aload #13
    //   37520: iconst_0
    //   37521: aaload
    //   37522: iconst_0
    //   37523: aaload
    //   37524: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37527: ldc_w ','
    //   37530: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37533: invokevirtual toString : ()Ljava/lang/String;
    //   37536: invokevirtual indexOf : (Ljava/lang/String;)I
    //   37539: iflt -> 37547
    //   37542: goto_w -> 37616
    //   37547: aload #4
    //   37549: new java/lang/StringBuilder
    //   37552: dup
    //   37553: ldc_w ','
    //   37556: invokespecial <init> : (Ljava/lang/String;)V
    //   37559: aload #13
    //   37561: iconst_0
    //   37562: aaload
    //   37563: iconst_5
    //   37564: aaload
    //   37565: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37568: ldc_w ','
    //   37571: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37574: invokevirtual toString : ()Ljava/lang/String;
    //   37577: invokevirtual indexOf : (Ljava/lang/String;)I
    //   37580: iflt -> 37588
    //   37583: goto_w -> 37616
    //   37588: new java/lang/StringBuilder
    //   37591: dup
    //   37592: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   37595: invokespecial <init> : (Ljava/lang/String;)V
    //   37598: aload_1
    //   37599: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37602: ldc_w '><label class=mustFillcolor>*</label>'
    //   37605: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37608: invokevirtual toString : ()Ljava/lang/String;
    //   37611: goto_w -> 37618
    //   37616: ldc ''
    //   37618: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37621: invokevirtual toString : ()Ljava/lang/String;
    //   37624: astore #10
    //   37626: new java/lang/StringBuilder
    //   37629: dup
    //   37630: ldc_w 'if(document.getElementById(''
    //   37633: invokespecial <init> : (Ljava/lang/String;)V
    //   37636: aload #13
    //   37638: iconst_0
    //   37639: aaload
    //   37640: iconst_0
    //   37641: aaload
    //   37642: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37645: ldc_w '-'
    //   37648: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37651: aload_1
    //   37652: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37655: ldc_w ''))\\n{document.getElementById(''
    //   37658: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37661: aload #13
    //   37663: iconst_0
    //   37664: aaload
    //   37665: iconst_0
    //   37666: aaload
    //   37667: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37670: ldc_w '-'
    //   37673: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37676: aload_1
    //   37677: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37680: ldc_w '').innerHTML=''
    //   37683: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37686: aload #14
    //   37688: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37691: ldc_w '';document.getElementById(''
    //   37694: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37697: aload #13
    //   37699: iconst_0
    //   37700: aaload
    //   37701: iconst_0
    //   37702: aaload
    //   37703: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37706: ldc_w '-'
    //   37709: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37712: aload_1
    //   37713: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37716: ldc_w '').innerHTML+="'
    //   37719: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37722: aload #10
    //   37724: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37727: ldc_w '";}'
    //   37730: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37733: invokevirtual toString : ()Ljava/lang/String;
    //   37736: astore #10
    //   37738: goto_w -> 46733
    //   37743: new java/lang/StringBuilder
    //   37746: dup
    //   37747: ldc_w '<input type=hidden name='
    //   37750: invokespecial <init> : (Ljava/lang/String;)V
    //   37753: aload_1
    //   37754: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37757: ldc_w '_type id='
    //   37760: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37763: aload_1
    //   37764: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37767: ldc_w '_type value=personorg>'
    //   37770: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37773: invokevirtual toString : ()Ljava/lang/String;
    //   37776: astore #14
    //   37778: aload #4
    //   37780: ifnonnull -> 37788
    //   37783: goto_w -> 38138
    //   37788: aload #4
    //   37790: new java/lang/StringBuilder
    //   37793: dup
    //   37794: ldc_w ','
    //   37797: invokespecial <init> : (Ljava/lang/String;)V
    //   37800: aload #13
    //   37802: iconst_0
    //   37803: aaload
    //   37804: iconst_0
    //   37805: aaload
    //   37806: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37809: ldc_w ','
    //   37812: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37815: invokevirtual toString : ()Ljava/lang/String;
    //   37818: invokevirtual indexOf : (Ljava/lang/String;)I
    //   37821: iflt -> 37829
    //   37824: goto_w -> 37870
    //   37829: aload #4
    //   37831: new java/lang/StringBuilder
    //   37834: dup
    //   37835: ldc_w ','
    //   37838: invokespecial <init> : (Ljava/lang/String;)V
    //   37841: aload #13
    //   37843: iconst_0
    //   37844: aaload
    //   37845: iconst_5
    //   37846: aaload
    //   37847: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37850: ldc_w ','
    //   37853: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37856: invokevirtual toString : ()Ljava/lang/String;
    //   37859: invokevirtual indexOf : (Ljava/lang/String;)I
    //   37862: ifge -> 37870
    //   37865: goto_w -> 38138
    //   37870: ldc ''
    //   37872: astore #14
    //   37874: new java/lang/StringBuilder
    //   37877: dup
    //   37878: aload #10
    //   37880: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   37883: invokespecial <init> : (Ljava/lang/String;)V
    //   37886: aload #18
    //   37888: ifnonnull -> 37896
    //   37891: goto_w -> 37929
    //   37896: aload #18
    //   37898: ldc_w ';'
    //   37901: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   37904: arraylength
    //   37905: iconst_1
    //   37906: if_icmpgt -> 37914
    //   37909: goto_w -> 37929
    //   37914: aload #18
    //   37916: ldc_w ';'
    //   37919: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   37922: iconst_0
    //   37923: aaload
    //   37924: goto_w -> 37931
    //   37929: ldc ''
    //   37931: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37934: invokevirtual toString : ()Ljava/lang/String;
    //   37937: astore #10
    //   37939: new java/lang/StringBuilder
    //   37942: dup
    //   37943: aload #10
    //   37945: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   37948: invokespecial <init> : (Ljava/lang/String;)V
    //   37951: ldc_w '<input type=hidden id='
    //   37954: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37957: aload_1
    //   37958: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37961: ldc_w '_Id name='
    //   37964: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37967: aload_1
    //   37968: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37971: ldc_w '_Id value=\"'
    //   37974: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   37977: aload #18
    //   37979: ifnonnull -> 37987
    //   37982: goto_w -> 38020
    //   37987: aload #18
    //   37989: ldc_w ';'
    //   37992: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   37995: arraylength
    //   37996: iconst_1
    //   37997: if_icmpgt -> 38005
    //   38000: goto_w -> 38020
    //   38005: aload #18
    //   38007: ldc_w ';'
    //   38010: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   38013: iconst_1
    //   38014: aaload
    //   38015: goto_w -> 38022
    //   38020: ldc ''
    //   38022: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38025: ldc_w '\">'
    //   38028: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38031: invokevirtual toString : ()Ljava/lang/String;
    //   38034: astore #10
    //   38036: new java/lang/StringBuilder
    //   38039: dup
    //   38040: aload #10
    //   38042: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   38045: invokespecial <init> : (Ljava/lang/String;)V
    //   38048: ldc_w '<input type=hidden id='
    //   38051: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38054: aload_1
    //   38055: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38058: ldc_w '_Name name='
    //   38061: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38064: aload_1
    //   38065: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38068: ldc_w '_Name value=\"'
    //   38071: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38074: aload #18
    //   38076: ifnonnull -> 38084
    //   38079: goto_w -> 38117
    //   38084: aload #18
    //   38086: ldc_w ';'
    //   38089: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   38092: arraylength
    //   38093: iconst_1
    //   38094: if_icmpgt -> 38102
    //   38097: goto_w -> 38117
    //   38102: aload #18
    //   38104: ldc_w ';'
    //   38107: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   38110: iconst_0
    //   38111: aaload
    //   38112: goto_w -> 38119
    //   38117: ldc ''
    //   38119: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38122: ldc_w '\">'
    //   38125: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38128: invokevirtual toString : ()Ljava/lang/String;
    //   38131: astore #10
    //   38133: goto_w -> 38539
    //   38138: new java/lang/StringBuilder
    //   38141: dup
    //   38142: ldc_w '<textarea class=flowInput  onblur=checkSize(this) onmouseover=setStyle(this) onmouseout=setStyle(this) id='
    //   38145: invokespecial <init> : (Ljava/lang/String;)V
    //   38148: aload_1
    //   38149: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38152: ldc_w '_Name  name='
    //   38155: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38158: aload_1
    //   38159: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38162: ldc_w '_Name  style=width:'
    //   38165: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38168: aload #13
    //   38170: iconst_0
    //   38171: aaload
    //   38172: iconst_3
    //   38173: aaload
    //   38174: ldc_w '1'
    //   38177: invokevirtual equals : (Ljava/lang/Object;)Z
    //   38180: ifne -> 38188
    //   38183: goto_w -> 38196
    //   38188: ldc_w '92'
    //   38191: goto_w -> 38199
    //   38196: ldc_w '100'
    //   38199: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38202: ldc_w '%;font-size:1em; rows=3 title=\"请点击选择\"  onClick=\"openEndow(''
    //   38205: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38208: aload_1
    //   38209: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38212: ldc_w '_Id',''
    //   38215: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38218: aload_1
    //   38219: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38222: ldc_w '_Name',document.all.'
    //   38225: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38228: aload_1
    //   38229: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38232: ldc_w '_Id.value,document.all.'
    //   38235: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38238: aload_1
    //   38239: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38242: ldc_w '_Name.value,'user','no','user','-100')\" readonly=readonly />'
    //   38245: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38248: aload #18
    //   38250: ifnonnull -> 38258
    //   38253: goto_w -> 38291
    //   38258: aload #18
    //   38260: ldc_w ';'
    //   38263: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   38266: arraylength
    //   38267: iconst_1
    //   38268: if_icmpgt -> 38276
    //   38271: goto_w -> 38291
    //   38276: aload #18
    //   38278: ldc_w ';'
    //   38281: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   38284: iconst_0
    //   38285: aaload
    //   38286: goto_w -> 38293
    //   38291: ldc ''
    //   38293: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38296: ldc_w '</textarea>'
    //   38299: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38302: invokevirtual toString : ()Ljava/lang/String;
    //   38305: astore #10
    //   38307: new java/lang/StringBuilder
    //   38310: dup
    //   38311: aload #10
    //   38313: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   38316: invokespecial <init> : (Ljava/lang/String;)V
    //   38319: ldc_w '<input type=hidden id='
    //   38322: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38325: aload_1
    //   38326: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38329: ldc_w '_Id name='
    //   38332: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38335: aload_1
    //   38336: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38339: ldc_w '_Id value=\"'
    //   38342: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38345: aload #18
    //   38347: ifnonnull -> 38355
    //   38350: goto_w -> 38388
    //   38355: aload #18
    //   38357: ldc_w ';'
    //   38360: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   38363: arraylength
    //   38364: iconst_1
    //   38365: if_icmpgt -> 38373
    //   38368: goto_w -> 38388
    //   38373: aload #18
    //   38375: ldc_w ';'
    //   38378: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   38381: iconst_1
    //   38382: aaload
    //   38383: goto_w -> 38390
    //   38388: ldc ''
    //   38390: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38393: ldc_w '\">'
    //   38396: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38399: aload #13
    //   38401: iconst_0
    //   38402: aaload
    //   38403: iconst_3
    //   38404: aaload
    //   38405: ldc_w '1'
    //   38408: invokevirtual equals : (Ljava/lang/Object;)Z
    //   38411: ifne -> 38419
    //   38414: goto_w -> 38529
    //   38419: aload #4
    //   38421: new java/lang/StringBuilder
    //   38424: dup
    //   38425: ldc_w ','
    //   38428: invokespecial <init> : (Ljava/lang/String;)V
    //   38431: aload #13
    //   38433: iconst_0
    //   38434: aaload
    //   38435: iconst_0
    //   38436: aaload
    //   38437: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38440: ldc_w ','
    //   38443: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38446: invokevirtual toString : ()Ljava/lang/String;
    //   38449: invokevirtual indexOf : (Ljava/lang/String;)I
    //   38452: iflt -> 38460
    //   38455: goto_w -> 38529
    //   38460: aload #4
    //   38462: new java/lang/StringBuilder
    //   38465: dup
    //   38466: ldc_w ','
    //   38469: invokespecial <init> : (Ljava/lang/String;)V
    //   38472: aload #13
    //   38474: iconst_0
    //   38475: aaload
    //   38476: iconst_5
    //   38477: aaload
    //   38478: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38481: ldc_w ','
    //   38484: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38487: invokevirtual toString : ()Ljava/lang/String;
    //   38490: invokevirtual indexOf : (Ljava/lang/String;)I
    //   38493: iflt -> 38501
    //   38496: goto_w -> 38529
    //   38501: new java/lang/StringBuilder
    //   38504: dup
    //   38505: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   38508: invokespecial <init> : (Ljava/lang/String;)V
    //   38511: aload_1
    //   38512: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38515: ldc_w '><label class=mustFillcolor>*</label>'
    //   38518: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38521: invokevirtual toString : ()Ljava/lang/String;
    //   38524: goto_w -> 38531
    //   38529: ldc ''
    //   38531: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38534: invokevirtual toString : ()Ljava/lang/String;
    //   38537: astore #10
    //   38539: new java/lang/StringBuilder
    //   38542: dup
    //   38543: ldc_w 'if(document.getElementById(''
    //   38546: invokespecial <init> : (Ljava/lang/String;)V
    //   38549: aload #13
    //   38551: iconst_0
    //   38552: aaload
    //   38553: iconst_0
    //   38554: aaload
    //   38555: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38558: ldc_w '-'
    //   38561: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38564: aload_1
    //   38565: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38568: ldc_w ''))\\n{document.getElementById(''
    //   38571: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38574: aload #13
    //   38576: iconst_0
    //   38577: aaload
    //   38578: iconst_0
    //   38579: aaload
    //   38580: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38583: ldc_w '-'
    //   38586: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38589: aload_1
    //   38590: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38593: ldc_w '').innerHTML=''
    //   38596: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38599: aload #14
    //   38601: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38604: ldc_w '';document.getElementById(''
    //   38607: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38610: aload #13
    //   38612: iconst_0
    //   38613: aaload
    //   38614: iconst_0
    //   38615: aaload
    //   38616: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38619: ldc_w '-'
    //   38622: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38625: aload_1
    //   38626: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38629: ldc_w '').innerHTML+="'
    //   38632: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38635: aload #10
    //   38637: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38640: ldc_w '";}'
    //   38643: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38646: invokevirtual toString : ()Ljava/lang/String;
    //   38649: astore #10
    //   38651: goto_w -> 46733
    //   38656: new java/lang/StringBuilder
    //   38659: dup
    //   38660: ldc_w '<input type=hidden name='
    //   38663: invokespecial <init> : (Ljava/lang/String;)V
    //   38666: aload_1
    //   38667: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38670: ldc_w '_type id='
    //   38673: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38676: aload_1
    //   38677: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38680: ldc_w '_type value=personorg>'
    //   38683: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38686: invokevirtual toString : ()Ljava/lang/String;
    //   38689: astore #14
    //   38691: aload #4
    //   38693: ifnonnull -> 38701
    //   38696: goto_w -> 39043
    //   38701: aload #4
    //   38703: new java/lang/StringBuilder
    //   38706: dup
    //   38707: ldc_w ','
    //   38710: invokespecial <init> : (Ljava/lang/String;)V
    //   38713: aload #13
    //   38715: iconst_0
    //   38716: aaload
    //   38717: iconst_0
    //   38718: aaload
    //   38719: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38722: ldc_w ','
    //   38725: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38728: invokevirtual toString : ()Ljava/lang/String;
    //   38731: invokevirtual indexOf : (Ljava/lang/String;)I
    //   38734: iflt -> 38742
    //   38737: goto_w -> 38783
    //   38742: aload #4
    //   38744: new java/lang/StringBuilder
    //   38747: dup
    //   38748: ldc_w ','
    //   38751: invokespecial <init> : (Ljava/lang/String;)V
    //   38754: aload #13
    //   38756: iconst_0
    //   38757: aaload
    //   38758: iconst_5
    //   38759: aaload
    //   38760: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38763: ldc_w ','
    //   38766: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38769: invokevirtual toString : ()Ljava/lang/String;
    //   38772: invokevirtual indexOf : (Ljava/lang/String;)I
    //   38775: ifge -> 38783
    //   38778: goto_w -> 39043
    //   38783: ldc ''
    //   38785: astore #14
    //   38787: new java/lang/StringBuilder
    //   38790: dup
    //   38791: ldc_w '<input type=hidden id='
    //   38794: invokespecial <init> : (Ljava/lang/String;)V
    //   38797: aload_1
    //   38798: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38801: ldc_w '_Name name='
    //   38804: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38807: aload_1
    //   38808: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38811: ldc_w '_Name value=\"'
    //   38814: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38817: aload #18
    //   38819: ifnonnull -> 38827
    //   38822: goto_w -> 38860
    //   38827: aload #18
    //   38829: ldc_w ';'
    //   38832: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   38835: arraylength
    //   38836: iconst_1
    //   38837: if_icmpgt -> 38845
    //   38840: goto_w -> 38860
    //   38845: aload #18
    //   38847: ldc_w ';'
    //   38850: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   38853: iconst_0
    //   38854: aaload
    //   38855: goto_w -> 38862
    //   38860: ldc ''
    //   38862: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38865: ldc_w '\" >'
    //   38868: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38871: invokevirtual toString : ()Ljava/lang/String;
    //   38874: astore #10
    //   38876: new java/lang/StringBuilder
    //   38879: dup
    //   38880: aload #10
    //   38882: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   38885: invokespecial <init> : (Ljava/lang/String;)V
    //   38888: ldc_w '<input type=hidden id='
    //   38891: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38894: aload_1
    //   38895: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38898: ldc_w '_Id name='
    //   38901: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38904: aload_1
    //   38905: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38908: ldc_w '_Id value=\"'
    //   38911: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38914: aload #18
    //   38916: ifnonnull -> 38924
    //   38919: goto_w -> 38957
    //   38924: aload #18
    //   38926: ldc_w ';'
    //   38929: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   38932: arraylength
    //   38933: iconst_1
    //   38934: if_icmpgt -> 38942
    //   38937: goto_w -> 38957
    //   38942: aload #18
    //   38944: ldc_w ';'
    //   38947: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   38950: iconst_1
    //   38951: aaload
    //   38952: goto_w -> 38959
    //   38957: ldc ''
    //   38959: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38962: ldc_w '\">'
    //   38965: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38968: invokevirtual toString : ()Ljava/lang/String;
    //   38971: astore #10
    //   38973: new java/lang/StringBuilder
    //   38976: dup
    //   38977: aload #10
    //   38979: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   38982: invokespecial <init> : (Ljava/lang/String;)V
    //   38985: aload #18
    //   38987: ifnonnull -> 38995
    //   38990: goto_w -> 39028
    //   38995: aload #18
    //   38997: ldc_w ';'
    //   39000: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   39003: arraylength
    //   39004: iconst_1
    //   39005: if_icmpgt -> 39013
    //   39008: goto_w -> 39028
    //   39013: aload #18
    //   39015: ldc_w ';'
    //   39018: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   39021: iconst_0
    //   39022: aaload
    //   39023: goto_w -> 39030
    //   39028: ldc ''
    //   39030: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39033: invokevirtual toString : ()Ljava/lang/String;
    //   39036: astore #10
    //   39038: goto_w -> 39404
    //   39043: new java/lang/StringBuilder
    //   39046: dup
    //   39047: ldc_w '<input style=width:80%;font-size:1em; type=text class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) id='
    //   39050: invokespecial <init> : (Ljava/lang/String;)V
    //   39053: aload_1
    //   39054: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39057: ldc_w '_Name name='
    //   39060: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39063: aload_1
    //   39064: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39067: ldc_w '_Name readonly title\"请点击选择\" value=\"'
    //   39070: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39073: aload #18
    //   39075: ifnonnull -> 39083
    //   39078: goto_w -> 39116
    //   39083: aload #18
    //   39085: ldc_w ';'
    //   39088: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   39091: arraylength
    //   39092: iconst_1
    //   39093: if_icmpgt -> 39101
    //   39096: goto_w -> 39116
    //   39101: aload #18
    //   39103: ldc_w ';'
    //   39106: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   39109: iconst_0
    //   39110: aaload
    //   39111: goto_w -> 39118
    //   39116: ldc ''
    //   39118: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39121: ldc_w '\" onClick=\"openEndow(''
    //   39124: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39127: aload_1
    //   39128: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39131: ldc_w '_Id',''
    //   39134: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39137: aload_1
    //   39138: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39141: ldc_w '_Name',document.all.'
    //   39144: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39147: aload_1
    //   39148: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39151: ldc_w '_Id.value,document.all.'
    //   39154: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39157: aload_1
    //   39158: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39161: ldc_w '_Name.value,'org','yes','org','-100')\" readonly=readonly />'
    //   39164: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39167: invokevirtual toString : ()Ljava/lang/String;
    //   39170: astore #10
    //   39172: new java/lang/StringBuilder
    //   39175: dup
    //   39176: aload #10
    //   39178: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   39181: invokespecial <init> : (Ljava/lang/String;)V
    //   39184: ldc_w '<input type=hidden id='
    //   39187: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39190: aload_1
    //   39191: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39194: ldc_w '_Id name='
    //   39197: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39200: aload_1
    //   39201: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39204: ldc_w '_Id value=\"'
    //   39207: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39210: aload #18
    //   39212: ifnonnull -> 39220
    //   39215: goto_w -> 39253
    //   39220: aload #18
    //   39222: ldc_w ';'
    //   39225: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   39228: arraylength
    //   39229: iconst_1
    //   39230: if_icmpgt -> 39238
    //   39233: goto_w -> 39253
    //   39238: aload #18
    //   39240: ldc_w ';'
    //   39243: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   39246: iconst_1
    //   39247: aaload
    //   39248: goto_w -> 39255
    //   39253: ldc ''
    //   39255: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39258: ldc_w '\">'
    //   39261: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39264: aload #13
    //   39266: iconst_0
    //   39267: aaload
    //   39268: iconst_3
    //   39269: aaload
    //   39270: ldc_w '1'
    //   39273: invokevirtual equals : (Ljava/lang/Object;)Z
    //   39276: ifne -> 39284
    //   39279: goto_w -> 39394
    //   39284: aload #4
    //   39286: new java/lang/StringBuilder
    //   39289: dup
    //   39290: ldc_w ','
    //   39293: invokespecial <init> : (Ljava/lang/String;)V
    //   39296: aload #13
    //   39298: iconst_0
    //   39299: aaload
    //   39300: iconst_0
    //   39301: aaload
    //   39302: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39305: ldc_w ','
    //   39308: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39311: invokevirtual toString : ()Ljava/lang/String;
    //   39314: invokevirtual indexOf : (Ljava/lang/String;)I
    //   39317: iflt -> 39325
    //   39320: goto_w -> 39394
    //   39325: aload #4
    //   39327: new java/lang/StringBuilder
    //   39330: dup
    //   39331: ldc_w ','
    //   39334: invokespecial <init> : (Ljava/lang/String;)V
    //   39337: aload #13
    //   39339: iconst_0
    //   39340: aaload
    //   39341: iconst_5
    //   39342: aaload
    //   39343: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39346: ldc_w ','
    //   39349: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39352: invokevirtual toString : ()Ljava/lang/String;
    //   39355: invokevirtual indexOf : (Ljava/lang/String;)I
    //   39358: iflt -> 39366
    //   39361: goto_w -> 39394
    //   39366: new java/lang/StringBuilder
    //   39369: dup
    //   39370: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   39373: invokespecial <init> : (Ljava/lang/String;)V
    //   39376: aload_1
    //   39377: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39380: ldc_w '><label class=mustFillcolor>*</label>'
    //   39383: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39386: invokevirtual toString : ()Ljava/lang/String;
    //   39389: goto_w -> 39396
    //   39394: ldc ''
    //   39396: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39399: invokevirtual toString : ()Ljava/lang/String;
    //   39402: astore #10
    //   39404: new java/lang/StringBuilder
    //   39407: dup
    //   39408: ldc_w 'if(document.getElementById(''
    //   39411: invokespecial <init> : (Ljava/lang/String;)V
    //   39414: aload #13
    //   39416: iconst_0
    //   39417: aaload
    //   39418: iconst_0
    //   39419: aaload
    //   39420: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39423: ldc_w '-'
    //   39426: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39429: aload_1
    //   39430: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39433: ldc_w ''))\\n{document.getElementById(''
    //   39436: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39439: aload #13
    //   39441: iconst_0
    //   39442: aaload
    //   39443: iconst_0
    //   39444: aaload
    //   39445: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39448: ldc_w '-'
    //   39451: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39454: aload_1
    //   39455: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39458: ldc_w '').innerHTML=''
    //   39461: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39464: aload #14
    //   39466: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39469: ldc_w '';document.getElementById(''
    //   39472: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39475: aload #13
    //   39477: iconst_0
    //   39478: aaload
    //   39479: iconst_0
    //   39480: aaload
    //   39481: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39484: ldc_w '-'
    //   39487: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39490: aload_1
    //   39491: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39494: ldc_w '').innerHTML+="'
    //   39497: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39500: aload #10
    //   39502: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39505: ldc_w '";}'
    //   39508: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39511: invokevirtual toString : ()Ljava/lang/String;
    //   39514: astore #10
    //   39516: goto_w -> 46733
    //   39521: aload #4
    //   39523: ifnonnull -> 39531
    //   39526: goto_w -> 39744
    //   39531: aload #4
    //   39533: new java/lang/StringBuilder
    //   39536: dup
    //   39537: ldc_w ','
    //   39540: invokespecial <init> : (Ljava/lang/String;)V
    //   39543: aload #13
    //   39545: iconst_0
    //   39546: aaload
    //   39547: iconst_0
    //   39548: aaload
    //   39549: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39552: ldc_w ','
    //   39555: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39558: invokevirtual toString : ()Ljava/lang/String;
    //   39561: invokevirtual indexOf : (Ljava/lang/String;)I
    //   39564: iflt -> 39572
    //   39567: goto_w -> 39613
    //   39572: aload #4
    //   39574: new java/lang/StringBuilder
    //   39577: dup
    //   39578: ldc_w ','
    //   39581: invokespecial <init> : (Ljava/lang/String;)V
    //   39584: aload #13
    //   39586: iconst_0
    //   39587: aaload
    //   39588: iconst_5
    //   39589: aaload
    //   39590: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39593: ldc_w ','
    //   39596: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39599: invokevirtual toString : ()Ljava/lang/String;
    //   39602: invokevirtual indexOf : (Ljava/lang/String;)I
    //   39605: ifge -> 39613
    //   39608: goto_w -> 39744
    //   39613: aload #18
    //   39615: astore #10
    //   39617: ldc ''
    //   39619: astore #14
    //   39621: new java/lang/StringBuilder
    //   39624: dup
    //   39625: ldc_w 'if(document.getElementById(''
    //   39628: invokespecial <init> : (Ljava/lang/String;)V
    //   39631: aload #13
    //   39633: iconst_0
    //   39634: aaload
    //   39635: iconst_0
    //   39636: aaload
    //   39637: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39640: ldc_w '-'
    //   39643: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39646: aload_1
    //   39647: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39650: ldc_w ''))\\n{'
    //   39653: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39656: ldc_w 'document.getElementById(''
    //   39659: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39662: aload #13
    //   39664: iconst_0
    //   39665: aaload
    //   39666: iconst_0
    //   39667: aaload
    //   39668: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39671: ldc_w '-'
    //   39674: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39677: aload_1
    //   39678: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39681: ldc_w '').innerHTML=''
    //   39684: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39687: aload #14
    //   39689: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39692: ldc_w '';document.getElementById(''
    //   39695: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39698: aload #13
    //   39700: iconst_0
    //   39701: aaload
    //   39702: iconst_0
    //   39703: aaload
    //   39704: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39707: ldc_w '-'
    //   39710: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39713: aload_1
    //   39714: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39717: ldc_w '').innerHTML+=''
    //   39720: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39723: aload #10
    //   39725: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39728: ldc_w '';}'
    //   39731: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39734: invokevirtual toString : ()Ljava/lang/String;
    //   39737: astore #10
    //   39739: goto_w -> 40342
    //   39744: new java/lang/StringBuilder
    //   39747: dup
    //   39748: invokespecial <init> : ()V
    //   39751: aload #9
    //   39753: invokeinterface getSession : ()Ljavax/servlet/http/HttpSession;
    //   39758: ldc_w 'userId'
    //   39761: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   39766: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   39769: invokevirtual toString : ()Ljava/lang/String;
    //   39772: astore #26
    //   39774: aload #26
    //   39776: invokestatic haveSidelineOrg : (Ljava/lang/String;)Ljava/util/List;
    //   39779: astore #27
    //   39781: aload #27
    //   39783: ifnull -> 39791
    //   39786: goto_w -> 40065
    //   39791: new java/lang/StringBuilder
    //   39794: dup
    //   39795: ldc_w '<input type=hidden id='
    //   39798: invokespecial <init> : (Ljava/lang/String;)V
    //   39801: aload_1
    //   39802: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39805: ldc_w ' name='
    //   39808: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39811: aload_1
    //   39812: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39815: ldc_w ' value="'
    //   39818: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39821: aload #18
    //   39823: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39826: ldc_w '" '
    //   39829: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39832: ldc_w '>'
    //   39835: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39838: invokevirtual toString : ()Ljava/lang/String;
    //   39841: astore #10
    //   39843: new java/lang/StringBuilder
    //   39846: dup
    //   39847: ldc_w 'var '
    //   39850: invokespecial <init> : (Ljava/lang/String;)V
    //   39853: aload_1
    //   39854: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39857: ldc_w '_temp=document.createElement('SCRIPT');'
    //   39860: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39863: invokevirtual toString : ()Ljava/lang/String;
    //   39866: astore #28
    //   39868: new java/lang/StringBuilder
    //   39871: dup
    //   39872: aload #28
    //   39874: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   39877: invokespecial <init> : (Ljava/lang/String;)V
    //   39880: aload_1
    //   39881: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39884: ldc_w '_temp.text="document.all.'
    //   39887: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39890: aload_1
    //   39891: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39894: ldc_w '.value=document.all.org_ID.value;";'
    //   39897: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39900: invokevirtual toString : ()Ljava/lang/String;
    //   39903: astore #28
    //   39905: new java/lang/StringBuilder
    //   39908: dup
    //   39909: aload #28
    //   39911: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   39914: invokespecial <init> : (Ljava/lang/String;)V
    //   39917: ldc_w 'if(document.getElementById(''
    //   39920: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39923: aload #13
    //   39925: iconst_0
    //   39926: aaload
    //   39927: iconst_0
    //   39928: aaload
    //   39929: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39932: ldc_w '-'
    //   39935: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39938: aload_1
    //   39939: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39942: ldc_w ''))\\n{document.getElementById(''
    //   39945: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39948: aload #13
    //   39950: iconst_0
    //   39951: aaload
    //   39952: iconst_0
    //   39953: aaload
    //   39954: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39957: ldc_w '-'
    //   39960: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39963: aload_1
    //   39964: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39967: ldc_w '').innerHTML=document.all.org_ID.value+''
    //   39970: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39973: aload #14
    //   39975: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39978: ldc_w '';document.getElementById(''
    //   39981: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39984: aload #13
    //   39986: iconst_0
    //   39987: aaload
    //   39988: iconst_0
    //   39989: aaload
    //   39990: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39993: ldc_w '-'
    //   39996: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   39999: aload_1
    //   40000: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40003: ldc_w '').innerHTML+=''
    //   40006: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40009: aload #10
    //   40011: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40014: ldc_w '';document.getElementById(''
    //   40017: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40020: aload #13
    //   40022: iconst_0
    //   40023: aaload
    //   40024: iconst_0
    //   40025: aaload
    //   40026: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40029: ldc_w '-'
    //   40032: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40035: aload_1
    //   40036: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40039: ldc_w '').appendChild('
    //   40042: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40045: aload_1
    //   40046: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40049: ldc_w '_temp);}'
    //   40052: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40055: invokevirtual toString : ()Ljava/lang/String;
    //   40058: astore #10
    //   40060: goto_w -> 40342
    //   40065: new java/lang/StringBuilder
    //   40068: dup
    //   40069: ldc_w '<input type=hidden name='
    //   40072: invokespecial <init> : (Ljava/lang/String;)V
    //   40075: aload_1
    //   40076: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40079: ldc_w '_type id='
    //   40082: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40085: aload_1
    //   40086: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40089: ldc_w '_type value=varchar><select id='
    //   40092: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40095: aload_1
    //   40096: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40099: ldc_w ' name='
    //   40102: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40105: aload_1
    //   40106: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40109: ldc_w ' >'
    //   40112: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40115: invokevirtual toString : ()Ljava/lang/String;
    //   40118: astore #28
    //   40120: iconst_0
    //   40121: istore #29
    //   40123: goto_w -> 40220
    //   40128: aload #27
    //   40130: iload #29
    //   40132: invokeinterface get : (I)Ljava/lang/Object;
    //   40137: checkcast [Ljava/lang/String;
    //   40140: astore #30
    //   40142: new java/lang/StringBuilder
    //   40145: dup
    //   40146: aload #28
    //   40148: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   40151: invokespecial <init> : (Ljava/lang/String;)V
    //   40154: ldc_w '<option value='
    //   40157: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40160: aload #30
    //   40162: iconst_0
    //   40163: aaload
    //   40164: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40167: iload #29
    //   40169: ifeq -> 40177
    //   40172: goto_w -> 40185
    //   40177: ldc_w ' selected'
    //   40180: goto_w -> 40187
    //   40185: ldc ''
    //   40187: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40190: ldc_w '>'
    //   40193: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40196: aload #30
    //   40198: iconst_1
    //   40199: aaload
    //   40200: invokestatic getOrgByNum : (Ljava/lang/String;)Ljava/lang/String;
    //   40203: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40206: ldc_w 'Id</option>'
    //   40209: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40212: invokevirtual toString : ()Ljava/lang/String;
    //   40215: astore #28
    //   40217: iinc #29, 1
    //   40220: iload #29
    //   40222: aload #27
    //   40224: invokeinterface size : ()I
    //   40229: if_icmpge -> 40237
    //   40232: goto_w -> 40128
    //   40237: new java/lang/StringBuilder
    //   40240: dup
    //   40241: aload #28
    //   40243: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   40246: invokespecial <init> : (Ljava/lang/String;)V
    //   40249: ldc_w '</select>'
    //   40252: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40255: invokevirtual toString : ()Ljava/lang/String;
    //   40258: astore #28
    //   40260: new java/lang/StringBuilder
    //   40263: dup
    //   40264: ldc_w '\\nif(document.getElementById(''
    //   40267: invokespecial <init> : (Ljava/lang/String;)V
    //   40270: aload #13
    //   40272: iconst_0
    //   40273: aaload
    //   40274: iconst_0
    //   40275: aaload
    //   40276: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40279: ldc_w '-'
    //   40282: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40285: aload_1
    //   40286: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40289: ldc_w '')){\\n'
    //   40292: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40295: ldc_w 'document.getElementById(''
    //   40298: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40301: aload #13
    //   40303: iconst_0
    //   40304: aaload
    //   40305: iconst_0
    //   40306: aaload
    //   40307: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40310: ldc_w '-'
    //   40313: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40316: aload_1
    //   40317: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40320: ldc_w '').innerHTML=''
    //   40323: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40326: aload #28
    //   40328: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40331: ldc_w '';\\n}\\n'
    //   40334: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40337: invokevirtual toString : ()Ljava/lang/String;
    //   40340: astore #10
    //   40342: goto_w -> 46733
    //   40347: new java/lang/StringBuilder
    //   40350: dup
    //   40351: ldc_w '<input  type=hidden name='
    //   40354: invokespecial <init> : (Ljava/lang/String;)V
    //   40357: aload_1
    //   40358: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40361: ldc_w '_type id='
    //   40364: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40367: aload_1
    //   40368: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40371: ldc_w '_type value=personorg>'
    //   40374: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40377: invokevirtual toString : ()Ljava/lang/String;
    //   40380: astore #14
    //   40382: aload #4
    //   40384: ifnonnull -> 40392
    //   40387: goto_w -> 40548
    //   40392: aload #4
    //   40394: new java/lang/StringBuilder
    //   40397: dup
    //   40398: ldc_w ','
    //   40401: invokespecial <init> : (Ljava/lang/String;)V
    //   40404: aload #13
    //   40406: iconst_0
    //   40407: aaload
    //   40408: iconst_0
    //   40409: aaload
    //   40410: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40413: ldc_w ','
    //   40416: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40419: invokevirtual toString : ()Ljava/lang/String;
    //   40422: invokevirtual indexOf : (Ljava/lang/String;)I
    //   40425: iflt -> 40433
    //   40428: goto_w -> 40474
    //   40433: aload #4
    //   40435: new java/lang/StringBuilder
    //   40438: dup
    //   40439: ldc_w ','
    //   40442: invokespecial <init> : (Ljava/lang/String;)V
    //   40445: aload #13
    //   40447: iconst_0
    //   40448: aaload
    //   40449: iconst_5
    //   40450: aaload
    //   40451: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40454: ldc_w ','
    //   40457: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40460: invokevirtual toString : ()Ljava/lang/String;
    //   40463: invokevirtual indexOf : (Ljava/lang/String;)I
    //   40466: ifge -> 40474
    //   40469: goto_w -> 40548
    //   40474: ldc ''
    //   40476: astore #14
    //   40478: new java/lang/StringBuilder
    //   40481: dup
    //   40482: aload #10
    //   40484: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   40487: invokespecial <init> : (Ljava/lang/String;)V
    //   40490: aload #18
    //   40492: ifnonnull -> 40500
    //   40495: goto_w -> 40533
    //   40500: aload #18
    //   40502: ldc_w ';'
    //   40505: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   40508: arraylength
    //   40509: iconst_1
    //   40510: if_icmpgt -> 40518
    //   40513: goto_w -> 40533
    //   40518: aload #18
    //   40520: ldc_w ';'
    //   40523: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   40526: iconst_0
    //   40527: aaload
    //   40528: goto_w -> 40535
    //   40533: ldc ''
    //   40535: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40538: invokevirtual toString : ()Ljava/lang/String;
    //   40541: astore #10
    //   40543: goto_w -> 41004
    //   40548: new java/lang/StringBuilder
    //   40551: dup
    //   40552: ldc_w '<textarea class=flowInput  onblur=checkSize(this) onmouseover=setStyle(this) onmouseout=setStyle(this) id='
    //   40555: invokespecial <init> : (Ljava/lang/String;)V
    //   40558: aload_1
    //   40559: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40562: ldc_w '_Name  name='
    //   40565: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40568: aload_1
    //   40569: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40572: ldc_w '_Name  style=width:'
    //   40575: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40578: aload #13
    //   40580: iconst_0
    //   40581: aaload
    //   40582: iconst_3
    //   40583: aaload
    //   40584: ldc_w '1'
    //   40587: invokevirtual equals : (Ljava/lang/Object;)Z
    //   40590: ifne -> 40598
    //   40593: goto_w -> 40606
    //   40598: ldc_w '92'
    //   40601: goto_w -> 40609
    //   40606: ldc_w '100'
    //   40609: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40612: ldc_w '%;font-size:1em; rows=3 title=\"请点击选择\" value=\"'
    //   40615: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40618: aload #18
    //   40620: ifnonnull -> 40628
    //   40623: goto_w -> 40661
    //   40628: aload #18
    //   40630: ldc_w ';'
    //   40633: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   40636: arraylength
    //   40637: iconst_1
    //   40638: if_icmpgt -> 40646
    //   40641: goto_w -> 40661
    //   40646: aload #18
    //   40648: ldc_w ';'
    //   40651: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   40654: iconst_0
    //   40655: aaload
    //   40656: goto_w -> 40663
    //   40661: ldc ''
    //   40663: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40666: ldc_w '\" onClick=\"openEndow(''
    //   40669: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40672: aload_1
    //   40673: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40676: ldc_w '_Id',''
    //   40679: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40682: aload_1
    //   40683: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40686: ldc_w '_Name',document.all.'
    //   40689: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40692: aload_1
    //   40693: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40696: ldc_w '_Id.value,document.all.'
    //   40699: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40702: aload_1
    //   40703: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40706: ldc_w '_Name.value,'org','no','org','-100')\" readonly=readonly />'
    //   40709: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40712: aload #18
    //   40714: ifnull -> 40722
    //   40717: goto_w -> 40730
    //   40722: ldc_w '&nbsp'
    //   40725: goto_w -> 40750
    //   40730: aload #18
    //   40732: ldc_w '\\n'
    //   40735: ldc_w '\\n'+''
    //   40738: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   40741: ldc_w '\\r'
    //   40744: ldc_w '\\r'+''
    //   40747: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   40750: ldc_w ';'
    //   40753: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   40756: iconst_0
    //   40757: aaload
    //   40758: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40761: ldc_w '</textarea>'
    //   40764: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40767: invokevirtual toString : ()Ljava/lang/String;
    //   40770: astore #10
    //   40772: new java/lang/StringBuilder
    //   40775: dup
    //   40776: aload #10
    //   40778: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   40781: invokespecial <init> : (Ljava/lang/String;)V
    //   40784: ldc_w '<input type=hidden id='
    //   40787: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40790: aload_1
    //   40791: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40794: ldc_w '_Id name='
    //   40797: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40800: aload_1
    //   40801: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40804: ldc_w '_Id value=\"'
    //   40807: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40810: aload #18
    //   40812: ifnonnull -> 40820
    //   40815: goto_w -> 40853
    //   40820: aload #18
    //   40822: ldc_w ';'
    //   40825: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   40828: arraylength
    //   40829: iconst_1
    //   40830: if_icmpgt -> 40838
    //   40833: goto_w -> 40853
    //   40838: aload #18
    //   40840: ldc_w ';'
    //   40843: invokevirtual split : (Ljava/lang/String;)[Ljava/lang/String;
    //   40846: iconst_1
    //   40847: aaload
    //   40848: goto_w -> 40855
    //   40853: ldc ''
    //   40855: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40858: ldc_w '\">'
    //   40861: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40864: aload #13
    //   40866: iconst_0
    //   40867: aaload
    //   40868: iconst_3
    //   40869: aaload
    //   40870: ldc_w '1'
    //   40873: invokevirtual equals : (Ljava/lang/Object;)Z
    //   40876: ifne -> 40884
    //   40879: goto_w -> 40994
    //   40884: aload #4
    //   40886: new java/lang/StringBuilder
    //   40889: dup
    //   40890: ldc_w ','
    //   40893: invokespecial <init> : (Ljava/lang/String;)V
    //   40896: aload #13
    //   40898: iconst_0
    //   40899: aaload
    //   40900: iconst_0
    //   40901: aaload
    //   40902: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40905: ldc_w ','
    //   40908: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40911: invokevirtual toString : ()Ljava/lang/String;
    //   40914: invokevirtual indexOf : (Ljava/lang/String;)I
    //   40917: iflt -> 40925
    //   40920: goto_w -> 40994
    //   40925: aload #4
    //   40927: new java/lang/StringBuilder
    //   40930: dup
    //   40931: ldc_w ','
    //   40934: invokespecial <init> : (Ljava/lang/String;)V
    //   40937: aload #13
    //   40939: iconst_0
    //   40940: aaload
    //   40941: iconst_5
    //   40942: aaload
    //   40943: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40946: ldc_w ','
    //   40949: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40952: invokevirtual toString : ()Ljava/lang/String;
    //   40955: invokevirtual indexOf : (Ljava/lang/String;)I
    //   40958: iflt -> 40966
    //   40961: goto_w -> 40994
    //   40966: new java/lang/StringBuilder
    //   40969: dup
    //   40970: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   40973: invokespecial <init> : (Ljava/lang/String;)V
    //   40976: aload_1
    //   40977: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40980: ldc_w '><label class=mustFillcolor>*</label>'
    //   40983: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40986: invokevirtual toString : ()Ljava/lang/String;
    //   40989: goto_w -> 40996
    //   40994: ldc ''
    //   40996: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   40999: invokevirtual toString : ()Ljava/lang/String;
    //   41002: astore #10
    //   41004: new java/lang/StringBuilder
    //   41007: dup
    //   41008: ldc_w 'if(document.getElementById(''
    //   41011: invokespecial <init> : (Ljava/lang/String;)V
    //   41014: aload #13
    //   41016: iconst_0
    //   41017: aaload
    //   41018: iconst_0
    //   41019: aaload
    //   41020: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41023: ldc_w '-'
    //   41026: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41029: aload_1
    //   41030: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41033: ldc_w ''))\\n{document.getElementById(''
    //   41036: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41039: aload #13
    //   41041: iconst_0
    //   41042: aaload
    //   41043: iconst_0
    //   41044: aaload
    //   41045: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41048: ldc_w '-'
    //   41051: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41054: aload_1
    //   41055: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41058: ldc_w '').innerHTML=''
    //   41061: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41064: aload #14
    //   41066: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41069: ldc_w '';document.getElementById(''
    //   41072: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41075: aload #13
    //   41077: iconst_0
    //   41078: aaload
    //   41079: iconst_0
    //   41080: aaload
    //   41081: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41084: ldc_w '-'
    //   41087: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41090: aload_1
    //   41091: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41094: ldc_w '').innerHTML+="'
    //   41097: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41100: aload #10
    //   41102: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41105: ldc_w '";}'
    //   41108: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41111: invokevirtual toString : ()Ljava/lang/String;
    //   41114: astore #10
    //   41116: goto_w -> 46733
    //   41121: aload #18
    //   41123: ldc_w '''
    //   41126: ldc_w '\''
    //   41129: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   41132: ldc_w '"'
    //   41135: ldc_w '\\"'
    //   41138: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   41141: astore #18
    //   41143: ldc ''
    //   41145: aload #18
    //   41147: invokevirtual equals : (Ljava/lang/Object;)Z
    //   41150: ifeq -> 41158
    //   41153: goto_w -> 41174
    //   41158: ldc_w 'null'
    //   41161: aload #18
    //   41163: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   41166: ifne -> 41174
    //   41169: goto_w -> 41197
    //   41174: aload #9
    //   41176: invokeinterface getSession : ()Ljavax/servlet/http/HttpSession;
    //   41181: ldc_w 'userId'
    //   41184: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   41189: invokevirtual toString : ()Ljava/lang/String;
    //   41192: invokestatic getEmpNumberByEmpId : (Ljava/lang/String;)Ljava/lang/String;
    //   41195: astore #18
    //   41197: aload #4
    //   41199: ifnonnull -> 41207
    //   41202: goto_w -> 41486
    //   41207: aload #4
    //   41209: new java/lang/StringBuilder
    //   41212: dup
    //   41213: ldc_w ','
    //   41216: invokespecial <init> : (Ljava/lang/String;)V
    //   41219: aload #13
    //   41221: iconst_0
    //   41222: aaload
    //   41223: iconst_0
    //   41224: aaload
    //   41225: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41228: ldc_w ','
    //   41231: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41234: invokevirtual toString : ()Ljava/lang/String;
    //   41237: invokevirtual indexOf : (Ljava/lang/String;)I
    //   41240: iflt -> 41248
    //   41243: goto_w -> 41289
    //   41248: aload #4
    //   41250: new java/lang/StringBuilder
    //   41253: dup
    //   41254: ldc_w ','
    //   41257: invokespecial <init> : (Ljava/lang/String;)V
    //   41260: aload #13
    //   41262: iconst_0
    //   41263: aaload
    //   41264: iconst_5
    //   41265: aaload
    //   41266: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41269: ldc_w ','
    //   41272: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41275: invokevirtual toString : ()Ljava/lang/String;
    //   41278: invokevirtual indexOf : (Ljava/lang/String;)I
    //   41281: ifge -> 41289
    //   41284: goto_w -> 41486
    //   41289: ldc_w '1'
    //   41292: aload #7
    //   41294: invokevirtual equals : (Ljava/lang/Object;)Z
    //   41297: ifne -> 41305
    //   41300: goto_w -> 41396
    //   41305: new java/lang/StringBuilder
    //   41308: dup
    //   41309: ldc_w '<input style=width:'
    //   41312: invokespecial <init> : (Ljava/lang/String;)V
    //   41315: aload #13
    //   41317: iconst_0
    //   41318: aaload
    //   41319: iconst_3
    //   41320: aaload
    //   41321: ldc_w '1'
    //   41324: invokevirtual equals : (Ljava/lang/Object;)Z
    //   41327: ifne -> 41335
    //   41330: goto_w -> 41343
    //   41335: ldc_w '92'
    //   41338: goto_w -> 41346
    //   41343: ldc_w '100'
    //   41346: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41349: ldc_w '% ;font-size:1em; type=text class=flowInput id='
    //   41352: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41355: aload_1
    //   41356: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41359: ldc_w ' name='
    //   41362: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41365: aload_1
    //   41366: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41369: ldc_w ' value=''
    //   41372: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41375: aload #18
    //   41377: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41380: ldc_w '' readonly>'
    //   41383: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41386: invokevirtual toString : ()Ljava/lang/String;
    //   41389: astore #10
    //   41391: goto_w -> 41481
    //   41396: aload #18
    //   41398: ifnull -> 41406
    //   41401: goto_w -> 41414
    //   41406: ldc_w '&nbsp'
    //   41409: goto_w -> 41433
    //   41414: aload #18
    //   41416: ldc_w '\\n'
    //   41419: ldc_w '<br>'
    //   41422: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   41425: ldc_w '\\r'
    //   41428: ldc ''
    //   41430: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   41433: astore #10
    //   41435: new java/lang/StringBuilder
    //   41438: dup
    //   41439: ldc_w '<input type=hidden id='
    //   41442: invokespecial <init> : (Ljava/lang/String;)V
    //   41445: aload_1
    //   41446: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41449: ldc_w '  name='
    //   41452: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41455: aload_1
    //   41456: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41459: ldc_w ' value="'
    //   41462: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41465: aload #18
    //   41467: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41470: ldc_w '">'
    //   41473: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41476: invokevirtual toString : ()Ljava/lang/String;
    //   41479: astore #14
    //   41481: goto_w -> 41707
    //   41486: new java/lang/StringBuilder
    //   41489: dup
    //   41490: ldc_w '<input style=width:'
    //   41493: invokespecial <init> : (Ljava/lang/String;)V
    //   41496: aload #13
    //   41498: iconst_0
    //   41499: aaload
    //   41500: iconst_3
    //   41501: aaload
    //   41502: ldc_w '1'
    //   41505: invokevirtual equals : (Ljava/lang/Object;)Z
    //   41508: ifne -> 41516
    //   41511: goto_w -> 41524
    //   41516: ldc_w '92'
    //   41519: goto_w -> 41527
    //   41524: ldc_w '100'
    //   41527: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41530: ldc_w '%;font-size:1em; type=text title=多个工号之间用逗号隔开 class=flowInput id='
    //   41533: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41536: aload_1
    //   41537: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41540: ldc_w ' name='
    //   41543: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41546: aload_1
    //   41547: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41550: ldc_w ' value=''
    //   41553: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41556: aload #18
    //   41558: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41561: ldc_w ''>'
    //   41564: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41567: aload #13
    //   41569: iconst_0
    //   41570: aaload
    //   41571: iconst_3
    //   41572: aaload
    //   41573: ldc_w '1'
    //   41576: invokevirtual equals : (Ljava/lang/Object;)Z
    //   41579: ifne -> 41587
    //   41582: goto_w -> 41697
    //   41587: aload #4
    //   41589: new java/lang/StringBuilder
    //   41592: dup
    //   41593: ldc_w ','
    //   41596: invokespecial <init> : (Ljava/lang/String;)V
    //   41599: aload #13
    //   41601: iconst_0
    //   41602: aaload
    //   41603: iconst_0
    //   41604: aaload
    //   41605: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41608: ldc_w ','
    //   41611: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41614: invokevirtual toString : ()Ljava/lang/String;
    //   41617: invokevirtual indexOf : (Ljava/lang/String;)I
    //   41620: iflt -> 41628
    //   41623: goto_w -> 41697
    //   41628: aload #4
    //   41630: new java/lang/StringBuilder
    //   41633: dup
    //   41634: ldc_w ','
    //   41637: invokespecial <init> : (Ljava/lang/String;)V
    //   41640: aload #13
    //   41642: iconst_0
    //   41643: aaload
    //   41644: iconst_5
    //   41645: aaload
    //   41646: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41649: ldc_w ','
    //   41652: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41655: invokevirtual toString : ()Ljava/lang/String;
    //   41658: invokevirtual indexOf : (Ljava/lang/String;)I
    //   41661: iflt -> 41669
    //   41664: goto_w -> 41697
    //   41669: new java/lang/StringBuilder
    //   41672: dup
    //   41673: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   41676: invokespecial <init> : (Ljava/lang/String;)V
    //   41679: aload_1
    //   41680: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41683: ldc_w '><label class=mustFillcolor>*</label>'
    //   41686: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41689: invokevirtual toString : ()Ljava/lang/String;
    //   41692: goto_w -> 41699
    //   41697: ldc ''
    //   41699: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41702: invokevirtual toString : ()Ljava/lang/String;
    //   41705: astore #10
    //   41707: new java/lang/StringBuilder
    //   41710: dup
    //   41711: ldc_w '\\nif(document.getElementById(''
    //   41714: invokespecial <init> : (Ljava/lang/String;)V
    //   41717: aload #13
    //   41719: iconst_0
    //   41720: aaload
    //   41721: iconst_0
    //   41722: aaload
    //   41723: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41726: ldc_w '-'
    //   41729: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41732: aload_1
    //   41733: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41736: ldc_w ''))\\n'
    //   41739: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41742: ldc_w '{document.getElementById(''
    //   41745: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41748: aload #13
    //   41750: iconst_0
    //   41751: aaload
    //   41752: iconst_0
    //   41753: aaload
    //   41754: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41757: ldc_w '-'
    //   41760: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41763: aload_1
    //   41764: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41767: ldc_w '').innerHTML=''
    //   41770: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41773: aload #14
    //   41775: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41778: ldc_w '';'
    //   41781: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41784: ldc_w 'document.getElementById(''
    //   41787: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41790: aload #13
    //   41792: iconst_0
    //   41793: aaload
    //   41794: iconst_0
    //   41795: aaload
    //   41796: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41799: ldc_w '-'
    //   41802: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41805: aload_1
    //   41806: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41809: ldc_w '').innerHTML+="'
    //   41812: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41815: aload #10
    //   41817: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41820: ldc_w '";}'
    //   41823: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41826: invokevirtual toString : ()Ljava/lang/String;
    //   41829: astore #10
    //   41831: goto_w -> 46733
    //   41836: aload #18
    //   41838: ldc_w '''
    //   41841: ldc_w '\''
    //   41844: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   41847: ldc_w '"'
    //   41850: ldc_w '\\"'
    //   41853: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   41856: astore #18
    //   41858: aload #4
    //   41860: ifnonnull -> 41868
    //   41863: goto_w -> 42147
    //   41868: aload #4
    //   41870: new java/lang/StringBuilder
    //   41873: dup
    //   41874: ldc_w ','
    //   41877: invokespecial <init> : (Ljava/lang/String;)V
    //   41880: aload #13
    //   41882: iconst_0
    //   41883: aaload
    //   41884: iconst_0
    //   41885: aaload
    //   41886: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41889: ldc_w ','
    //   41892: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41895: invokevirtual toString : ()Ljava/lang/String;
    //   41898: invokevirtual indexOf : (Ljava/lang/String;)I
    //   41901: iflt -> 41909
    //   41904: goto_w -> 41950
    //   41909: aload #4
    //   41911: new java/lang/StringBuilder
    //   41914: dup
    //   41915: ldc_w ','
    //   41918: invokespecial <init> : (Ljava/lang/String;)V
    //   41921: aload #13
    //   41923: iconst_0
    //   41924: aaload
    //   41925: iconst_5
    //   41926: aaload
    //   41927: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41930: ldc_w ','
    //   41933: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   41936: invokevirtual toString : ()Ljava/lang/String;
    //   41939: invokevirtual indexOf : (Ljava/lang/String;)I
    //   41942: ifge -> 41950
    //   41945: goto_w -> 42147
    //   41950: ldc_w '1'
    //   41953: aload #7
    //   41955: invokevirtual equals : (Ljava/lang/Object;)Z
    //   41958: ifne -> 41966
    //   41961: goto_w -> 42057
    //   41966: new java/lang/StringBuilder
    //   41969: dup
    //   41970: ldc_w '<input style=width:'
    //   41973: invokespecial <init> : (Ljava/lang/String;)V
    //   41976: aload #13
    //   41978: iconst_0
    //   41979: aaload
    //   41980: iconst_3
    //   41981: aaload
    //   41982: ldc_w '1'
    //   41985: invokevirtual equals : (Ljava/lang/Object;)Z
    //   41988: ifne -> 41996
    //   41991: goto_w -> 42004
    //   41996: ldc_w '92'
    //   41999: goto_w -> 42007
    //   42004: ldc_w '100'
    //   42007: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42010: ldc_w '% ;font-size:1em; type=text class=flowInput id='
    //   42013: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42016: aload_1
    //   42017: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42020: ldc_w ' name='
    //   42023: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42026: aload_1
    //   42027: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42030: ldc_w ' value=''
    //   42033: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42036: aload #18
    //   42038: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42041: ldc_w '' readonly>'
    //   42044: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42047: invokevirtual toString : ()Ljava/lang/String;
    //   42050: astore #10
    //   42052: goto_w -> 42142
    //   42057: aload #18
    //   42059: ifnull -> 42067
    //   42062: goto_w -> 42075
    //   42067: ldc_w '&nbsp'
    //   42070: goto_w -> 42094
    //   42075: aload #18
    //   42077: ldc_w '\\n'
    //   42080: ldc_w '<br>'
    //   42083: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   42086: ldc_w '\\r'
    //   42089: ldc ''
    //   42091: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   42094: astore #10
    //   42096: new java/lang/StringBuilder
    //   42099: dup
    //   42100: ldc_w '<input type=hidden id='
    //   42103: invokespecial <init> : (Ljava/lang/String;)V
    //   42106: aload_1
    //   42107: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42110: ldc_w '  name='
    //   42113: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42116: aload_1
    //   42117: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42120: ldc_w ' value="'
    //   42123: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42126: aload #18
    //   42128: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42131: ldc_w '">'
    //   42134: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42137: invokevirtual toString : ()Ljava/lang/String;
    //   42140: astore #14
    //   42142: goto_w -> 42422
    //   42147: ldc ''
    //   42149: aload #18
    //   42151: invokevirtual equals : (Ljava/lang/Object;)Z
    //   42154: ifeq -> 42162
    //   42157: goto_w -> 42178
    //   42162: ldc_w 'null'
    //   42165: aload #18
    //   42167: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   42170: ifne -> 42178
    //   42173: goto_w -> 42201
    //   42178: aload #9
    //   42180: invokeinterface getSession : ()Ljavax/servlet/http/HttpSession;
    //   42185: ldc_w 'userId'
    //   42188: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   42193: invokevirtual toString : ()Ljava/lang/String;
    //   42196: invokestatic getZhiWuByEmpId : (Ljava/lang/String;)Ljava/lang/String;
    //   42199: astore #18
    //   42201: new java/lang/StringBuilder
    //   42204: dup
    //   42205: ldc_w '<input style=width:'
    //   42208: invokespecial <init> : (Ljava/lang/String;)V
    //   42211: aload #13
    //   42213: iconst_0
    //   42214: aaload
    //   42215: iconst_3
    //   42216: aaload
    //   42217: ldc_w '1'
    //   42220: invokevirtual equals : (Ljava/lang/Object;)Z
    //   42223: ifne -> 42231
    //   42226: goto_w -> 42239
    //   42231: ldc_w '92'
    //   42234: goto_w -> 42242
    //   42239: ldc_w '100'
    //   42242: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42245: ldc_w '%;font-size:1em; type=text class=flowInput id='
    //   42248: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42251: aload_1
    //   42252: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42255: ldc_w ' name='
    //   42258: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42261: aload_1
    //   42262: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42265: ldc_w ' value=''
    //   42268: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42271: aload #18
    //   42273: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42276: ldc_w ''>'
    //   42279: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42282: aload #13
    //   42284: iconst_0
    //   42285: aaload
    //   42286: iconst_3
    //   42287: aaload
    //   42288: ldc_w '1'
    //   42291: invokevirtual equals : (Ljava/lang/Object;)Z
    //   42294: ifne -> 42302
    //   42297: goto_w -> 42412
    //   42302: aload #4
    //   42304: new java/lang/StringBuilder
    //   42307: dup
    //   42308: ldc_w ','
    //   42311: invokespecial <init> : (Ljava/lang/String;)V
    //   42314: aload #13
    //   42316: iconst_0
    //   42317: aaload
    //   42318: iconst_0
    //   42319: aaload
    //   42320: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42323: ldc_w ','
    //   42326: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42329: invokevirtual toString : ()Ljava/lang/String;
    //   42332: invokevirtual indexOf : (Ljava/lang/String;)I
    //   42335: iflt -> 42343
    //   42338: goto_w -> 42412
    //   42343: aload #4
    //   42345: new java/lang/StringBuilder
    //   42348: dup
    //   42349: ldc_w ','
    //   42352: invokespecial <init> : (Ljava/lang/String;)V
    //   42355: aload #13
    //   42357: iconst_0
    //   42358: aaload
    //   42359: iconst_5
    //   42360: aaload
    //   42361: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42364: ldc_w ','
    //   42367: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42370: invokevirtual toString : ()Ljava/lang/String;
    //   42373: invokevirtual indexOf : (Ljava/lang/String;)I
    //   42376: iflt -> 42384
    //   42379: goto_w -> 42412
    //   42384: new java/lang/StringBuilder
    //   42387: dup
    //   42388: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   42391: invokespecial <init> : (Ljava/lang/String;)V
    //   42394: aload_1
    //   42395: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42398: ldc_w '><label class=mustFillcolor>*</label>'
    //   42401: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42404: invokevirtual toString : ()Ljava/lang/String;
    //   42407: goto_w -> 42414
    //   42412: ldc ''
    //   42414: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42417: invokevirtual toString : ()Ljava/lang/String;
    //   42420: astore #10
    //   42422: new java/lang/StringBuilder
    //   42425: dup
    //   42426: ldc_w '\\nif(document.getElementById(''
    //   42429: invokespecial <init> : (Ljava/lang/String;)V
    //   42432: aload #13
    //   42434: iconst_0
    //   42435: aaload
    //   42436: iconst_0
    //   42437: aaload
    //   42438: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42441: ldc_w '-'
    //   42444: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42447: aload_1
    //   42448: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42451: ldc_w ''))\\n'
    //   42454: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42457: ldc_w '{document.getElementById(''
    //   42460: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42463: aload #13
    //   42465: iconst_0
    //   42466: aaload
    //   42467: iconst_0
    //   42468: aaload
    //   42469: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42472: ldc_w '-'
    //   42475: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42478: aload_1
    //   42479: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42482: ldc_w '').innerHTML=''
    //   42485: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42488: aload #14
    //   42490: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42493: ldc_w '';'
    //   42496: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42499: ldc_w 'document.getElementById(''
    //   42502: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42505: aload #13
    //   42507: iconst_0
    //   42508: aaload
    //   42509: iconst_0
    //   42510: aaload
    //   42511: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42514: ldc_w '-'
    //   42517: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42520: aload_1
    //   42521: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42524: ldc_w '').innerHTML+="'
    //   42527: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42530: aload #10
    //   42532: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42535: ldc_w '";}'
    //   42538: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42541: invokevirtual toString : ()Ljava/lang/String;
    //   42544: astore #10
    //   42546: goto_w -> 46733
    //   42551: aload #18
    //   42553: ldc_w '''
    //   42556: ldc_w '\''
    //   42559: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   42562: ldc_w '"'
    //   42565: ldc_w '\\"'
    //   42568: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   42571: astore #18
    //   42573: aload #4
    //   42575: ifnonnull -> 42583
    //   42578: goto_w -> 42862
    //   42583: aload #4
    //   42585: new java/lang/StringBuilder
    //   42588: dup
    //   42589: ldc_w ','
    //   42592: invokespecial <init> : (Ljava/lang/String;)V
    //   42595: aload #13
    //   42597: iconst_0
    //   42598: aaload
    //   42599: iconst_0
    //   42600: aaload
    //   42601: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42604: ldc_w ','
    //   42607: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42610: invokevirtual toString : ()Ljava/lang/String;
    //   42613: invokevirtual indexOf : (Ljava/lang/String;)I
    //   42616: iflt -> 42624
    //   42619: goto_w -> 42665
    //   42624: aload #4
    //   42626: new java/lang/StringBuilder
    //   42629: dup
    //   42630: ldc_w ','
    //   42633: invokespecial <init> : (Ljava/lang/String;)V
    //   42636: aload #13
    //   42638: iconst_0
    //   42639: aaload
    //   42640: iconst_5
    //   42641: aaload
    //   42642: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42645: ldc_w ','
    //   42648: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42651: invokevirtual toString : ()Ljava/lang/String;
    //   42654: invokevirtual indexOf : (Ljava/lang/String;)I
    //   42657: ifge -> 42665
    //   42660: goto_w -> 42862
    //   42665: ldc_w '1'
    //   42668: aload #7
    //   42670: invokevirtual equals : (Ljava/lang/Object;)Z
    //   42673: ifne -> 42681
    //   42676: goto_w -> 42772
    //   42681: new java/lang/StringBuilder
    //   42684: dup
    //   42685: ldc_w '<input style=width:'
    //   42688: invokespecial <init> : (Ljava/lang/String;)V
    //   42691: aload #13
    //   42693: iconst_0
    //   42694: aaload
    //   42695: iconst_3
    //   42696: aaload
    //   42697: ldc_w '1'
    //   42700: invokevirtual equals : (Ljava/lang/Object;)Z
    //   42703: ifne -> 42711
    //   42706: goto_w -> 42719
    //   42711: ldc_w '92'
    //   42714: goto_w -> 42722
    //   42719: ldc_w '100'
    //   42722: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42725: ldc_w '% ;font-size:1em; type=text class=flowInput id='
    //   42728: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42731: aload_1
    //   42732: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42735: ldc_w ' name='
    //   42738: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42741: aload_1
    //   42742: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42745: ldc_w ' value=''
    //   42748: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42751: aload #18
    //   42753: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42756: ldc_w '' readonly>'
    //   42759: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42762: invokevirtual toString : ()Ljava/lang/String;
    //   42765: astore #10
    //   42767: goto_w -> 42857
    //   42772: aload #18
    //   42774: ifnull -> 42782
    //   42777: goto_w -> 42790
    //   42782: ldc_w '&nbsp'
    //   42785: goto_w -> 42809
    //   42790: aload #18
    //   42792: ldc_w '\\n'
    //   42795: ldc_w '<br>'
    //   42798: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   42801: ldc_w '\\r'
    //   42804: ldc ''
    //   42806: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   42809: astore #10
    //   42811: new java/lang/StringBuilder
    //   42814: dup
    //   42815: ldc_w '<input type=hidden id='
    //   42818: invokespecial <init> : (Ljava/lang/String;)V
    //   42821: aload_1
    //   42822: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42825: ldc_w '  name='
    //   42828: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42831: aload_1
    //   42832: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42835: ldc_w ' value="'
    //   42838: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42841: aload #18
    //   42843: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42846: ldc_w '">'
    //   42849: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42852: invokevirtual toString : ()Ljava/lang/String;
    //   42855: astore #14
    //   42857: goto_w -> 43137
    //   42862: ldc ''
    //   42864: aload #18
    //   42866: invokevirtual equals : (Ljava/lang/Object;)Z
    //   42869: ifeq -> 42877
    //   42872: goto_w -> 42893
    //   42877: ldc_w 'null'
    //   42880: aload #18
    //   42882: invokevirtual equalsIgnoreCase : (Ljava/lang/String;)Z
    //   42885: ifne -> 42893
    //   42888: goto_w -> 42916
    //   42893: aload #9
    //   42895: invokeinterface getSession : ()Ljavax/servlet/http/HttpSession;
    //   42900: ldc_w 'userId'
    //   42903: invokeinterface getAttribute : (Ljava/lang/String;)Ljava/lang/Object;
    //   42908: invokevirtual toString : ()Ljava/lang/String;
    //   42911: invokestatic getGangWeiByEmpId : (Ljava/lang/String;)Ljava/lang/String;
    //   42914: astore #18
    //   42916: new java/lang/StringBuilder
    //   42919: dup
    //   42920: ldc_w '<input style=width:'
    //   42923: invokespecial <init> : (Ljava/lang/String;)V
    //   42926: aload #13
    //   42928: iconst_0
    //   42929: aaload
    //   42930: iconst_3
    //   42931: aaload
    //   42932: ldc_w '1'
    //   42935: invokevirtual equals : (Ljava/lang/Object;)Z
    //   42938: ifne -> 42946
    //   42941: goto_w -> 42954
    //   42946: ldc_w '92'
    //   42949: goto_w -> 42957
    //   42954: ldc_w '100'
    //   42957: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42960: ldc_w '%;font-size:1em; type=text class=flowInput id='
    //   42963: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42966: aload_1
    //   42967: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42970: ldc_w ' name='
    //   42973: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42976: aload_1
    //   42977: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42980: ldc_w ' value=''
    //   42983: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42986: aload #18
    //   42988: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42991: ldc_w ''>'
    //   42994: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   42997: aload #13
    //   42999: iconst_0
    //   43000: aaload
    //   43001: iconst_3
    //   43002: aaload
    //   43003: ldc_w '1'
    //   43006: invokevirtual equals : (Ljava/lang/Object;)Z
    //   43009: ifne -> 43017
    //   43012: goto_w -> 43127
    //   43017: aload #4
    //   43019: new java/lang/StringBuilder
    //   43022: dup
    //   43023: ldc_w ','
    //   43026: invokespecial <init> : (Ljava/lang/String;)V
    //   43029: aload #13
    //   43031: iconst_0
    //   43032: aaload
    //   43033: iconst_0
    //   43034: aaload
    //   43035: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43038: ldc_w ','
    //   43041: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43044: invokevirtual toString : ()Ljava/lang/String;
    //   43047: invokevirtual indexOf : (Ljava/lang/String;)I
    //   43050: iflt -> 43058
    //   43053: goto_w -> 43127
    //   43058: aload #4
    //   43060: new java/lang/StringBuilder
    //   43063: dup
    //   43064: ldc_w ','
    //   43067: invokespecial <init> : (Ljava/lang/String;)V
    //   43070: aload #13
    //   43072: iconst_0
    //   43073: aaload
    //   43074: iconst_5
    //   43075: aaload
    //   43076: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43079: ldc_w ','
    //   43082: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43085: invokevirtual toString : ()Ljava/lang/String;
    //   43088: invokevirtual indexOf : (Ljava/lang/String;)I
    //   43091: iflt -> 43099
    //   43094: goto_w -> 43127
    //   43099: new java/lang/StringBuilder
    //   43102: dup
    //   43103: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   43106: invokespecial <init> : (Ljava/lang/String;)V
    //   43109: aload_1
    //   43110: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43113: ldc_w '><label class=mustFillcolor>*</label>'
    //   43116: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43119: invokevirtual toString : ()Ljava/lang/String;
    //   43122: goto_w -> 43129
    //   43127: ldc ''
    //   43129: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43132: invokevirtual toString : ()Ljava/lang/String;
    //   43135: astore #10
    //   43137: new java/lang/StringBuilder
    //   43140: dup
    //   43141: ldc_w '\\nif(document.getElementById(''
    //   43144: invokespecial <init> : (Ljava/lang/String;)V
    //   43147: aload #13
    //   43149: iconst_0
    //   43150: aaload
    //   43151: iconst_0
    //   43152: aaload
    //   43153: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43156: ldc_w '-'
    //   43159: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43162: aload_1
    //   43163: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43166: ldc_w ''))\\n'
    //   43169: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43172: ldc_w '{document.getElementById(''
    //   43175: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43178: aload #13
    //   43180: iconst_0
    //   43181: aaload
    //   43182: iconst_0
    //   43183: aaload
    //   43184: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43187: ldc_w '-'
    //   43190: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43193: aload_1
    //   43194: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43197: ldc_w '').innerHTML=''
    //   43200: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43203: aload #14
    //   43205: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43208: ldc_w '';'
    //   43211: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43214: ldc_w 'document.getElementById(''
    //   43217: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43220: aload #13
    //   43222: iconst_0
    //   43223: aaload
    //   43224: iconst_0
    //   43225: aaload
    //   43226: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43229: ldc_w '-'
    //   43232: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43235: aload_1
    //   43236: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43239: ldc_w '').innerHTML+="'
    //   43242: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43245: aload #10
    //   43247: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43250: ldc_w '";}'
    //   43253: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43256: invokevirtual toString : ()Ljava/lang/String;
    //   43259: astore #10
    //   43261: goto_w -> 46733
    //   43266: aload #13
    //   43268: iconst_0
    //   43269: aaload
    //   43270: bipush #6
    //   43272: aaload
    //   43273: astore #11
    //   43275: new java/text/DecimalFormat
    //   43278: dup
    //   43279: ldc_w '0.00'
    //   43282: invokespecial <init> : (Ljava/lang/String;)V
    //   43285: astore #26
    //   43287: ldc ''
    //   43289: astore #27
    //   43291: ldc ''
    //   43293: astore #28
    //   43295: ldc ''
    //   43297: astore #29
    //   43299: aload #11
    //   43301: ldc_w '['
    //   43304: invokevirtual indexOf : (Ljava/lang/String;)I
    //   43307: ifeq -> 43315
    //   43310: goto_w -> 43463
    //   43315: aload #11
    //   43317: ldc_w ']['
    //   43320: invokevirtual indexOf : (Ljava/lang/String;)I
    //   43323: ifgt -> 43331
    //   43326: goto_w -> 43463
    //   43331: aload #11
    //   43333: iconst_1
    //   43334: aload #11
    //   43336: ldc_w ']['
    //   43339: invokevirtual indexOf : (Ljava/lang/String;)I
    //   43342: invokevirtual substring : (II)Ljava/lang/String;
    //   43345: astore #29
    //   43347: aload #29
    //   43349: ldc_w ';;'
    //   43352: invokevirtual indexOf : (Ljava/lang/String;)I
    //   43355: ifgt -> 43363
    //   43358: goto_w -> 43401
    //   43363: aload #29
    //   43365: iconst_0
    //   43366: aload #29
    //   43368: ldc_w ';;'
    //   43371: invokevirtual indexOf : (Ljava/lang/String;)I
    //   43374: invokevirtual substring : (II)Ljava/lang/String;
    //   43377: astore #27
    //   43379: aload #29
    //   43381: aload #29
    //   43383: ldc_w ';;'
    //   43386: invokevirtual indexOf : (Ljava/lang/String;)I
    //   43389: iconst_2
    //   43390: iadd
    //   43391: invokevirtual substring : (I)Ljava/lang/String;
    //   43394: astore #28
    //   43396: goto_w -> 43434
    //   43401: aload #29
    //   43403: ldc_w ';;'
    //   43406: invokevirtual indexOf : (Ljava/lang/String;)I
    //   43409: ifeq -> 43417
    //   43412: goto_w -> 43430
    //   43417: aload #29
    //   43419: iconst_2
    //   43420: invokevirtual substring : (I)Ljava/lang/String;
    //   43423: astore #28
    //   43425: goto_w -> 43434
    //   43430: aload #29
    //   43432: astore #27
    //   43434: aload #11
    //   43436: aload #11
    //   43438: ldc_w ']['
    //   43441: invokevirtual indexOf : (Ljava/lang/String;)I
    //   43444: iconst_2
    //   43445: iadd
    //   43446: aload #11
    //   43448: invokevirtual length : ()I
    //   43451: iconst_1
    //   43452: isub
    //   43453: invokevirtual substring : (II)Ljava/lang/String;
    //   43456: astore #29
    //   43458: goto_w -> 43550
    //   43463: aload #11
    //   43465: ldc_w ';;'
    //   43468: invokevirtual indexOf : (Ljava/lang/String;)I
    //   43471: ifgt -> 43479
    //   43474: goto_w -> 43517
    //   43479: aload #11
    //   43481: iconst_0
    //   43482: aload #11
    //   43484: ldc_w ';;'
    //   43487: invokevirtual indexOf : (Ljava/lang/String;)I
    //   43490: invokevirtual substring : (II)Ljava/lang/String;
    //   43493: astore #27
    //   43495: aload #11
    //   43497: aload #11
    //   43499: ldc_w ';;'
    //   43502: invokevirtual indexOf : (Ljava/lang/String;)I
    //   43505: iconst_2
    //   43506: iadd
    //   43507: invokevirtual substring : (I)Ljava/lang/String;
    //   43510: astore #28
    //   43512: goto_w -> 43550
    //   43517: aload #11
    //   43519: ldc_w ';;'
    //   43522: invokevirtual indexOf : (Ljava/lang/String;)I
    //   43525: ifeq -> 43533
    //   43528: goto_w -> 43546
    //   43533: aload #11
    //   43535: iconst_2
    //   43536: invokevirtual substring : (I)Ljava/lang/String;
    //   43539: astore #28
    //   43541: goto_w -> 43550
    //   43546: aload #11
    //   43548: astore #27
    //   43550: ldc ''
    //   43552: aload #27
    //   43554: invokevirtual equals : (Ljava/lang/Object;)Z
    //   43557: ifeq -> 43565
    //   43560: goto_w -> 43590
    //   43565: new java/lang/StringBuilder
    //   43568: dup
    //   43569: ldc_w '<div style=\"float:left;font-size:1em;\">'
    //   43572: invokespecial <init> : (Ljava/lang/String;)V
    //   43575: aload #27
    //   43577: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43580: ldc '</div>'
    //   43582: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43585: invokevirtual toString : ()Ljava/lang/String;
    //   43588: astore #10
    //   43590: new java/lang/StringBuilder
    //   43593: dup
    //   43594: aload #10
    //   43596: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   43599: invokespecial <init> : (Ljava/lang/String;)V
    //   43602: ldc_w '<div style=\"float:left;font-size:1em;\">'
    //   43605: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43608: invokevirtual toString : ()Ljava/lang/String;
    //   43611: astore #10
    //   43613: aload #4
    //   43615: ifnonnull -> 43623
    //   43618: goto_w -> 44116
    //   43623: aload #4
    //   43625: new java/lang/StringBuilder
    //   43628: dup
    //   43629: ldc_w ','
    //   43632: invokespecial <init> : (Ljava/lang/String;)V
    //   43635: aload #13
    //   43637: iconst_0
    //   43638: aaload
    //   43639: iconst_0
    //   43640: aaload
    //   43641: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43644: ldc_w ','
    //   43647: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43650: invokevirtual toString : ()Ljava/lang/String;
    //   43653: invokevirtual indexOf : (Ljava/lang/String;)I
    //   43656: iflt -> 43664
    //   43659: goto_w -> 43705
    //   43664: aload #4
    //   43666: new java/lang/StringBuilder
    //   43669: dup
    //   43670: ldc_w ','
    //   43673: invokespecial <init> : (Ljava/lang/String;)V
    //   43676: aload #13
    //   43678: iconst_0
    //   43679: aaload
    //   43680: iconst_5
    //   43681: aaload
    //   43682: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43685: ldc_w ','
    //   43688: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43691: invokevirtual toString : ()Ljava/lang/String;
    //   43694: invokevirtual indexOf : (Ljava/lang/String;)I
    //   43697: ifge -> 43705
    //   43700: goto_w -> 44116
    //   43705: ldc ''
    //   43707: aload #27
    //   43709: invokevirtual equals : (Ljava/lang/Object;)Z
    //   43712: ifeq -> 43720
    //   43715: goto_w -> 43745
    //   43720: new java/lang/StringBuilder
    //   43723: dup
    //   43724: ldc_w '<div style=\"float:left;font-size:1em;\">'
    //   43727: invokespecial <init> : (Ljava/lang/String;)V
    //   43730: aload #27
    //   43732: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43735: ldc '</div>'
    //   43737: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43740: invokevirtual toString : ()Ljava/lang/String;
    //   43743: astore #10
    //   43745: new java/lang/StringBuilder
    //   43748: dup
    //   43749: aload #10
    //   43751: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   43754: invokespecial <init> : (Ljava/lang/String;)V
    //   43757: ldc_w '<div style=\"float:left;font-size:1em;\">'
    //   43760: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43763: invokevirtual toString : ()Ljava/lang/String;
    //   43766: astore #10
    //   43768: aload #9
    //   43770: ldc_w 'resubmit'
    //   43773: invokeinterface getParameter : (Ljava/lang/String;)Ljava/lang/String;
    //   43778: ifnonnull -> 43786
    //   43781: goto_w -> 43828
    //   43786: aload #9
    //   43788: ldc_w 'resubmit'
    //   43791: invokeinterface getParameter : (Ljava/lang/String;)Ljava/lang/String;
    //   43796: ifnonnull -> 43804
    //   43799: goto_w -> 43832
    //   43804: aload #9
    //   43806: ldc_w 'resubmit'
    //   43809: invokeinterface getParameter : (Ljava/lang/String;)Ljava/lang/String;
    //   43814: ldc_w '1'
    //   43817: invokevirtual equals : (Ljava/lang/Object;)Z
    //   43820: ifeq -> 43828
    //   43823: goto_w -> 43832
    //   43828: ldc ''
    //   43830: astore #14
    //   43832: new java/lang/StringBuilder
    //   43835: dup
    //   43836: aload #10
    //   43838: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   43841: invokespecial <init> : (Ljava/lang/String;)V
    //   43844: ldc_w '<div name=moneyNum id=moneyNum style=\"font-size:1em;\"><input type=hidden name='
    //   43847: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43850: aload_1
    //   43851: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43854: ldc_w ' id='
    //   43857: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43860: aload_1
    //   43861: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43864: ldc_w ' value=\"'
    //   43867: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43870: aload #18
    //   43872: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43875: ldc_w '\">'
    //   43878: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   43881: invokevirtual toString : ()Ljava/lang/String;
    //   43884: astore #10
    //   43886: aload #18
    //   43888: ifnonnull -> 43896
    //   43891: goto_w -> 43910
    //   43896: aload #18
    //   43898: invokevirtual length : ()I
    //   43901: iconst_1
    //   43902: if_icmplt -> 43910
    //   43905: goto_w -> 43917
    //   43910: aload #18
    //   43912: goto_w -> 43927
    //   43917: aload #26
    //   43919: aload #18
    //   43921: invokestatic valueOf : (Ljava/lang/String;)Ljava/lang/Double;
    //   43924: invokevirtual format : (Ljava/lang/Object;)Ljava/lang/String;
    //   43927: astore #30
    //   43929: aload #13
    //   43931: iconst_0
    //   43932: aaload
    //   43933: iconst_2
    //   43934: aaload
    //   43935: ldc '1000000'
    //   43937: invokevirtual equals : (Ljava/lang/Object;)Z
    //   43940: ifne -> 43948
    //   43943: goto_w -> 43999
    //   43948: aload #18
    //   43950: ifnonnull -> 43958
    //   43953: goto_w -> 43972
    //   43958: aload #18
    //   43960: invokevirtual length : ()I
    //   43963: iconst_1
    //   43964: if_icmplt -> 43972
    //   43967: goto_w -> 43979
    //   43972: aload #18
    //   43974: goto_w -> 43997
    //   43979: new java/lang/StringBuilder
    //   43982: dup
    //   43983: invokespecial <init> : ()V
    //   43986: aload #18
    //   43988: invokestatic valueOf : (Ljava/lang/String;)Ljava/lang/Integer;
    //   43991: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   43994: invokevirtual toString : ()Ljava/lang/String;
    //   43997: astore #30
    //   43999: new java/lang/StringBuilder
    //   44002: dup
    //   44003: aload #10
    //   44005: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   44008: invokespecial <init> : (Ljava/lang/String;)V
    //   44011: aload #30
    //   44013: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44016: ldc_w '</div><div name=moneyChar id=moneyChar style=display:none>'
    //   44019: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44022: aload_0
    //   44023: aload #18
    //   44025: invokespecial changeToBig : (Ljava/lang/String;)Ljava/lang/String;
    //   44028: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44031: ldc '</div>'
    //   44033: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44036: invokevirtual toString : ()Ljava/lang/String;
    //   44039: astore #10
    //   44041: new java/lang/StringBuilder
    //   44044: dup
    //   44045: aload #10
    //   44047: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   44050: invokespecial <init> : (Ljava/lang/String;)V
    //   44053: ldc '</div>'
    //   44055: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44058: invokevirtual toString : ()Ljava/lang/String;
    //   44061: astore #10
    //   44063: ldc ''
    //   44065: aload #28
    //   44067: invokevirtual equals : (Ljava/lang/Object;)Z
    //   44070: ifeq -> 44078
    //   44073: goto_w -> 44111
    //   44078: new java/lang/StringBuilder
    //   44081: dup
    //   44082: aload #10
    //   44084: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   44087: invokespecial <init> : (Ljava/lang/String;)V
    //   44090: ldc_w '<div style=\"float:left;\">'
    //   44093: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44096: aload #28
    //   44098: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44101: ldc '</div>'
    //   44103: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44106: invokevirtual toString : ()Ljava/lang/String;
    //   44109: astore #10
    //   44111: goto_w -> 44561
    //   44116: ldc ''
    //   44118: aload #27
    //   44120: invokevirtual equals : (Ljava/lang/Object;)Z
    //   44123: ifeq -> 44131
    //   44126: goto_w -> 44156
    //   44131: new java/lang/StringBuilder
    //   44134: dup
    //   44135: ldc_w '<div style=\"float:left;padding-top:2px;font-size:1em;\">'
    //   44138: invokespecial <init> : (Ljava/lang/String;)V
    //   44141: aload #27
    //   44143: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44146: ldc '</div>'
    //   44148: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44151: invokevirtual toString : ()Ljava/lang/String;
    //   44154: astore #10
    //   44156: ldc ''
    //   44158: astore #30
    //   44160: aload #8
    //   44162: aload_1
    //   44163: invokevirtual indexOf : (Ljava/lang/String;)I
    //   44166: ifge -> 44174
    //   44169: goto_w -> 44179
    //   44174: ldc_w 'setComputeForeignFieldNew(this);'
    //   44177: astore #30
    //   44179: new java/lang/StringBuilder
    //   44182: dup
    //   44183: aload #10
    //   44185: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   44188: invokespecial <init> : (Ljava/lang/String;)V
    //   44191: ldc_w '<div style=\"float:left;font-size:1em; width: 60%;\">'
    //   44194: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44197: invokevirtual toString : ()Ljava/lang/String;
    //   44200: astore #10
    //   44202: new java/lang/StringBuilder
    //   44205: dup
    //   44206: aload #10
    //   44208: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   44211: invokespecial <init> : (Ljava/lang/String;)V
    //   44214: ldc_w '<input  type=text  style=\"font-size:1em; width: 100%;\"; class=flowInput onmouseover=setStyle(this) onmouseout=setStyle(this) id='
    //   44217: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44220: aload_1
    //   44221: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44224: ldc_w ' name='
    //   44227: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44230: aload_1
    //   44231: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44234: ldc_w ' value="'
    //   44237: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44240: aload #18
    //   44242: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44245: ldc_w '" '
    //   44248: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44251: iload #17
    //   44253: ifne -> 44261
    //   44256: goto_w -> 44301
    //   44261: new java/lang/StringBuilder
    //   44264: dup
    //   44265: ldc_w '  onblur=checkNum(this);checkSize(this);'
    //   44268: invokespecial <init> : (Ljava/lang/String;)V
    //   44271: aload #30
    //   44273: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44276: ldc_w 'setTotalValue();accountToUpper(this,\"'
    //   44279: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44282: aload #29
    //   44284: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44287: ldc_w '\");'
    //   44290: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44293: invokevirtual toString : ()Ljava/lang/String;
    //   44296: goto_w -> 44325
    //   44301: new java/lang/StringBuilder
    //   44304: dup
    //   44305: ldc_w ' onblur=checkSize(this);setTotalValue();accountToUpper(this,\"'
    //   44308: invokespecial <init> : (Ljava/lang/String;)V
    //   44311: aload #29
    //   44313: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44316: ldc_w '\");'
    //   44319: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44322: invokevirtual toString : ()Ljava/lang/String;
    //   44325: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44328: ldc_w '>'
    //   44331: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44334: invokevirtual toString : ()Ljava/lang/String;
    //   44337: astore #10
    //   44339: new java/lang/StringBuilder
    //   44342: dup
    //   44343: aload #10
    //   44345: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   44348: invokespecial <init> : (Ljava/lang/String;)V
    //   44351: ldc '</div>'
    //   44353: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44356: invokevirtual toString : ()Ljava/lang/String;
    //   44359: astore #10
    //   44361: ldc ''
    //   44363: aload #28
    //   44365: invokevirtual equals : (Ljava/lang/Object;)Z
    //   44368: ifeq -> 44376
    //   44371: goto_w -> 44409
    //   44376: new java/lang/StringBuilder
    //   44379: dup
    //   44380: aload #10
    //   44382: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   44385: invokespecial <init> : (Ljava/lang/String;)V
    //   44388: ldc_w '<div style=\"float:left;padding-top:2px;font-size:1em;\">'
    //   44391: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44394: aload #28
    //   44396: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44399: ldc '</div>'
    //   44401: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44404: invokevirtual toString : ()Ljava/lang/String;
    //   44407: astore #10
    //   44409: new java/lang/StringBuilder
    //   44412: dup
    //   44413: aload #10
    //   44415: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   44418: invokespecial <init> : (Ljava/lang/String;)V
    //   44421: aload #13
    //   44423: iconst_0
    //   44424: aaload
    //   44425: iconst_3
    //   44426: aaload
    //   44427: ldc_w '1'
    //   44430: invokevirtual equals : (Ljava/lang/Object;)Z
    //   44433: ifne -> 44441
    //   44436: goto_w -> 44551
    //   44441: aload #4
    //   44443: new java/lang/StringBuilder
    //   44446: dup
    //   44447: ldc_w ','
    //   44450: invokespecial <init> : (Ljava/lang/String;)V
    //   44453: aload #13
    //   44455: iconst_0
    //   44456: aaload
    //   44457: iconst_0
    //   44458: aaload
    //   44459: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44462: ldc_w ','
    //   44465: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44468: invokevirtual toString : ()Ljava/lang/String;
    //   44471: invokevirtual indexOf : (Ljava/lang/String;)I
    //   44474: iflt -> 44482
    //   44477: goto_w -> 44551
    //   44482: aload #4
    //   44484: new java/lang/StringBuilder
    //   44487: dup
    //   44488: ldc_w ','
    //   44491: invokespecial <init> : (Ljava/lang/String;)V
    //   44494: aload #13
    //   44496: iconst_0
    //   44497: aaload
    //   44498: iconst_5
    //   44499: aaload
    //   44500: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44503: ldc_w ','
    //   44506: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44509: invokevirtual toString : ()Ljava/lang/String;
    //   44512: invokevirtual indexOf : (Ljava/lang/String;)I
    //   44515: iflt -> 44523
    //   44518: goto_w -> 44551
    //   44523: new java/lang/StringBuilder
    //   44526: dup
    //   44527: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   44530: invokespecial <init> : (Ljava/lang/String;)V
    //   44533: aload_1
    //   44534: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44537: ldc_w '><label class=mustFillcolor>*</label>'
    //   44540: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44543: invokevirtual toString : ()Ljava/lang/String;
    //   44546: goto_w -> 44553
    //   44551: ldc ''
    //   44553: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44556: invokevirtual toString : ()Ljava/lang/String;
    //   44559: astore #10
    //   44561: new java/lang/StringBuilder
    //   44564: dup
    //   44565: ldc_w 'if(document.getElementById(''
    //   44568: invokespecial <init> : (Ljava/lang/String;)V
    //   44571: aload #13
    //   44573: iconst_0
    //   44574: aaload
    //   44575: iconst_0
    //   44576: aaload
    //   44577: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44580: ldc_w '-'
    //   44583: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44586: aload_1
    //   44587: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44590: ldc_w ''))\\n{document.getElementById(''
    //   44593: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44596: aload #13
    //   44598: iconst_0
    //   44599: aaload
    //   44600: iconst_0
    //   44601: aaload
    //   44602: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44605: ldc_w '-'
    //   44608: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44611: aload_1
    //   44612: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44615: ldc_w '').innerHTML=''
    //   44618: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44621: aload #14
    //   44623: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44626: ldc_w '';document.getElementById(''
    //   44629: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44632: aload #13
    //   44634: iconst_0
    //   44635: aaload
    //   44636: iconst_0
    //   44637: aaload
    //   44638: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44641: ldc_w '-'
    //   44644: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44647: aload_1
    //   44648: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44651: ldc_w '').innerHTML+=''
    //   44654: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44657: aload #10
    //   44659: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44662: ldc_w '';}'
    //   44665: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44668: invokevirtual toString : ()Ljava/lang/String;
    //   44671: astore #10
    //   44673: goto_w -> 46733
    //   44678: ldc_w '<label class=xuhao>1</label>'
    //   44681: astore #10
    //   44683: new java/lang/StringBuilder
    //   44686: dup
    //   44687: ldc_w ' <input type=hidden style=width:100%  name='
    //   44690: invokespecial <init> : (Ljava/lang/String;)V
    //   44693: aload_1
    //   44694: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44697: ldc_w ' id='
    //   44700: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44703: aload_1
    //   44704: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44707: ldc_w ' value="0" > '
    //   44710: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44713: invokevirtual toString : ()Ljava/lang/String;
    //   44716: astore #30
    //   44718: new java/lang/StringBuilder
    //   44721: dup
    //   44722: ldc_w 'if(document.getElementById(''
    //   44725: invokespecial <init> : (Ljava/lang/String;)V
    //   44728: aload #13
    //   44730: iconst_0
    //   44731: aaload
    //   44732: iconst_0
    //   44733: aaload
    //   44734: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44737: ldc_w '-'
    //   44740: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44743: aload_1
    //   44744: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44747: ldc_w ''))\\n{document.getElementById(''
    //   44750: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44753: aload #13
    //   44755: iconst_0
    //   44756: aaload
    //   44757: iconst_0
    //   44758: aaload
    //   44759: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44762: ldc_w '-'
    //   44765: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44768: aload_1
    //   44769: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44772: ldc_w '').innerHTML=''
    //   44775: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44778: aload #14
    //   44780: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44783: aload #30
    //   44785: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44788: ldc_w '';document.getElementById(''
    //   44791: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44794: aload #13
    //   44796: iconst_0
    //   44797: aaload
    //   44798: iconst_0
    //   44799: aaload
    //   44800: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44803: ldc_w '-'
    //   44806: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44809: aload_1
    //   44810: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44813: ldc_w '').innerHTML+=''
    //   44816: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44819: aload #10
    //   44821: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44824: ldc_w '';}'
    //   44827: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44830: invokevirtual toString : ()Ljava/lang/String;
    //   44833: astore #10
    //   44835: goto_w -> 46733
    //   44840: new java/lang/StringBuilder
    //   44843: dup
    //   44844: ldc_w '<select id='
    //   44847: invokespecial <init> : (Ljava/lang/String;)V
    //   44850: aload_1
    //   44851: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44854: ldc_w ' name='
    //   44857: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44860: aload_1
    //   44861: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44864: ldc_w '><option value="">==请选择==</option>'
    //   44867: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44870: invokevirtual toString : ()Ljava/lang/String;
    //   44873: astore #10
    //   44875: aload #16
    //   44877: new java/lang/StringBuilder
    //   44880: dup
    //   44881: ldc_w 'select field_value from tfield where field_id='
    //   44884: invokespecial <init> : (Ljava/lang/String;)V
    //   44887: aload #6
    //   44889: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44892: invokevirtual toString : ()Ljava/lang/String;
    //   44895: invokevirtual executeQueryToStr : (Ljava/lang/String;)Ljava/lang/String;
    //   44898: astore #11
    //   44900: aload #11
    //   44902: ifnonnull -> 44910
    //   44905: goto_w -> 44927
    //   44910: aload #11
    //   44912: invokevirtual trim : ()Ljava/lang/String;
    //   44915: invokevirtual length : ()I
    //   44918: iconst_1
    //   44919: if_icmplt -> 44927
    //   44922: goto_w -> 44932
    //   44927: goto_w -> 46733
    //   44932: aload #4
    //   44934: ifnonnull -> 44942
    //   44937: goto_w -> 45342
    //   44942: aload #4
    //   44944: new java/lang/StringBuilder
    //   44947: dup
    //   44948: ldc_w ','
    //   44951: invokespecial <init> : (Ljava/lang/String;)V
    //   44954: aload #13
    //   44956: iconst_0
    //   44957: aaload
    //   44958: iconst_0
    //   44959: aaload
    //   44960: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44963: ldc_w ','
    //   44966: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   44969: invokevirtual toString : ()Ljava/lang/String;
    //   44972: invokevirtual indexOf : (Ljava/lang/String;)I
    //   44975: iflt -> 44983
    //   44978: goto_w -> 45024
    //   44983: aload #4
    //   44985: new java/lang/StringBuilder
    //   44988: dup
    //   44989: ldc_w ','
    //   44992: invokespecial <init> : (Ljava/lang/String;)V
    //   44995: aload #13
    //   44997: iconst_0
    //   44998: aaload
    //   44999: iconst_5
    //   45000: aaload
    //   45001: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45004: ldc_w ','
    //   45007: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45010: invokevirtual toString : ()Ljava/lang/String;
    //   45013: invokevirtual indexOf : (Ljava/lang/String;)I
    //   45016: ifge -> 45024
    //   45019: goto_w -> 45342
    //   45024: ldc ''
    //   45026: astore #10
    //   45028: aload #11
    //   45030: ldc_w '@'
    //   45033: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   45036: ifne -> 45044
    //   45039: goto_w -> 45261
    //   45044: aload #11
    //   45046: aload #11
    //   45048: ldc_w ']['
    //   45051: invokevirtual indexOf : (Ljava/lang/String;)I
    //   45054: iconst_2
    //   45055: iadd
    //   45056: aload #11
    //   45058: invokevirtual length : ()I
    //   45061: iconst_1
    //   45062: isub
    //   45063: invokevirtual substring : (II)Ljava/lang/String;
    //   45066: astore #31
    //   45068: aconst_null
    //   45069: checkcast [[Ljava/lang/String;
    //   45072: astore #32
    //   45074: aload #16
    //   45076: new java/lang/StringBuilder
    //   45079: dup
    //   45080: ldc 'select '
    //   45082: invokespecial <init> : (Ljava/lang/String;)V
    //   45085: aload #31
    //   45087: iconst_0
    //   45088: aload #31
    //   45090: ldc_w '.'
    //   45093: invokevirtual indexOf : (Ljava/lang/String;)I
    //   45096: invokevirtual substring : (II)Ljava/lang/String;
    //   45099: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45102: ldc_w '_id,'
    //   45105: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45108: aload #31
    //   45110: aload #31
    //   45112: ldc_w '.'
    //   45115: invokevirtual indexOf : (Ljava/lang/String;)I
    //   45118: iconst_1
    //   45119: iadd
    //   45120: aload #31
    //   45122: invokevirtual length : ()I
    //   45125: invokevirtual substring : (II)Ljava/lang/String;
    //   45128: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45131: ldc ' from '
    //   45133: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45136: aload #31
    //   45138: iconst_0
    //   45139: aload #31
    //   45141: ldc_w '.'
    //   45144: invokevirtual indexOf : (Ljava/lang/String;)I
    //   45147: invokevirtual substring : (II)Ljava/lang/String;
    //   45150: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45153: invokevirtual toString : ()Ljava/lang/String;
    //   45156: invokevirtual executeQueryToStrArr2 : (Ljava/lang/String;)[[Ljava/lang/String;
    //   45159: astore #32
    //   45161: goto_w -> 45173
    //   45166: astore #33
    //   45168: goto_w -> 45173
    //   45173: aload #32
    //   45175: ifnonnull -> 45183
    //   45178: goto_w -> 45261
    //   45183: iconst_0
    //   45184: istore #33
    //   45186: goto_w -> 45248
    //   45191: new java/lang/StringBuilder
    //   45194: dup
    //   45195: aload #10
    //   45197: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   45200: invokespecial <init> : (Ljava/lang/String;)V
    //   45203: aload #18
    //   45205: aload #32
    //   45207: iload #33
    //   45209: aaload
    //   45210: iconst_1
    //   45211: aaload
    //   45212: invokevirtual indexOf : (Ljava/lang/String;)I
    //   45215: ifge -> 45223
    //   45218: goto_w -> 45235
    //   45223: aload #32
    //   45225: iload #33
    //   45227: aaload
    //   45228: iconst_1
    //   45229: aaload
    //   45230: goto_w -> 45237
    //   45235: ldc ''
    //   45237: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45240: invokevirtual toString : ()Ljava/lang/String;
    //   45243: astore #10
    //   45245: iinc #33, 1
    //   45248: iload #33
    //   45250: aload #32
    //   45252: arraylength
    //   45253: if_icmpge -> 45261
    //   45256: goto_w -> 45191
    //   45261: new java/lang/StringBuilder
    //   45264: dup
    //   45265: ldc_w 'if(document.getElementById(''
    //   45268: invokespecial <init> : (Ljava/lang/String;)V
    //   45271: aload #13
    //   45273: iconst_0
    //   45274: aaload
    //   45275: iconst_0
    //   45276: aaload
    //   45277: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45280: ldc_w '-'
    //   45283: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45286: aload_1
    //   45287: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45290: ldc_w ''))\\n{document.getElementById(''
    //   45293: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45296: aload #13
    //   45298: iconst_0
    //   45299: aaload
    //   45300: iconst_0
    //   45301: aaload
    //   45302: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45305: ldc_w '-'
    //   45308: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45311: aload_1
    //   45312: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45315: ldc_w '').innerHTML=''
    //   45318: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45321: aload #10
    //   45323: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45326: ldc_w '';}'
    //   45329: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45332: invokevirtual toString : ()Ljava/lang/String;
    //   45335: astore #10
    //   45337: goto_w -> 45856
    //   45342: aload #11
    //   45344: ldc_w '@'
    //   45347: invokevirtual startsWith : (Ljava/lang/String;)Z
    //   45350: ifne -> 45358
    //   45353: goto_w -> 45856
    //   45358: aload #11
    //   45360: aload #11
    //   45362: ldc_w ']['
    //   45365: invokevirtual indexOf : (Ljava/lang/String;)I
    //   45368: iconst_2
    //   45369: iadd
    //   45370: aload #11
    //   45372: invokevirtual length : ()I
    //   45375: iconst_1
    //   45376: isub
    //   45377: invokevirtual substring : (II)Ljava/lang/String;
    //   45380: astore #31
    //   45382: aconst_null
    //   45383: checkcast [[Ljava/lang/String;
    //   45386: astore #32
    //   45388: aload #16
    //   45390: new java/lang/StringBuilder
    //   45393: dup
    //   45394: ldc 'select '
    //   45396: invokespecial <init> : (Ljava/lang/String;)V
    //   45399: aload #31
    //   45401: iconst_0
    //   45402: aload #31
    //   45404: ldc_w '.'
    //   45407: invokevirtual indexOf : (Ljava/lang/String;)I
    //   45410: invokevirtual substring : (II)Ljava/lang/String;
    //   45413: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45416: ldc_w '_id,'
    //   45419: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45422: aload #31
    //   45424: aload #31
    //   45426: ldc_w '.'
    //   45429: invokevirtual indexOf : (Ljava/lang/String;)I
    //   45432: iconst_1
    //   45433: iadd
    //   45434: aload #31
    //   45436: invokevirtual length : ()I
    //   45439: invokevirtual substring : (II)Ljava/lang/String;
    //   45442: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45445: ldc ' from '
    //   45447: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45450: aload #31
    //   45452: iconst_0
    //   45453: aload #31
    //   45455: ldc_w '.'
    //   45458: invokevirtual indexOf : (Ljava/lang/String;)I
    //   45461: invokevirtual substring : (II)Ljava/lang/String;
    //   45464: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45467: invokevirtual toString : ()Ljava/lang/String;
    //   45470: invokevirtual executeQueryToStrArr2 : (Ljava/lang/String;)[[Ljava/lang/String;
    //   45473: astore #32
    //   45475: goto_w -> 45487
    //   45480: astore #33
    //   45482: goto_w -> 45487
    //   45487: aload #32
    //   45489: ifnonnull -> 45497
    //   45492: goto_w -> 45856
    //   45497: iconst_0
    //   45498: istore #33
    //   45500: goto_w -> 45596
    //   45505: new java/lang/StringBuilder
    //   45508: dup
    //   45509: aload #10
    //   45511: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   45514: invokespecial <init> : (Ljava/lang/String;)V
    //   45517: ldc_w '<option value='
    //   45520: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45523: aload #32
    //   45525: iload #33
    //   45527: aaload
    //   45528: iconst_1
    //   45529: aaload
    //   45530: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45533: aload #32
    //   45535: iload #33
    //   45537: aaload
    //   45538: iconst_1
    //   45539: aaload
    //   45540: aload #18
    //   45542: invokevirtual equals : (Ljava/lang/Object;)Z
    //   45545: ifne -> 45553
    //   45548: goto_w -> 45561
    //   45553: ldc_w ' selected '
    //   45556: goto_w -> 45563
    //   45561: ldc ''
    //   45563: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45566: ldc_w '>'
    //   45569: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45572: aload #32
    //   45574: iload #33
    //   45576: aaload
    //   45577: iconst_1
    //   45578: aaload
    //   45579: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45582: ldc_w '</option>'
    //   45585: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45588: invokevirtual toString : ()Ljava/lang/String;
    //   45591: astore #10
    //   45593: iinc #33, 1
    //   45596: iload #33
    //   45598: aload #32
    //   45600: arraylength
    //   45601: if_icmpge -> 45609
    //   45604: goto_w -> 45505
    //   45609: new java/lang/StringBuilder
    //   45612: dup
    //   45613: ldc_w 'if(document.getElementById(''
    //   45616: invokespecial <init> : (Ljava/lang/String;)V
    //   45619: aload #13
    //   45621: iconst_0
    //   45622: aaload
    //   45623: iconst_0
    //   45624: aaload
    //   45625: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45628: ldc_w '-'
    //   45631: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45634: aload_1
    //   45635: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45638: ldc_w ''))\\n{document.getElementById(''
    //   45641: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45644: aload #13
    //   45646: iconst_0
    //   45647: aaload
    //   45648: iconst_0
    //   45649: aaload
    //   45650: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45653: ldc_w '-'
    //   45656: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45659: aload_1
    //   45660: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45663: ldc_w '').innerHTML=''
    //   45666: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45669: aload #14
    //   45671: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45674: ldc_w '';document.getElementById(''
    //   45677: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45680: aload #13
    //   45682: iconst_0
    //   45683: aaload
    //   45684: iconst_0
    //   45685: aaload
    //   45686: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45689: ldc_w '-'
    //   45692: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45695: aload_1
    //   45696: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45699: ldc_w '').innerHTML+=''
    //   45702: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45705: aload #10
    //   45707: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45710: aload #13
    //   45712: iconst_0
    //   45713: aaload
    //   45714: iconst_3
    //   45715: aaload
    //   45716: ldc_w '1'
    //   45719: invokevirtual equals : (Ljava/lang/Object;)Z
    //   45722: ifne -> 45730
    //   45725: goto_w -> 45840
    //   45730: aload #4
    //   45732: new java/lang/StringBuilder
    //   45735: dup
    //   45736: ldc_w ','
    //   45739: invokespecial <init> : (Ljava/lang/String;)V
    //   45742: aload #13
    //   45744: iconst_0
    //   45745: aaload
    //   45746: iconst_0
    //   45747: aaload
    //   45748: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45751: ldc_w ','
    //   45754: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45757: invokevirtual toString : ()Ljava/lang/String;
    //   45760: invokevirtual indexOf : (Ljava/lang/String;)I
    //   45763: iflt -> 45771
    //   45766: goto_w -> 45840
    //   45771: aload #4
    //   45773: new java/lang/StringBuilder
    //   45776: dup
    //   45777: ldc_w ','
    //   45780: invokespecial <init> : (Ljava/lang/String;)V
    //   45783: aload #13
    //   45785: iconst_0
    //   45786: aaload
    //   45787: iconst_5
    //   45788: aaload
    //   45789: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45792: ldc_w ','
    //   45795: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45798: invokevirtual toString : ()Ljava/lang/String;
    //   45801: invokevirtual indexOf : (Ljava/lang/String;)I
    //   45804: iflt -> 45812
    //   45807: goto_w -> 45840
    //   45812: new java/lang/StringBuilder
    //   45815: dup
    //   45816: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   45819: invokespecial <init> : (Ljava/lang/String;)V
    //   45822: aload_1
    //   45823: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45826: ldc_w '><label class=mustFillcolor>*</label>'
    //   45829: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45832: invokevirtual toString : ()Ljava/lang/String;
    //   45835: goto_w -> 45842
    //   45840: ldc ''
    //   45842: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45845: ldc_w '';}'
    //   45848: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45851: invokevirtual toString : ()Ljava/lang/String;
    //   45854: astore #10
    //   45856: goto_w -> 46733
    //   45861: aload #18
    //   45863: ldc_w '''
    //   45866: ldc_w '\''
    //   45869: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   45872: ldc_w '"'
    //   45875: ldc_w '\\"'
    //   45878: invokevirtual replaceAll : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   45881: astore #18
    //   45883: ldc ''
    //   45885: astore #31
    //   45887: aload #18
    //   45889: invokevirtual length : ()I
    //   45892: ifgt -> 45900
    //   45895: goto_w -> 45942
    //   45900: aload #18
    //   45902: ldc_w '@@$@@'
    //   45905: invokevirtual indexOf : (Ljava/lang/String;)I
    //   45908: ifge -> 45916
    //   45911: goto_w -> 45938
    //   45916: aload #18
    //   45918: aload #18
    //   45920: ldc_w '@@$@@'
    //   45923: invokevirtual indexOf : (Ljava/lang/String;)I
    //   45926: iconst_5
    //   45927: iadd
    //   45928: invokevirtual substring : (I)Ljava/lang/String;
    //   45931: astore #31
    //   45933: goto_w -> 45942
    //   45938: aload #18
    //   45940: astore #31
    //   45942: aload #4
    //   45944: ifnonnull -> 45952
    //   45947: goto_w -> 46126
    //   45952: aload #4
    //   45954: new java/lang/StringBuilder
    //   45957: dup
    //   45958: ldc_w ','
    //   45961: invokespecial <init> : (Ljava/lang/String;)V
    //   45964: aload #13
    //   45966: iconst_0
    //   45967: aaload
    //   45968: iconst_0
    //   45969: aaload
    //   45970: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45973: ldc_w ','
    //   45976: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   45979: invokevirtual toString : ()Ljava/lang/String;
    //   45982: invokevirtual indexOf : (Ljava/lang/String;)I
    //   45985: iflt -> 45993
    //   45988: goto_w -> 46034
    //   45993: aload #4
    //   45995: new java/lang/StringBuilder
    //   45998: dup
    //   45999: ldc_w ','
    //   46002: invokespecial <init> : (Ljava/lang/String;)V
    //   46005: aload #13
    //   46007: iconst_0
    //   46008: aaload
    //   46009: iconst_5
    //   46010: aaload
    //   46011: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46014: ldc_w ','
    //   46017: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46020: invokevirtual toString : ()Ljava/lang/String;
    //   46023: invokevirtual indexOf : (Ljava/lang/String;)I
    //   46026: ifge -> 46034
    //   46029: goto_w -> 46126
    //   46034: new java/lang/StringBuilder
    //   46037: dup
    //   46038: ldc_w '<input type=hidden id='
    //   46041: invokespecial <init> : (Ljava/lang/String;)V
    //   46044: aload_1
    //   46045: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46048: ldc_w ' name='
    //   46051: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46054: aload_1
    //   46055: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46058: ldc_w ' value="'
    //   46061: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46064: aload #18
    //   46066: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46069: ldc_w '"><div style=\"float:left;width:60%;font-size:1em;\"><input type=hidden id='
    //   46072: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46075: aload_1
    //   46076: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46079: ldc_w '_temp name='
    //   46082: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46085: aload_1
    //   46086: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46089: ldc_w '_temp value="'
    //   46092: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46095: aload #31
    //   46097: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46100: ldc_w '">'
    //   46103: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46106: aload #31
    //   46108: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46111: ldc '</div>'
    //   46113: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46116: invokevirtual toString : ()Ljava/lang/String;
    //   46119: astore #10
    //   46121: goto_w -> 46256
    //   46126: new java/lang/StringBuilder
    //   46129: dup
    //   46130: ldc_w '<input type=hidden id='
    //   46133: invokespecial <init> : (Ljava/lang/String;)V
    //   46136: aload_1
    //   46137: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46140: ldc_w ' name='
    //   46143: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46146: aload_1
    //   46147: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46150: ldc_w ' value="'
    //   46153: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46156: aload #18
    //   46158: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46161: ldc_w '"><div style=\"float:left;width:60%;font-size:1em;\"><input type=text id='
    //   46164: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46167: aload_1
    //   46168: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46171: ldc_w '_temp name='
    //   46174: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46177: aload_1
    //   46178: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46181: ldc_w '_temp value="'
    //   46184: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46187: aload #31
    //   46189: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46192: ldc_w '" style=\"width:100%;font-size:1em;\"></div>'
    //   46195: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46198: invokevirtual toString : ()Ljava/lang/String;
    //   46201: astore #10
    //   46203: new java/lang/StringBuilder
    //   46206: dup
    //   46207: aload #10
    //   46209: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   46212: invokespecial <init> : (Ljava/lang/String;)V
    //   46215: ldc_w '<div style=\"float:left;font-size:1em;\"><input  type=button id='
    //   46218: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46221: aload_1
    //   46222: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46225: ldc_w '_btn name='
    //   46228: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46231: aload_1
    //   46232: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46235: ldc_w '_btn onclick="'
    //   46238: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46241: aload_1
    //   46242: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46245: ldc_w '_enter(this);" value=检索></div>'
    //   46248: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46251: invokevirtual toString : ()Ljava/lang/String;
    //   46254: astore #10
    //   46256: new java/lang/StringBuilder
    //   46259: dup
    //   46260: aload #10
    //   46262: invokestatic valueOf : (Ljava/lang/Object;)Ljava/lang/String;
    //   46265: invokespecial <init> : (Ljava/lang/String;)V
    //   46268: aload #13
    //   46270: iconst_0
    //   46271: aaload
    //   46272: iconst_3
    //   46273: aaload
    //   46274: ldc_w '1'
    //   46277: invokevirtual equals : (Ljava/lang/Object;)Z
    //   46280: ifne -> 46288
    //   46283: goto_w -> 46420
    //   46288: aload #4
    //   46290: new java/lang/StringBuilder
    //   46293: dup
    //   46294: ldc_w ','
    //   46297: invokespecial <init> : (Ljava/lang/String;)V
    //   46300: aload #13
    //   46302: iconst_0
    //   46303: aaload
    //   46304: iconst_0
    //   46305: aaload
    //   46306: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46309: ldc_w ','
    //   46312: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46315: invokevirtual toString : ()Ljava/lang/String;
    //   46318: invokevirtual indexOf : (Ljava/lang/String;)I
    //   46321: iflt -> 46329
    //   46324: goto_w -> 46420
    //   46329: aload #4
    //   46331: new java/lang/StringBuilder
    //   46334: dup
    //   46335: ldc_w ','
    //   46338: invokespecial <init> : (Ljava/lang/String;)V
    //   46341: aload #13
    //   46343: iconst_0
    //   46344: aaload
    //   46345: iconst_5
    //   46346: aaload
    //   46347: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46350: ldc_w ','
    //   46353: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46356: invokevirtual toString : ()Ljava/lang/String;
    //   46359: invokevirtual indexOf : (Ljava/lang/String;)I
    //   46362: iflt -> 46370
    //   46365: goto_w -> 46420
    //   46370: new java/lang/StringBuilder
    //   46373: dup
    //   46374: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   46377: invokespecial <init> : (Ljava/lang/String;)V
    //   46380: aload_1
    //   46381: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46384: ldc_w '>'
    //   46387: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46390: ldc_w '<input type=hidden name=mustWrite id=mustWrite value='
    //   46393: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46396: aload_1
    //   46397: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46400: ldc_w '_temp>'
    //   46403: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46406: ldc_w '<label class=mustFillcolor>*</label>'
    //   46409: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46412: invokevirtual toString : ()Ljava/lang/String;
    //   46415: goto_w -> 46422
    //   46420: ldc ''
    //   46422: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46425: invokevirtual toString : ()Ljava/lang/String;
    //   46428: astore #10
    //   46430: new java/lang/StringBuilder
    //   46433: dup
    //   46434: ldc_w 'if(document.getElementById(''
    //   46437: invokespecial <init> : (Ljava/lang/String;)V
    //   46440: aload #13
    //   46442: iconst_0
    //   46443: aaload
    //   46444: iconst_0
    //   46445: aaload
    //   46446: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46449: ldc_w '-'
    //   46452: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46455: aload_1
    //   46456: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46459: ldc_w ''))\\n{document.getElementById(''
    //   46462: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46465: aload #13
    //   46467: iconst_0
    //   46468: aaload
    //   46469: iconst_0
    //   46470: aaload
    //   46471: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46474: ldc_w '-'
    //   46477: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46480: aload_1
    //   46481: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46484: ldc_w '').innerHTML=''
    //   46487: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46490: aload #14
    //   46492: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46495: ldc_w '';document.getElementById(''
    //   46498: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46501: aload #13
    //   46503: iconst_0
    //   46504: aaload
    //   46505: iconst_0
    //   46506: aaload
    //   46507: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46510: ldc_w '-'
    //   46513: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46516: aload_1
    //   46517: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46520: ldc_w '').innerHTML+=''
    //   46523: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46526: aload #10
    //   46528: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46531: ldc_w '';}'
    //   46534: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46537: invokevirtual toString : ()Ljava/lang/String;
    //   46540: astore #10
    //   46542: goto_w -> 46733
    //   46547: aload #9
    //   46549: ifnonnull -> 46557
    //   46552: goto_w -> 46633
    //   46557: aload #9
    //   46559: ldc_w 'table'
    //   46562: invokeinterface getParameter : (Ljava/lang/String;)Ljava/lang/String;
    //   46567: ifnonnull -> 46575
    //   46570: goto_w -> 46633
    //   46575: ldc_w 'null'
    //   46578: aload #9
    //   46580: ldc_w 'table'
    //   46583: invokeinterface getParameter : (Ljava/lang/String;)Ljava/lang/String;
    //   46588: invokevirtual equals : (Ljava/lang/Object;)Z
    //   46591: ifeq -> 46599
    //   46594: goto_w -> 46633
    //   46599: ldc ''
    //   46601: aload #9
    //   46603: ldc_w 'table'
    //   46606: invokeinterface getParameter : (Ljava/lang/String;)Ljava/lang/String;
    //   46611: invokevirtual equals : (Ljava/lang/Object;)Z
    //   46614: ifeq -> 46622
    //   46617: goto_w -> 46633
    //   46622: aload #9
    //   46624: ldc_w 'table'
    //   46627: invokeinterface getParameter : (Ljava/lang/String;)Ljava/lang/String;
    //   46632: astore_3
    //   46633: aload_0
    //   46634: aload_3
    //   46635: aload_2
    //   46636: aload_1
    //   46637: aload #13
    //   46639: iconst_0
    //   46640: aaload
    //   46641: iconst_0
    //   46642: aaload
    //   46643: aload #13
    //   46645: iconst_0
    //   46646: aaload
    //   46647: iconst_3
    //   46648: aaload
    //   46649: aload #4
    //   46651: aload #16
    //   46653: invokespecial getRelationEditHTML : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/js/oa/userdb/util/DbOpt;)Ljava/lang/String;
    //   46656: astore #10
    //   46658: goto_w -> 46733
    //   46663: new java/lang/StringBuilder
    //   46666: dup
    //   46667: ldc_w 'if(document.getElementById(''
    //   46670: invokespecial <init> : (Ljava/lang/String;)V
    //   46673: aload #13
    //   46675: iconst_0
    //   46676: aaload
    //   46677: iconst_0
    //   46678: aaload
    //   46679: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46682: ldc_w '-'
    //   46685: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46688: aload_1
    //   46689: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46692: ldc_w ''))\\n{document.getElementById(''
    //   46695: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46698: aload #13
    //   46700: iconst_0
    //   46701: aaload
    //   46702: iconst_0
    //   46703: aaload
    //   46704: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46707: ldc_w '-'
    //   46710: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46713: aload_1
    //   46714: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46717: ldc_w '').innerHTML='';}'
    //   46720: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   46723: invokevirtual toString : ()Ljava/lang/String;
    //   46726: astore #10
    //   46728: goto_w -> 46733
    //   46733: aload #16
    //   46735: invokevirtual close : ()V
    //   46738: goto_w -> 46773
    //   46743: astore #18
    //   46745: aload #16
    //   46747: invokevirtual close : ()V
    //   46750: goto_w -> 46762
    //   46755: astore #19
    //   46757: goto_w -> 46762
    //   46762: aload #18
    //   46764: invokevirtual printStackTrace : ()V
    //   46767: goto_w -> 46773
    //   46772: pop
    //   46773: aload #10
    //   46775: areturn
    // Line number table:
    //   Java source line number -> byte code offset
    //   #4787	-> 0
    //   #4788	-> 4
    //   #4789	-> 8
    //   #4790	-> 34
    //   #4791	-> 40
    //   #4792	-> 46
    //   #4793	-> 50
    //   #4794	-> 59
    //   #4795	-> 62
    //   #4798	-> 65
    //   #4800	-> 74
    //   #4801	-> 86
    //   #4800	-> 107
    //   #4802	-> 112
    //   #4803	-> 133
    //   #4804	-> 167
    //   #4809	-> 177
    //   #4810	-> 197
    //   #4812	-> 204
    //   #4813	-> 220
    //   #4814	-> 235
    //   #4815	-> 256
    //   #4816	-> 263
    //   #4818	-> 270
    //   #4819	-> 283
    //   #4821	-> 301
    //   #4823	-> 310
    //   #4825	-> 349
    //   #4826	-> 377
    //   #4828	-> 403
    //   #4829	-> 408
    //   #4830	-> 415
    //   #4832	-> 435
    //   #4833	-> 451
    //   #4834	-> 467
    //   #4835	-> 490
    //   #4836	-> 498
    //   #4835	-> 521
    //   #4839	-> 541
    //   #4840	-> 559
    //   #4841	-> 568
    //   #4840	-> 591
    //   #4848	-> 611
    //   #4849	-> 627
    //   #4850	-> 632
    //   #4849	-> 647
    //   #4852	-> 663
    //   #4853	-> 679
    //   #4859	-> 699
    //   #4860	-> 701
    //   #4807	-> 706
    //   #4864	-> 711
    //   #4865	-> 715
    //   #4866	-> 735
    //   #4870	-> 747
    //   #4871	-> 786
    //   #4873	-> 821
    //   #4874	-> 840
    //   #4876	-> 888
    //   #4878	-> 931
    //   #4879	-> 934
    //   #4880	-> 954
    //   #4882	-> 963
    //   #4885	-> 972
    //   #4888	-> 1007
    //   #4889	-> 1036
    //   #4893	-> 1068
    //   #4895	-> 1088
    //   #4897	-> 1147
    //   #4899	-> 1190
    //   #4901	-> 1568
    //   #4902	-> 1660
    //   #4903	-> 1699
    //   #4904	-> 1745
    //   #4905	-> 1799
    //   #4904	-> 1852
    //   #4907	-> 1862
    //   #4908	-> 1914
    //   #4909	-> 1939
    //   #4911	-> 1976
    //   #4912	-> 2013
    //   #4913	-> 2038
    //   #4914	-> 2055
    //   #4915	-> 2091
    //   #4911	-> 2126
    //   #4917	-> 2131
    //   #4920	-> 2136
    //   #4921	-> 2149
    //   #4922	-> 2159
    //   #4923	-> 2241
    //   #4924	-> 2257
    //   #4925	-> 2307
    //   #4926	-> 2338
    //   #4924	-> 2389
    //   #4928	-> 2399
    //   #4929	-> 2437
    //   #4932	-> 2488
    //   #4933	-> 2492
    //   #4934	-> 2513
    //   #4936	-> 2518
    //   #4937	-> 2532
    //   #4940	-> 2555
    //   #4941	-> 2605
    //   #4942	-> 2636
    //   #4943	-> 2702
    //   #4944	-> 2804
    //   #4945	-> 2814
    //   #4944	-> 2824
    //   #4945	-> 2832
    //   #4943	-> 2834
    //   #4940	-> 2837
    //   #4947	-> 2842
    //   #4948	-> 2871
    //   #4949	-> 2907
    //   #4947	-> 2949
    //   #4950	-> 2954
    //   #4953	-> 2959
    //   #4954	-> 3051
    //   #4955	-> 3090
    //   #4956	-> 3144
    //   #4955	-> 3171
    //   #4958	-> 3176
    //   #4960	-> 3185
    //   #4961	-> 3239
    //   #4962	-> 3266
    //   #4963	-> 3317
    //   #4964	-> 3419
    //   #4965	-> 3433
    //   #4964	-> 3439
    //   #4965	-> 3447
    //   #4963	-> 3449
    //   #4960	-> 3452
    //   #4967	-> 3457
    //   #4968	-> 3492
    //   #4969	-> 3528
    //   #4967	-> 3564
    //   #4970	-> 3569
    //   #4972	-> 3574
    //   #4973	-> 3648
    //   #4975	-> 3652
    //   #4976	-> 3661
    //   #4977	-> 3688
    //   #4979	-> 3693
    //   #4980	-> 3709
    //   #4981	-> 3733
    //   #4982	-> 3752
    //   #4983	-> 3768
    //   #4984	-> 3783
    //   #4985	-> 3792
    //   #4986	-> 3801
    //   #4987	-> 3822
    //   #4988	-> 3843
    //   #4989	-> 3867
    //   #4990	-> 3891
    //   #4991	-> 3915
    //   #4992	-> 3939
    //   #4993	-> 3963
    //   #4994	-> 3987
    //   #4996	-> 4003
    //   #4999	-> 4012
    //   #5000	-> 4022
    //   #5001	-> 4032
    //   #5002	-> 4073
    //   #5003	-> 4114
    //   #5005	-> 4118
    //   #5007	-> 4134
    //   #5008	-> 4158
    //   #5011	-> 4164
    //   #5012	-> 4198
    //   #5011	-> 4246
    //   #5013	-> 4256
    //   #5010	-> 4258
    //   #5017	-> 4263
    //   #5018	-> 4273
    //   #5019	-> 4308
    //   #5018	-> 4344
    //   #5020	-> 4349
    //   #5021	-> 4357
    //   #5022	-> 4393
    //   #5021	-> 4462
    //   #5023	-> 4467
    //   #5024	-> 4529
    //   #5025	-> 4553
    //   #5023	-> 4594
    //   #5020	-> 4599
    //   #5028	-> 4620
    //   #5030	-> 4636
    //   #5031	-> 4641
    //   #5032	-> 4657
    //   #5033	-> 4673
    //   #5035	-> 4702
    //   #5037	-> 4717
    //   #5038	-> 4726
    //   #5040	-> 4732
    //   #5042	-> 4735
    //   #5043	-> 4751
    //   #5044	-> 4762
    //   #5045	-> 4769
    //   #5046	-> 4784
    //   #5047	-> 4791
    //   #5048	-> 4806
    //   #5051	-> 4836
    //   #5052	-> 4845
    //   #5054	-> 4855
    //   #5055	-> 4884
    //   #5059	-> 4898
    //   #5060	-> 4900
    //   #5061	-> 4910
    //   #5063	-> 4915
    //   #5041	-> 4920
    //   #5066	-> 4925
    //   #5067	-> 4935
    //   #5068	-> 4970
    //   #5067	-> 5006
    //   #5069	-> 5011
    //   #5070	-> 5019
    //   #5071	-> 5055
    //   #5070	-> 5124
    //   #5072	-> 5129
    //   #5073	-> 5191
    //   #5074	-> 5215
    //   #5072	-> 5256
    //   #5069	-> 5261
    //   #5078	-> 5282
    //   #5079	-> 5290
    //   #5080	-> 5303
    //   #5081	-> 5322
    //   #5082	-> 5341
    //   #5083	-> 5352
    //   #5084	-> 5370
    //   #5085	-> 5406
    //   #5084	-> 5487
    //   #5086	-> 5492
    //   #5087	-> 5572
    //   #5088	-> 5619
    //   #5086	-> 5625
    //   #5078	-> 5630
    //   #5091	-> 5646
    //   #5094	-> 5732
    //   #5096	-> 5748
    //   #5097	-> 5772
    //   #5100	-> 5778
    //   #5101	-> 5824
    //   #5100	-> 5829
    //   #5101	-> 5835
    //   #5100	-> 5860
    //   #5102	-> 5870
    //   #5103	-> 5872
    //   #5099	-> 5877
    //   #5106	-> 5882
    //   #5107	-> 5892
    //   #5108	-> 5927
    //   #5107	-> 5963
    //   #5109	-> 5968
    //   #5110	-> 5976
    //   #5111	-> 6086
    //   #5112	-> 6129
    //   #5113	-> 6172
    //   #5114	-> 6242
    //   #5115	-> 6324
    //   #5111	-> 6363
    //   #5109	-> 6368
    //   #5118	-> 6389
    //   #5120	-> 6405
    //   #5121	-> 6410
    //   #5122	-> 6426
    //   #5123	-> 6442
    //   #5125	-> 6471
    //   #5127	-> 6486
    //   #5128	-> 6495
    //   #5130	-> 6501
    //   #5132	-> 6504
    //   #5133	-> 6520
    //   #5134	-> 6531
    //   #5135	-> 6538
    //   #5136	-> 6553
    //   #5137	-> 6560
    //   #5138	-> 6575
    //   #5141	-> 6605
    //   #5142	-> 6614
    //   #5144	-> 6624
    //   #5145	-> 6653
    //   #5149	-> 6667
    //   #5150	-> 6669
    //   #5151	-> 6679
    //   #5153	-> 6684
    //   #5131	-> 6689
    //   #5156	-> 6694
    //   #5157	-> 6704
    //   #5158	-> 6739
    //   #5157	-> 6775
    //   #5159	-> 6780
    //   #5160	-> 6788
    //   #5161	-> 6898
    //   #5162	-> 6941
    //   #5163	-> 6984
    //   #5164	-> 7054
    //   #5165	-> 7136
    //   #5161	-> 7175
    //   #5159	-> 7180
    //   #5169	-> 7201
    //   #5170	-> 7209
    //   #5171	-> 7222
    //   #5172	-> 7241
    //   #5173	-> 7260
    //   #5174	-> 7271
    //   #5175	-> 7289
    //   #5176	-> 7345
    //   #5175	-> 7406
    //   #5177	-> 7411
    //   #5178	-> 7429
    //   #5179	-> 7438
    //   #5180	-> 7448
    //   #5181	-> 7454
    //   #5182	-> 7473
    //   #5183	-> 7479
    //   #5184	-> 7491
    //   #5185	-> 7497
    //   #5186	-> 7516
    //   #5187	-> 7522
    //   #5188	-> 7538
    //   #5189	-> 7558
    //   #5190	-> 7655
    //   #5191	-> 7665
    //   #5192	-> 7669
    //   #5190	-> 7675
    //   #5193	-> 7683
    //   #5188	-> 7685
    //   #5193	-> 7688
    //   #5177	-> 7694
    //   #5169	-> 7699
    //   #5196	-> 7715
    //   #5197	-> 7725
    //   #5198	-> 7744
    //   #5199	-> 7750
    //   #5200	-> 7769
    //   #5196	-> 7791
    //   #5202	-> 7796
    //   #5204	-> 7801
    //   #5205	-> 7875
    //   #5206	-> 7910
    //   #5208	-> 7914
    //   #5209	-> 7923
    //   #5210	-> 7950
    //   #5212	-> 7955
    //   #5213	-> 7971
    //   #5214	-> 7995
    //   #5215	-> 8014
    //   #5216	-> 8030
    //   #5217	-> 8045
    //   #5218	-> 8054
    //   #5219	-> 8063
    //   #5220	-> 8084
    //   #5221	-> 8105
    //   #5222	-> 8129
    //   #5223	-> 8153
    //   #5224	-> 8177
    //   #5225	-> 8201
    //   #5226	-> 8225
    //   #5227	-> 8249
    //   #5229	-> 8265
    //   #5232	-> 8274
    //   #5233	-> 8284
    //   #5234	-> 8294
    //   #5236	-> 8376
    //   #5238	-> 8392
    //   #5239	-> 8402
    //   #5238	-> 8411
    //   #5240	-> 8416
    //   #5243	-> 8422
    //   #5244	-> 8424
    //   #5245	-> 8433
    //   #5246	-> 8436
    //   #5245	-> 8444
    //   #5246	-> 8450
    //   #5247	-> 8456
    //   #5248	-> 8466
    //   #5247	-> 8473
    //   #5248	-> 8479
    //   #5249	-> 8484
    //   #5250	-> 8487
    //   #5249	-> 8495
    //   #5244	-> 8501
    //   #5243	-> 8504
    //   #5251	-> 8514
    //   #5242	-> 8516
    //   #5253	-> 8521
    //   #5254	-> 8531
    //   #5255	-> 8566
    //   #5254	-> 8602
    //   #5256	-> 8607
    //   #5257	-> 8615
    //   #5258	-> 8643
    //   #5259	-> 8673
    //   #5257	-> 8731
    //   #5260	-> 8736
    //   #5261	-> 8773
    //   #5262	-> 8798
    //   #5263	-> 8814
    //   #5260	-> 8855
    //   #5256	-> 8860
    //   #5266	-> 8881
    //   #5268	-> 8897
    //   #5269	-> 8902
    //   #5270	-> 8918
    //   #5271	-> 8934
    //   #5273	-> 8963
    //   #5275	-> 8978
    //   #5276	-> 8987
    //   #5278	-> 8993
    //   #5280	-> 8996
    //   #5281	-> 9012
    //   #5282	-> 9023
    //   #5283	-> 9030
    //   #5284	-> 9045
    //   #5285	-> 9052
    //   #5286	-> 9067
    //   #5289	-> 9097
    //   #5290	-> 9106
    //   #5292	-> 9116
    //   #5293	-> 9145
    //   #5297	-> 9159
    //   #5298	-> 9161
    //   #5299	-> 9171
    //   #5301	-> 9176
    //   #5279	-> 9181
    //   #5304	-> 9186
    //   #5305	-> 9196
    //   #5306	-> 9231
    //   #5305	-> 9267
    //   #5307	-> 9272
    //   #5308	-> 9280
    //   #5309	-> 9308
    //   #5310	-> 9338
    //   #5308	-> 9396
    //   #5311	-> 9401
    //   #5312	-> 9438
    //   #5313	-> 9463
    //   #5314	-> 9479
    //   #5311	-> 9520
    //   #5307	-> 9525
    //   #5318	-> 9546
    //   #5319	-> 9554
    //   #5320	-> 9567
    //   #5321	-> 9586
    //   #5322	-> 9605
    //   #5323	-> 9616
    //   #5324	-> 9634
    //   #5325	-> 9662
    //   #5326	-> 9731
    //   #5325	-> 9751
    //   #5326	-> 9762
    //   #5324	-> 9781
    //   #5327	-> 9786
    //   #5328	-> 9813
    //   #5329	-> 9829
    //   #5330	-> 9858
    //   #5331	-> 9883
    //   #5327	-> 9911
    //   #5318	-> 9916
    //   #5335	-> 9932
    //   #5336	-> 9967
    //   #5335	-> 10008
    //   #5339	-> 10018
    //   #5341	-> 10034
    //   #5342	-> 10044
    //   #5341	-> 10053
    //   #5343	-> 10058
    //   #5346	-> 10064
    //   #5347	-> 10075
    //   #5348	-> 10098
    //   #5349	-> 10110
    //   #5348	-> 10115
    //   #5349	-> 10121
    //   #5350	-> 10126
    //   #5346	-> 10146
    //   #5351	-> 10156
    //   #5345	-> 10158
    //   #5353	-> 10163
    //   #5354	-> 10173
    //   #5355	-> 10208
    //   #5354	-> 10244
    //   #5356	-> 10249
    //   #5357	-> 10257
    //   #5358	-> 10285
    //   #5359	-> 10315
    //   #5357	-> 10373
    //   #5360	-> 10378
    //   #5361	-> 10415
    //   #5362	-> 10440
    //   #5363	-> 10456
    //   #5364	-> 10491
    //   #5365	-> 10567
    //   #5366	-> 10608
    //   #5367	-> 10618
    //   #5366	-> 10628
    //   #5367	-> 10636
    //   #5364	-> 10638
    //   #5367	-> 10641
    //   #5360	-> 10647
    //   #5356	-> 10652
    //   #5370	-> 10673
    //   #5372	-> 10689
    //   #5373	-> 10694
    //   #5374	-> 10710
    //   #5375	-> 10726
    //   #5377	-> 10755
    //   #5379	-> 10770
    //   #5380	-> 10779
    //   #5382	-> 10785
    //   #5384	-> 10788
    //   #5385	-> 10804
    //   #5386	-> 10815
    //   #5387	-> 10822
    //   #5388	-> 10837
    //   #5389	-> 10844
    //   #5390	-> 10859
    //   #5393	-> 10889
    //   #5394	-> 10898
    //   #5396	-> 10908
    //   #5397	-> 10937
    //   #5401	-> 10951
    //   #5402	-> 10953
    //   #5403	-> 10963
    //   #5405	-> 10968
    //   #5383	-> 10973
    //   #5408	-> 10978
    //   #5409	-> 10988
    //   #5410	-> 11023
    //   #5409	-> 11059
    //   #5411	-> 11064
    //   #5412	-> 11072
    //   #5413	-> 11100
    //   #5414	-> 11130
    //   #5412	-> 11188
    //   #5415	-> 11193
    //   #5416	-> 11230
    //   #5417	-> 11255
    //   #5418	-> 11271
    //   #5419	-> 11306
    //   #5420	-> 11382
    //   #5421	-> 11423
    //   #5422	-> 11433
    //   #5421	-> 11443
    //   #5422	-> 11451
    //   #5419	-> 11453
    //   #5422	-> 11456
    //   #5415	-> 11462
    //   #5411	-> 11467
    //   #5426	-> 11488
    //   #5427	-> 11496
    //   #5428	-> 11509
    //   #5429	-> 11528
    //   #5430	-> 11547
    //   #5431	-> 11558
    //   #5432	-> 11576
    //   #5433	-> 11602
    //   #5434	-> 11630
    //   #5435	-> 11666
    //   #5433	-> 11749
    //   #5437	-> 11759
    //   #5438	-> 11787
    //   #5439	-> 11823
    //   #5437	-> 11906
    //   #5442	-> 11911
    //   #5443	-> 11948
    //   #5444	-> 11979
    //   #5445	-> 12008
    //   #5446	-> 12030
    //   #5447	-> 12106
    //   #5448	-> 12147
    //   #5449	-> 12157
    //   #5448	-> 12167
    //   #5449	-> 12175
    //   #5446	-> 12177
    //   #5449	-> 12180
    //   #5442	-> 12186
    //   #5426	-> 12191
    //   #5453	-> 12207
    //   #5454	-> 12242
    //   #5453	-> 12289
    //   #5456	-> 12294
    //   #5458	-> 12299
    //   #5459	-> 12373
    //   #5460	-> 12394
    //   #5462	-> 12404
    //   #5465	-> 12408
    //   #5466	-> 12485
    //   #5467	-> 12503
    //   #5469	-> 12536
    //   #5470	-> 12550
    //   #5472	-> 12573
    //   #5475	-> 12596
    //   #5476	-> 12625
    //   #5477	-> 12635
    //   #5478	-> 12645
    //   #5479	-> 12686
    //   #5481	-> 12727
    //   #5482	-> 12731
    //   #5483	-> 12739
    //   #5484	-> 12759
    //   #5485	-> 12789
    //   #5484	-> 12805
    //   #5486	-> 12810
    //   #5482	-> 12837
    //   #5489	-> 12853
    //   #5490	-> 12863
    //   #5491	-> 12888
    //   #5489	-> 12929
    //   #5494	-> 12939
    //   #5495	-> 12947
    //   #5496	-> 12981
    //   #5495	-> 13036
    //   #5494	-> 13041
    //   #5498	-> 13057
    //   #5499	-> 13080
    //   #5500	-> 13101
    //   #5503	-> 13123
    //   #5504	-> 13225
    //   #5505	-> 13243
    //   #5504	-> 13253
    //   #5506	-> 13258
    //   #5507	-> 13279
    //   #5508	-> 13292
    //   #5510	-> 13320
    //   #5513	-> 13348
    //   #5515	-> 13371
    //   #5517	-> 13394
    //   #5518	-> 13415
    //   #5521	-> 13437
    //   #5522	-> 13466
    //   #5523	-> 13508
    //   #5521	-> 13550
    //   #5527	-> 13555
    //   #5531	-> 13560
    //   #5532	-> 13569
    //   #5533	-> 13596
    //   #5535	-> 13601
    //   #5536	-> 13617
    //   #5538	-> 13664
    //   #5539	-> 13680
    //   #5540	-> 13704
    //   #5541	-> 13723
    //   #5542	-> 13739
    //   #5543	-> 13754
    //   #5544	-> 13763
    //   #5545	-> 13772
    //   #5546	-> 13793
    //   #5547	-> 13814
    //   #5548	-> 13838
    //   #5549	-> 13862
    //   #5550	-> 13886
    //   #5551	-> 13910
    //   #5552	-> 13934
    //   #5553	-> 13958
    //   #5554	-> 13970
    //   #5555	-> 13996
    //   #5557	-> 14011
    //   #5558	-> 14024
    //   #5560	-> 14040
    //   #5564	-> 14049
    //   #5565	-> 14059
    //   #5566	-> 14069
    //   #5567	-> 14110
    //   #5569	-> 14151
    //   #5571	-> 14155
    //   #5573	-> 14171
    //   #5574	-> 14181
    //   #5573	-> 14190
    //   #5575	-> 14195
    //   #5578	-> 14201
    //   #5579	-> 14223
    //   #5580	-> 14257
    //   #5579	-> 14298
    //   #5581	-> 14308
    //   #5577	-> 14310
    //   #5583	-> 14315
    //   #5584	-> 14325
    //   #5585	-> 14333
    //   #5586	-> 14353
    //   #5587	-> 14404
    //   #5584	-> 14431
    //   #5591	-> 14452
    //   #5593	-> 14468
    //   #5594	-> 14473
    //   #5595	-> 14489
    //   #5596	-> 14505
    //   #5598	-> 14534
    //   #5601	-> 14549
    //   #5602	-> 14561
    //   #5603	-> 14587
    //   #5605	-> 14607
    //   #5607	-> 14619
    //   #5609	-> 14628
    //   #5611	-> 14634
    //   #5613	-> 14637
    //   #5614	-> 14653
    //   #5615	-> 14664
    //   #5616	-> 14671
    //   #5617	-> 14686
    //   #5618	-> 14693
    //   #5619	-> 14708
    //   #5622	-> 14738
    //   #5623	-> 14747
    //   #5625	-> 14757
    //   #5626	-> 14786
    //   #5630	-> 14800
    //   #5631	-> 14802
    //   #5632	-> 14812
    //   #5634	-> 14817
    //   #5612	-> 14822
    //   #5637	-> 14827
    //   #5638	-> 14837
    //   #5639	-> 14845
    //   #5640	-> 14865
    //   #5641	-> 14895
    //   #5640	-> 14911
    //   #5642	-> 14916
    //   #5638	-> 14943
    //   #5647	-> 14964
    //   #5648	-> 14972
    //   #5649	-> 14985
    //   #5650	-> 15004
    //   #5651	-> 15023
    //   #5652	-> 15034
    //   #5653	-> 15052
    //   #5654	-> 15065
    //   #5653	-> 15067
    //   #5655	-> 15078
    //   #5656	-> 15093
    //   #5657	-> 15131
    //   #5656	-> 15153
    //   #5658	-> 15158
    //   #5647	-> 15163
    //   #5663	-> 15179
    //   #5664	-> 15189
    //   #5665	-> 15208
    //   #5666	-> 15214
    //   #5667	-> 15233
    //   #5663	-> 15255
    //   #5670	-> 15265
    //   #5672	-> 15281
    //   #5673	-> 15291
    //   #5672	-> 15300
    //   #5674	-> 15305
    //   #5677	-> 15311
    //   #5678	-> 15333
    //   #5679	-> 15344
    //   #5680	-> 15361
    //   #5681	-> 15377
    //   #5678	-> 15408
    //   #5682	-> 15418
    //   #5676	-> 15420
    //   #5684	-> 15425
    //   #5685	-> 15435
    //   #5686	-> 15443
    //   #5687	-> 15477
    //   #5688	-> 15497
    //   #5687	-> 15507
    //   #5688	-> 15510
    //   #5689	-> 15516
    //   #5690	-> 15526
    //   #5686	-> 15532
    //   #5685	-> 15537
    //   #5693	-> 15553
    //   #5694	-> 15576
    //   #5695	-> 15597
    //   #5697	-> 15619
    //   #5698	-> 15721
    //   #5699	-> 15739
    //   #5700	-> 15743
    //   #5698	-> 15749
    //   #5701	-> 15754
    //   #5702	-> 15775
    //   #5703	-> 15788
    //   #5705	-> 15816
    //   #5708	-> 15844
    //   #5711	-> 15867
    //   #5713	-> 15890
    //   #5714	-> 15911
    //   #5717	-> 15933
    //   #5718	-> 15943
    //   #5719	-> 15958
    //   #5720	-> 15962
    //   #5721	-> 15968
    //   #5722	-> 15987
    //   #5723	-> 15998
    //   #5724	-> 16004
    //   #5725	-> 16019
    //   #5726	-> 16034
    //   #5717	-> 16040
    //   #5728	-> 16050
    //   #5730	-> 16066
    //   #5731	-> 16071
    //   #5732	-> 16087
    //   #5733	-> 16103
    //   #5735	-> 16132
    //   #5737	-> 16147
    //   #5738	-> 16159
    //   #5739	-> 16185
    //   #5742	-> 16205
    //   #5744	-> 16217
    //   #5745	-> 16226
    //   #5747	-> 16232
    //   #5749	-> 16235
    //   #5750	-> 16251
    //   #5751	-> 16262
    //   #5752	-> 16269
    //   #5753	-> 16284
    //   #5754	-> 16291
    //   #5755	-> 16306
    //   #5758	-> 16336
    //   #5759	-> 16345
    //   #5761	-> 16355
    //   #5762	-> 16384
    //   #5766	-> 16398
    //   #5767	-> 16400
    //   #5768	-> 16410
    //   #5770	-> 16415
    //   #5748	-> 16420
    //   #5773	-> 16425
    //   #5774	-> 16435
    //   #5775	-> 16443
    //   #5776	-> 16477
    //   #5777	-> 16497
    //   #5776	-> 16507
    //   #5777	-> 16510
    //   #5778	-> 16516
    //   #5779	-> 16526
    //   #5775	-> 16532
    //   #5774	-> 16537
    //   #5782	-> 16553
    //   #5783	-> 16576
    //   #5784	-> 16597
    //   #5786	-> 16619
    //   #5787	-> 16721
    //   #5788	-> 16739
    //   #5789	-> 16743
    //   #5787	-> 16749
    //   #5790	-> 16754
    //   #5791	-> 16775
    //   #5792	-> 16788
    //   #5794	-> 16816
    //   #5797	-> 16844
    //   #5799	-> 16867
    //   #5801	-> 16890
    //   #5802	-> 16911
    //   #5805	-> 16933
    //   #5806	-> 16943
    //   #5807	-> 16958
    //   #5808	-> 16962
    //   #5809	-> 16968
    //   #5810	-> 16987
    //   #5811	-> 16998
    //   #5812	-> 17004
    //   #5813	-> 17019
    //   #5814	-> 17034
    //   #5805	-> 17040
    //   #5817	-> 17050
    //   #5818	-> 17058
    //   #5819	-> 17071
    //   #5820	-> 17090
    //   #5821	-> 17109
    //   #5822	-> 17120
    //   #5823	-> 17138
    //   #5824	-> 17156
    //   #5826	-> 17178
    //   #5827	-> 17191
    //   #5826	-> 17193
    //   #5828	-> 17204
    //   #5825	-> 17214
    //   #5828	-> 17217
    //   #5829	-> 17223
    //   #5830	-> 17239
    //   #5823	-> 17245
    //   #5817	-> 17250
    //   #5833	-> 17266
    //   #5834	-> 17289
    //   #5835	-> 17310
    //   #5837	-> 17332
    //   #5838	-> 17434
    //   #5839	-> 17452
    //   #5840	-> 17456
    //   #5838	-> 17462
    //   #5841	-> 17467
    //   #5842	-> 17488
    //   #5843	-> 17501
    //   #5845	-> 17529
    //   #5848	-> 17557
    //   #5850	-> 17580
    //   #5852	-> 17603
    //   #5853	-> 17624
    //   #5855	-> 17646
    //   #5856	-> 17656
    //   #5857	-> 17675
    //   #5858	-> 17681
    //   #5859	-> 17700
    //   #5860	-> 17711
    //   #5861	-> 17717
    //   #5862	-> 17736
    //   #5855	-> 17753
    //   #5867	-> 17758
    //   #5869	-> 17763
    //   #5871	-> 17798
    //   #5872	-> 17808
    //   #5873	-> 17849
    //   #5877	-> 17890
    //   #5878	-> 17924
    //   #5880	-> 17978
    //   #5881	-> 17988
    //   #5882	-> 18007
    //   #5883	-> 18013
    //   #5884	-> 18032
    //   #5880	-> 18054
    //   #5886	-> 18064
    //   #5887	-> 18076
    //   #5888	-> 18082
    //   #5889	-> 18096
    //   #5890	-> 18102
    //   #5891	-> 18113
    //   #5892	-> 18215
    //   #5893	-> 18225
    //   #5894	-> 18229
    //   #5892	-> 18235
    //   #5895	-> 18243
    //   #5891	-> 18245
    //   #5886	-> 18248
    //   #5896	-> 18253
    //   #5897	-> 18271
    //   #5898	-> 18290
    //   #5899	-> 18296
    //   #5900	-> 18315
    //   #5896	-> 18332
    //   #5902	-> 18337
    //   #5903	-> 18389
    //   #5904	-> 18409
    //   #5906	-> 18447
    //   #5908	-> 18452
    //   #5909	-> 18487
    //   #5910	-> 18504
    //   #5911	-> 18529
    //   #5916	-> 18533
    //   #5917	-> 18543
    //   #5918	-> 18584
    //   #5927	-> 18625
    //   #5929	-> 18682
    //   #5930	-> 18692
    //   #5931	-> 18711
    //   #5932	-> 18717
    //   #5933	-> 18736
    //   #5929	-> 18758
    //   #5935	-> 18768
    //   #5936	-> 18778
    //   #5937	-> 18792
    //   #5938	-> 18798
    //   #5939	-> 18817
    //   #5940	-> 18836
    //   #5941	-> 18857
    //   #5942	-> 18868
    //   #5943	-> 18874
    //   #5944	-> 18884
    //   #5945	-> 18894
    //   #5946	-> 18905
    //   #5947	-> 19007
    //   #5948	-> 19017
    //   #5949	-> 19021
    //   #5947	-> 19027
    //   #5950	-> 19035
    //   #5946	-> 19037
    //   #5935	-> 19040
    //   #5952	-> 19045
    //   #5953	-> 19055
    //   #5954	-> 19074
    //   #5955	-> 19080
    //   #5956	-> 19099
    //   #5957	-> 19110
    //   #5958	-> 19116
    //   #5959	-> 19135
    //   #5952	-> 19152
    //   #5961	-> 19157
    //   #5963	-> 19162
    //   #5964	-> 19166
    //   #5965	-> 19201
    //   #5966	-> 19211
    //   #5967	-> 19252
    //   #5969	-> 19293
    //   #5971	-> 19309
    //   #5972	-> 19366
    //   #5974	-> 19392
    //   #5979	-> 19407
    //   #5981	-> 19416
    //   #5982	-> 19432
    //   #5983	-> 19448
    //   #5984	-> 19453
    //   #5985	-> 19458
    //   #5986	-> 19468
    //   #5987	-> 19484
    //   #5988	-> 19500
    //   #5989	-> 19517
    //   #5990	-> 19533
    //   #5991	-> 19562
    //   #5992	-> 19587
    //   #5994	-> 19609
    //   #5995	-> 19626
    //   #5999	-> 19636
    //   #6000	-> 19640
    //   #6001	-> 19645
    //   #6002	-> 19650
    //   #6005	-> 19655
    //   #6010	-> 19728
    //   #6011	-> 19743
    //   #6012	-> 19756
    //   #6010	-> 19780
    //   #6013	-> 19782
    //   #6014	-> 19797
    //   #6015	-> 19810
    //   #6013	-> 19834
    //   #6016	-> 19836
    //   #6017	-> 19851
    //   #6018	-> 19864
    //   #6016	-> 19888
    //   #6019	-> 19890
    //   #6020	-> 19912
    //   #6021	-> 19933
    //   #6022	-> 19958
    //   #6023	-> 19983
    //   #6024	-> 19998
    //   #6023	-> 20035
    //   #6019	-> 20038
    //   #6025	-> 20043
    //   #6031	-> 20111
    //   #6032	-> 20145
    //   #6033	-> 20199
    //   #6034	-> 20253
    //   #6035	-> 20307
    //   #6037	-> 20361
    //   #6038	-> 20371
    //   #6039	-> 20390
    //   #6040	-> 20396
    //   #6041	-> 20415
    //   #6037	-> 20432
    //   #6044	-> 20442
    //   #6045	-> 20461
    //   #6046	-> 20477
    //   #6047	-> 20492
    //   #6048	-> 20505
    //   #6046	-> 20529
    //   #6049	-> 20531
    //   #6050	-> 20546
    //   #6051	-> 20559
    //   #6049	-> 20583
    //   #6052	-> 20585
    //   #6053	-> 20600
    //   #6054	-> 20613
    //   #6052	-> 20637
    //   #6055	-> 20639
    //   #6056	-> 20661
    //   #6057	-> 20682
    //   #6058	-> 20707
    //   #6059	-> 20732
    //   #6060	-> 20747
    //   #6059	-> 20784
    //   #6055	-> 20787
    //   #6061	-> 20792
    //   #6062	-> 20860
    //   #6064	-> 20864
    //   #6065	-> 20876
    //   #6066	-> 20882
    //   #6067	-> 20896
    //   #6069	-> 20902
    //   #6070	-> 20912
    //   #6071	-> 20930
    //   #6072	-> 20953
    //   #6069	-> 20963
    //   #6072	-> 20966
    //   #6073	-> 20972
    //   #6074	-> 21074
    //   #6075	-> 21084
    //   #6076	-> 21088
    //   #6074	-> 21094
    //   #6077	-> 21102
    //   #6073	-> 21104
    //   #6064	-> 21107
    //   #6078	-> 21112
    //   #6079	-> 21115
    //   #6080	-> 21118
    //   #6081	-> 21121
    //   #6082	-> 21124
    //   #6083	-> 21134
    //   #6084	-> 21152
    //   #6085	-> 21168
    //   #6086	-> 21184
    //   #6087	-> 21187
    //   #6088	-> 21190
    //   #6089	-> 21198
    //   #6090	-> 21214
    //   #6091	-> 21219
    //   #6090	-> 21226
    //   #6091	-> 21227
    //   #6090	-> 21234
    //   #6092	-> 21240
    //   #6093	-> 21245
    //   #6092	-> 21252
    //   #6093	-> 21253
    //   #6092	-> 21260
    //   #6094	-> 21266
    //   #6095	-> 21295
    //   #6096	-> 21300
    //   #6095	-> 21307
    //   #6096	-> 21308
    //   #6095	-> 21315
    //   #6097	-> 21321
    //   #6100	-> 21329
    //   #6101	-> 21332
    //   #6102	-> 21335
    //   #6106	-> 21338
    //   #6107	-> 21353
    //   #6108	-> 21396
    //   #6109	-> 21404
    //   #6110	-> 21408
    //   #6111	-> 21430
    //   #6113	-> 21458
    //   #6115	-> 21465
    //   #6116	-> 21475
    //   #6117	-> 21534
    //   #6118	-> 21565
    //   #6116	-> 21612
    //   #6120	-> 21622
    //   #6121	-> 21681
    //   #6122	-> 21712
    //   #6120	-> 21759
    //   #6108	-> 21764
    //   #6126	-> 21779
    //   #6127	-> 21802
    //   #6128	-> 21845
    //   #6129	-> 21853
    //   #6130	-> 21857
    //   #6131	-> 21879
    //   #6133	-> 21907
    //   #6135	-> 21914
    //   #6136	-> 21924
    //   #6137	-> 21950
    //   #6138	-> 21981
    //   #6136	-> 21995
    //   #6140	-> 22005
    //   #6141	-> 22031
    //   #6142	-> 22062
    //   #6140	-> 22076
    //   #6128	-> 22081
    //   #6146	-> 22096
    //   #6149	-> 22119
    //   #6150	-> 22136
    //   #6151	-> 22179
    //   #6152	-> 22187
    //   #6153	-> 22191
    //   #6154	-> 22213
    //   #6156	-> 22241
    //   #6158	-> 22248
    //   #6159	-> 22258
    //   #6160	-> 22284
    //   #6161	-> 22304
    //   #6160	-> 22306
    //   #6161	-> 22309
    //   #6162	-> 22323
    //   #6159	-> 22329
    //   #6164	-> 22339
    //   #6165	-> 22365
    //   #6166	-> 22385
    //   #6165	-> 22387
    //   #6166	-> 22390
    //   #6167	-> 22404
    //   #6164	-> 22410
    //   #6151	-> 22415
    //   #6171	-> 22430
    //   #6174	-> 22453
    //   #6175	-> 22463
    //   #6176	-> 22482
    //   #6177	-> 22488
    //   #6178	-> 22507
    //   #6174	-> 22524
    //   #6180	-> 22529
    //   #6181	-> 22601
    //   #6183	-> 22639
    //   #6186	-> 22644
    //   #6188	-> 22657
    //   #6189	-> 22667
    //   #6190	-> 22708
    //   #6191	-> 22749
    //   #6192	-> 22761
    //   #6193	-> 22809
    //   #6194	-> 22820
    //   #6192	-> 22837
    //   #6195	-> 22842
    //   #6196	-> 22860
    //   #6197	-> 22871
    //   #6195	-> 22879
    //   #6199	-> 22881
    //   #6200	-> 22891
    //   #6201	-> 22910
    //   #6202	-> 22916
    //   #6203	-> 22935
    //   #6199	-> 22952
    //   #6205	-> 22957
    //   #6206	-> 22975
    //   #6207	-> 22994
    //   #6208	-> 23000
    //   #6209	-> 23019
    //   #6210	-> 23025
    //   #6211	-> 23043
    //   #6212	-> 23054
    //   #6210	-> 23062
    //   #6212	-> 23065
    //   #6205	-> 23071
    //   #6215	-> 23081
    //   #6216	-> 23098
    //   #6217	-> 23108
    //   #6218	-> 23127
    //   #6219	-> 23133
    //   #6220	-> 23152
    //   #6221	-> 23158
    //   #6222	-> 23176
    //   #6223	-> 23187
    //   #6221	-> 23195
    //   #6223	-> 23198
    //   #6216	-> 23229
    //   #6225	-> 23239
    //   #6226	-> 23249
    //   #6227	-> 23268
    //   #6228	-> 23274
    //   #6229	-> 23293
    //   #6230	-> 23299
    //   #6231	-> 23317
    //   #6232	-> 23328
    //   #6230	-> 23336
    //   #6232	-> 23339
    //   #6225	-> 23345
    //   #6239	-> 23355
    //   #6240	-> 23369
    //   #6241	-> 23379
    //   #6242	-> 23425
    //   #6243	-> 23443
    //   #6244	-> 23454
    //   #6242	-> 23463
    //   #6245	-> 23466
    //   #6246	-> 23472
    //   #6247	-> 23574
    //   #6248	-> 23584
    //   #6249	-> 23588
    //   #6247	-> 23594
    //   #6250	-> 23602
    //   #6246	-> 23604
    //   #6239	-> 23607
    //   #6251	-> 23612
    //   #6252	-> 23622
    //   #6253	-> 23641
    //   #6254	-> 23647
    //   #6255	-> 23666
    //   #6256	-> 23677
    //   #6257	-> 23683
    //   #6258	-> 23702
    //   #6251	-> 23719
    //   #6260	-> 23724
    //   #6263	-> 23729
    //   #6264	-> 23749
    //   #6265	-> 23775
    //   #6266	-> 23793
    //   #6269	-> 23808
    //   #6270	-> 23818
    //   #6271	-> 23859
    //   #6272	-> 23900
    //   #6273	-> 23918
    //   #6274	-> 23929
    //   #6272	-> 23937
    //   #6275	-> 23939
    //   #6277	-> 23984
    //   #6278	-> 24002
    //   #6279	-> 24012
    //   #6280	-> 24022
    //   #6281	-> 24061
    //   #6282	-> 24067
    //   #6277	-> 24073
    //   #6283	-> 24078
    //   #6286	-> 24100
    //   #6288	-> 24128
    //   #6289	-> 24146
    //   #6290	-> 24156
    //   #6291	-> 24166
    //   #6292	-> 24205
    //   #6293	-> 24211
    //   #6288	-> 24217
    //   #6295	-> 24227
    //   #6300	-> 24236
    //   #6301	-> 24277
    //   #6304	-> 24286
    //   #6305	-> 24296
    //   #6306	-> 24306
    //   #6307	-> 24316
    //   #6308	-> 24355
    //   #6309	-> 24361
    //   #6310	-> 24420
    //   #6309	-> 24464
    //   #6312	-> 24467
    //   #6313	-> 24569
    //   #6314	-> 24583
    //   #6313	-> 24589
    //   #6315	-> 24597
    //   #6312	-> 24600
    //   #6304	-> 24603
    //   #6303	-> 24606
    //   #6317	-> 24608
    //   #6318	-> 24627
    //   #6319	-> 24643
    //   #6320	-> 24662
    //   #6321	-> 24673
    //   #6322	-> 24679
    //   #6323	-> 24698
    //   #6317	-> 24715
    //   #6324	-> 24720
    //   #6328	-> 24725
    //   #6329	-> 24735
    //   #6330	-> 24776
    //   #6331	-> 24817
    //   #6333	-> 24821
    //   #6337	-> 24830
    //   #6338	-> 24854
    //   #6337	-> 24860
    //   #6339	-> 24865
    //   #6340	-> 24897
    //   #6339	-> 24914
    //   #6343	-> 24919
    //   #6344	-> 24938
    //   #6345	-> 24954
    //   #6346	-> 24973
    //   #6347	-> 24984
    //   #6348	-> 24990
    //   #6349	-> 25009
    //   #6343	-> 25026
    //   #6351	-> 25031
    //   #6353	-> 25036
    //   #6355	-> 25041
    //   #6356	-> 25051
    //   #6357	-> 25092
    //   #6358	-> 25133
    //   #6359	-> 25168
    //   #6360	-> 25199
    //   #6358	-> 25253
    //   #6363	-> 25258
    //   #6364	-> 25268
    //   #6365	-> 25272
    //   #6366	-> 25297
    //   #6367	-> 25313
    //   #6368	-> 25323
    //   #6369	-> 25342
    //   #6363	-> 25348
    //   #6383	-> 25358
    //   #6384	-> 25363
    //   #6385	-> 25376
    //   #6390	-> 25381
    //   #6391	-> 25416
    //   #6392	-> 25457
    //   #6393	-> 25463
    //   #6394	-> 25479
    //   #6395	-> 25581
    //   #6396	-> 25601
    //   #6397	-> 25617
    //   #6395	-> 25623
    //   #6397	-> 25631
    //   #6394	-> 25633
    //   #6391	-> 25636
    //   #6398	-> 25641
    //   #6399	-> 25676
    //   #6400	-> 25718
    //   #6401	-> 25760
    //   #6398	-> 25802
    //   #6402	-> 25807
    //   #6403	-> 25825
    //   #6404	-> 25829
    //   #6405	-> 25854
    //   #6406	-> 25870
    //   #6407	-> 25880
    //   #6408	-> 25886
    //   #6409	-> 25905
    //   #6402	-> 25911
    //   #6413	-> 25916
    //   #6415	-> 25921
    //   #6417	-> 25926
    //   #6418	-> 25930
    //   #6419	-> 25958
    //   #6420	-> 25976
    //   #6421	-> 26001
    //   #6423	-> 26028
    //   #6424	-> 26056
    //   #6425	-> 26074
    //   #6426	-> 26099
    //   #6429	-> 26121
    //   #6430	-> 26133
    //   #6434	-> 26137
    //   #6435	-> 26147
    //   #6436	-> 26188
    //   #6437	-> 26229
    //   #6438	-> 26233
    //   #6439	-> 26237
    //   #6440	-> 26250
    //   #6441	-> 26256
    //   #6442	-> 26262
    //   #6443	-> 26278
    //   #6444	-> 26294
    //   #6445	-> 26311
    //   #6446	-> 26321
    //   #6450	-> 26331
    //   #6451	-> 26339
    //   #6452	-> 26357
    //   #6453	-> 26394
    //   #6450	-> 26431
    //   #6462	-> 26447
    //   #6463	-> 26463
    //   #6464	-> 26473
    //   #6465	-> 26485
    //   #6466	-> 26497
    //   #6467	-> 26509
    //   #6469	-> 26512
    //   #6470	-> 26546
    //   #6472	-> 26549
    //   #6473	-> 26566
    //   #6474	-> 26574
    //   #6475	-> 26636
    //   #6476	-> 26641
    //   #6477	-> 26658
    //   #6479	-> 26663
    //   #6480	-> 26681
    //   #6481	-> 26687
    //   #6482	-> 26715
    //   #6479	-> 26771
    //   #6473	-> 26776
    //   #6484	-> 26792
    //   #6485	-> 26821
    //   #6486	-> 26881
    //   #6487	-> 26899
    //   #6488	-> 26905
    //   #6489	-> 26922
    //   #6486	-> 26964
    //   #6492	-> 26974
    //   #6493	-> 26978
    //   #6494	-> 26990
    //   #6496	-> 27055
    //   #6498	-> 27115
    //   #6499	-> 27126
    //   #6504	-> 27172
    //   #6505	-> 27207
    //   #6504	-> 27249
    //   #6508	-> 27259
    //   #6509	-> 27263
    //   #6511	-> 27267
    //   #6512	-> 27280
    //   #6513	-> 27296
    //   #6515	-> 27313
    //   #6516	-> 27323
    //   #6518	-> 27333
    //   #6519	-> 27341
    //   #6520	-> 27359
    //   #6521	-> 27396
    //   #6518	-> 27433
    //   #6526	-> 27449
    //   #6527	-> 27463
    //   #6528	-> 27473
    //   #6526	-> 27479
    //   #6529	-> 27484
    //   #6530	-> 27508
    //   #6531	-> 27514
    //   #6532	-> 27528
    //   #6533	-> 27534
    //   #6535	-> 27551
    //   #6536	-> 27557
    //   #6537	-> 27574
    //   #6538	-> 27676
    //   #6539	-> 27686
    //   #6540	-> 27690
    //   #6538	-> 27696
    //   #6541	-> 27704
    //   #6537	-> 27706
    //   #6529	-> 27709
    //   #6542	-> 27714
    //   #6543	-> 27736
    //   #6544	-> 27746
    //   #6545	-> 27757
    //   #6542	-> 27763
    //   #6546	-> 27768
    //   #6547	-> 27790
    //   #6548	-> 27800
    //   #6549	-> 27811
    //   #6546	-> 27817
    //   #6550	-> 27822
    //   #6551	-> 27851
    //   #6552	-> 27887
    //   #6550	-> 27929
    //   #6557	-> 27934
    //   #6560	-> 27939
    //   #6561	-> 27949
    //   #6562	-> 27990
    //   #6563	-> 28031
    //   #6564	-> 28051
    //   #6563	-> 28072
    //   #6565	-> 28077
    //   #6566	-> 28095
    //   #6567	-> 28105
    //   #6565	-> 28131
    //   #6568	-> 28136
    //   #6570	-> 28145
    //   #6571	-> 28165
    //   #6570	-> 28186
    //   #6572	-> 28191
    //   #6573	-> 28196
    //   #6574	-> 28213
    //   #6576	-> 28218
    //   #6577	-> 28236
    //   #6578	-> 28273
    //   #6579	-> 28375
    //   #6580	-> 28385
    //   #6581	-> 28389
    //   #6579	-> 28395
    //   #6582	-> 28403
    //   #6578	-> 28405
    //   #6576	-> 28408
    //   #6584	-> 28413
    //   #6585	-> 28432
    //   #6586	-> 28448
    //   #6587	-> 28467
    //   #6588	-> 28478
    //   #6589	-> 28484
    //   #6590	-> 28503
    //   #6584	-> 28520
    //   #6591	-> 28525
    //   #6593	-> 28530
    //   #6594	-> 28540
    //   #6595	-> 28581
    //   #6596	-> 28622
    //   #6597	-> 28642
    //   #6596	-> 28663
    //   #6598	-> 28668
    //   #6599	-> 28686
    //   #6600	-> 28696
    //   #6598	-> 28722
    //   #6601	-> 28727
    //   #6603	-> 28736
    //   #6604	-> 28756
    //   #6603	-> 28777
    //   #6605	-> 28782
    //   #6606	-> 28787
    //   #6607	-> 28804
    //   #6609	-> 28809
    //   #6610	-> 28827
    //   #6611	-> 28864
    //   #6612	-> 28966
    //   #6613	-> 28976
    //   #6614	-> 28980
    //   #6612	-> 28986
    //   #6615	-> 28994
    //   #6611	-> 28996
    //   #6609	-> 28999
    //   #6617	-> 29004
    //   #6618	-> 29023
    //   #6619	-> 29039
    //   #6620	-> 29058
    //   #6621	-> 29069
    //   #6622	-> 29075
    //   #6623	-> 29094
    //   #6617	-> 29111
    //   #6624	-> 29116
    //   #6626	-> 29121
    //   #6627	-> 29131
    //   #6628	-> 29172
    //   #6629	-> 29213
    //   #6630	-> 29233
    //   #6629	-> 29254
    //   #6631	-> 29259
    //   #6632	-> 29277
    //   #6633	-> 29287
    //   #6631	-> 29297
    //   #6634	-> 29302
    //   #6636	-> 29311
    //   #6637	-> 29331
    //   #6636	-> 29352
    //   #6638	-> 29357
    //   #6639	-> 29362
    //   #6640	-> 29379
    //   #6642	-> 29384
    //   #6643	-> 29402
    //   #6644	-> 29439
    //   #6645	-> 29541
    //   #6646	-> 29551
    //   #6647	-> 29555
    //   #6645	-> 29561
    //   #6648	-> 29569
    //   #6644	-> 29571
    //   #6642	-> 29574
    //   #6650	-> 29579
    //   #6651	-> 29598
    //   #6652	-> 29614
    //   #6653	-> 29633
    //   #6654	-> 29644
    //   #6655	-> 29650
    //   #6656	-> 29669
    //   #6650	-> 29686
    //   #6657	-> 29691
    //   #6662	-> 29696
    //   #6663	-> 29706
    //   #6664	-> 29747
    //   #6665	-> 29788
    //   #6666	-> 29804
    //   #6668	-> 29825
    //   #6669	-> 29841
    //   #6670	-> 29853
    //   #6671	-> 29858
    //   #6672	-> 29898
    //   #6674	-> 29914
    //   #6677	-> 29919
    //   #6678	-> 29936
    //   #6680	-> 29947
    //   #6683	-> 29986
    //   #6684	-> 29996
    //   #6685	-> 30015
    //   #6686	-> 30021
    //   #6687	-> 30040
    //   #6688	-> 30046
    //   #6689	-> 30064
    //   #6688	-> 30066
    //   #6689	-> 30069
    //   #6683	-> 30075
    //   #6691	-> 30085
    //   #6692	-> 30094
    //   #6693	-> 30109
    //   #6695	-> 30117
    //   #6696	-> 30122
    //   #6697	-> 30162
    //   #6699	-> 30178
    //   #6702	-> 30183
    //   #6703	-> 30187
    //   #6704	-> 30289
    //   #6705	-> 30317
    //   #6704	-> 30323
    //   #6707	-> 30328
    //   #6708	-> 30358
    //   #6707	-> 30384
    //   #6709	-> 30389
    //   #6710	-> 30406
    //   #6712	-> 30478
    //   #6713	-> 30527
    //   #6712	-> 30568
    //   #6716	-> 30573
    //   #6717	-> 30583
    //   #6718	-> 30602
    //   #6719	-> 30608
    //   #6720	-> 30627
    //   #6716	-> 30644
    //   #6722	-> 30649
    //   #6724	-> 30654
    //   #6725	-> 30664
    //   #6726	-> 30705
    //   #6727	-> 30746
    //   #6728	-> 30756
    //   #6729	-> 30775
    //   #6730	-> 30781
    //   #6731	-> 30800
    //   #6732	-> 30806
    //   #6733	-> 30824
    //   #6734	-> 30835
    //   #6733	-> 30843
    //   #6732	-> 30846
    //   #6734	-> 30849
    //   #6727	-> 30855
    //   #6736	-> 30865
    //   #6737	-> 30869
    //   #6738	-> 30901
    //   #6737	-> 30917
    //   #6739	-> 30922
    //   #6740	-> 30932
    //   #6741	-> 30951
    //   #6742	-> 30957
    //   #6743	-> 30976
    //   #6744	-> 31002
    //   #6745	-> 31028
    //   #6746	-> 31044
    //   #6747	-> 31069
    //   #6739	-> 31075
    //   #6749	-> 31080
    //   #6751	-> 31085
    //   #6752	-> 31095
    //   #6753	-> 31136
    //   #6754	-> 31177
    //   #6755	-> 31187
    //   #6756	-> 31206
    //   #6757	-> 31212
    //   #6758	-> 31231
    //   #6759	-> 31237
    //   #6760	-> 31255
    //   #6761	-> 31266
    //   #6759	-> 31274
    //   #6761	-> 31277
    //   #6754	-> 31283
    //   #6763	-> 31293
    //   #6764	-> 31302
    //   #6765	-> 31317
    //   #6767	-> 31322
    //   #6768	-> 31333
    //   #6770	-> 31347
    //   #6771	-> 31357
    //   #6772	-> 31376
    //   #6773	-> 31382
    //   #6774	-> 31401
    //   #6775	-> 31427
    //   #6776	-> 31453
    //   #6777	-> 31469
    //   #6770	-> 31501
    //   #6779	-> 31506
    //   #6782	-> 31511
    //   #6783	-> 31521
    //   #6784	-> 31562
    //   #6785	-> 31603
    //   #6786	-> 31624
    //   #6787	-> 31628
    //   #6788	-> 31633
    //   #6789	-> 31648
    //   #6790	-> 31664
    //   #6791	-> 31674
    //   #6792	-> 31680
    //   #6795	-> 31686
    //   #6796	-> 31723
    //   #6797	-> 31758
    //   #6796	-> 31800
    //   #6799	-> 31810
    //   #6800	-> 31831
    //   #6801	-> 31835
    //   #6802	-> 31839
    //   #6803	-> 31854
    //   #6804	-> 31870
    //   #6805	-> 31880
    //   #6806	-> 31886
    //   #6808	-> 31892
    //   #6809	-> 31908
    //   #6812	-> 31912
    //   #6813	-> 31942
    //   #6812	-> 31968
    //   #6814	-> 31973
    //   #6815	-> 32022
    //   #6816	-> 32069
    //   #6817	-> 32116
    //   #6818	-> 32162
    //   #6819	-> 32199
    //   #6820	-> 32213
    //   #6821	-> 32223
    //   #6819	-> 32229
    //   #6821	-> 32237
    //   #6814	-> 32242
    //   #6822	-> 32247
    //   #6823	-> 32282
    //   #6822	-> 32324
    //   #6825	-> 32329
    //   #6827	-> 32334
    //   #6828	-> 32344
    //   #6829	-> 32385
    //   #6830	-> 32426
    //   #6831	-> 32447
    //   #6833	-> 32451
    //   #6834	-> 32467
    //   #6835	-> 32480
    //   #6836	-> 32496
    //   #6838	-> 32509
    //   #6840	-> 32513
    //   #6841	-> 32525
    //   #6842	-> 32546
    //   #6843	-> 32552
    //   #6844	-> 32569
    //   #6841	-> 32575
    //   #6846	-> 32580
    //   #6847	-> 32585
    //   #6848	-> 32595
    //   #6849	-> 32614
    //   #6850	-> 32620
    //   #6851	-> 32639
    //   #6852	-> 32661
    //   #6853	-> 32667
    //   #6854	-> 32686
    //   #6855	-> 32697
    //   #6847	-> 32703
    //   #6857	-> 32713
    //   #6858	-> 32734
    //   #6859	-> 32785
    //   #6860	-> 32815
    //   #6859	-> 32841
    //   #6861	-> 32846
    //   #6862	-> 32924
    //   #6863	-> 32958
    //   #6864	-> 33060
    //   #6865	-> 33074
    //   #6864	-> 33080
    //   #6865	-> 33088
    //   #6863	-> 33090
    //   #6861	-> 33093
    //   #6866	-> 33098
    //   #6867	-> 33108
    //   #6868	-> 33127
    //   #6869	-> 33133
    //   #6870	-> 33152
    //   #6866	-> 33169
    //   #6872	-> 33174
    //   #6874	-> 33179
    //   #6875	-> 33189
    //   #6876	-> 33230
    //   #6877	-> 33271
    //   #6878	-> 33281
    //   #6879	-> 33300
    //   #6880	-> 33306
    //   #6881	-> 33325
    //   #6882	-> 33331
    //   #6883	-> 33349
    //   #6884	-> 33360
    //   #6882	-> 33368
    //   #6884	-> 33371
    //   #6877	-> 33377
    //   #6886	-> 33387
    //   #6887	-> 33437
    //   #6888	-> 33447
    //   #6886	-> 33474
    //   #6889	-> 33479
    //   #6890	-> 33493
    //   #6889	-> 33499
    //   #6891	-> 33504
    //   #6892	-> 33530
    //   #6891	-> 33536
    //   #6894	-> 33541
    //   #6895	-> 33559
    //   #6896	-> 33578
    //   #6897	-> 33584
    //   #6898	-> 33603
    //   #6899	-> 33614
    //   #6900	-> 33620
    //   #6901	-> 33639
    //   #6902	-> 33656
    //   #6903	-> 33675
    //   #6894	-> 33691
    //   #6905	-> 33696
    //   #6908	-> 33701
    //   #6909	-> 33707
    //   #6910	-> 33709
    //   #6911	-> 33719
    //   #6910	-> 33724
    //   #6909	-> 33727
    //   #6912	-> 33737
    //   #6907	-> 33739
    //   #6913	-> 33744
    //   #6914	-> 33754
    //   #6915	-> 33795
    //   #6916	-> 33836
    //   #6917	-> 33846
    //   #6918	-> 33865
    //   #6919	-> 33871
    //   #6920	-> 33890
    //   #6921	-> 33896
    //   #6922	-> 33914
    //   #6923	-> 33925
    //   #6921	-> 33933
    //   #6923	-> 33936
    //   #6916	-> 33942
    //   #6925	-> 33952
    //   #6926	-> 34002
    //   #6927	-> 34012
    //   #6925	-> 34033
    //   #6928	-> 34038
    //   #6929	-> 34052
    //   #6928	-> 34058
    //   #6930	-> 34063
    //   #6931	-> 34089
    //   #6930	-> 34106
    //   #6933	-> 34111
    //   #6934	-> 34129
    //   #6935	-> 34148
    //   #6936	-> 34154
    //   #6937	-> 34173
    //   #6938	-> 34184
    //   #6939	-> 34190
    //   #6940	-> 34209
    //   #6941	-> 34226
    //   #6942	-> 34245
    //   #6933	-> 34261
    //   #6946	-> 34266
    //   #6948	-> 34271
    //   #6949	-> 34275
    //   #6950	-> 34293
    //   #6951	-> 34324
    //   #6952	-> 34336
    //   #6953	-> 34386
    //   #6954	-> 34402
    //   #6955	-> 34419
    //   #6956	-> 34427
    //   #6955	-> 34450
    //   #6959	-> 34507
    //   #6960	-> 34530
    //   #6961	-> 34538
    //   #6960	-> 34561
    //   #6965	-> 34584
    //   #6966	-> 34600
    //   #6968	-> 34615
    //   #6971	-> 34676
    //   #6972	-> 34686
    //   #6973	-> 34727
    //   #6974	-> 34768
    //   #6975	-> 34818
    //   #6976	-> 34828
    //   #6974	-> 34854
    //   #6977	-> 34859
    //   #6979	-> 34868
    //   #6980	-> 34918
    //   #6981	-> 34928
    //   #6982	-> 34938
    //   #6983	-> 34943
    //   #6979	-> 34949
    //   #6985	-> 34954
    //   #6986	-> 35008
    //   #6987	-> 35047
    //   #6988	-> 35082
    //   #6990	-> 35090
    //   #6992	-> 35125
    //   #6993	-> 35211
    //   #6995	-> 35216
    //   #6996	-> 35226
    //   #6997	-> 35267
    //   #6998	-> 35308
    //   #6999	-> 35333
    //   #7000	-> 35355
    //   #7001	-> 35420
    //   #6999	-> 35481
    //   #7003	-> 35486
    //   #7004	-> 35525
    //   #7007	-> 35584
    //   #7008	-> 35609
    //   #7009	-> 35631
    //   #7010	-> 35696
    //   #7008	-> 35757
    //   #7013	-> 35762
    //   #7015	-> 35816
    //   #7016	-> 35826
    //   #7017	-> 35845
    //   #7018	-> 35851
    //   #7019	-> 35870
    //   #7015	-> 35892
    //   #7020	-> 35897
    //   #7022	-> 35902
    //   #7024	-> 35907
    //   #7025	-> 35917
    //   #7026	-> 35958
    //   #7027	-> 35999
    //   #7029	-> 36031
    //   #7031	-> 36077
    //   #7032	-> 36106
    //   #7033	-> 36131
    //   #7034	-> 36147
    //   #7035	-> 36199
    //   #7031	-> 36222
    //   #7037	-> 36232
    //   #7038	-> 36262
    //   #7039	-> 36269
    //   #7040	-> 36279
    //   #7041	-> 36325
    //   #7042	-> 36350
    //   #7043	-> 36376
    //   #7042	-> 36394
    //   #7045	-> 36399
    //   #7046	-> 36436
    //   #7047	-> 36461
    //   #7048	-> 36484
    //   #7049	-> 36509
    //   #7050	-> 36526
    //   #7045	-> 36561
    //   #7052	-> 36571
    //   #7053	-> 36591
    //   #7052	-> 36621
    //   #7054	-> 36626
    //   #7055	-> 36634
    //   #7056	-> 36648
    //   #7054	-> 36730
    //   #7058	-> 36750
    //   #7059	-> 36773
    //   #7060	-> 36808
    //   #7061	-> 36839
    //   #7059	-> 36850
    //   #7066	-> 36855
    //   #7068	-> 36860
    //   #7070	-> 36865
    //   #7072	-> 36870
    //   #7073	-> 36884
    //   #7074	-> 36894
    //   #7072	-> 36900
    //   #7075	-> 36905
    //   #7076	-> 36915
    //   #7077	-> 36956
    //   #7078	-> 36997
    //   #7079	-> 37001
    //   #7080	-> 37013
    //   #7081	-> 37023
    //   #7082	-> 37041
    //   #7080	-> 37058
    //   #7079	-> 37061
    //   #7083	-> 37066
    //   #7084	-> 37088
    //   #7085	-> 37094
    //   #7086	-> 37104
    //   #7087	-> 37114
    //   #7088	-> 37132
    //   #7086	-> 37149
    //   #7089	-> 37152
    //   #7083	-> 37158
    //   #7090	-> 37163
    //   #7091	-> 37185
    //   #7092	-> 37191
    //   #7093	-> 37201
    //   #7094	-> 37211
    //   #7095	-> 37229
    //   #7093	-> 37246
    //   #7096	-> 37249
    //   #7090	-> 37255
    //   #7099	-> 37265
    //   #7100	-> 37275
    //   #7101	-> 37285
    //   #7102	-> 37295
    //   #7103	-> 37305
    //   #7104	-> 37323
    //   #7102	-> 37340
    //   #7104	-> 37343
    //   #7105	-> 37349
    //   #7106	-> 37363
    //   #7107	-> 37373
    //   #7099	-> 37389
    //   #7098	-> 37392
    //   #7108	-> 37394
    //   #7109	-> 37416
    //   #7110	-> 37422
    //   #7111	-> 37432
    //   #7112	-> 37442
    //   #7113	-> 37460
    //   #7111	-> 37477
    //   #7114	-> 37480
    //   #7121	-> 37486
    //   #7122	-> 37588
    //   #7123	-> 37598
    //   #7124	-> 37602
    //   #7122	-> 37608
    //   #7125	-> 37616
    //   #7121	-> 37618
    //   #7108	-> 37621
    //   #7127	-> 37626
    //   #7128	-> 37645
    //   #7129	-> 37661
    //   #7130	-> 37680
    //   #7131	-> 37691
    //   #7132	-> 37697
    //   #7133	-> 37716
    //   #7127	-> 37733
    //   #7134	-> 37738
    //   #7136	-> 37743
    //   #7137	-> 37757
    //   #7138	-> 37767
    //   #7136	-> 37773
    //   #7139	-> 37778
    //   #7140	-> 37788
    //   #7141	-> 37829
    //   #7142	-> 37870
    //   #7143	-> 37874
    //   #7144	-> 37886
    //   #7145	-> 37896
    //   #7146	-> 37914
    //   #7144	-> 37931
    //   #7143	-> 37934
    //   #7147	-> 37939
    //   #7148	-> 37961
    //   #7149	-> 37967
    //   #7150	-> 37977
    //   #7151	-> 37987
    //   #7152	-> 38005
    //   #7150	-> 38022
    //   #7153	-> 38025
    //   #7147	-> 38031
    //   #7154	-> 38036
    //   #7155	-> 38058
    //   #7156	-> 38064
    //   #7157	-> 38074
    //   #7158	-> 38084
    //   #7159	-> 38102
    //   #7157	-> 38119
    //   #7160	-> 38122
    //   #7154	-> 38128
    //   #7163	-> 38138
    //   #7164	-> 38152
    //   #7165	-> 38162
    //   #7166	-> 38208
    //   #7167	-> 38222
    //   #7168	-> 38232
    //   #7169	-> 38248
    //   #7170	-> 38258
    //   #7171	-> 38276
    //   #7169	-> 38293
    //   #7172	-> 38296
    //   #7163	-> 38302
    //   #7175	-> 38307
    //   #7176	-> 38329
    //   #7177	-> 38335
    //   #7178	-> 38345
    //   #7179	-> 38355
    //   #7180	-> 38373
    //   #7178	-> 38390
    //   #7181	-> 38393
    //   #7187	-> 38399
    //   #7188	-> 38501
    //   #7189	-> 38511
    //   #7190	-> 38515
    //   #7188	-> 38521
    //   #7191	-> 38529
    //   #7187	-> 38531
    //   #7175	-> 38534
    //   #7193	-> 38539
    //   #7194	-> 38558
    //   #7195	-> 38574
    //   #7196	-> 38593
    //   #7197	-> 38604
    //   #7198	-> 38610
    //   #7199	-> 38629
    //   #7193	-> 38646
    //   #7200	-> 38651
    //   #7202	-> 38656
    //   #7203	-> 38670
    //   #7204	-> 38680
    //   #7202	-> 38686
    //   #7205	-> 38691
    //   #7206	-> 38701
    //   #7207	-> 38742
    //   #7208	-> 38783
    //   #7210	-> 38787
    //   #7211	-> 38797
    //   #7212	-> 38807
    //   #7213	-> 38817
    //   #7214	-> 38827
    //   #7215	-> 38845
    //   #7213	-> 38862
    //   #7215	-> 38865
    //   #7210	-> 38871
    //   #7209	-> 38874
    //   #7216	-> 38876
    //   #7217	-> 38898
    //   #7218	-> 38904
    //   #7219	-> 38914
    //   #7220	-> 38924
    //   #7221	-> 38942
    //   #7219	-> 38959
    //   #7222	-> 38962
    //   #7216	-> 38968
    //   #7224	-> 38973
    //   #7225	-> 38985
    //   #7226	-> 38995
    //   #7227	-> 39013
    //   #7225	-> 39030
    //   #7224	-> 39033
    //   #7230	-> 39043
    //   #7231	-> 39053
    //   #7232	-> 39063
    //   #7233	-> 39073
    //   #7234	-> 39083
    //   #7235	-> 39101
    //   #7233	-> 39118
    //   #7235	-> 39121
    //   #7236	-> 39127
    //   #7237	-> 39141
    //   #7238	-> 39151
    //   #7230	-> 39167
    //   #7229	-> 39170
    //   #7239	-> 39172
    //   #7240	-> 39194
    //   #7241	-> 39200
    //   #7242	-> 39210
    //   #7243	-> 39220
    //   #7244	-> 39238
    //   #7242	-> 39255
    //   #7245	-> 39258
    //   #7251	-> 39264
    //   #7252	-> 39366
    //   #7253	-> 39376
    //   #7254	-> 39380
    //   #7252	-> 39386
    //   #7255	-> 39394
    //   #7251	-> 39396
    //   #7239	-> 39399
    //   #7257	-> 39404
    //   #7258	-> 39423
    //   #7259	-> 39439
    //   #7260	-> 39458
    //   #7261	-> 39469
    //   #7262	-> 39475
    //   #7263	-> 39494
    //   #7257	-> 39511
    //   #7264	-> 39516
    //   #7266	-> 39521
    //   #7267	-> 39531
    //   #7268	-> 39572
    //   #7269	-> 39613
    //   #7270	-> 39617
    //   #7271	-> 39621
    //   #7272	-> 39656
    //   #7273	-> 39687
    //   #7274	-> 39717
    //   #7271	-> 39734
    //   #7277	-> 39744
    //   #7278	-> 39774
    //   #7279	-> 39781
    //   #7280	-> 39791
    //   #7281	-> 39801
    //   #7282	-> 39811
    //   #7280	-> 39838
    //   #7283	-> 39843
    //   #7284	-> 39857
    //   #7283	-> 39863
    //   #7285	-> 39868
    //   #7286	-> 39894
    //   #7285	-> 39900
    //   #7288	-> 39905
    //   #7289	-> 39932
    //   #7290	-> 39967
    //   #7291	-> 39978
    //   #7292	-> 40003
    //   #7293	-> 40020
    //   #7288	-> 40055
    //   #7296	-> 40065
    //   #7297	-> 40120
    //   #7298	-> 40128
    //   #7299	-> 40142
    //   #7297	-> 40217
    //   #7301	-> 40237
    //   #7302	-> 40260
    //   #7303	-> 40295
    //   #7304	-> 40326
    //   #7302	-> 40337
    //   #7307	-> 40342
    //   #7309	-> 40347
    //   #7310	-> 40361
    //   #7311	-> 40371
    //   #7309	-> 40377
    //   #7312	-> 40382
    //   #7313	-> 40392
    //   #7314	-> 40433
    //   #7315	-> 40474
    //   #7316	-> 40478
    //   #7317	-> 40490
    //   #7318	-> 40500
    //   #7319	-> 40518
    //   #7317	-> 40535
    //   #7316	-> 40538
    //   #7322	-> 40548
    //   #7323	-> 40562
    //   #7324	-> 40572
    //   #7325	-> 40618
    //   #7326	-> 40628
    //   #7327	-> 40646
    //   #7325	-> 40663
    //   #7327	-> 40666
    //   #7328	-> 40672
    //   #7329	-> 40686
    //   #7330	-> 40696
    //   #7331	-> 40712
    //   #7332	-> 40730
    //   #7333	-> 40741
    //   #7331	-> 40757
    //   #7334	-> 40761
    //   #7322	-> 40767
    //   #7336	-> 40772
    //   #7337	-> 40794
    //   #7338	-> 40800
    //   #7339	-> 40810
    //   #7340	-> 40820
    //   #7341	-> 40838
    //   #7339	-> 40855
    //   #7342	-> 40858
    //   #7348	-> 40864
    //   #7349	-> 40966
    //   #7350	-> 40976
    //   #7351	-> 40980
    //   #7349	-> 40986
    //   #7352	-> 40994
    //   #7348	-> 40996
    //   #7336	-> 40999
    //   #7354	-> 41004
    //   #7355	-> 41023
    //   #7356	-> 41039
    //   #7357	-> 41058
    //   #7358	-> 41069
    //   #7359	-> 41075
    //   #7360	-> 41094
    //   #7354	-> 41111
    //   #7361	-> 41116
    //   #7363	-> 41121
    //   #7364	-> 41143
    //   #7365	-> 41174
    //   #7367	-> 41197
    //   #7368	-> 41207
    //   #7369	-> 41289
    //   #7370	-> 41305
    //   #7371	-> 41355
    //   #7370	-> 41386
    //   #7373	-> 41396
    //   #7374	-> 41435
    //   #7377	-> 41486
    //   #7378	-> 41536
    //   #7379	-> 41567
    //   #7380	-> 41669
    //   #7381	-> 41679
    //   #7380	-> 41689
    //   #7381	-> 41697
    //   #7379	-> 41699
    //   #7377	-> 41702
    //   #7384	-> 41707
    //   #7385	-> 41742
    //   #7386	-> 41784
    //   #7384	-> 41826
    //   #7387	-> 41831
    //   #7389	-> 41836
    //   #7391	-> 41858
    //   #7392	-> 41868
    //   #7393	-> 41950
    //   #7394	-> 41966
    //   #7395	-> 42016
    //   #7394	-> 42047
    //   #7397	-> 42057
    //   #7398	-> 42096
    //   #7401	-> 42147
    //   #7402	-> 42178
    //   #7404	-> 42201
    //   #7405	-> 42251
    //   #7406	-> 42282
    //   #7407	-> 42384
    //   #7408	-> 42394
    //   #7407	-> 42404
    //   #7408	-> 42412
    //   #7406	-> 42414
    //   #7404	-> 42417
    //   #7411	-> 42422
    //   #7412	-> 42457
    //   #7413	-> 42499
    //   #7411	-> 42541
    //   #7414	-> 42546
    //   #7416	-> 42551
    //   #7418	-> 42573
    //   #7419	-> 42583
    //   #7420	-> 42665
    //   #7421	-> 42681
    //   #7422	-> 42731
    //   #7421	-> 42762
    //   #7424	-> 42772
    //   #7425	-> 42811
    //   #7428	-> 42862
    //   #7429	-> 42893
    //   #7431	-> 42916
    //   #7432	-> 42966
    //   #7433	-> 42997
    //   #7434	-> 43099
    //   #7435	-> 43109
    //   #7434	-> 43119
    //   #7435	-> 43127
    //   #7433	-> 43129
    //   #7431	-> 43132
    //   #7438	-> 43137
    //   #7439	-> 43172
    //   #7440	-> 43214
    //   #7438	-> 43256
    //   #7441	-> 43261
    //   #7443	-> 43266
    //   #7444	-> 43275
    //   #7445	-> 43287
    //   #7446	-> 43299
    //   #7447	-> 43331
    //   #7448	-> 43347
    //   #7449	-> 43363
    //   #7450	-> 43379
    //   #7451	-> 43401
    //   #7452	-> 43417
    //   #7454	-> 43430
    //   #7456	-> 43434
    //   #7458	-> 43463
    //   #7459	-> 43479
    //   #7460	-> 43495
    //   #7461	-> 43517
    //   #7462	-> 43533
    //   #7464	-> 43546
    //   #7467	-> 43550
    //   #7468	-> 43565
    //   #7470	-> 43590
    //   #7471	-> 43613
    //   #7472	-> 43623
    //   #7473	-> 43664
    //   #7474	-> 43705
    //   #7475	-> 43720
    //   #7477	-> 43745
    //   #7481	-> 43768
    //   #7482	-> 43804
    //   #7483	-> 43828
    //   #7486	-> 43832
    //   #7487	-> 43850
    //   #7486	-> 43881
    //   #7490	-> 43886
    //   #7491	-> 43896
    //   #7490	-> 43927
    //   #7493	-> 43929
    //   #7495	-> 43948
    //   #7498	-> 43999
    //   #7499	-> 44022
    //   #7498	-> 44036
    //   #7500	-> 44041
    //   #7501	-> 44063
    //   #7502	-> 44078
    //   #7506	-> 44116
    //   #7507	-> 44131
    //   #7509	-> 44156
    //   #7510	-> 44160
    //   #7511	-> 44174
    //   #7513	-> 44179
    //   #7514	-> 44202
    //   #7515	-> 44214
    //   #7516	-> 44220
    //   #7517	-> 44230
    //   #7518	-> 44251
    //   #7519	-> 44328
    //   #7514	-> 44334
    //   #7520	-> 44339
    //   #7521	-> 44361
    //   #7522	-> 44376
    //   #7524	-> 44409
    //   #7525	-> 44523
    //   #7526	-> 44533
    //   #7527	-> 44537
    //   #7525	-> 44543
    //   #7528	-> 44551
    //   #7524	-> 44556
    //   #7530	-> 44561
    //   #7531	-> 44580
    //   #7532	-> 44596
    //   #7533	-> 44615
    //   #7534	-> 44626
    //   #7535	-> 44632
    //   #7536	-> 44651
    //   #7530	-> 44668
    //   #7537	-> 44673
    //   #7540	-> 44678
    //   #7541	-> 44683
    //   #7542	-> 44718
    //   #7543	-> 44772
    //   #7542	-> 44830
    //   #7544	-> 44835
    //   #7546	-> 44840
    //   #7547	-> 44864
    //   #7546	-> 44870
    //   #7548	-> 44875
    //   #7549	-> 44877
    //   #7548	-> 44895
    //   #7550	-> 44900
    //   #7551	-> 44927
    //   #7553	-> 44932
    //   #7554	-> 44942
    //   #7555	-> 44983
    //   #7556	-> 45024
    //   #7557	-> 45028
    //   #7559	-> 45044
    //   #7560	-> 45054
    //   #7559	-> 45063
    //   #7561	-> 45068
    //   #7564	-> 45074
    //   #7565	-> 45076
    //   #7566	-> 45085
    //   #7567	-> 45088
    //   #7566	-> 45096
    //   #7567	-> 45102
    //   #7568	-> 45108
    //   #7569	-> 45118
    //   #7568	-> 45125
    //   #7569	-> 45131
    //   #7570	-> 45136
    //   #7571	-> 45139
    //   #7570	-> 45147
    //   #7565	-> 45153
    //   #7564	-> 45156
    //   #7572	-> 45166
    //   #7563	-> 45168
    //   #7574	-> 45173
    //   #7575	-> 45183
    //   #7576	-> 45191
    //   #7577	-> 45203
    //   #7579	-> 45223
    //   #7577	-> 45237
    //   #7576	-> 45240
    //   #7575	-> 45245
    //   #7583	-> 45261
    //   #7584	-> 45271
    //   #7585	-> 45290
    //   #7586	-> 45296
    //   #7587	-> 45315
    //   #7583	-> 45332
    //   #7588	-> 45342
    //   #7590	-> 45358
    //   #7591	-> 45368
    //   #7590	-> 45377
    //   #7592	-> 45382
    //   #7596	-> 45388
    //   #7597	-> 45399
    //   #7598	-> 45416
    //   #7599	-> 45422
    //   #7600	-> 45434
    //   #7599	-> 45439
    //   #7600	-> 45445
    //   #7601	-> 45450
    //   #7596	-> 45470
    //   #7602	-> 45480
    //   #7595	-> 45482
    //   #7604	-> 45487
    //   #7605	-> 45497
    //   #7606	-> 45505
    //   #7607	-> 45533
    //   #7608	-> 45553
    //   #7607	-> 45563
    //   #7608	-> 45566
    //   #7609	-> 45572
    //   #7610	-> 45582
    //   #7606	-> 45588
    //   #7605	-> 45593
    //   #7612	-> 45609
    //   #7613	-> 45619
    //   #7614	-> 45634
    //   #7615	-> 45638
    //   #7616	-> 45644
    //   #7617	-> 45663
    //   #7618	-> 45674
    //   #7619	-> 45680
    //   #7620	-> 45695
    //   #7621	-> 45710
    //   #7622	-> 45812
    //   #7623	-> 45822
    //   #7624	-> 45826
    //   #7622	-> 45832
    //   #7625	-> 45840
    //   #7621	-> 45842
    //   #7625	-> 45845
    //   #7612	-> 45851
    //   #7628	-> 45856
    //   #7631	-> 45861
    //   #7632	-> 45883
    //   #7633	-> 45887
    //   #7634	-> 45900
    //   #7635	-> 45916
    //   #7637	-> 45938
    //   #7640	-> 45942
    //   #7641	-> 45952
    //   #7642	-> 46034
    //   #7644	-> 46126
    //   #7645	-> 46203
    //   #7647	-> 46256
    //   #7648	-> 46268
    //   #7649	-> 46370
    //   #7650	-> 46390
    //   #7651	-> 46406
    //   #7649	-> 46412
    //   #7651	-> 46420
    //   #7648	-> 46422
    //   #7647	-> 46425
    //   #7652	-> 46430
    //   #7653	-> 46459
    //   #7652	-> 46537
    //   #7656	-> 46542
    //   #7661	-> 46547
    //   #7662	-> 46622
    //   #7666	-> 46633
    //   #7697	-> 46658
    //   #7699	-> 46663
    //   #7700	-> 46682
    //   #7701	-> 46698
    //   #7702	-> 46717
    //   #7699	-> 46723
    //   #7703	-> 46728
    //   #7707	-> 46733
    //   #7708	-> 46743
    //   #7710	-> 46745
    //   #7711	-> 46755
    //   #7709	-> 46757
    //   #7712	-> 46762
    //   #7713	-> 46772
    //   #7716	-> 46773
    // Local variable table:
    //   start	length	slot	name	descriptor
    //   0	46776	0	this	Lcom/js/oa/eform/bean/CustomFormEJBBean;
    //   0	46776	1	field	Ljava/lang/String;
    //   0	46776	2	infoId	Ljava/lang/String;
    //   0	46776	3	pageId	Ljava/lang/String;
    //   0	46776	4	hideField	Ljava/lang/String;
    //   0	46776	5	domainId	Ljava/lang/String;
    //   0	46776	6	fieldId	Ljava/lang/String;
    //   0	46776	7	fromDraft	Ljava/lang/String;
    //   0	46776	8	computeFieldStr	Ljava/lang/String;
    //   0	46776	9	request	Ljavax/servlet/http/HttpServletRequest;
    //   4	46772	10	html	Ljava/lang/String;
    //   8	46768	11	temp	Ljava/lang/String;
    //   40	46736	12	tempArr	[Ljava/lang/String;
    //   46	46730	13	fieldTemp	[[Ljava/lang/String;
    //   50	46726	14	type	Ljava/lang/String;
    //   59	46717	15	now	Ljava/util/Date;
    //   62	46714	16	dbopt	Lcom/js/oa/userdb/util/DbOpt;
    //   65	46711	17	isNum	Z
    //   177	46556	18	fieldValue	Ljava/lang/String;
    //   235	66	19	value1	Ljava/lang/String;
    //   256	45	20	value2	Ljava/lang/String;
    //   263	38	21	value11	D
    //   270	31	23	value22	D
    //   283	18	25	laterValue	D
    //   377	234	19	pointNum	I
    //   403	208	20	fillin	Ljava/lang/String;
    //   408	203	21	nf	Ljava/text/NumberFormat;
    //   493	43	22	x	I
    //   559	47	22	nowNum	I
    //   563	43	23	x	I
    //   701	5	19	e	Ljava/lang/Exception;
    //   715	46018	19	maxlen	I
    //   1939	192	20	temp3	Ljava/lang/String;
    //   2492	350	20	onblur	Ljava/lang/String;
    //   3733	19	20	parentId	Ljava/lang/String;
    //   3792	211	20	hSession	Ljavax/servlet/http/HttpSession;
    //   3801	202	21	map	Ljava/util/Map;
    //   4158	462	20	table	Ljava/lang/String;
    //   4164	456	21	data	[[Ljava/lang/String;
    //   4352	263	22	i	I
    //   4697	5	20	sql	Ljava/lang/String;
    //   4717	565	20	sql	Ljava/lang/String;
    //   4641	641	21	dataSourceName	Ljava/lang/String;
    //   4732	550	22	data	[[Ljava/lang/String;
    //   4735	547	23	dbo	Lcom/js/oa/userdb/util/DbOpt;
    //   4769	86	24	dbType	Ljava/lang/String;
    //   4791	45	25	lang	Ljava/lang/String;
    //   4900	20	24	e3	Ljava/lang/Exception;
    //   5014	263	24	i	I
    //   5285	361	20	i	I
    //   5772	617	20	table	Ljava/lang/String;
    //   5778	611	21	data	[[Ljava/lang/String;
    //   5872	5	22	e3	Ljava/lang/Exception;
    //   5971	413	22	i	I
    //   6466	5	20	sql	Ljava/lang/String;
    //   6486	715	20	sql	Ljava/lang/String;
    //   6410	791	21	dataSourceName	Ljava/lang/String;
    //   6501	700	22	data	[[Ljava/lang/String;
    //   6504	697	23	dbo	Lcom/js/oa/userdb/util/DbOpt;
    //   6538	86	24	dbType	Ljava/lang/String;
    //   6560	45	25	lang	Ljava/lang/String;
    //   6669	20	24	e3	Ljava/lang/Exception;
    //   6783	413	24	i	I
    //   7204	511	20	i	I
    //   7995	19	20	parentId	Ljava/lang/String;
    //   8054	211	20	hSession	Ljavax/servlet/http/HttpSession;
    //   8063	202	21	map	Ljava/util/Map;
    //   8416	465	20	table	Ljava/lang/String;
    //   8422	459	21	data	[[Ljava/lang/String;
    //   8610	266	22	i	I
    //   8958	5	20	sql	Ljava/lang/String;
    //   8978	568	20	sql	Ljava/lang/String;
    //   8902	644	21	dataSourceName	Ljava/lang/String;
    //   8993	553	22	data	[[Ljava/lang/String;
    //   8996	550	23	dbo	Lcom/js/oa/userdb/util/DbOpt;
    //   9030	86	24	dbType	Ljava/lang/String;
    //   9052	45	25	lang	Ljava/lang/String;
    //   9161	20	24	e3	Ljava/lang/Exception;
    //   9275	266	24	i	I
    //   9549	383	20	i	I
    //   10058	615	20	table	Ljava/lang/String;
    //   10064	609	21	data	[[Ljava/lang/String;
    //   10252	416	22	i	I
    //   10750	5	20	sql	Ljava/lang/String;
    //   10770	718	20	sql	Ljava/lang/String;
    //   10694	794	21	dataSourceName	Ljava/lang/String;
    //   10785	703	22	data	[[Ljava/lang/String;
    //   10788	700	23	dbo	Lcom/js/oa/userdb/util/DbOpt;
    //   10822	86	24	dbType	Ljava/lang/String;
    //   10844	45	25	lang	Ljava/lang/String;
    //   10953	20	24	e3	Ljava/lang/Exception;
    //   11067	416	24	i	I
    //   11491	716	20	i	I
    //   12625	5138	20	selectedValue	[[Ljava/lang/String;
    //   12734	119	21	i	I
    //   12942	115	21	i	I
    //   13704	19	21	parentId	Ljava/lang/String;
    //   13763	277	21	hSession	Ljavax/servlet/http/HttpSession;
    //   13772	268	22	map	Ljava/util/Map;
    //   13970	70	23	submitPerson	Ljava/lang/String;
    //   14195	257	21	table	Ljava/lang/String;
    //   14201	251	22	data	[[Ljava/lang/String;
    //   14223	85	23	col	Ljava/lang/String;
    //   14328	119	23	i	I
    //   14529	5	21	sql	Ljava/lang/String;
    //   14549	415	21	sql	Ljava/lang/String;
    //   14473	491	22	dataSourceName	Ljava/lang/String;
    //   14561	403	23	submitPerson	Ljava/lang/String;
    //   14634	330	24	data	[[Ljava/lang/String;
    //   14637	327	25	dbo	Lcom/js/oa/userdb/util/DbOpt;
    //   14671	86	26	dbType	Ljava/lang/String;
    //   14693	45	27	lang	Ljava/lang/String;
    //   14802	20	26	e3	Ljava/lang/Exception;
    //   14840	119	26	i	I
    //   14967	212	21	i	I
    //   15305	745	21	table	Ljava/lang/String;
    //   15311	739	22	data	[[Ljava/lang/String;
    //   15333	85	23	col	Ljava/lang/String;
    //   15438	115	23	i	I
    //   16127	5	21	sql	Ljava/lang/String;
    //   16147	903	21	sql	Ljava/lang/String;
    //   16071	979	22	dataSourceName	Ljava/lang/String;
    //   16159	891	23	submitPerson	Ljava/lang/String;
    //   16232	818	24	data	[[Ljava/lang/String;
    //   16235	815	25	dbo	Lcom/js/oa/userdb/util/DbOpt;
    //   16269	86	26	dbType	Ljava/lang/String;
    //   16291	45	27	lang	Ljava/lang/String;
    //   16400	20	26	e3	Ljava/lang/Exception;
    //   16438	115	26	i	I
    //   17053	213	21	i	I
    //   18504	658	21	timeStr	Ljava/lang/String;
    //   19166	3478	22	timeString	Ljava/lang/String;
    //   19297	1145	23	readDate	Ljava/lang/String;
    //   19301	1141	24	readMinutes	Ljava/lang/String;
    //   19305	1137	25	readHours	Ljava/lang/String;
    //   19309	1133	26	readSecond	Ljava/lang/String;
    //   20465	399	23	readSecond	Ljava/lang/String;
    //   20469	395	24	readMinutes	Ljava/lang/String;
    //   20473	391	25	readHours	Ljava/lang/String;
    //   20477	387	26	readDate	Ljava/lang/String;
    //   21115	1414	23	hours	I
    //   21118	1411	24	minutes	I
    //   21121	1408	25	second	I
    //   21124	1405	26	flagstrhours	Z
    //   21399	380	27	i	I
    //   21408	356	28	strhours	Ljava/lang/String;
    //   21848	248	27	i	I
    //   21857	224	28	strminutes	Ljava/lang/String;
    //   22182	248	27	i	I
    //   22191	224	28	strsecond	Ljava/lang/String;
    //   22842	239	23	hiddenHtml	Ljava/lang/String;
    //   22881	200	24	hiddenvalue	Ljava/lang/String;
    //   23749	976	23	automaticNumberReCalculation	Ljava/lang/String;
    //   25363	553	24	editType	Ljava/lang/String;
    //   25416	500	25	temp1	Ljava/lang/String;
    //   25641	275	26	temp2	Ljava/lang/String;
    //   25930	2009	24	height	I
    //   26233	1026	25	saveNameStr	Ljava/lang/String;
    //   26294	37	26	saveNameTemp	Ljava/lang/String;
    //   26237	1022	27	fileNameStr	Ljava/lang/String;
    //   26311	20	28	fileNameTemp	Ljava/lang/String;
    //   26256	191	29	saveNameArr	[Ljava/lang/String;
    //   26262	185	30	fileNameArr	[Ljava/lang/String;
    //   26334	113	31	i	I
    //   26473	699	29	file	[Ljava/lang/String;
    //   26485	687	30	saveName	[Ljava/lang/String;
    //   26497	675	31	fileName	[Ljava/lang/String;
    //   26509	663	32	userAgent	Ljava/lang/String;
    //   26512	660	33	flag	Z
    //   26569	223	34	i	I
    //   26636	140	35	url	Ljava/lang/String;
    //   26641	135	36	methord	Ljava/lang/String;
    //   26881	88	34	url	Ljava/lang/String;
    //   26978	194	34	url	Ljava/lang/String;
    //   27263	671	25	saveNameStr	Ljava/lang/String;
    //   27296	153	26	saveNameTemp	Ljava/lang/String;
    //   27267	667	27	fileNameStr	Ljava/lang/String;
    //   27313	136	28	fileNameTemp	Ljava/lang/String;
    //   27323	126	29	saveNameArr	[Ljava/lang/String;
    //   27333	116	30	fileNameArr	[Ljava/lang/String;
    //   27336	113	31	i	I
    //   28196	217	25	bjzw2017	Ljava/lang/String;
    //   28787	217	25	bjzw2017	Ljava/lang/String;
    //   29362	217	25	bjzw2017	Ljava/lang/String;
    //   29804	281	25	qian	[Ljava/lang/String;
    //   29825	260	26	show	Ljava/lang/String;
    //   29858	128	27	srcOne	Ljava/lang/String;
    //   30094	555	25	hSession	Ljavax/servlet/http/HttpSession;
    //   30109	540	26	userId	Ljava/lang/String;
    //   30117	532	27	qian	[Ljava/lang/String;
    //   30122	527	28	srcTwo	Ljava/lang/String;
    //   30187	462	29	mustWrite	Ljava/lang/String;
    //   30389	260	30	shenPi	Ljava/lang/String;
    //   30869	211	25	shenPi1	Ljava/lang/String;
    //   31333	173	25	format	Ljava/text/SimpleDateFormat;
    //   31347	159	26	datenew	Ljava/lang/String;
    //   31624	186	25	value	Ljava/lang/String;
    //   31628	182	26	title	Ljava/lang/String;
    //   31633	177	27	URL	Ljava/lang/String;
    //   31674	12	28	strings	[Ljava/lang/String;
    //   31831	498	25	value	Ljava/lang/String;
    //   31835	494	26	title	Ljava/lang/String;
    //   31839	490	27	URL	Ljava/lang/String;
    //   31880	12	28	strings	[Ljava/lang/String;
    //   32447	266	25	phoneNum	Ljava/lang/String;
    //   32451	262	26	telAndSms	Ljava/lang/String;
    //   32580	133	27	phone	Ljava/lang/String;
    //   32585	128	28	show	Ljava/lang/String;
    //   32734	440	25	phoneNum	Ljava/lang/String;
    //   33504	192	25	temp3	Ljava/lang/String;
    //   34063	203	25	temp3	Ljava/lang/String;
    //   34275	941	25	jisuanSet	Ljava/lang/String;
    //   34324	352	26	setStr	[Ljava/lang/String;
    //   34419	88	27	endStr	Ljava/lang/String;
    //   34422	80	28	i	I
    //   34533	51	27	i	I
    //   36077	155	26	abString	Ljava/lang/String;
    //   36262	593	26	curUserId	Ljava/lang/String;
    //   36269	586	27	orgList	Ljava/util/List;
    //   36350	221	28	temp3	Ljava/lang/String;
    //   36626	229	28	select	Ljava/lang/String;
    //   36629	121	29	s	I
    //   36648	82	30	orgInfo	[Ljava/lang/String;
    //   39774	568	26	curUserId2	Ljava/lang/String;
    //   39781	561	27	orgList2	Ljava/util/List;
    //   39868	197	28	temp3	Ljava/lang/String;
    //   40120	222	28	select	Ljava/lang/String;
    //   40123	114	29	s	I
    //   40142	75	30	orgInfo	[Ljava/lang/String;
    //   43287	1391	26	df	Ljava/text/DecimalFormat;
    //   43291	1387	27	money	Ljava/lang/String;
    //   43295	1383	28	unit	Ljava/lang/String;
    //   43299	1379	29	upperField	Ljava/lang/String;
    //   43929	187	30	fieldValueTemp	Ljava/lang/String;
    //   44160	401	30	onblurTemp	Ljava/lang/String;
    //   44718	122	30	temp_302	Ljava/lang/String;
    //   45068	193	31	table	Ljava/lang/String;
    //   45074	187	32	data	[[Ljava/lang/String;
    //   45186	75	33	i	I
    //   45382	474	31	table	Ljava/lang/String;
    //   45388	468	32	data	[[Ljava/lang/String;
    //   45500	109	33	i	I
    //   45887	660	31	fieldValueTemp	Ljava/lang/String;
    //   46745	22	18	e	Ljava/lang/Exception;
    // Local variable type table:
    //   start	length	slot	name	signature
    //   3801	202	21	map	Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
    //   8063	202	21	map	Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
    //   13772	268	22	map	Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
    //   36269	586	27	orgList	Ljava/util/List<[Ljava/lang/String;>;
    //   39781	561	27	orgList2	Ljava/util/List<[Ljava/lang/String;>;
    // Exception table:
    //   from	to	target	type
    //   65	46738	46743	java/lang/Exception
    //   65	46767	46772	finally
    //   177	694	699	java/lang/Exception
    //   4164	4251	4256	java/lang/Exception
    //   4735	4893	4898	java/lang/Exception
    //   5778	5865	5870	java/lang/Exception
    //   6504	6662	6667	java/lang/Exception
    //   8422	8509	8514	java/lang/Exception
    //   8996	9154	9159	java/lang/Exception
    //   10064	10151	10156	java/lang/Exception
    //   10788	10946	10951	java/lang/Exception
    //   14201	14303	14308	java/lang/Exception
    //   14637	14795	14800	java/lang/Exception
    //   15311	15413	15418	java/lang/Exception
    //   16235	16393	16398	java/lang/Exception
    //   33701	33732	33737	java/lang/Exception
    //   45074	45161	45166	java/lang/Exception
    //   45388	45475	45480	java/lang/Exception
    //   46745	46750	46755	java/sql/SQLException
  }
  
  public String[][] getQueryFormByTblId(String domainId, String tableId) {
    DbOpt dbopt = null;
    String[][] result = (String[][])null;
    try {
      dbopt = new DbOpt();
      result = dbopt.executeQueryToStrArr2("select distinct a.PAGE_ID,a.PAGE_NAME from TPAGE a,TAREA b ,TTABLE c where a.PAGE_ID=b.PAGE_ID and b.AREA_NAME='form1' and b.AREA_TABLE=c.TABLE_NAME and c.TABLE_ID=" + 
          tableId + " and a.DOMAIN_ID=" + 
          domainId);
      dbopt.close();
    } catch (Exception e) {
      try {
        dbopt.close();
      } catch (SQLException sQLException) {}
      logger.error(
          "CustomFormEJBBean error on getQueryFormByTblId information:" + 
          e.getMessage());
    } finally {}
    return result;
  }
  
  public String[][] getQueryMainFormByTblId(String domainId, String tableId) {
    DbOpt dbopt = null;
    String[][] result = (String[][])null;
    try {
      dbopt = new DbOpt();
      result = dbopt.executeQueryToStrArr2("select distinct a.PAGE_ID,a.PAGE_NAME from TPAGE a,TAREA b ,TTABLE c where a.PAGE_ID=b.PAGE_ID and b.AREA_NAME='form1' and b.AREA_TABLE=c.TABLE_NAME and c.TABLE_ID=" + 
          Long.valueOf(tableId) + " and a.page_type=0 and a.DOMAIN_ID=" + 
          Long.valueOf(domainId));
      dbopt.close();
    } catch (Exception e) {
      try {
        dbopt.close();
      } catch (SQLException sQLException) {}
      logger.error(
          "CustomFormEJBBean error on getQueryFormByTblId information:" + 
          e.getMessage());
    } finally {}
    return result;
  }
  
  public String[][] loadDataBySQL(String sql, String col) {
    DbOpt dbopt = null;
    String[][] result = (String[][])null;
    try {
      dbopt = new DbOpt();
      IO2File.printFile(sql, "流程办结导出");
      result = dbopt.executeQueryToStrArr2(sql, Integer.parseInt(col));
      dbopt.close();
    } catch (Exception e) {
      try {
        dbopt.close();
      } catch (SQLException sQLException) {}
      logger.error(
          "CustomFormEJBBean error on loadDataBySQL information:" + 
          e.getMessage());
      e.printStackTrace();
    } finally {}
    return result;
  }
  
  public String getComputeFieldHTML(String formId) {
    StringBuffer computeFieldHTML = new StringBuffer();
    DbOpt dbopt = null;
    try {
      dbopt = new DbOpt();
      String[][] computeField = dbopt.executeQueryToStrArr2("select distinct a.field_name,a.field_value from tfield a,ttable b,tarea d where field_show=203 and d.area_name='form1' and d.area_table=b.table_name and b.table_id=a.field_table and d.page_id=" + 
          formId);
      if (computeField != null)
        for (int i = 0; i < computeField.length; i++) {
          String temp = computeField[i][1];
          String val = "";
          String val2 = "";
          if (temp != null && temp.length() > 0)
            if (temp.indexOf("[") >= 0 && temp.indexOf("]") > 0) {
              temp = temp.substring(1, temp.length() - 1);
              if (temp.indexOf("].[") > -1) {
                String[] setStr = temp.split("\\]\\.\\[");
                val = setStr[0];
                if (!setStr[1].equals("")) {
                  val2 = setStr[1];
                  computeFieldHTML.append("<input type=hidden name=\"computeFieldToUpper_" + computeField[i][0] + "\" id=\"computeFieldToUpper_" + computeField[i][0] + "\" value=\"")
                    .append(val2).append("\"/>");
                } 
              } else {
                val = temp;
              } 
            } else {
              val = temp;
            }  
          computeFieldHTML.append("<input type=hidden name=\"computeField\" id=\"computeField\" value=\"").append(computeField[i][0])
            .append("\"/><input type=hidden name=\"computeFieldValue\" id=\"computeFieldValue\" value=\"")
            .append(val).append("\"/>");
        }  
      computeField = dbopt.executeQueryToStrArr2("select distinct a.field_name,a.field_value from tfield a,ttable b,tarea d where (field_show=107 or field_show=108 or field_show=109) and d.area_name='form1' and d.area_table=b.table_name and b.table_id=a.field_table and d.page_id=" + formId);
      if (computeField != null)
        for (int i = 0; i < computeField.length; i++)
          computeFieldHTML.append("<input type=hidden name=\"needCheckField\" id=\"needCheckField\" value=\"")
            .append(computeField[i][0])
            .append("\"/>");  
      dbopt.close();
    } catch (Exception e) {
      try {
        dbopt.close();
      } catch (SQLException sQLException) {}
      e.printStackTrace();
    } finally {}
    return computeFieldHTML.toString();
  }
  
  public String getAutoCode(String fieldName, String fieldId) {
    String newCode = "";
    String[] codeArr = (String[])null;
    DbOpt dbopt = null;
    String codeHead = "", codeStart = "", codeInsert = "", insertLen = "0";
    String codeAdd = "", currentValue = "";
    try {
      dbopt = new DbOpt();
      String[][] codeValue = dbopt.executeQueryToStrArr2(
          "select field_value,field_codevalue from tfield where field_id=" + fieldId);
      if (codeValue != null && codeValue.length > 0) {
        String[] temp = (codeValue[0][0] == null) ? null : 
          codeValue[0][0].split("=");
        if (temp != null && temp.length > 0) {
          codeHead = temp[0];
          codeStart = temp[1];
          codeInsert = temp[2];
          insertLen = temp[3];
          codeAdd = temp[4];
        } 
        int nowYear = (new Date()).getYear() + 1900;
        int nowMonth = (new Date()).getMonth() + 1;
        int nowDay = (new Date()).getDate();
        String fieldValue = String.valueOf(codeHead) + "=" + codeStart + "=" + codeInsert + "=" + insertLen + "=" + codeAdd + "=@$@flag@$@=" + nowYear + "=" + nowMonth + "=" + codeStart;
        boolean flag = false;
        if (temp.length < 7) {
          fieldValue = fieldValue.replace("@$@flag@$@", "a");
          dbopt.executeUpdate("update tfield set field_value='" + fieldValue + "' where field_id=" + fieldId);
        } else {
          if (temp[5].equals("b") && !temp[6].equals((new StringBuilder(String.valueOf(nowYear))).toString())) {
            fieldValue = fieldValue.replace("@$@flag@$@", "b");
            flag = true;
          } 
          if (temp[5].equals("c") && !temp[7].equals((new StringBuilder(String.valueOf(nowMonth))).toString())) {
            fieldValue = fieldValue.replace("@$@flag@$@", "c");
            flag = true;
          } 
          if (temp[5].equals("d") && (!temp[6].equals((new StringBuilder(String.valueOf(nowYear))).toString()) || !temp[7].equals((new StringBuilder(String.valueOf(nowMonth))).toString()))) {
            fieldValue = fieldValue.replace("@$@flag@$@", "d");
            flag = true;
          } 
          if (flag) {
            dbopt.executeUpdate("update tfield set field_value='" + fieldValue + "' where field_id=" + fieldId);
            dbopt.executeUpdate("update tfield set field_codevalue=" + codeStart + " where field_id=" + fieldId);
          } 
        } 
        currentValue = dbopt.executeQueryToStr("select field_codevalue from tfield where field_id=" + fieldId);
        int len = (currentValue == null) ? 0 : currentValue.length();
        for (int j = 0; j < Integer.parseInt(insertLen) - len; j++)
          currentValue = String.valueOf(codeInsert) + currentValue; 
        if (codeHead.indexOf("@$@year@$@") >= 0)
          codeHead = codeHead.replace("@$@year@$@", nowYear); 
        if (codeHead.indexOf("@$@month@$@") >= 0)
          codeHead = codeHead.replace("@$@month@$@", (nowMonth < 10) ? ("0" + nowMonth) : (new StringBuilder(String.valueOf(nowMonth))).toString()); 
        if (codeHead.indexOf("@$@day@$@") >= 0)
          codeHead = codeHead.replace("@$@day@$@", (nowDay < 10) ? ("0" + nowDay) : (new StringBuilder(String.valueOf(nowDay))).toString()); 
        newCode = String.valueOf(codeHead) + currentValue;
      } 
      dbopt.close();
    } catch (Exception e) {
      try {
        dbopt.close();
      } catch (SQLException sQLException) {}
    } 
    return newCode;
  }
  
  public String[][] getCommentField(String formId) {
    DbOpt dbopt = null;
    String[][] result = (String[][])null;
    try {
      dbopt = new DbOpt();
      result = dbopt.executeQueryToStrArr2("select field_id,field_name,field_desname from tfield a,ttable b,tarea c where a.field_table=b.table_id and c.area_name='form1' and b.table_name=c.area_table and c.page_id=" + 
          formId, 3);
      dbopt.close();
    } catch (Exception e) {
      try {
        dbopt.close();
      } catch (SQLException sQLException) {}
      logger.error(
          "CustomFormEJBBean error on getCommentField information:" + 
          e.getMessage());
    } finally {}
    return result;
  }
  
  public String getFieldShowValue(String field, String show, String fieldValue, String fieldId) {
    return getFieldShowValue(field, show, fieldValue, fieldId, (HttpServletRequest)null);
  }
  
  public String getFieldShowValue(String field, String show, String fieldValue, String fieldId, HttpServletRequest request) {
    String value = fieldValue;
    if (fieldValue.contains("@#@")) {
      value = fieldValue.split("@#@")[1];
    } else {
      DbOpt dbopt = null;
      try {
        dbopt = new DbOpt();
        String temp = dbopt.executeQueryToStr(
            "select field_value from tfield where field_id=" + fieldId);
        if (temp.startsWith("*")) {
          String parentId = temp.substring(temp.indexOf(".*[") + 3, temp.length() - 1);
          temp = (new BaseSetEJBBean()).getValue(parentId);
        } else if (temp.startsWith("#[interface:")) {
          temp = InitWorkFlowData.getShowContext(temp, fieldValue);
        } 
        if (temp.startsWith("@")) {
          String table = temp.substring(temp.indexOf("][") + 2, 
              temp.length() - 1);
          String[][] data = (String[][])null;
          try {
            data = dbopt.executeQueryToStrArr2("select " + 
                table.substring(0, table.indexOf(".")) + "_id," + 
                table.substring(table.indexOf(".") + 1, 
                  table.length()) + " from " + 
                table.substring(0, table.indexOf(".")));
          } catch (Exception exception) {}
          if (data != null)
            for (int i = 0; i < data.length; i++) {
              if (data[i][0].equals(fieldValue) && !"104".equals(show)) {
                value = data[i][1];
              } else if (("," + fieldValue + ",").indexOf("," + 
                  data[i][0] + ",") >= 0) {
                value = String.valueOf(value) + data[i][1] + ",";
              } 
            }  
        } else if (temp.startsWith("$")) {
          String sql, dataSourceName = "system";
          if (temp.indexOf("].$[") > 0) {
            dataSourceName = temp.substring(2, temp.indexOf("].$["));
            sql = temp.substring(temp.indexOf("].$[") + 4, temp.length() - 1);
          } else {
            sql = temp.substring(2, temp.length() - 1);
          } 
          if (request != null)
            sql = InitWorkFlowData.getValueFromRequest(request, sql); 
          String[][] data = (String[][])null;
          DbOpt dbo = null;
          try {
            if (!"system".equals(dataSourceName)) {
              dbo = new DbOpt(dataSourceName);
              String dbType = SystemCommon.getUserDatabaseType(dataSourceName);
              if (dbType.indexOf("oracle") >= 0) {
                String lang = SystemCommon.getUserDatabaseLang(dataSourceName);
                if (!"".equals(lang))
                  dbo.executeUpdate("ALTER SESSION SET NLS_LANGUAGE='" + lang + "'"); 
              } 
              data = dbo.executeQueryToStrArr2(sql);
              dbo.close();
            } else {
              if (sql.length() > 0 && sql.indexOf("@$@selValue@$@") < 0) {
                if (sql.toUpperCase().indexOf(" WHERE ") > 0) {
                  String selectPara = sql.substring(0, sql.toUpperCase().indexOf(" WHERE "));
                  String selectParaId = sql.substring(sql.indexOf(" ") + 1, sql.indexOf(","));
                  sql = String.valueOf(selectPara) + " where " + selectParaId + "='" + fieldValue + "'";
                } 
                data = dbopt.executeQueryToStrArr2(sql);
              } 
              if (data == null || data.length < 1) {
                String sqlTmp = sql;
                String selectPara = sql.substring(0, sql.toUpperCase().indexOf(" WHERE "));
                String selectParaId = sql.substring(sql.indexOf(" ") + 1, sql.indexOf(","));
                sql = String.valueOf(selectPara) + " where " + selectParaId + "='" + fieldValue + "'";
                data = dbopt.executeQueryToStrArr2(sql);
              } 
            } 
          } catch (Exception e3) {
            if (dbo != null)
              dbo.close(); 
            e3.printStackTrace();
          } 
          if (data != null)
            for (int i = 0; i < data.length; i++) {
              if (data[i][0].equals(fieldValue) && !"104".equals(show)) {
                value = data[i][1];
              } else if (("," + fieldValue + ",").indexOf("," + 
                  data[i][0] + ",") >= 0) {
                value = String.valueOf(value) + data[i][1] + ",";
              } 
            }  
        } else {
          String[] tempArr = temp.split(";");
          if (tempArr == null)
            tempArr = new String[0]; 
          for (int i = 0; i < tempArr.length; i++) {
            if (tempArr[i] != null && tempArr[i].trim().length() > 0 && 
              tempArr[i].indexOf("/") >= 0 && 
              tempArr[i].indexOf("/") < tempArr[i].length() - 1) {
              if (tempArr[i].split("/")[0].equals(fieldValue) && 
                !"104".equals(show)) {
                value = tempArr[i].split("/")[1];
                break;
              } 
              if (("," + fieldValue + ",").indexOf("," + 
                  tempArr[i].split("/")[0] + ",") >= 0)
                value = String.valueOf(value) + tempArr[i].split("/")[1] + ","; 
            } 
          } 
        } 
        dbopt.close();
      } catch (Exception ee) {
        try {
          dbopt.close();
        } catch (SQLException sQLException) {}
        value = "";
      } 
    } 
    return (value.trim().length() < 1) ? "" : value;
  }
  
  public String getComment(String fieldName, String recordId) {
    String sql = "select c.dealwithemployeecomment from jsf_dealwithcomment c join jsf_dealwith d on c.wf_dealwith_id=d.wf_dealwith_id where d.databaserecord_id=" + 
      recordId + " and c.commentfield='" + fieldName + "'";
    DataSourceBase base = new DataSourceBase();
    String result = "";
    try {
      base.begin();
      ResultSet rs = base.executeQuery(sql);
      while (rs.next())
        result = String.valueOf(result) + ((rs.getString(1) == null) ? "" : (String.valueOf(rs.getString(1)) + ",")); 
      base.end();
    } catch (Exception e) {
      base.end();
      e.printStackTrace();
    } 
    return result;
  }
  
  public String getFieldShowValue(String field, String show, String fieldValue) {
    String value = "";
    DbOpt dbopt = null;
    try {
      dbopt = new DbOpt();
      String temp = dbopt.executeQueryToStr(
          "select field_value from tfield where field_name='" + field + 
          "'");
      if (temp.startsWith("@")) {
        String table = temp.substring(temp.indexOf("][") + 2, 
            temp.length() - 1);
        String[][] data = (String[][])null;
        try {
          data = dbopt.executeQueryToStrArr2("select " + 
              table.substring(0, table.indexOf(".")) + "_id," + 
              table.substring(table.indexOf(".") + 1, 
                table.length()) + " from " + 
              table.substring(0, table.indexOf(".")));
        } catch (Exception exception) {}
        if (data != null)
          for (int i = 0; i < data.length; i++) {
            if (data[i][0].equals(fieldValue) && !"104".equals(show)) {
              value = data[i][1];
            } else if (("," + fieldValue + ",").indexOf("," + 
                data[i][0] + ",") >= 0) {
              value = String.valueOf(value) + data[i][1] + ",";
            } 
          }  
      } else {
        String[] tempArr = temp.split(";");
        if (tempArr == null)
          tempArr = new String[0]; 
        for (int i = 0; i < tempArr.length; i++) {
          if (tempArr[i] != null && tempArr[i].trim().length() > 0 && 
            tempArr[i].indexOf("/") >= 0 && 
            tempArr[i].indexOf("/") < tempArr[i].length() - 1) {
            if (tempArr[i].split("/")[0].equals(fieldValue) && 
              !"104".equals(show)) {
              value = tempArr[i].split("/")[1];
              break;
            } 
            if (("," + fieldValue + ",").indexOf("," + 
                tempArr[i].split("/")[0] + ",") >= 0)
              value = String.valueOf(value) + tempArr[i].split("/")[1] + ","; 
          } 
        } 
      } 
      dbopt.close();
    } catch (Exception ee) {
      try {
        dbopt.close();
      } catch (SQLException sQLException) {}
      value = "";
    } finally {}
    return (value.trim().length() < 1) ? "" : value;
  }
  
  private String changeToBig(String input) {
    String s1 = "零壹贰叁肆伍陆柒捌玖";
    String s4 = "分角整元拾佰仟万拾佰仟亿拾佰仟";
    String temp = "";
    String result = "";
    if (input == null || input.length() < 1)
      return ""; 
    temp = input.trim();
    try {
      float f = Float.parseFloat(temp);
    } catch (Exception e) {
      return "";
    } 
    int len = 0;
    if (String.valueOf(temp).startsWith("-"))
      temp = String.valueOf(temp).replace("-", ""); 
    if (temp.indexOf(".") == -1) {
      len = temp.length();
    } else {
      len = temp.indexOf(".");
    } 
    if (len > s4.length() - 3)
      return ""; 
    int n2 = 0;
    String num = "";
    String unit = "";
    int add = 0;
    if (len > 7)
      return input; 
    if (len == 7) {
      add = 3;
      int n1 = Integer.parseInt(String.valueOf(temp.charAt(0)));
      result = result.concat(s1.substring(n1, n1 + 1)).concat("佰");
      if (Integer.parseInt(String.valueOf(temp.charAt(1))) == 0 && 
        Integer.parseInt(String.valueOf(temp.charAt(2))) == 0)
        result = result.concat("万"); 
      if (Integer.parseInt(String.valueOf(temp.charAt(1))) == 0 && 
        Integer.parseInt(String.valueOf(temp.charAt(2))) != 0) {
        n1 = Integer.parseInt(String.valueOf(temp.charAt(2)));
        result = result.concat("零").concat(s1.substring(n1, n1 + 1))
          .concat("万");
      } 
      if (Integer.parseInt(String.valueOf(temp.charAt(1))) != 0 && 
        Integer.parseInt(String.valueOf(temp.charAt(2))) == 0) {
        n1 = Integer.parseInt(String.valueOf(temp.charAt(1)));
        result = result.concat(s1.substring(n1, n1 + 1)).concat("拾万");
      } 
      len = 4;
    } 
    if (len == 6) {
      add = 2;
      int n1 = Integer.parseInt(String.valueOf(temp.charAt(0)));
      result = result.concat(s1.substring(n1, n1 + 1)).concat("拾");
      if (Integer.parseInt(String.valueOf(temp.charAt(1))) == 0)
        result = result.concat("万"); 
      if (Integer.parseInt(String.valueOf(temp.charAt(1))) != 0) {
        n1 = Integer.parseInt(String.valueOf(temp.charAt(1)));
        result = result.concat(s1.substring(n1, n1 + 1)).concat("万");
      } 
      len = 4;
    } 
    if (len == 5) {
      add = 1;
      int n1 = Integer.parseInt(String.valueOf(temp.charAt(0)));
      result = result.concat(s1.substring(n1, n1 + 1)).concat("万");
      len = 4;
    } 
    int i;
    for (i = 0; i < len; i++) {
      int n1 = Integer.parseInt(String.valueOf(temp.charAt(i + add)));
      num = s1.substring(n1, n1 + 1);
      if (n1 != 0) {
        n1 = len - i + 2;
        unit = s4.substring(n1, n1 + 1);
      } else {
        unit = "";
      } 
      if (i != 0 && 
        Integer.parseInt(String.valueOf(temp.charAt(i - 1 + add))) == 0 && 
        Integer.parseInt(String.valueOf(temp.charAt(i + add))) == 0) {
        num = "";
        unit = "";
      } 
      result = result.concat(num).concat(unit);
    } 
    while (result.endsWith("零") && result.length() > "零".length())
      result = result.substring(0, result.length() - "零".length()); 
    result = result.concat("元");
    if (temp.indexOf(".") == -1) {
      len = temp.length();
      result = result.concat("整");
    } else {
      len = temp.indexOf(".");
    } 
    if (len < temp.length()) {
      unit = "";
      for (i = 0; i < temp.length() - len - 1; i++) {
        int n1 = Integer.parseInt(String.valueOf(temp.charAt(i + len + 1)));
        num = s1.substring(n1, n1 + 1);
        if (n1 != 0) {
          if (i == 0) {
            unit = "角";
          } else if (i == 1) {
            unit = "分";
          } else {
            unit = "";
          } 
        } else {
          unit = "";
        } 
        result = result.concat(num).concat(unit);
      } 
    } 
    while (result.endsWith("零") && result.length() > "零".length())
      result = result.substring(0, result.length() - "零".length()); 
    result = result.replaceAll("元元", "元");
    if (String.valueOf(temp).startsWith("-"))
      result = "负" + result; 
    return result;
  }
  
  public String pasteForm(String formId, String domainId, String userId, String orgId) throws Exception {
    Connection conn = null;
    Statement stmt = null;
    DbOpt dbopt = new DbOpt();
    try {
      conn = (new DataSourceBase()).getDataSource()
        .getConnection();
      stmt = conn.createStatement();
      String[] formArr = formId.split(",");
      List<String> areaList = new ArrayList();
      List newAreaList = new ArrayList();
      for (int i = 0; i < formArr.length; i++) {
        if (formArr[i] != null && !"".equals(formArr[i]))
          if (DbOpt.dbtype.indexOf("mssqlserver") >= 0) {
            String printPageId = "0";
            String sql = "select print_page_id from tpage where page_id=" + formArr[i];
            ResultSet rs = stmt.executeQuery(sql);
            if (rs.next())
              printPageId = rs.getString(1); 
            rs.close();
            sql = "insert into tpage(PAGE_NAME,PAGE_DES,PAGE_LIST,PAGE_REF,PAGE_PATH,PAGE_FILENAME,PAGE_OWNER,PAGE_DATE,PAGE_SESSION,PAGE_TYPE,PAGE_CONTENT,DOMAIN_ID,createdemp,createdorg) select '复件'+t.page_name,t.page_des,t.page_list,t.page_ref,t.page_path,t.page_filename,t.page_owner,t.page_date,t.page_session,t.page_type,t.page_content," + 
              
              domainId + "," + userId + "," + orgId + " from tpage t where t.page_id=" + printPageId;
            stmt.executeUpdate(sql);
            rs = stmt.executeQuery("select max(page_id) from tpage");
            rs.next();
            String newPrintPageId = rs.getString(1);
            rs.close();
            sql = "insert into tpage(PAGE_NAME,PAGE_DES,PAGE_LIST,PAGE_REF,PAGE_PATH,PAGE_FILENAME,PAGE_OWNER,PAGE_DATE,PAGE_SESSION,PAGE_TYPE,PAGE_CONTENT,DOMAIN_ID,print_page_id,createdemp,createdorg) select '复件'+t.page_name,t.page_des,t.page_list,t.page_ref,t.page_path,t.page_filename,t.page_owner,t.page_date,t.page_session,t.page_type,t.page_content," + 
              
              domainId + "," + newPrintPageId + "," + userId + "," + orgId + " from tpage t where t.page_id=" + formArr[i];
            stmt.executeUpdate(sql);
            rs = stmt.executeQuery("select max(page_id) from tpage");
            rs.next();
            String pageId = rs.getString(1);
            rs.close();
            rs = stmt.executeQuery("select area_id from tarea where page_id=" + formArr[i]);
            while (rs.next())
              areaList.add(rs.getString(1)); 
            rs.close();
            int j;
            for (j = 0; j < areaList.size(); j++) {
              sql = "insert into tarea (AREA_AREATMC,AREA_PAGE,AREA_NAME,AREA_TABLE, AREA_SHOW,AREA_SQL,AREA_ACTION,AREA_ALTERCOLOR,AREA_PAGECOUNT,AREA_SFXS ,AREA_REF,AREA_SQLEVENT,AREA_DES,AREA_COLUMNS,PAGE_ID,AREATYPE_ID) select t.AREA_AREATMC,t.AREA_PAGE,t.AREA_NAME,t.AREA_TABLE,t. AREA_SHOW,t.AREA_SQL,t.AREA_ACTION,t.AREA_ALTERCOLOR,t.AREA_PAGECOUNT,t.AREA_SFXS ,t.AREA_REF,t.AREA_SQLEVENT,t.AREA_DES,t.AREA_COLUMNS," + 
                pageId + ",t.AREATYPE_ID from tarea t where  t.area_id=" + 
                areaList.get(j).toString();
              stmt.executeUpdate(sql);
              rs = stmt.executeQuery("select max(area_id) from tarea");
              rs.next();
              String areaId = rs.getString(1);
              rs.close();
              sql = "insert into telt (PAGE_ID,AREA_ID,ELT_NAME,ELT_TYPE,ELT_EXEC,ELT_SHOWMC,ELT_VALUE,ELT_HIDE,ELT_FWYS,ELT_OPEN,ELT_LINK,ELT_CONTROL,ELT_XSTJ,ELT_JS,ELT_READONLY,ELT_DEFAULT,ELT_TABLE,ELT_YHZD,ELT_DES) select " + 
                pageId + "," + areaId + ",t.ELT_NAME,t.ELT_TYPE,t.ELT_EXEC,t.ELT_SHOWMC,t.ELT_VALUE,t.ELT_HIDE,t.ELT_FWYS,t.ELT_OPEN,t.ELT_LINK,t.ELT_CONTROL,t.ELT_XSTJ,t.ELT_JS,t.ELT_READONLY,t.ELT_DEFAULT,t.ELT_TABLE,t.ELT_YHZD,t.ELT_DES from telt t where t.page_id=" + 
                formArr[i] + " and t.area_id=" + areaList.get(j).toString();
              stmt.executeUpdate(sql);
            } 
            areaList.clear();
            rs = stmt.executeQuery("select area_id from tarea where page_id=" + printPageId);
            while (rs.next())
              areaList.add(rs.getString(1)); 
            rs.close();
            for (j = 0; j < areaList.size(); j++) {
              sql = "insert into tarea (AREA_AREATMC,AREA_PAGE,AREA_NAME,AREA_TABLE, AREA_SHOW,AREA_SQL,AREA_ACTION,AREA_ALTERCOLOR,AREA_PAGECOUNT,AREA_SFXS ,AREA_REF,AREA_SQLEVENT,AREA_DES,AREA_COLUMNS,PAGE_ID,AREATYPE_ID) select t.AREA_AREATMC,t.AREA_PAGE,t.AREA_NAME,t.AREA_TABLE,t. AREA_SHOW,t.AREA_SQL,t.AREA_ACTION,t.AREA_ALTERCOLOR,t.AREA_PAGECOUNT,t.AREA_SFXS ,t.AREA_REF,t.AREA_SQLEVENT,t.AREA_DES,t.AREA_COLUMNS," + 
                newPrintPageId + ",t.AREATYPE_ID from tarea t where  t.area_id=" + 
                areaList.get(j).toString();
              stmt.executeUpdate(sql);
              rs = stmt.executeQuery("select max(area_id) from tarea");
              rs.next();
              String areaId = rs.getString(1);
              rs.close();
              sql = "insert into telt (PAGE_ID,AREA_ID,ELT_NAME,ELT_TYPE,ELT_EXEC,ELT_SHOWMC,ELT_VALUE,ELT_HIDE,ELT_FWYS,ELT_OPEN,ELT_LINK,ELT_CONTROL,ELT_XSTJ,ELT_JS,ELT_READONLY,ELT_DEFAULT,ELT_TABLE,ELT_YHZD,ELT_DES) select " + 
                newPrintPageId + "," + areaId + ",t.ELT_NAME,t.ELT_TYPE,t.ELT_EXEC,t.ELT_SHOWMC,t.ELT_VALUE,t.ELT_HIDE,t.ELT_FWYS,t.ELT_OPEN,t.ELT_LINK,t.ELT_CONTROL,t.ELT_XSTJ,t.ELT_JS,t.ELT_READONLY,t.ELT_DEFAULT,t.ELT_TABLE,t.ELT_YHZD,t.ELT_DES from telt t where t.page_id=" + 
                printPageId + " and t.area_id=" + areaList.get(j).toString();
              stmt.executeUpdate(sql);
            } 
          } else if (DbOpt.dbtype.indexOf("oracle") >= 0) {
            String printPageId = "0";
            String sql = "select print_page_id from tpage where page_id=" + formArr[i];
            ResultSet rs = stmt.executeQuery(sql);
            if (rs.next())
              printPageId = rs.getString(1); 
            rs.close();
            rs = stmt.executeQuery("select hibernate_sequence.nextval from dual");
            rs.next();
            String newPrintPageId = rs.getString(1);
            rs.close();
            rs = stmt.executeQuery("select hibernate_sequence.nextval from dual");
            rs.next();
            String pageId = rs.getString(1);
            rs.close();
            sql = "insert into tpage(PAGE_ID,PAGE_NAME,PAGE_DES,PAGE_LIST,PAGE_REF,PAGE_PATH,PAGE_FILENAME,PAGE_OWNER,PAGE_DATE,PAGE_SESSION,PAGE_TYPE,PAGE_CONTENT,DOMAIN_ID,print_page_id,createdemp,createdorg) select " + 
              pageId + ",'复件'||t.page_name,t.page_des,t.page_list,t.page_ref,t.page_path,t.page_filename,t.page_owner,t.page_date,t.page_session,t.page_type,t.page_content," + 
              domainId + "," + newPrintPageId + "," + userId + "," + orgId + " from tpage t where t.page_id=" + formArr[i];
            stmt.executeUpdate(sql);
            sql = "insert into tpage(PAGE_ID,PAGE_NAME,PAGE_DES,PAGE_LIST,PAGE_REF,PAGE_PATH,PAGE_FILENAME,PAGE_OWNER,PAGE_DATE,PAGE_SESSION,PAGE_TYPE,PAGE_CONTENT,DOMAIN_ID,createdemp,createdorg) select " + 
              newPrintPageId + ",'复件'||t.page_name,t.page_des,t.page_list,t.page_ref,t.page_path,t.page_filename,t.page_owner,t.page_date,t.page_session,t.page_type,t.page_content," + 
              domainId + "," + userId + "," + orgId + " from tpage t where t.page_id=" + printPageId;
            stmt.executeUpdate(sql);
            rs = stmt.executeQuery("select area_id from tarea where page_id=" + formArr[i]);
            while (rs.next())
              areaList.add(rs.getString(1)); 
            rs.close();
            int j;
            for (j = 0; j < areaList.size(); j++) {
              rs = stmt.executeQuery("select hibernate_sequence.nextval from dual");
              rs.next();
              String areaId = rs.getString(1);
              rs.close();
              sql = "insert into tarea (AREA_ID,AREA_AREATMC,AREA_PAGE,AREA_NAME,AREA_TABLE, AREA_SHOW,AREA_SQL,AREA_ACTION,AREA_ALTERCOLOR,AREA_PAGECOUNT,AREA_SFXS ,AREA_REF,AREA_SQLEVENT,AREA_DES,AREA_COLUMNS,PAGE_ID,AREATYPE_ID) select " + 
                areaId + ",t.AREA_AREATMC,t.AREA_PAGE,t.AREA_NAME,t.AREA_TABLE,t. AREA_SHOW,t.AREA_SQL,t.AREA_ACTION,t.AREA_ALTERCOLOR,t.AREA_PAGECOUNT,t.AREA_SFXS ,t.AREA_REF,t.AREA_SQLEVENT,t.AREA_DES,t.AREA_COLUMNS," + pageId + ",t.AREATYPE_ID from tarea t where  t.area_id=" + 
                areaList.get(j).toString();
              stmt.addBatch(sql);
              sql = "insert into telt (ELT_ID,PAGE_ID,AREA_ID,ELT_NAME,ELT_TYPE,ELT_EXEC,ELT_SHOWMC,ELT_VALUE,ELT_HIDE,ELT_FWYS,ELT_OPEN,ELT_LINK,ELT_CONTROL,ELT_XSTJ,ELT_JS,ELT_READONLY,ELT_DEFAULT,ELT_TABLE,ELT_YHZD,ELT_DES) select hibernate_sequence.nextval," + 
                pageId + "," + areaId + ",t.ELT_NAME,t.ELT_TYPE,t.ELT_EXEC,t.ELT_SHOWMC,t.ELT_VALUE,t.ELT_HIDE,t.ELT_FWYS,t.ELT_OPEN,t.ELT_LINK,t.ELT_CONTROL,t.ELT_XSTJ,t.ELT_JS,t.ELT_READONLY,t.ELT_DEFAULT,t.ELT_TABLE,t.ELT_YHZD,t.ELT_DES from telt t where t.page_id=" + 
                formArr[i] + " and t.area_id=" + areaList.get(j).toString();
              stmt.addBatch(sql);
              stmt.executeBatch();
              stmt.clearBatch();
            } 
            areaList.clear();
            rs = stmt.executeQuery("select area_id from tarea where page_id=" + printPageId);
            while (rs.next())
              areaList.add(rs.getString(1)); 
            rs.close();
            for (j = 0; j < areaList.size(); j++) {
              rs = stmt.executeQuery("select hibernate_sequence.nextval from dual");
              rs.next();
              String areaId = rs.getString(1);
              rs.close();
              sql = "insert into tarea (AREA_ID,AREA_AREATMC,AREA_PAGE,AREA_NAME,AREA_TABLE, AREA_SHOW,AREA_SQL,AREA_ACTION,AREA_ALTERCOLOR,AREA_PAGECOUNT,AREA_SFXS ,AREA_REF,AREA_SQLEVENT,AREA_DES,AREA_COLUMNS,PAGE_ID,AREATYPE_ID) select " + 
                areaId + ",t.AREA_AREATMC,t.AREA_PAGE,t.AREA_NAME,t.AREA_TABLE,t. AREA_SHOW,t.AREA_SQL,t.AREA_ACTION,t.AREA_ALTERCOLOR,t.AREA_PAGECOUNT,t.AREA_SFXS ,t.AREA_REF,t.AREA_SQLEVENT,t.AREA_DES,t.AREA_COLUMNS," + newPrintPageId + ",t.AREATYPE_ID from tarea t where  t.area_id=" + 
                areaList.get(j).toString();
              stmt.addBatch(sql);
              sql = "insert into telt (ELT_ID,PAGE_ID,AREA_ID,ELT_NAME,ELT_TYPE,ELT_EXEC,ELT_SHOWMC,ELT_VALUE,ELT_HIDE,ELT_FWYS,ELT_OPEN,ELT_LINK,ELT_CONTROL,ELT_XSTJ,ELT_JS,ELT_READONLY,ELT_DEFAULT,ELT_TABLE,ELT_YHZD,ELT_DES) select hibernate_sequence.nextval," + 
                newPrintPageId + "," + areaId + ",t.ELT_NAME,t.ELT_TYPE,t.ELT_EXEC,t.ELT_SHOWMC,t.ELT_VALUE,t.ELT_HIDE,t.ELT_FWYS,t.ELT_OPEN,t.ELT_LINK,t.ELT_CONTROL,t.ELT_XSTJ,t.ELT_JS,t.ELT_READONLY,t.ELT_DEFAULT,t.ELT_TABLE,t.ELT_YHZD,t.ELT_DES from telt t where t.page_id=" + 
                printPageId + " and t.area_id=" + areaList.get(j).toString();
              stmt.addBatch(sql);
              stmt.executeBatch();
              stmt.clearBatch();
            } 
          } else if (DbOpt.dbtype.indexOf("mysql") >= 0) {
            String printPageId = "0";
            String sql = "select print_page_id from tpage where page_id=" + formArr[i];
            ResultSet rs = stmt.executeQuery(sql);
            if (rs.next())
              printPageId = rs.getString(1); 
            rs.close();
            sql = "insert into tpage(PAGE_NAME,PAGE_DES,PAGE_LIST,PAGE_REF,PAGE_PATH,PAGE_FILENAME,PAGE_OWNER,PAGE_DATE,PAGE_SESSION,PAGE_TYPE,PAGE_CONTENT,DOMAIN_ID,createdemp,createdorg) select concat('复件',t.page_name),t.page_des,t.page_list,t.page_ref,t.page_path,t.page_filename,t.page_owner,t.page_date,t.page_session,t.page_type,t.page_content," + 
              
              domainId + "," + userId + "," + orgId + " from tpage t where t.page_id=" + printPageId;
            stmt.executeUpdate(sql);
            rs = stmt.executeQuery("select max(page_id) from tpage");
            rs.next();
            String newPrintPageId = rs.getString(1);
            rs.close();
            sql = "insert into tpage(PAGE_NAME,PAGE_DES,PAGE_LIST,PAGE_REF,PAGE_PATH,PAGE_FILENAME,PAGE_OWNER,PAGE_DATE,PAGE_SESSION,PAGE_TYPE,PAGE_CONTENT,DOMAIN_ID,print_page_id,createdemp,createdorg) select concat('复件',t.page_name),t.page_des,t.page_list,t.page_ref,t.page_path,t.page_filename,t.page_owner,t.page_date,t.page_session,t.page_type,t.page_content," + 
              
              domainId + "," + newPrintPageId + "," + userId + "," + orgId + " from tpage t where t.page_id=" + formArr[i];
            stmt.executeUpdate(sql);
            rs = stmt.executeQuery("select max(page_id) from tpage");
            rs.next();
            String pageId = rs.getString(1);
            rs.close();
            rs = stmt.executeQuery("select area_id from tarea where page_id=" + formArr[i]);
            while (rs.next())
              areaList.add(rs.getString(1)); 
            rs.close();
            int j;
            for (j = 0; j < areaList.size(); j++) {
              sql = "insert into tarea (AREA_AREATMC,AREA_PAGE,AREA_NAME,AREA_TABLE, AREA_SHOW,AREA_SQL,AREA_ACTION,AREA_ALTERCOLOR,AREA_PAGECOUNT,AREA_SFXS ,AREA_REF,AREA_SQLEVENT,AREA_DES,AREA_COLUMNS,PAGE_ID,AREATYPE_ID) select t.AREA_AREATMC,t.AREA_PAGE,t.AREA_NAME,t.AREA_TABLE,t. AREA_SHOW,t.AREA_SQL,t.AREA_ACTION,t.AREA_ALTERCOLOR,t.AREA_PAGECOUNT,t.AREA_SFXS ,t.AREA_REF,t.AREA_SQLEVENT,t.AREA_DES,t.AREA_COLUMNS," + 
                pageId + ",t.AREATYPE_ID from tarea t where  t.area_id=" + 
                areaList.get(j).toString();
              stmt.executeUpdate(sql);
              rs = stmt.executeQuery("select max(area_id) from tarea");
              rs.next();
              String areaId = rs.getString(1);
              rs.close();
              sql = "insert into telt (PAGE_ID,AREA_ID,ELT_NAME,ELT_TYPE,ELT_EXEC,ELT_SHOWMC,ELT_VALUE,ELT_HIDE,ELT_FWYS,ELT_OPEN,ELT_LINK,ELT_CONTROL,ELT_XSTJ,ELT_JS,ELT_READONLY,ELT_DEFAULT,ELT_TABLE,ELT_YHZD,ELT_DES) select " + 
                pageId + "," + areaId + ",t.ELT_NAME,t.ELT_TYPE,t.ELT_EXEC,t.ELT_SHOWMC,t.ELT_VALUE,t.ELT_HIDE,t.ELT_FWYS,t.ELT_OPEN,t.ELT_LINK,t.ELT_CONTROL,t.ELT_XSTJ,t.ELT_JS,t.ELT_READONLY,t.ELT_DEFAULT,t.ELT_TABLE,t.ELT_YHZD,t.ELT_DES from telt t where t.page_id=" + 
                formArr[i] + " and t.area_id=" + areaList.get(j).toString();
              stmt.executeUpdate(sql);
            } 
            areaList.clear();
            rs = stmt.executeQuery("select area_id from tarea where page_id=" + printPageId);
            while (rs.next())
              areaList.add(rs.getString(1)); 
            rs.close();
            for (j = 0; j < areaList.size(); j++) {
              sql = "insert into tarea (AREA_AREATMC,AREA_PAGE,AREA_NAME,AREA_TABLE, AREA_SHOW,AREA_SQL,AREA_ACTION,AREA_ALTERCOLOR,AREA_PAGECOUNT,AREA_SFXS ,AREA_REF,AREA_SQLEVENT,AREA_DES,AREA_COLUMNS,PAGE_ID,AREATYPE_ID) select t.AREA_AREATMC,t.AREA_PAGE,t.AREA_NAME,t.AREA_TABLE,t. AREA_SHOW,t.AREA_SQL,t.AREA_ACTION,t.AREA_ALTERCOLOR,t.AREA_PAGECOUNT,t.AREA_SFXS ,t.AREA_REF,t.AREA_SQLEVENT,t.AREA_DES,t.AREA_COLUMNS," + 
                newPrintPageId + ",t.AREATYPE_ID from tarea t where  t.area_id=" + 
                areaList.get(j).toString();
              stmt.executeUpdate(sql);
              rs = stmt.executeQuery("select max(area_id) from tarea");
              rs.next();
              String areaId = rs.getString(1);
              rs.close();
              sql = "insert into telt (PAGE_ID,AREA_ID,ELT_NAME,ELT_TYPE,ELT_EXEC,ELT_SHOWMC,ELT_VALUE,ELT_HIDE,ELT_FWYS,ELT_OPEN,ELT_LINK,ELT_CONTROL,ELT_XSTJ,ELT_JS,ELT_READONLY,ELT_DEFAULT,ELT_TABLE,ELT_YHZD,ELT_DES) select " + 
                newPrintPageId + "," + areaId + ",t.ELT_NAME,t.ELT_TYPE,t.ELT_EXEC,t.ELT_SHOWMC,t.ELT_VALUE,t.ELT_HIDE,t.ELT_FWYS,t.ELT_OPEN,t.ELT_LINK,t.ELT_CONTROL,t.ELT_XSTJ,t.ELT_JS,t.ELT_READONLY,t.ELT_DEFAULT,t.ELT_TABLE,t.ELT_YHZD,t.ELT_DES from telt t where t.page_id=" + 
                printPageId + " and t.area_id=" + areaList.get(j).toString();
              stmt.executeUpdate(sql);
            } 
          } else {
            DbOpt.dbtype.indexOf("db2");
          }  
      } 
      stmt.close();
      conn.close();
    } catch (Exception ex) {
      if (conn != null)
        conn.close(); 
      ex.printStackTrace();
    } 
    return null;
  }
  
  public String getComment(String fieldName, String tableId, String recordId, String domainId) throws Exception {
    String comment = "";
    Connection conn = null;
    Statement stmt = null;
    try {
      conn = (new DataSourceBase()).getDataSource()
        .getConnection();
      stmt = conn.createStatement();
      ResultSet rs = stmt.executeQuery("select wfdc.wf_dealwithcomment_id,wfdc.dealwithemployeecomment from jsf_dealwith wfd,jsf_dealwithcomment wfdc where wfd.wf_dealwith_id=wfdc.wf_dealwith_id and wfd.databasetable_id=" + tableId + " and  wfd.databaserecord_id=" + recordId + " and wfdc.commentfield='" + fieldName + "' order by wfdc.wf_dealwithcomment_id");
      do {
      
      } while (rs.next());
      rs.close();
      stmt.close();
      conn.close();
    } catch (Exception ex) {
      conn.close();
    } 
    return comment;
  }
  
  public String getPageName(String[] pageId) throws Exception {
    StringBuffer buffer = new StringBuffer("0");
    for (int i = 0; i < pageId.length; i++)
      buffer.append(",").append(pageId[i]); 
    Connection conn = null;
    Statement stmt = null;
    try {
      conn = (new DataSourceBase()).getDataSource()
        .getConnection();
      stmt = conn.createStatement();
      ResultSet rs = stmt.executeQuery("select page_name from tpage where page_id in(" + buffer.toString() + ")");
      buffer = new StringBuffer();
      while (rs.next())
        buffer.append(rs.getString(1)).append(","); 
      rs.close();
      stmt.close();
      conn.close();
    } catch (Exception ex) {
      conn.close();
    } 
    return buffer.toString();
  }
  
  public String getCurStep(String workId) throws Exception {
    StringBuffer buffer = new StringBuffer();
    Connection conn = null;
    Statement stmt = null;
    try {
      conn = (new DataSourceBase()).getDataSource()
        .getConnection();
      stmt = conn.createStatement();
      ResultSet rs = stmt.executeQuery("select workprocess_id,workrecord_id,workcurstep from JSF_WORK where wf_work_id=" + workId);
      if (rs.next()) {
        String processId = rs.getString(1);
        String recordId = rs.getString(2);
        workId = rs.getString(3);
        rs.close();
        rs = stmt.executeQuery("select u.empName from JSF_WORK w,org_employee u where w.wf_curemployee_id=u.emp_id and w.workprocess_id=" + processId + " and w.workrecord_id=" + recordId + " and w.workstatus=0");
        int i = 0;
        while (rs.next()) {
          if (i > 0)
            buffer.append(","); 
          buffer.append(rs.getString(1));
          i++;
        } 
        rs.close();
        buffer.append(":<label style=color:red>").append(workId).append("</label>");
      } else {
        rs.close();
      } 
      stmt.close();
      conn.close();
    } catch (Exception ex) {
      conn.close();
      ex.printStackTrace();
    } 
    return buffer.toString();
  }
  
  private String[][] fieldIsFromOther(DbOpt dbopt, String tableId, String fieldId, String fieldName, String fieldValue, String recordId, String pageId, HttpServletRequest request) {
    String[][] selectedValue = (String[][])null;
    try {
      String[][] fieldPara = dbopt.executeQueryToStrArr2("select field_name,field_fetchsql,field_toffield from tfield where field_table=" + tableId + " and field_toffield like '%" + fieldName + "=:=%'", 3);
      if (fieldPara != null && fieldPara.length > 0) {
        String mainFieldName = fieldPara[0][0];
        String mainFieldFetchSql = fieldPara[0][1];
        String mainToFField = fieldPara[0][2];
        if (mainToFField != null && !"".equals(mainToFField)) {
          String mainValue = getValue(mainFieldName, recordId, pageId, dbopt);
          String[] mainToFFieldArr = mainToFField.split(";;;;");
          String submitPerson = request.getParameter("submitPerson");
          if (submitPerson == null || "null".equals(submitPerson))
            submitPerson = request.getSession().getAttribute("userName").toString(); 
          for (int i = 0; i < mainToFFieldArr.length; i++) {
            if (mainToFFieldArr[i].indexOf(String.valueOf(fieldName) + "=:=") >= 0) {
              String fetchField = mainToFFieldArr[i].substring(mainToFFieldArr[i].indexOf("=:=") + 3);
              if (fetchField.startsWith("[")) {
                fetchField = fetchField.substring(1, fetchField.length() - 1);
                fetchField = fetchField.replaceAll("\\@\\$\\@selValue\\@\\$\\@", mainValue);
                fetchField = fetchField.replaceAll("\\@\\$\\@submitPerson\\@\\$\\@", submitPerson);
                selectedValue = dbopt.executeQueryToStrArr2(fetchField, 2);
              } 
              break;
            } 
          } 
        } 
      } 
    } catch (Exception ex) {
      ex.printStackTrace();
    } 
    return selectedValue;
  }
  
  public List getHostList(String pageId, String foreignkey) {
    DataSourceBase dataSourceBase = new DataSourceBase();
    String sql = "";
    String ids = "";
    String id = "";
    String tableName = "";
    String field = "";
    ArrayList<ArrayList<String>> reList = new ArrayList();
    Map<Object, Object> map = new HashMap<Object, Object>();
    ArrayList<String> nameList = new ArrayList();
    ArrayList<String[]> list = new ArrayList();
    ResultSet rs = null;
    try {
      dataSourceBase.begin();
      rs = dataSourceBase.executeQuery(foreignkey);
      while (rs.next()) {
        ids = String.valueOf(ids) + rs.getString(1) + ",";
        map.put(rs.getString(1), rs.getString(2));
      } 
      if (ids.length() > 1) {
        ids = ids.substring(0, ids.length() - 1);
      } else {
        ids = "-12";
      } 
      rs.close();
      sql = "select area_table from tarea where page_id=" + pageId + " and area_name='form1'";
      rs = dataSourceBase.executeQuery(sql);
      if (rs.next())
        tableName = rs.getString(1); 
      rs.close();
      sql = "select table_id from ttable where table_name='" + tableName + "'";
      rs = dataSourceBase.executeQuery(sql);
      if (rs.next())
        id = rs.getString(1); 
      rs.close();
      int i = 0;
      sql = "select field_desname,field_name from tfield where field_table=" + id + " and field_list=1";
      rs = dataSourceBase.executeQuery(sql);
      while (rs.next()) {
        i++;
        field = String.valueOf(field) + rs.getString(2) + ",";
        nameList.add(rs.getString(1));
      } 
      nameList.add(ids);
      nameList.add(id);
      if (field.length() > 0) {
        field = field.substring(0, field.length() - 1);
        rs.close();
        sql = "select " + field + "," + tableName + "_id from " + tableName + " where " + tableName + "_id in (" + ids + ") order by " + tableName + "_id desc";
        rs = dataSourceBase.executeQuery(sql);
        while (rs.next()) {
          String[] content = new String[i + 1];
          for (int j = 0; j <= i; j++)
            content[j] = rs.getString(j + 1); 
          list.add(content);
        } 
      } 
      reList.add(nameList);
      reList.add(list);
      reList.add(map);
    } catch (Exception e) {
      e.printStackTrace();
    } finally {
      try {
        if (rs != null)
          rs.close(); 
        dataSourceBase.end();
      } catch (Exception e) {
        e.printStackTrace();
      } 
    } 
    return reList;
  }
  
  public List getSubList(String id, String ids) {
    DataSourceBase dataSourceBase = new DataSourceBase();
    String sql = "";
    String subId = "";
    String subName = "";
    String subField = "";
    ArrayList<String> fieldName = new ArrayList();
    List<ArrayList<String>> list = new ArrayList();
    ResultSet rs = null;
    try {
      dataSourceBase.begin();
      sql = "select limit_prytable from tlimit where limit_table=" + id;
      rs = dataSourceBase.executeQuery(sql);
      if (rs.next()) {
        subId = rs.getString(1);
      } else {
        return null;
      } 
      rs.close();
      sql = "select table_name from ttable where table_id=" + subId;
      rs = dataSourceBase.executeQuery(sql);
      if (rs.next())
        subName = rs.getString(1); 
      rs.close();
      int t = 0;
      sql = "select field_desname,field_name from tfield where field_table=" + subId;
      rs = dataSourceBase.executeQuery(sql);
      while (rs.next()) {
        t++;
        subField = String.valueOf(subField) + rs.getString(2) + ",";
        fieldName.add(rs.getString(1));
      } 
      subField = subField.substring(0, subField.length() - 1);
      rs.close();
      list.add(fieldName);
      Map<Object, Object> subMap = new HashMap<Object, Object>();
      String[] subIds = ids.split(",");
      for (int i = 0; i < subIds.length; i++) {
        sql = "select " + subField + " from " + subName + " where " + subName + "_foreignkey =" + subIds[i];
        ArrayList<String[]> subArrayList = new ArrayList();
        String[] content = new String[t];
        rs = dataSourceBase.executeQuery(sql);
        while (rs.next()) {
          for (int j = 0; j < t; j++)
            content[j] = rs.getString(j + 1); 
          subArrayList.add(content);
        } 
        subMap.put(subIds[i], subArrayList);
      } 
      rs.close();
    } catch (Exception e) {
      e.printStackTrace();
    } finally {
      try {
        if (rs != null)
          rs.close(); 
        dataSourceBase.end();
      } catch (Exception e) {
        e.printStackTrace();
      } 
    } 
    try {
      if (rs != null)
        rs.close(); 
      dataSourceBase.end();
    } catch (Exception e) {
      e.printStackTrace();
    } 
    return list;
  }
  
  public String[] getJSCode(String pageId) throws Exception {
    String[] code = { "", "" };
    Connection conn = null;
    Statement stmt = null;
    try {
      conn = (new DataSourceBase()).getDataSource()
        .getConnection();
      stmt = conn.createStatement();
      ResultSet rs = stmt.executeQuery("select js_onload,js_beforecommit from tpage where page_id=" + pageId);
      while (rs.next()) {
        code[0] = rs.getString(1);
        code[1] = rs.getString(2);
      } 
      rs.close();
      stmt.close();
      conn.close();
    } catch (Exception ex) {
      conn.close();
    } 
    return code;
  }
  
  public String getflowName(String flowId) throws Exception {
    String code = "";
    Connection conn = null;
    Statement stmt = null;
    try {
      conn = (new DataSourceBase()).getDataSource()
        .getConnection();
      stmt = conn.createStatement();
      ResultSet rs = stmt.executeQuery("SELECT WORKFLOWPROCESSNAME FROM jsf_workflowprocess WHERE wf_workflowprocess_id=" + flowId);
      if (rs.next())
        code = rs.getString(1); 
      rs.close();
      stmt.close();
      conn.close();
    } catch (Exception ex) {
      conn.close();
    } 
    return code;
  }
  
  private String getRelationHTML(String fieldName, String fieldId, String fieldNotNull, String noWriteField) {
    String type = "<input type=hidden name=relation_object id=relation_object value=" + fieldName + " />";
    type = String.valueOf(type) + "<input type=hidden name=" + fieldName + "_relation_type id=" + fieldName + "_relation_type value=jsflow >";
    String html = "<div style=width:100%; align=left id=relationObjectDIV-" + fieldId + " name=relationObjectDIV-" + fieldId + " />";
    if (noWriteField.indexOf("," + fieldId + ",") < 0 && 
      noWriteField.indexOf(fieldName) < 0) {
      html = String.valueOf(html) + "<input type=button class=btnButton4font onclick=\\\"selectRelationObject('" + fieldName + "','" + fieldId + "','jsflow');\\\" value=\\\"相关流程\\\">";
      html = String.valueOf(html) + "<div id=relationObjectData-" + fieldId + " name=relationObjectData-" + fieldId + " style='float:left;' ></div>";
    } 
    if (noWriteField.indexOf("," + fieldId + ",") < 0 && 
      noWriteField.indexOf(fieldName) < 0 && 
      fieldNotNull.equals("1"))
      html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
        fieldName + "><label class=mustFillcolor>*</label>"; 
    html = String.valueOf(html) + "<input type=hidden name=" + fieldName + " id=" + fieldName + ">";
    html = String.valueOf(html) + "</div>";
    html = "if(document.getElementById('" + fieldId + 
      "-" + fieldName + "'))\n{document.getElementById('" + 
      fieldId + "-" + fieldName + 
      "').innerHTML='" + type + 
      "';document.getElementById('" + 
      fieldId + "-" + fieldName + 
      "').innerHTML+=\"" + html + "\";}";
    return html;
  }
  
  private String getRelationEditHTML(String pageId, String infoId, String fieldName, String fieldId, String fieldNotNull, String noWriteField, DbOpt dbopt) {
    boolean canEdit = false;
    String type = "<input type=hidden name=relation_object id=relation_object value=" + fieldName + " />";
    type = String.valueOf(type) + "<input type=hidden name=" + fieldName + "_relation_type id=" + fieldName + "_relation_type value=jsflow >";
    String html = "<div style=width:100%; align=left id=relationObjectDIV-" + fieldId + " name=relationObjectDIV-" + fieldId + " />";
    if (noWriteField.indexOf("," + fieldId + ",") < 0 && 
      noWriteField.indexOf(fieldName) < 0) {
      canEdit = true;
      html = String.valueOf(html) + "<input type=button class=btnButton4font onclick=\\\"selectRelationObject('" + fieldName + "','" + fieldId + "','jsflow');\\\" value=\\\"相关流程\\\">";
    } 
    String[][] relationData = (String[][])null;
    try {
      relationData = dbopt.executeQueryToStrArr2("select relationinfoname,relationsubid,relationinfoid from oa_relationdata where moduletype='jsflow' and modulesubid=" + 
          
          pageId + " and infoId=" + infoId + " and relationobjecttype='jsflow'" + 
          " and (fieldName is null or fieldName='' or fieldName='" + fieldName + "')", 3);
    } catch (Exception ex) {
      ex.printStackTrace();
    } 
    html = String.valueOf(html) + "<div id=relationObjectData-" + fieldId + " name=relationObjectData-" + fieldId + " >";
    String hiddenText = "";
    if (relationData != null)
      for (int i = 0; i < relationData.length; i++) {
        String relationSubId = relationData[i][1];
        String relationInfoId = relationData[i][2];
        hiddenText = String.valueOf(hiddenText) + "flow-" + relationSubId + "-" + relationInfoId + ";";
        html = String.valueOf(html) + "<span id=flow-" + relationSubId + "-" + relationInfoId + " name=flow-" + relationSubId + "-" + relationInfoId + ">";
        html = String.valueOf(html) + "<a href=\\\"#\\\" onclick=\\\"JSMainWinOpen('/jsoa/jsflow/workflow_relationflow.jsp?tableId=" + relationSubId + "&record=" + relationInfoId + "&workStatus=100&curStatus=100&fromDossierData=y','','')\\\">" + relationData[i][0] + "</a>";
        if (canEdit) {
          html = String.valueOf(html) + "&nbsp;<img src=\\\"/jsoa/images/del.gif\\\" onclick=\\\"deleteRelationObjMust('flow-" + relationSubId + "-" + relationInfoId + "','" + fieldName + "');\\\">";
          html = String.valueOf(html) + "<input type=\\\"hidden\\\" id=\\\"" + fieldName + "_relation_data\\\" name=\\\"" + fieldName + "_relation_data\\\" value=\\\"" + relationSubId + ";" + relationInfoId + "\\\">" + 
            "<input type=\\\"hidden\\\" id=\\\"" + fieldName + "_relation_title\\\" name=\\\"" + fieldName + "_relation_title\\\" value=\\\"" + relationData[i][0] + "\\\">";
        } 
        html = String.valueOf(html) + "&nbsp;&nbsp;</span>";
      }  
    html = String.valueOf(html) + "</div>";
    if (noWriteField.indexOf("," + fieldId + ",") < 0 && 
      noWriteField.indexOf(fieldName) < 0 && 
      fieldNotNull.equals("1"))
      html = String.valueOf(html) + "<input type=hidden name=mustWrite id=mustWrite value=" + 
        fieldName + "><label class=mustFillcolor>*</label>"; 
    html = String.valueOf(html) + "<input type=hidden name=" + fieldName + " id=" + fieldName + " value=" + hiddenText + " />";
    html = String.valueOf(html) + "</div>";
    if (canEdit) {
      html = "if(document.getElementById('" + fieldId + 
        "-" + fieldName + "'))\n{document.getElementById('" + 
        fieldId + "-" + fieldName + 
        "').innerHTML='" + type + 
        "';document.getElementById('" + 
        fieldId + "-" + fieldName + 
        "').innerHTML+=\"" + html + "\";}";
    } else {
      html = "if(document.getElementById('" + fieldId + 
        "-" + fieldName + "'))\n{document.getElementById('" + 
        fieldId + "-" + fieldName + 
        "').innerHTML=\"" + html + "\";}";
    } 
    return html;
  }
  
  public String[] qianMingTu(String empId) {
    DataSourceBase base = new DataSourceBase();
    ResultSet rs = null;
    String[] fileName = { "", "" };
    String sql = "select empName,signatureimgsavename from org_employee where emp_id=" + empId;
    try {
      base.begin();
      rs = base.executeQuery(sql);
      if (rs.next()) {
        fileName[0] = rs.getString(1);
        fileName[1] = rs.getString(2);
        if (fileName[1] == null || "null".equalsIgnoreCase(fileName[1]))
          fileName[1] = ""; 
      } else {
        fileName[1] = "*null*";
      } 
      base.end();
    } catch (Exception e) {
      base.end();
      e.printStackTrace();
    } 
    return fileName;
  }
  
  public String getFieldNametById(String FieldId) {
    DataSourceBase base = new DataSourceBase();
    ResultSet rs = null;
    String fieldName = "";
    String sql = "select field_name from tfield where field_id=" + FieldId;
    try {
      base.begin();
      rs = base.executeQuery(sql);
      if (rs.next())
        fieldName = rs.getString(1); 
      base.end();
    } catch (Exception e) {
      base.end();
      e.printStackTrace();
    } 
    return fieldName;
  }
}
