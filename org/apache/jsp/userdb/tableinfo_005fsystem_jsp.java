/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:42:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.userdb;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.util.util.DataSourceBase;

public final class tableinfo_005fsystem_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-nested.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-tiles.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-logic.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-html.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-template.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-bean.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.util.util.DataSourceBase");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fhtml_005fhtml;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fhtml_005fhtml = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fhtml_005fhtml.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);

String tableId=request.getParameter("tableId");
String tableName=request.getParameter("tableName");
String tableSysName=request.getParameter("tableSysName");

      out.write("\r\n\r\n");
      //  html:html
      org.apache.struts.taglib.html.HtmlTag _jspx_th_html_005fhtml_005f0 = (org.apache.struts.taglib.html.HtmlTag) _005fjspx_005ftagPool_005fhtml_005fhtml.get(org.apache.struts.taglib.html.HtmlTag.class);
      boolean _jspx_th_html_005fhtml_005f0_reused = false;
      try {
        _jspx_th_html_005fhtml_005f0.setPageContext(_jspx_page_context);
        _jspx_th_html_005fhtml_005f0.setParent(null);
        int _jspx_eval_html_005fhtml_005f0 = _jspx_th_html_005fhtml_005f0.doStartTag();
        if (_jspx_eval_html_005fhtml_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n\r\n<head>\r\n\r\n<title>");
            out.print(tableName );
            out.write("表结构</title>\r\n<link href=\"/jsoa/skin/");
            out.print(session.getAttribute("skin"));
            out.write("/style-");
            out.print(session.getAttribute("browserVersion"));
            out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<script src=\"/jsoa/js/js.js\" language=\"javascript\"></script>\r\n<SCRIPT language=\"javascript\" src=\"/jsoa/userdb/ireplce.js\"></SCRIPT>\r\n<link rel=stylesheet type=\"text/css\" href=\"/jsoa/public/date_picker/DateObject2.css\">\r\n\r\n</head>\r\n<body leftmargin=\"0\" topmargin=\"0\" class=\"MainFrameBox Pupwin\" onload=\"load();resizeWin(650,400);\"  >\r\n<table width=\"100%\" border=0 cellpadding=\"0\" cellspacing=\"0\">\r\n<tr>\r\n<td>\r\n\r\n\r\n<table width=\"100%\" height=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"10\" class=\"docBoxNoPanel\"> \r\n       <tr>\r\n         <td colspan=\"3\">create table ");
            out.print(tableSysName );
            out.write("{</td>\r\n         <td>--");
            out.print(tableName );
            out.write("</td>         \r\n       </tr>\r\n       ");

       java.sql.Connection conn=null;
       java.sql.Statement stmt;
       try{
    	   conn=new DataSourceBase().getDataSource().getConnection();
    	   stmt=conn.createStatement();
    	   java.sql.ResultSet rs=stmt.executeQuery("select field_name,field_desname,field_type,field_len,field_default from tfield where field_table="+tableId);
    	   String fieldSysName,fieldType,fieldLen,fieldDefault,fieldName;
    	   while(rs.next()){
    		   fieldSysName=rs.getString(1);
    		   fieldName=rs.getString(2);
    		   fieldType=rs.getString(3);
    		   fieldLen=rs.getString(4);
    		   fieldDefault=rs.getString(5);
    		   
            out.write("\r\n    \t\t   <tr>\r\n\t\t       \t<td></td>\r\n\t\t       \t<td>");
            out.print(fieldSysName );
            out.write("</td>\r\n\t\t       \t<td>\r\n\t\t       \t");

		       	if(fieldType.equals("1000000")){
		       		out.print("int");
		       	}else if(fieldType.equals("1000001")){
		       		out.print("number");
		       	}else if(fieldType.equals("1000002")){
		       		out.print("varchar2(");
		       		out.print(fieldLen);
		       		out.print(")");
		       	}else{
		       		out.print("clob");
		       	}
		       	out.print(",");
		       	
            out.write("\r\n\t\t       \t</td>\r\n\t\t       \t<td>--");
            out.print(fieldName );
            out.write("</td>\r\n\t\t       </tr>\r\n    \t\t   ");

    	   }
    	   rs.close();
    	   stmt.close();
    	   conn.close();
       }catch(Exception ex){
    	   if(conn!=null){
    		   conn.close();
    	   }
       }
       
            out.write("\r\n       <tr>\r\n       \t<td></td>\r\n       \t<td>");
            out.print(tableSysName );
            out.write("_ID</td>\r\n       \t<td>number,</td>\r\n       \t<td>--系统保留字段</td>\r\n       </tr>\r\n        <tr>\r\n       \t<td></td>\r\n       \t<td>");
            out.print(tableSysName );
            out.write("_OWNER</td>\r\n       \t<td>number,</td>\r\n       \t<td>--系统保留字段</td>\r\n       </tr>\r\n       <tr>\r\n       \t<td></td>\r\n       \t<td>");
            out.print(tableSysName );
            out.write("_DATE</td>\r\n       \t<td>varchar2(24),</td>\r\n       \t<td>--系统保留字段</td>\r\n       </tr>\r\n        <tr>\r\n       \t<td></td>\r\n       \t<td>");
            out.print(tableSysName );
            out.write("_ORG</td>\r\n       \t<td>varchar2(100),</td>\r\n       \t<td>--系统保留字段</td>\r\n       </tr>\r\n        <tr>\r\n       \t<td></td>\r\n       \t<td>");
            out.print(tableSysName );
            out.write("_GROUP</td>\r\n       \t<td>varchar2(100)</td>\r\n       \t<td>--系统保留字段</td>\r\n       </tr>\r\n       \r\n       \r\n       <tr>\r\n       \t<td>}</td>\r\n       </tr>\r\n\r\n           \r\n           \r\n\r\n\t\t<tr>\r\n\t      <td colspan=2>\r\n\t\t\t<button class=\"btnButton2font\" onclick=\"javascript:window.close()\">退出</button>\r\n\t\t  </td>\r\n        </tr>\r\n\t\t\t  \t\t  \r\n</table>\r\n\r\n</td></tr></table>\r\n</body>\r\n");
            int evalDoAfterBody = _jspx_th_html_005fhtml_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_html_005fhtml_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fhtml_005fhtml.reuse(_jspx_th_html_005fhtml_005f0);
        _jspx_th_html_005fhtml_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_html_005fhtml_005f0, _jsp_getInstanceManager(), _jspx_th_html_005fhtml_005f0_reused);
      }
      out.write("\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
