/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:58:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.public_.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.oa.hr.subsidiarywork.service.*;
import com.js.oa.hr.subsidiarywork.po.*;
import com.js.util.util.*;

public final class festival_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("com.js.oa.hr.subsidiarywork.service");
    _jspx_imports_packages.add("com.js.oa.hr.subsidiarywork.po");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.js.util.util");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n");

request.setCharacterEncoding("GBK");

String wishText=request.getParameter("wishText");
String wishCard=request.getParameter("wishCard");
//String festivalName=request.getParameter("festivalName");
String festivalType=request.getParameter("festivalType");
if((wishCard==null || "null".equals(wishCard) || "".equals(wishCard)) || !ParameterFilter.isNumber(wishCard)){
	wishCard="birthday.jpg";
	wishText="";
}

//wishText=new String(wishText.getBytes("iso-8859-1"));
//festivalName=new String(festivalName.getBytes("iso-8859-1"));

      out.write("\r\n<HTML>\r\n<HEAD>\r\n<TITLE>\r\n    ");

    String WishSign = "";
    String wishEmployeesName = "";
    String path = "";
    if("1".equals(festivalType)){
        out.print("生日快乐");
		BirthdayWishPO po=new BirthCardBD().load(wishCard);
		wishText=po.getWishCard();
		path = po.getPath();
		path = path.substring(0, path.indexOf(","));
                if (wishText == null || wishText.length() <= 0)
                    wishText = po.getWishContent();
                    WishSign = po.getWishSign();
                    wishEmployeesName = po.getWishEmployeesName();

    }else{
        out.print("节日快乐");
		FestivalSetPO po=new FestalCardBD().load(wishCard);
		wishText=po.getFestivalWishCard();
                if (wishText == null || wishText.length() <= 0)
                    wishText = po.getFestivalWish();
    }
    
    String userName=session.getAttribute("userName").toString();
    String submitUserName=WishSign;
    String information = request.getParameter("wishText");
    String filePath="/jsoa/upload/"+path;
    
    wishText=wishText.replaceAll("\\$userName\\$", userName);
    wishText=wishText.replaceAll("\\$submitUserName\\$", submitUserName);
    wishText=wishText.replaceAll("\\$information\\$", information);
    
    
      out.write("\r\n</TITLE>\r\n<style>\r\nimg{ position:absolute;}\r\n.window{ position:absolute;left:25%;}\r\nbody{margin:0;padding:0;}\r\n</style>\r\n</HEAD>\r\n<BODY>\r\n       <img \r\n       ");
 if(path==null){
      out.write("\r\n       src=\"/jsoa/subsidiary_work/images/wr.jpg\" \r\n        ");
}else{
      out.write("\r\n        src=\"");
      out.print(filePath);
      out.write("\" \r\n        ");
}
      out.write("\r\n       style=\"width:100%;height:100%\">\r\n\r\n<div class=\"window\">\r\n");
      out.print(wishText != null && wishText.length() > 0 ? wishText : "");
      out.write("\r\n</div>\r\n<!--\r\n<center>\r\n<table width=\"740\" height=\"380\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"MARGIN-top:20PX;  background:url(/jsoa/subsidiary_work/images/ddg.gif)\"> \r\n\r\n  <tr>\r\n\t<td  align=\"center\" valign=\"middle\"  style=\"padding:30px\">\r\n\t  <div style=\"width:460px;height=270px;overflow:auto;\" >\r\n        ");
      out.print(wishText != null && wishText.length() > 0 ? wishText : "");
      out.write("\r\n       </div>\r\n    </td>\r\n    <td width=\"265\" align=\"left\">\r\n\t <div style=\"padding-right:20px;height=270px;overflow:auto;\" >\r\n\t\t <div style=\"margin-top:100px\" >\r\n\t       \t尊敬的&nbsp;");
      out.print(wishEmployeesName);
      out.write("&nbsp;同事：\r\n\t     </div>\r\n\t     <div style=\"margin-top:30px;height=100px\" >\r\n\t       \t&nbsp;&nbsp;&nbsp;&nbsp;");
      out.print(request.getParameter("wishText"));
      out.write("\r\n\t     </div>\r\n\t     <div style=\"text-align:right\">\r\n\t       ");
      out.print(WishSign);
      out.write("\r\n\t \t </div>\r\n     </div>\r\n\t</td>\r\n  </tr> \r\n</table>\r\n</center>\r\n --> \r\n</BODY>\r\n</HTML>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
