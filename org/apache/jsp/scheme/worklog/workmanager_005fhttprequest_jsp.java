/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:39:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.scheme.worklog;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.oa.scheme.worklog.service.WorkLogBD;
import com.js.system.manager.service.ManagerService;
import com.js.oa.scheme.worklog.po.WorkProjectTaskPO;
import java.util.*;

public final class workmanager_005fhttprequest_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.oa.scheme.worklog.po.WorkProjectTaskPO");
    _jspx_imports_classes.add("com.js.oa.scheme.worklog.service.WorkLogBD");
    _jspx_imports_classes.add("com.js.system.manager.service.ManagerService");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);

String project_id = request.getParameter("project_id");
String task_id = request.getParameter("task_id");
String task_code= request.getParameter("task_code");
//System.out.println(task_id+"---------------"+task_code);
Long userId = new Long(session.getAttribute("userId").toString()); //取当前用户的ID
Long orgId = new Long(session.getAttribute("orgId").toString()); //取当前用户的orgID
//String userName = session.getAttribute("userName").toString(); //取当前用户的名字
//String orgName = session.getAttribute("orgName").toString(); // 取当前用户的ORGNAME

Long domainId = session.getAttribute("domainId")==null?Long.valueOf("0"):Long.valueOf(session.getAttribute("domainId").toString());

WorkLogBD bd = new WorkLogBD();
List list =new ArrayList();
if(task_id!=null){
    	if(task_code!=null){
        	list = bd.selectFatherTask(task_id,task_code);

    	}else{
		list = bd.selectFatherTask(task_id);
    	}
        out.println("<select name='task_sortcode'>");
	out.println(" <option value='-1'>请选择</option>");
	if (list != null && list.size() > 0){
	 for (int i=0;i<list.size();i++){
		 WorkProjectTaskPO obj = (WorkProjectTaskPO)list.get(i);
		 out.println("<option value='"+(obj.getTask_id()!=null?obj.getTask_id().toString()+"":"")+"'>"+(obj.getTask_name()!=null?obj.getTask_name()+"":"")+"</option>");
		}
	}
	out.println("</select>");
}
else if(project_id!=null){
	list = bd.selectTaskByProjectId(project_id);

	out.println("<select name='task_id' onchange='selectTask(this);'>");
	out.println("<option value=''>请选择项目任务</option>");
	if (list != null && list.size() > 0){
	 for (int i=0;i<list.size();i++){
		 Object[] obj = (Object[])list.get(i);
		 out.println("<option value='"+(obj[3]!=null?obj[3]+"":"")+"'>"+(obj[2]!=null?obj[2]+"":"")+"</option>");
		}
	}
	out.println("</select>");
}

      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
