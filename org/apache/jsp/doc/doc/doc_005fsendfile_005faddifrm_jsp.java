/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:04:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.doc.doc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class doc_005fsendfile_005faddifrm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-nested.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-tiles.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-logic.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-html.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-template.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-bean.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n ");

 String sendFileCode= request.getAttribute("sendFileCode")==null?"":request.getAttribute("sendFileCode")+"";
 String sendFileYear= request.getAttribute("sendFileYear")==null?"":request.getAttribute("sendFileYear")+"";
 String sendFileMaxNumber= request.getAttribute("sendFileMaxNumber") ==null?"":request.getAttribute("sendFileMaxNumber")+"";

 String redHeadId= request.getAttribute("redHeadId")==null?"": request.getAttribute("redHeadId")+"";

       String  numId="";//文号Id
       String  sendWord="";//机关代字
       String  temId=""; //模板Id
       String  num_f1="";//文号前部分
       String  num_f2="";//文号中部分(序号)
       String  num_f3="";//文号后部分
    
   if(request.getAttribute("wordmap")!=null){
    java.util.Map map=(java.util.Map) request.getAttribute("wordmap");
	 if(map!=null){
	  numId=map.get("numId")==null?"":map.get("numId").toString();
      sendWord=map.get("sendWord")==null?"":map.get("sendWord").toString();
      temId=map.get("temId")==null?"":map.get("temId").toString();
      num_f1=map.get("num_f1")==null?"":map.get("num_f1").toString();
      num_f2=map.get("num_f2")==null?"":map.get("num_f2").toString();
      num_f3=map.get("num_f3")==null?"":map.get("num_f3").toString();
	 }
   }


 
      out.write("\r\n <script language=\"javascript\">\r\n parent.document.all.field1.value = \"");
      out.print(sendFileCode);
      out.write("\" ;\r\n parent.document.all.field2.value = \"");
      out.print(sendFileYear);
      out.write("\" ;\r\n parent.document.all.field3.value = \"");
      out.print(sendFileMaxNumber);
      out.write("\" ;\r\n parent.document.all.sendFileRedHeadId.value = \"");
      out.print(redHeadId);
      out.write("\" ;\r\n\r\n\r\n  if(typeof(eval(\"parent.document.all.sendFileDepartWord\"))!= \"undefined\"){\r\n    parent.document.all.sendFileDepartWord.value = \"");
      out.print(sendWord);
      out.write("\" ;\r\n\t  \r\n  }\r\n    \r\n\tif(typeof(eval(\"parent.document.all.field1\"))!= \"undefined\"){\r\n\t   parent.document.all.field1.value = \"");
      out.print(num_f1);
      out.write("\" ; \r\n\r\n  }\r\n    if(typeof(eval(\"parent.document.all.field2\"))!= \"undefined\"){\r\n\t   parent.document.all.field2.value = \"");
      out.print(num_f2);
      out.write("\" ;\r\n       ");
if(numId!=null&&!numId.equals("")&&num_f2!=null&&!num_f2.equals("")){
	   
	   out.println(" parent.document.getElementById(\"xuhao\").readOnly=false;");
	   
	   }else{
	   out.println(" parent.document.getElementById(\"xuhao\").readOnly=true;");
	   
	   }
      out.write("\r\n\r\n  }\r\n    if(typeof(eval(\"parent.document.all.field6\"))!= \"undefined\"){\r\n\t   parent.document.all.field6.value = \"");
      out.print(num_f3);
      out.write("\" ; \r\n  }\r\n\r\n  if(typeof(eval(\"parent.document.all.sendFilePoNumId\"))!= \"undefined\"){\r\n\t   parent.document.all.sendFilePoNumId.value = \"");
      out.print(numId);
      out.write("\" ; \r\n  }\r\n\r\n  if(typeof(eval(\"parent.document.all.sendFileTemId\"))!= \"undefined\"){\r\n\t   parent.document.all.sendFileTemId.value = \"");
      out.print(temId);
      out.write("\" ; \r\n  }\r\n \r\n </script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
