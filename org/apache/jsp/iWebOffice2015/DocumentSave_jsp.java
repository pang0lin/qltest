/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:44:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.iWebOffice2015;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.*;
import java.text.*;
import java.util.*;
import java.sql.*;
import DBstep.iDBManager2000.*;

public final class DocumentSave_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("DBstep.iDBManager2000");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=gb2312");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n");

	String databaseType=com.js.util.config.SystemCommon.getDatabaseType();
	String mRecordID = request.getParameter("RecordID");
	if (mRecordID == null){
		mRecordID = "";
	}
	String mTemplate = new String(request.getParameter("Template"));
	String mSubject = new String(request.getParameter("Subject"));
	String mAuthor = new String(request.getParameter("Author"));
	String mFileDate = new String(request.getParameter("FileDate"));
	String mFileType = new String(request.getParameter("FileType"));
	String mHTMLPath = new String(request.getParameter("HTMLPath"));
	String IsOut = new String(request.getParameter("IsOut"));
	String mStatus = "READ";

	DBstep.iDBManager2000 DbaObj = new DBstep.iDBManager2000();
	int mDocumentId=0;

	if (DbaObj.OpenConnection()) {
		String mysql = "SELECT DocumentID,RecordID from  Document Where RecordID='"+ mRecordID + "'";
		try {
			ResultSet result = DbaObj.ExecuteQuery(mysql);
			if (result.next()) {				
				if ("oracle".equals(databaseType)) {
				    mysql="update Document set DocumentID=?,RecordID=?,Template=?,Subject=?,Author=?,FileDate=?,FileType=?,HtmlPath=?,Status=? where RecordID='"+mRecordID+"'";
			        mDocumentId=result.getInt("DocumentID");				
				}else if("mysql".equals(databaseType)){
				     mysql="update Document set RecordID=?,Template=?,Subject=?,Author=?,FileDate=?,FileType=?,HtmlPath=?,Status=? where RecordID='"+mRecordID+"'";
				}else{						   
				     mysql="update Document set RecordID=?,Template=?,Subject=?,Author=?,FileDate=?,FileType=?,HtmlPath=?,Status=? where RecordID='"+mRecordID+"'";
				}
			} else {				
				if ("oracle".equals(databaseType)) {
					 mysql="insert into Document (DocumentID,RecordID,Template,Subject,Author,FileDate,FileType,HtmlPath,Status) values (?,?,?,?,?,?,?,?,?)";
				     mDocumentId=DbaObj.GetMaxID("Document","DocumentID");					
				}else if("mysql".equals(databaseType)){
				    mysql="insert into Document (RecordID,Template,Subject,Author,FileDate,FileType,HtmlPath,Status) values (?,?,?,?,?,?,?,?)";
			    }else{							   
					mysql="insert into Document (RecordID,Template,Subject,Author,FileDate,FileType,HtmlPath,Status) values (?,?,?,?,?,?,?,?)";
				}
				
			}
			result.close();
		} catch (Exception e) {
			System.out.println(e.toString());
		}
		
		java.sql.PreparedStatement prestmt = null;
		try {
			if ("oracle".equals(databaseType)) {
			     prestmt=DbaObj.Conn.prepareStatement(mysql);
		         prestmt.setInt(1,mDocumentId);
		         prestmt.setString(2,mRecordID);
		         prestmt.setString(3,mTemplate);
		         prestmt.setString(4,mSubject);
		         prestmt.setString(5,mAuthor);
		         prestmt.setDate(6,DbaObj.GetDate());
		         prestmt.setString(7,mFileType);
		         prestmt.setString(8,mHTMLPath);
		         prestmt.setString(9,"READ");
	
		         DbaObj.Conn.setAutoCommit(true) ;
		         prestmt.executeUpdate();
		         DbaObj.Conn.commit();
		
			}else if("mysql".equals(databaseType)){
			     prestmt=DbaObj.Conn.prepareStatement(mysql);
		         prestmt.setString(1,mRecordID);
		         prestmt.setString(2,mTemplate);
		         prestmt.setString(3,mSubject);
		         prestmt.setString(4,mAuthor);
		         prestmt.setString(5,mFileDate);
		         prestmt.setString(6,mFileType);
		         prestmt.setString(7,mHTMLPath);
		         prestmt.setString(8,"READ");
		        // DbaObj.Conn.setAutoCommit(true) ;
		         prestmt.executeUpdate();
		        // DbaObj.Conn.commit();

			}else{				   
			     prestmt=DbaObj.Conn.prepareStatement(mysql);
		         prestmt.setString(1,mRecordID);
		         prestmt.setString(2,mTemplate);
		         prestmt.setString(3,mSubject);
		         prestmt.setString(4,mAuthor);
		         prestmt.setString(5,mFileDate);
		         prestmt.setString(6,mFileType);
		         prestmt.setString(7,mHTMLPath);
		         prestmt.setString(8,"READ");
		         DbaObj.Conn.setAutoCommit(true) ;
		         prestmt.executeUpdate();
		         DbaObj.Conn.commit();
			}

		} catch (Exception e) {
			System.out.println(e.toString());
		} finally {
			prestmt.close();
		}
		DbaObj.CloseConnection();
	} else {
		out.println("OpenDatabase Error");
	}
	//response.sendRedirect("DocumentList.jsp");

      out.write("\r\n<script language=\"javascript\">\r\nif(opener){\r\n\t");
if(request.getParameter("field")!=null && request.getParameter("field").trim().length()>0 && !request.getParameter("field").toUpperCase().equals("NULL")){
      out.write("\r\n\t\topener.document.all.");
      out.print(request.getParameter("field"));
      out.write(".value = \"");
      out.print(mRecordID);
      out.write("\";\r\n\t");
}else{
      out.write("\r\n\t\topener.document.all.content.value = \"");
      out.print(mRecordID);
      out.write("\";\r\n\t");
}
      out.write("\r\n\t  ");
if("1".equals(request.getParameter("FlagCloseWindow"))){
      out.write("\r\n    window.parent.close();\r\n    ");
}
      out.write("\r\n    //window.close();    \r\n}else{\r\n\t");
if(request.getParameter("field")!=null && request.getParameter("field").trim().length()>0 && !request.getParameter("field").toUpperCase().equals("NULL")){
      out.write("\r\n\t\tparent.opener.document.all.");
      out.print(request.getParameter("field"));
      out.write(".value = \"");
      out.print(mRecordID);
      out.write("\";\r\n\t");
}else{
      out.write("\r\n\t\tparent.opener.document.all.content.value = \"");
      out.print(mRecordID);
      out.write("\";\r\n\t");
}
      out.write('\r');
      out.write('\n');
      out.write('	');
if("1".equals(IsOut)){
      out.write("\r\n\t//parent.window.close();\r\n\t");
}
      out.write('\r');
      out.write('\n');
      out.write('	');
if("1".equals(request.getParameter("FlagCloseWindow"))){
      out.write("\r\n\t\tparent.window.close();\r\n\t");
}
      out.write("\r\n    //window.history.back();    \r\n    window.close();\r\n}\r\n\r\n\r\n//   window.parent.location = \"DocumentList.jsp\";\r\n</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
