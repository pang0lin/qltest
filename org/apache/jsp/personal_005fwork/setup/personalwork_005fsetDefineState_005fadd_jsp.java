/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:01:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.personal_005fwork.setup;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.lang.Resource;

public final class personalwork_005fsetDefineState_005fadd_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-nested.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-tiles.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-logic.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-html.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-template.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-bean.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.lang.Resource");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"../../../public/jsp/error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");

	response.setHeader("Cache-Control","no-store");
	response.setHeader("Pragma","no-cache");
	response.setDateHeader ("Expires", 0);


String local = session.getAttribute("org.apache.struts.action.LOCALE").toString();


      out.write("\r\n<html>\r\n<head>\r\n<title>新增自定义状态</title>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=GBK\">\r\n<link href=\"/jsoa/style/cssmain.css\" rel=\"stylesheet\" type=\"text/css\">\r\n<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<script src=\"../../js/js.js\" language=\"javascript\"></script>\r\n<script  src=\"/jsoa/js/checkText.js\"  language=\"javascript\" ></script>\r\n</head>\r\n\r\n<body onload=\"resizeWin(470,150);\"  class=\"MainFrameBox Pupwin\">\r\n\r\n<!-- FORM -->\r\n<table width=\"100%\" height=\"100%\" border=\"0\" cellpadding=\"10\" cellspacing=\"0\" class=\"docBoxNoPanel\">\r\n  <tr>\r\n    <td valign=\"top\">\r\n\t   <table width=\"100%\" border=\"0\" cellpadding=\"2\" cellspacing=\"1\">\r\n\t\t<tr>\r\n\t\t  <td nowrap=\"nowrap\">自定义状态：\r\n\t\t    <input type=\"text\" id=\"defineName\" name=\"defineName\" maxlength=\"20\" style=\"width:280px\" class=\"inputtext\">&nbsp;\r\n\t\t    <label class=\"mustFillcolor\">*</label>\r\n\t\t  </td>\r\n\t\t</tr>\r\n\t    </table>\r\n\t\t<br>\r\n\t    <table width=\"100%\" border=\"0\">\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t    <input type=\"button\" class=\"btnButton4font\" style=\"cursor:pointer\" onclick=\"javascript:saveClose();\" value=\"保存退出\">\r\n\t\t\t    <input type=\"button\" class=\"btnButton4font\" style=\"cursor:pointer\" onclick=\"javascript:saveContinue();\" value=\"保存继续\">\r\n");
      out.write("\t\t\t    <button class=\"btnButton2font\" style=\"cursor:pointer\" onclick=\"javascript:reset();\">重置</button>\r\n\t\t\t    <button class=\"btnButton2font\" style=\"cursor:pointer\" onclick=\"javascript:window.close();\">退出</button>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t     </table>\r\n\t</td>\r\n  </tr>\r\n</table>\r\n\r\n\r\n</body>\r\n<script langauage=\"javascript\">\r\n<!--\r\n\r\nfunction reset() {\r\n\r\n  var defineName = document.getElementById(\"defineName\");\r\n\r\n  defineName.value=\"\";\r\n}\r\nfunction saveClose() {\r\n\r\n   var defineName = document.getElementById(\"defineName\");\r\n   var opener_userDefineStatus = opener.document.getElementById(\"userDefineStatus\");\r\n   \r\n   var val0 = \";\"+defineName.value+\";\";\r\n\r\n   if(!checkQuery2(defineName)){\r\n        alert(\"不能包含; < >符号！\");\r\n        defineName.focus();\r\n        return false;\r\n   }\r\n   if(defineName.value == \"\"){\r\n   \r\n     alert(\"请输入自定义状态！\");\r\n     defineName.focus();\r\n     return false;\r\n   }\r\n   if(!checkQuery(defineName) || !checkQuery1(defineName)){\r\n   \r\n      alert(\"不能包含非法字符！\");\r\n      defineName.focus();\r\n      return false;\r\n");
      out.write("   }\r\n   if(opener_userDefineStatus.value.indexOf(val0)>0){\r\n   \r\n      alert(\"状态名称不可以重复!\");\r\n      defineName.focus();\r\n      return false;\r\n   }\r\n   if(defineName.value == \"\"){\r\n   \r\n     alert(\"请输入自定义状态！\");\r\n     defineName.focus();\r\n     return false;\r\n   }\r\n\r\n   if(opener_userDefineStatus.value == \"\"){\r\n   \r\n       opener_userDefineStatus.value = \";\" + defineName.value +\";\";\r\n   }else {\r\n    \r\n       opener_userDefineStatus.value = opener_userDefineStatus.value + defineName.value +\";\";\r\n   }\r\n\r\n   alert(\"保存成功\");\r\n\r\n   opener.getDefineMenu();\r\n   window.close();\r\n}\r\n\r\nfunction saveContinue() {\r\n\r\n  var defineName = document.getElementById(\"defineName\");\r\n  var opener_userDefineStatus = opener.document.getElementById(\"userDefineStatus\");\r\n\r\nvar val0 = \";\"+defineName.value+\";\";\r\n\r\n  if(!checkQuery2(defineName)){\r\n        alert(\"不能包含; < >符号！\");\r\n        defineName.focus();\r\n        return false;\r\n   }\r\n  \r\n  if(defineName.value == \"\"){\r\n   \r\n     alert(\"请输入自定义状态！\");\r\n     defineName.focus();\r\n     return false;\r\n");
      out.write("   }\r\n   if(!checkText(defineName,20,\"自定义状态\")){\r\n   \r\n      defineName.focus();\r\n      return false;\r\n   }\r\n\r\n   if(!checkQuery(defineName) || !checkQuery1(defineName)){\r\n   \r\n       alert(\"不能包含非法字符！\");\r\n       defineName.focus();\r\n       return false;\r\n   }\r\n   \r\n   if(opener_userDefineStatus.value.indexOf(val0)>0){\r\n   \r\n      alert(\"状态名称不可以重复!\");\r\n      defineName.focus();\r\n      return false;\r\n   }\r\n   \r\n   if(opener_userDefineStatus.value == \"\"){\r\n   \r\n       opener_userDefineStatus.value = \";\" + defineName +\";\";\r\n   }else {\r\n    \r\n       opener_userDefineStatus.value = opener_userDefineStatus.value + defineName.value +\";\";\r\n   }\r\n\r\n   alert(\"保存成功\");\r\n   \r\n   opener.getDefineMenu();\r\n   defineName.value = \"\";\r\n\r\n}\r\n\r\nfunction checkQuery(obj) {\r\n    var regu = /[\"|']/g ;\r\n    var re = new RegExp(regu);\r\n    var val = obj.value ;\r\n    if (val.search(re) != -1){\r\n        return false;\r\n    }\r\n    return true ;\r\n}\r\n\r\nfunction checkQuery1(obj) {\r\n    var regu = /[\"|\\<|\\>|;]/g ;\r\n    var re = new RegExp(regu);\r\n");
      out.write("    var val = obj.value ;\r\n    if (val.search(re) != -1){\r\n        return val.replace(/[\"]/g,'') ;\r\n    }\r\n    return val ;\r\n}\r\n\r\nfunction checkQuery2(obj) {\r\n\r\n  var val = obj.value ;\r\n  var flag = true;\r\n  for(var i=0;i<val.length;i++){\r\n  \r\n     if(val.charAt(i) == \">\" || val.charAt(i) == \"<\" || val.charAt(i) == \";\"){\r\n\r\n        return false;\r\n     }\r\n  }\r\n  \r\n  return flag;\r\n}\r\n\r\n//-->\r\n</script>\r\n\r\n</html>\r\n\r\n\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
