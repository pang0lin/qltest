/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:07:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsflow;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.js.util.util.BrowserJudge;

public final class wf_005ftranread_005forg_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/public/jsp/online.jsp", Long.valueOf(1499751452000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.util.util.BrowserJudge");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write(" \r\n\r\n");
      out.write("\r\n<script language=\"JScript.Encode\" src=\"/jsoa/js/browinfo.js\"></script>\r\n<script language=\"JScript.Encode\" src=\"/jsoa/js/rtxint.js\"></script>\r\n<script language=\"javascript\">\r\n\r\nfunction rtxonline(a){\r\n\t RAP(a);\r\n}\r\n\r\n</script>");
      out.write("\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);
int menuIndex=0;

//参与者类型
//0 流程启动人的上级领导
//1 由上一活动参与者从所有用户中选择
//2 从候选人员中指定
//3 指定全部办理人
//4 由表单中的某个字段值决定
//System.out.println("参与人类型："+nextUser[0]);
String selectUser = "";//待选人员
String selectUserName = "";//待选人员
String selectUserAccounts = "";//待选人员

String range = "*0*";//指定范围
String show = "";//显示
String transactType = "1";//默认多人并行

//
String participantUserField = "";//表单中的某个字段名

//短信
boolean showSmsRemind = false;


//
String tranType = "0";
String tranCustomExtent = "";
String tranCustomExtentId = "";

//流程类型(业务流程，随机流程)
String processType = request.getParameter("processType");
//流程办理人类型
int participantType=-1;

if(!"0".equals(processType)){
	//当前活动参数
	String processId = request.getParameter("processId");
	String tableId = request.getParameter("tableId");
	String recordId = request.getParameter("recordId");
	String activityId = request.getParameter("activityId");//后继活动
	String curActivityId = request.getParameter("curActivityId");//当前活动

	String standForUserId = request.getParameter("standForUserId");//代办人ID

	com.js.oa.jsflow.service.WorkFlowButtonBD workFlowButtonBD = new com.js.oa.jsflow.service.WorkFlowButtonBD();
	com.js.oa.jsflow.service.WorkFlowBD workFlowBD = new com.js.oa.jsflow.service.WorkFlowBD();
	com.js.oa.jsflow.vo.WorkVO vo = new com.js.oa.jsflow.vo.WorkVO();

	//活动办理方式
	transactType = workFlowBD.getTransactType(tableId,recordId,activityId);

	String[] nextUser = workFlowBD.getProcActiUser(tableId,recordId,activityId);

	tranType = nextUser[29];
	tranCustomExtent = nextUser[30];
	tranCustomExtentId = nextUser[31];

	if(nextUser[0]!=null){
		participantType=Integer.parseInt(nextUser[14]);//参与人类型
	}

	//显示短信
	showSmsRemind = (nextUser[24]!=null && nextUser[24].toString().equals("1"))?true:false;;

	if("0".equals(tranType)){
		//全部办理人
		range = "*0*";//指定范围
		show = "userorggroup";//显示
		//participantType = -1;

	} else if("1".equals(tranType)){
		//本部门
		String sidelineOrg = workFlowButtonBD.getUserSideLineOrgId(session.getAttribute("userId").toString())==null?"":workFlowButtonBD.getUserSideLineOrgId(session.getAttribute("userId").toString());
	    range = "*"+session.getAttribute("orgId")+"*"+sidelineOrg;
		show = "userorg";//显示
		//participantType = -2;
		
	} else if("2".equals(tranType)){
		//本单位
		range = "*"+session.getAttribute("corpId").toString()+"*";//指定范围
		show = "userorg";//显示
		//participantType = -3;

	} else if("4".equals(tranType)){
		//自定义
		range = tranCustomExtentId;//指定范围
		show="user";
		if(range != null && !range.equals("") && range.indexOf("@") >= 0){
			show+="group";
		}
		if(range != null && !range.equals("") && range.indexOf("*") >= 0){
			show+="org";
		}
		//participantType = -4;

	} else if("3".equals(tranType)){
		//本活动办理人

		if(nextUser[14]!=null && nextUser[14].equals("3")){
			//指定全部办理人
			java.util.List candidate = workFlowBD.getCandidate(nextUser[15],nextUser[16]);
			for(int i=0;i<candidate.size();i++){
				Object[] tmp = (Object[])candidate.get(i); 
				selectUser += tmp[0]+",";
				selectUserName += tmp[1]+",";
			}
			if(selectUser.indexOf(",")!=-1){
				selectUser = selectUser.substring(0,selectUser.length()-1);
				selectUserName = selectUserName.substring(0,selectUserName.length()-1);
			}

		}

		if(nextUser[14]!=null && nextUser[14].equals("2")){
			//从候选人中指定
			java.util.List candidate = workFlowBD.getCandidate(nextUser[15],nextUser[16]);
			for(int i=0;i<candidate.size();i++){
				Object[] tmp = (Object[])candidate.get(i); 
				selectUser += tmp[0]+",";
				selectUserName += tmp[1]+",";
			}
			if(selectUser.indexOf(",")!=-1){
				selectUser = selectUser.substring(0,selectUser.length()-1);
				selectUserName = selectUserName.substring(0,selectUserName.length()-1);
			}
		}

		if(nextUser[14]!=null && nextUser[14].equals("4")){
			//由表单中的某个字段值决定
			participantUserField = nextUser[17];
			participantUserField = workFlowButtonBD.getFieldInfoByFieldId(participantUserField);
		}

		if(nextUser[14]!=null && nextUser[14].equals("8")){
			//从指定范围中选定
			range = nextUser[23].toString();
			show="user";
			if(range != null && !range.equals("") && range.indexOf("@") >= 0){
				show+="group";
			}
			if(range != null && !range.equals("") && range.indexOf("*") >= 0){
				show+="org";
			}
			
		}

		if(nextUser[14]!=null && nextUser[14].equals("9")){
			//由上一活动参与者从所在组织中选择
			range = "*"+session.getAttribute("orgId")+"*";
			show += "user";
		}

		if(nextUser[14]!=null && nextUser[14].equals("10")){
			//组织领导
			range = "*"+session.getAttribute("orgId")+"*";
			show += "org";
		}

		if(nextUser[14]!=null && nextUser[14].equals("13")){
			//由上一活动参与者从所有群组中选择
			 //show += "group";
			 range = nextUser[23].toString();
			if(range != null){
				show = "usergroup";
			}
		}

		if(nextUser[14]!=null && nextUser[14].equals("12")){
			//由上一活动参与者从所有组织中选择
			 show += "org";
		}

		if(nextUser[14]!=null && nextUser[14].equals("1")){
			//由上一活动参与者从所有用户中选择
			 show += "user";
			
			// 与指定范围相同的处理（范围为全部*0*）   从指定范围中选定
				range = "*0*";
				show="userorggroup";
		}

		if(nextUser[14]!=null && nextUser[14].equals("11")){
			//上一活动所有参与者
			vo.setProcessId(Long.valueOf(processId));
			vo.setTableId(Long.valueOf(tableId));
			vo.setRecordId(Long.valueOf(recordId));
			vo.setActivity(Long.valueOf(curActivityId));

			java.util.List candidate = workFlowButtonBD.getFrontActivityOper(vo);
			for(int i=0;i<candidate.size();i++){
				Object[] tmp = (Object[])candidate.get(i); 
				selectUser += tmp[0]+",";
				selectUserName += tmp[1]+",";
			}
			if(selectUser.indexOf(",")!=-1){
				selectUser = selectUser.substring(0,selectUser.length()-1);
				selectUserName = selectUserName.substring(0,selectUserName.length()-1);
			}
		}

		if(nextUser[14]!=null && nextUser[14].equals("7")){
			//上一活动办理人的上级领导
			java.util.List leaderList = null;
			
			if("0".equals(standForUserId)){
				leaderList = workFlowBD.getLeaderList(session.getAttribute("userId").toString());
			} else{
				leaderList = workFlowBD.getLeaderList(standForUserId);
			}

			for(int i=0;i<leaderList.size();i++){
				Object[] tmp = (Object[])leaderList.get(i); 
				selectUser += tmp[0]+",";
				selectUserName += tmp[1]+",";
			}
			if(selectUser.indexOf(",")!=-1){
				selectUser = selectUser.substring(0,selectUser.length()-1);
				selectUserName = selectUserName.substring(0,selectUserName.length()-1);
			}
		}

		if(nextUser[14]!=null && nextUser[14].equals("0")){
			//流程启动人的上级领导 
			java.util.List leaderList = workFlowBD.getLeaderList(request.getParameter("submitPersonId"));

			for(int i=0;i<leaderList.size();i++){
				Object[] tmp = (Object[])leaderList.get(i); 
				selectUser += tmp[0]+",";
				selectUserName += tmp[1]+",";
			}
			if(selectUser.indexOf(",")!=-1){
				selectUser = selectUser.substring(0,selectUser.length()-1);
				selectUserName = selectUserName.substring(0,selectUserName.length()-1);
			}
		}

		if(nextUser[14]!=null && nextUser[14].equals("5")){
			//流程启动人
			selectUser = request.getParameter("submitPersonId");
			selectUserName = new com.js.system.service.usermanager.UserBD().getUserNameById(request.getParameter("submitPersonId"));
		}

		if(nextUser[14]!=null && nextUser[14].equals("6")){
			//从角色中指定 
			java.util.List candidate = workFlowBD.getRoleUserIDAndName(nextUser[20], request.getParameter("submitPersonId"));
			for(int i=0;i<candidate.size();i++){
				Object[] tmp = (Object[])candidate.get(i); 
				selectUser += tmp[0]+",";
				selectUserName += tmp[1]+",";
			}
			if(selectUser.indexOf(",")!=-1){
				selectUser = selectUser.substring(0,selectUser.length()-1);
				selectUserName = selectUserName.substring(0,selectUserName.length()-1);
			}
		}


	}
	
}

if(!"".equals(selectUser)){
	selectUserAccounts = new com.js.system.service.usermanager.UserBD().getUserAccountByIds(selectUser);
}


      out.write("\r\n<!DOCTYPE HTML>\r\n<HTML>\r\n<HEAD>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=gbk\">\r\n<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<script type=\"text/javascript\" src=\"/jsoa/js/weixin/jquery-1.7.2.min.js\"></script>\r\n");
if(BrowserJudge.isMSIE(request)){ 
      out.write("\r\n<SCRIPT language=javascript src=\"/jsoa/jsflow/wf_stepanduser_tree.js\"></SCRIPT>\r\n");
}else{ 
      out.write("\r\n<SCRIPT language=javascript src=\"/jsoa/jsflow/wf_stepanduser_tree_o.js\"></SCRIPT>\r\n");
} 
      out.write("\r\n<style type=\"text/css\">\r\n<!--\r\n.Hidden\r\n{\r\n\tdisplay:none;\r\n}\r\n\r\n.Show\r\n{\r\n\tdisplay:;\r\n}\r\n-->\r\n</style>\r\n</HEAD>\r\n\r\n<body onload=\"loadXML('userorggroup','no','");
      out.print(show);
      out.write("','','");
      out.print(range);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(selectUser);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(selectUserName);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(selectUserAccounts);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(participantType);
      out.write("');\">\r\n<table width=\"100%\" height=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n  <tr id=\"submenuBox");
      out.print(menuIndex);
      out.write("\" valign=\"top\" style=\"display:'';\">\r\n    <td height=\"100\">\r\n\t  <div id=\"org_list\">\r\n\t  \r\n\t  </div>\r\n\t</td>\r\n  </tr>\r\n\r\n  <tr>\r\n    <td>&nbsp;\r\n\t</td>\r\n  </tr>\r\n</table>\r\n</BODY>\r\n</HTML>\r\n<SCRIPT LANGUAGE=\"JavaScript\">\r\n<!--\r\nvar selectedObject = \"selectObject\";\r\nfunction HightLight(obj){\r\n\tobj.style.color = \"red\";\r\n}\r\n\r\nfunction NomalLight(obj){\r\n\tobj.style.color = \"black\";\r\n}\r\n\r\nfunction openMainFrame(opValue,opText){\r\n\tvar oSelect=window.parent.document.all.frm1.selectObject;\r\n\tvar nLen =oSelect.length;\r\n\tvar hasOpt = false;\r\n\tfor(i=0;i<nLen;i++){\r\n\t\tvar optObj = oSelect.options[i];\r\n\t\tif(optObj.value == opValue){\r\n\t\t\thasOpt = true;\r\n\t\t}\r\n\t}\r\n \r\n\t//添加到列表框\r\n\tif(!hasOpt){\r\n\t\t//判断是不是单人\r\n\t\tif(parent.document.all.participantType.value!=10 && ((parent.document.all.approveMode[0].childNodes[0].checked && opValue.indexOf(\"$\")==-1) || (parent.document.all.approveMode[0].childNodes[0].checked && opValue.indexOf(\"$\")!=-1 && nLen>0))){\r\n\t\t\talert(\"审批方式为单人，您不能选择多人办理！\");\r\n\t\t} else{\r\n\t\t\tvar oOption = document.createElement(\"OPTION\");\r\n");
      out.write("\t\t\toSelect.options.add(oOption);\r\n\t\t\t//oOption.innerText = opText;\r\n\t\t\t//oOption.value = opValue;\r\n\t\t\t\r\n\t\t\t");
if(BrowserJudge.isIE(request)){ 
      out.write("\r\n\t\t\toOption.innerText = opText;\r\n\t\t\toOption.value = opValue;\r\n\t\t\t");
}else{
      out.write("\r\n\t\t\toOption.textContent = opText;\r\n\t\t\toOption.value=opValue;\r\n\t\t\t");
}
      out.write("\r\n\t\t}\r\n\t}\r\n}\r\n\r\nparent.document.all.participantType.value=\"");
      out.print(participantType);
      out.write("\";\r\nparent.document.all.tranType.value=\"");
      out.print(tranType);
      out.write("\";\r\n\r\n//办理方式初始化\r\nvar approve=parent.document.all.approveMode;\r\nvar transactType = '");
      out.print(transactType);
      out.write("';\r\nvar transactTypes = transactType.split(\"\");\r\nfor(var i=0;i<transactTypes.length;i++){\r\n\tif(transactTypes[i]!=''){\r\n\t\tif(transactTypes[i]=='0'){\r\n\t\t\tparent.document.all.approveMode[1].style.display=\"\";\r\n\t\t\tparent.document.all.approveMode[1].childNodes[0].checked=true;\r\n\t\t} else if(transactTypes[i]=='1'){\r\n\t\t\tparent.document.all.approveMode[2].style.display=\"\";\r\n\t\t\tparent.document.all.approveMode[2].childNodes[0].checked=true;\r\n\t\t} else if(transactTypes[i]=='2'){\r\n\t\t\tparent.document.all.approveMode[0].style.display=\"\";\r\n\t\t\tparent.document.all.approveMode[0].childNodes[0].checked=true;\r\n\t\t}else if(transactTypes[i]=='3'){\r\n\t\t\tparent.document.all.approveMode[3].style.display=\"\";\r\n\t\t\tparent.document.all.approveMode[3].childNodes[0].checked=true;\r\n\t\t}\r\n\t}\r\n}\r\n/*var approveMode=parent.frm1.approveMode;\r\nvar transactType = '");
      out.print(transactType);
      out.write("';\r\nvar transactTypes = transactType.split(\"\");\r\nvar transHTML=\"<select name=\\\"approveMode\\\" size=\\\"1\\\" style=\\\"width:100%;\\\">\";\r\nfor(var i=0;i<transactTypes.length;i++){\r\n\tif(transactTypes[i]!=''){\r\n\t\tif(transactTypes[i]=='0'){\r\n\t\t\ttransHTML+=\"<option value=\\\"0\\\">单个多人</option>\";\r\n\t\t} else if(transactTypes[i]=='1'){\r\n\t\t\ttransHTML+=\"<option value=\\\"1\\\">多人并行</option>\";\r\n\t\t} else if(transactTypes[i]=='2'){\r\n\t\t\ttransHTML+=\"<option value=\\\"2\\\">单人</option>\";\r\n\t\t} else if(transactTypes[i]=='3'){\r\n\t\t\ttransHTML+=\"<option value=\\\"3\\\">多人串行</option>\";\r\n\t\t}\r\n\t}\r\n}\r\ntransHTML+=\"</selet>\";\r\napproveMode.outerHTML=transHTML;*/\r\n\r\n");

//判断页面显示方式
if(participantType==1 || participantType==8 || participantType==2 || participantType==3 || participantType==4 || participantType==9 || participantType==10 || participantType==6 || participantType==13 || participantType==0 || participantType==7 || participantType==11 || "1".equals(tranType) || "2".equals(tranType)){

      out.write("\r\n\tparent.document.all.middleTR.style.display='';\r\n    parent.document.all.selTextarea.style.display='none';\t\r\n\t//parent.frm1.approveMode.style.width=\"100%\";\r\n\r\n//初始化默认框\r\nvar oSelect=parent.frm1.selectObject;\r\n\r\n//删除\r\nvar nLen =oSelect.length;\r\nfor(j=0;j<nLen;j++){\r\n\toSelect.remove(0);\r\n}\r\n\r\n//赋值\r\nvar opText=\"");
      out.print(selectUserName);
      out.write("\";\r\nvar opValue=\"");
      out.print(selectUser);
      out.write("\";\r\nif(parent.document.all.participantType.value!=2 && parent.document.all.participantType.value!=4){\r\n//if(opText.indexOf(\",\")!=-1){\r\n\tvar opTextArr = opText.split(\",\");\r\n\tvar opValueArr = opValue.split(\",\");\r\n\tif(opTextArr.length==1){\r\n\tfor(var i=0;i<opTextArr.length;i++){\r\n\t\tif(opTextArr[i]!=''){\r\n\t\tvar oOption = document.createElement(\"OPTION\");\r\n\t\toSelect.options.add(oOption);\r\n\t\t//oOption.innerText = opTextArr[i];\r\n\t\t//oOption.value = \"$\"+opValueArr[i]+\"$\";\r\n\t\t");
if(BrowserJudge.isIE(request)){ 
      out.write("\r\n\t\toOption.innerText = opTextArr[i];\r\n\t\toOption.value =\"$\"+opValueArr[i]+\"$\";\r\n\t\t");
}else{
      out.write("\r\n\t\toOption.textContent = opTextArr[i];\r\n\t\toOption.value=\"$\"+opValueArr[i]+\"$\";\r\n\t\t");
}
      out.write("\r\n\t\t}\r\n\t}\r\n\t}\r\n//} \r\n}\r\n");

}else{
	//显示textarea
	
      out.write("\r\n\tparent.document.all.middleTR.style.display='none';\r\n    parent.document.all.selTextarea.style.display='';\r\n\tparent.document.all.selRange.value=\"");
      out.print(range);
      out.write("\";\r\n\t//赋值\r\n\tvar opText=\"");
      out.print(selectUserName);
      out.write("\";\r\n\tvar opValue=\"");
      out.print(selectUser);
      out.write("\";\t\r\n\r\n\t");

	//if(participantType==1 || participantType==12 || participantType==8 || participantType<0){
	if(participantType==12 || participantType<0){
		//显示选择对象按钮
		
      out.write("\r\n\t\tparent.document.all.selTextareaTag.style.display='';\r\n\t\tparent.document.all.selectedTxt.cols=\"62\";\r\n\t\t//parent.frm1.approveMode.style.width=\"85%\";\r\n\t\tparent.document.all.selectedTxtId.value=\"\";\r\n\t\tparent.document.all.selectedTxt.value=\"\";\r\n\t\t");

	}else{
		//将制定的用户带入选择人框
		
      out.write("\r\n\t\tparent.document.all.selTextareaTag.style.display='none';\r\n\t\tparent.document.all.selectedTxt.cols=\"68\";\r\n\t\t//parent.frm1.approveMode.style.width=\"99%\";\r\n\t\tvar opV=opValue.split(\",\");\r\n\t\topValue=\"\";\r\n\t\tfor(var i=0;i<opV.length;i++){\r\n\t\t\tif(opV[i]!=\"\"){\r\n\t\t\t\topValue+=\"$\"+opV[i]+\"$\";\r\n\t\t\t}\r\n\t\t}\r\n\t\tparent.document.all.selectedTxtId.value=opValue;\r\n\t\tparent.document.all.selectedTxt.value=opText;\r\n\t\t");

	}
}

      out.write("\r\n//初始化办理方式\r\n\r\n/*var approveModeLen =approveMode.length;\r\nif('");
//=transactType
      out.write("'==''){\r\n\tapproveMode.options(0).selected = true;\r\n} else{\r\n\tfor(i=0;i<approveModeLen;i++){\r\n\t\tif(approveMode.options(i).value=='");
//=transactType
      out.write("'){\r\n\t\t\tapproveMode.options(i).selected = true;\r\n\t\t}\r\n\t}\r\n}*/\r\n\r\n//-->\r\n</SCRIPT>\r\n");

	//由表单中的某个字段值决定
	if( participantType==4 ){

      out.write("\r\n<SCRIPT LANGUAGE=\"JavaScript\">\r\n<!--\r\nif(eval(\"window.parent.opener.document.all.");
      out.print(participantUserField);
      out.write("_Id\")){\r\n\tvar selectUser = eval(\"window.parent.opener.document.all.");
      out.print(participantUserField);
      out.write("_Id.value\");\r\n\tvar selectUserName = eval(\"window.parent.opener.document.all.");
      out.print(participantUserField);
      out.write("_Name.value\");\r\n\tif(selectUserName.indexOf(\",\")!=-1){\r\n\t\tselectUserName = selectUserName.substring(0,selectUserName.length-1);\r\n\t} else{\r\n\t\tselectUser = \"$\"+selectUser +\"$\";\r\n\t}\r\n\t//新活动\r\n\tString.prototype.replaceAll=function(s1,s2)\r\n\t{var demo=this;\r\n\t while(demo.indexOf(\"$$\")!=-1)\r\n\t demo=demo.replace(s1,s2);\r\n\t return demo;\r\n\t}\r\n\tselectUser = selectUser.replaceAll(\"$$\",\",\");\r\n\tselectUser = selectUser.substring(1,selectUser.length-1);\r\n\tloadXML('userorggroup','no','");
      out.print(show);
      out.write("','','");
      out.print(range);
      out.write("',selectUser,selectUserName);\r\n} else{\r\n\talert(\"请将表单上的选人字段设为可写！\");\r\n}\r\n//-->\r\n</SCRIPT>\r\n");

	}

//是否显示短信提醒
if(showSmsRemind){

      out.write("\r\n<SCRIPT LANGUAGE=\"JavaScript\">\r\n<!--\r\n\tif(parent.document.all.showSmsRemind.value=='true'){\r\n\t\t//parent.document.all.smsDiv.style.display=\"\";\r\n\t\tparent.document.frm1.all.smsTD.style.display=\"\";\r\n\t}\r\n//-->\r\n</SCRIPT>\r\n");
} else{
      out.write("\r\n<SCRIPT LANGUAGE=\"JavaScript\">\r\n<!--\r\n\tif(parent.document.all.showSmsRemind.value=='true'){\r\n\t\t//parent.document.all.smsDiv.style.display=\"none\";\r\n\t\tif(parent.document.frm1.all && parent.document.frm1.all.smsTD) parent.document.frm1.all.smsTD.style.display=\"none\";\r\n\t}\r\n//-->\r\n</SCRIPT>\r\n");
}
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
