/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:05:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.doc.doc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class sendocument_005fbottom_005ftoSend_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n");

  request.setCharacterEncoding("GBK");

  String fileTitle =request.getParameter("fileTitle")==null?"":request.getParameter("fileTitle").toString();
  String byteNum=request.getParameter("receiveFileFileNumber")==null?"":request.getParameter("receiveFileFileNumber").toString();
  String seqNum=request.getParameter("seqNum")==null?"":request.getParameter("seqNum").toString();
  String sendRecordId=request.getParameter("sendRecordId")==null?"":request.getParameter("sendRecordId").toString();



  // 附件
  String accessoryName=request.getParameter("accessoryName2")==null?"":request.getParameter("accessoryName2").toString();
  String accessorySaveName=request.getParameter("accessorySaveName2")==null?"":request.getParameter("accessorySaveName2").toString();
  if("null".equals(accessoryName)){
	  accessoryName="";
  }
  if("null".equals(accessorySaveName)){
	  accessorySaveName="";
  }
  // 正文
  String accessoryName1=request.getParameter("accessoryName1")==null?"":request.getParameter("accessoryName1").toString();
  String accessorySaveName1=request.getParameter("accessorySaveName1")==null?"":request.getParameter("accessorySaveName1").toString();

  String transSendFileId=request.getParameter("transSendFileId")==null?"":request.getParameter("transSendFileId").toString();

  String receiveFileSendFileUnitId=request.getParameter("receiveFileSendFileUnitId")==null?"":request.getParameter("receiveFileSendFileUnitId").toString();
  
  String receiveFileSendFileUnit=request.getParameter("receiveFileSendFileUnit")==null?"":request.getParameter("receiveFileSendFileUnit").toString();
  
  String receiveFileSafetyGrade=request.getParameter("receiveFileSafetyGrade")==null?"":request.getParameter("receiveFileSafetyGrade").toString();
  
  String receiveFileQuantity=request.getParameter("receiveFileQuantity")==null?"":request.getParameter("receiveFileQuantity").toString();
  
  String field4=request.getParameter("field4")==null?"":request.getParameter("field4").toString();
  
  String receiveFileType=request.getParameter("receiveFileType")==null?"":request.getParameter("receiveFileType").toString();
  
  String zjkyType=request.getParameter("zjkyType")==null?"":request.getParameter("zjkyType").toString();
  
  String zjkykeepTerm=request.getParameter("zjkykeepTerm")==null?"":request.getParameter("zjkykeepTerm").toString();
  
  String receiveFileDoComment=request.getParameter("receiveFileDoComment")==null?"":request.getParameter("receiveFileDoComment").toString();

  
  String  slink="/jsoa/GovSendFileAction.do?action=listLoad&editId="+sendRecordId+"&editType=0&canEdit=0&viewType=1";
   
   if(sendRecordId.equals("")||sendRecordId.equals("null")){ 
     slink="";
   }


      out.write("\r\n\r\n<head>\r\n<title>转收文</title>\r\n<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<script src=\"/jsoa/js/js.js\" language=\"javascript\"></script>\r\n<SCRIPT language=\"javascript\" src=\"/jsoa/js/openEndow.js\"></SCRIPT>\r\n<script>\r\nfunction addFile(){\r\n  document.getElementById(\"uploadFrame\").style.display=\"inline\";\r\n}\r\n</script>\r\n</head>\r\n\r\n<body scroll=\"no\">\r\n\r\n<form name=\"webform\" method=\"post\" action=\"/jsoa/GovReceiveFileAction.do?action=see&fromSendFile=1\" >\r\n<input type=\"hidden\" name=\"sendFileTitle\" value=\"");
      out.print(fileTitle);
      out.write("\">\r\n<input type=\"hidden\" name=\"byteNum\" value=\"");
      out.print(byteNum);
      out.write("\">\r\n<input type=\"hidden\" name=\"seqNum\"  value=\"");
      out.print(seqNum);
      out.write("\">\r\n<input type=\"hidden\" name=\"processId\">\r\n<input type=\"hidden\" name=\"processName\">\r\n<input type=\"hidden\" name=\"processType\">\r\n<input type=\"hidden\" name=\"tableId\">\r\n<input type=\"hidden\" name=\"remindField\">\r\n<input type=\"hidden\" name=\"sendFileId\" value=\"");
      out.print(sendRecordId);
      out.write("\">\r\n<input type=\"hidden\" name=\"editId\" value=\"");
      out.print(sendRecordId);
      out.write("\">\r\n<input type=\"hidden\" name=\"accessoryName\"  value=\"");
      out.print(accessoryName);
      out.write("\">\r\n<input type=\"hidden\" name=\"accessorySaveName\"  value=\"");
      out.print(accessorySaveName);
      out.write("\">\r\n<input type=\"hidden\" name=\"accessoryName1\"  value=\"");
      out.print(accessoryName1);
      out.write("\"><!-- 正文 -->\r\n<input type=\"hidden\" name=\"accessorySaveName1\"  value=\"");
      out.print(accessorySaveName1);
      out.write("\">\r\n<input type=\"hidden\" name=\"sendFileLink\" value=\"");
      out.print(slink);
      out.write("\">\r\n<input type=\"hidden\" name=\"sendToReceive\" value=\"1\">\r\n<input type=\"hidden\" name=\"transSendFileId\" value=\"");
      out.print(transSendFileId);
      out.write("\">\r\n\r\n<input type=\"hidden\" name=\"receiveFileSendFileUnitId\" value=\"");
      out.print(receiveFileSendFileUnitId);
      out.write("\">\r\n<input type=\"hidden\" name=\"receiveFileSendFileUnit\" value=\"");
      out.print(receiveFileSendFileUnit);
      out.write("\"><!-- 来文单位 -->\r\n<input type=\"hidden\" name=\"receiveFileSafetyGrade\" value=\"");
      out.print(receiveFileSafetyGrade);
      out.write("\"><!-- 秘密级别： -->\r\n<input type=\"hidden\" name=\"receiveFileQuantity\" value=\"");
      out.print(receiveFileQuantity);
      out.write("\"><!-- 份数： -->\r\n<input type=\"hidden\" name=\"field4\" value=\"");
      out.print(field4);
      out.write("\"><!-- 紧急程度： -->\r\n<input type=\"hidden\" name=\"receiveFileType\" value=\"");
      out.print(receiveFileType);
      out.write("\"><!-- 文件归类： -->\r\n<input type=\"hidden\" name=\"zjkyType\" value=\"");
      out.print(zjkyType);
      out.write("\"><!--文种：-->\r\n<input type=\"hidden\" name=\"zjkykeepTerm\" value=\"");
      out.print(zjkykeepTerm);
      out.write("\"><!-- 保管期限： -->\r\n<input type=\"hidden\" name=\"receiveFileDoComment\" value=\"");
      out.print(receiveFileDoComment);
      out.write("\"><!-- 批示内容 -->\r\n\r\n");
//=request.getAttribute("javax.servlet.forward.query_string")
      out.write('\r');
      out.write('\n');
java.util.List receivefilelist = new com.js.oa.jsflow.service.ProcessBD().getUserProcess(session.getAttribute("userId").toString(), session.getAttribute("orgIdString").toString(), "3");
      out.write("\r\n <script language=\"javascript\">\r\n var receiveFileProcArr = new Array(");
      out.print(receivefilelist.size());
      out.write(");\r\n </script>\r\n\r\n<table  border=\"0\" cellpadding=\"0\" cellspacing=\"0\" id=\"pup_main\">\r\n  <tr>\r\n     <td height=\"20\">&nbsp;</td>\r\n  </tr>\r\n   \r\n  <tr>\r\n    <td align=\"center\" valign=\"top\">\r\n\t\t<div id=\"pup_content\">\r\n\t\t  <table width=\"100%\" height=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n\t\t    <tr>            \r\n              <td width=\"120\" nowrap valign=\"top\" align=\"left\" >&nbsp;&nbsp;请选择收文流程：</td>\r\n            \r\n              <td valign=\"top\" align=\"left\">\r\n\t\t\t  <select name=\"docReceiveFileProc\" onchange=\"chReceiveFileProc(this);\" >\r\n<option value=\"0\">---------请选择------</option>\r\n");

Object[] rfObj = null;
String receiveFileProcessId, receiveFileProcessName, receiveFileProcessType, receiveFileTableId, receiveFileRemindField;
for (int i = 0 ; i < receivefilelist.size() ; i++) {
 rfObj = (Object[])receivefilelist.get(i) ;
 receiveFileProcessId = rfObj[2] + "" ;
receiveFileProcessName = rfObj[3] + "";
receiveFileProcessType = rfObj[5] + "";
receiveFileTableId = rfObj[4] + "";
receiveFileRemindField = rfObj[6]==null?"":rfObj[6] + "";

      out.write("\r\n<script language=\"javascript\">\r\nreceiveFileProcArr[");
      out.print(i);
      out.write("] = new Array(\"");
      out.print(receiveFileProcessId);
      out.write("\", \"");
      out.print(receiveFileProcessName);
      out.write("\", \"");
      out.print(receiveFileProcessType);
      out.write("\", \"");
      out.print(receiveFileTableId);
      out.write("\", \"");
      out.print(receiveFileRemindField);
      out.write("\");\r\n</script>\r\n<option value=\"");
      out.print(receiveFileProcessId);
      out.write('"');
      out.write('>');
      out.print(receiveFileProcessName);
      out.write("</option>\r\n ");
}
      out.write("\r\n</select> \r\n\r\n</td>\r\n            </tr>\r\n\t\t\t\r\n         \r\n          </table>\r\n\t\t</div>\r\n\t</td>\r\n  </tr>\r\n  <tr>\r\n    <td  height=\"140\" valign=\"top\" align=\"right\">\r\n    \r\n     <input type=\"button\" name=\"Cancel\" value=\"新建\" class=\"btnButton2font\" onclick=\"newDocReceiveFile();\" />  <input type=\"button\" name=\"Cancel\" value=\"退出\" class=\"btnButton2font\" onclick=\"window.close();\" />\r\n     &nbsp;&nbsp;\r\n   </td>\r\n  </tr>\r\n</table>\r\n\r\n</body>\r\n</html>\r\n\r\n<script>\r\n\r\nfunction newDocReceiveFile(){\r\n\r\nif(document.all.docReceiveFileProc.value == 0){\r\nalert(\"请选择收文流程！\");\r\n}else{\r\n\r\ndocument.all.sendFileLink.value=document.all.sendFileLink.value+\"&tableId=\"+opener.document.all.tableId.value;\r\n\r\ndocument.webform.submit();\r\nwindow.opener.close();\r\n}\r\n}\r\n\r\nfunction chReceiveFileProc(obj){\r\nfor(var i = 0; i < receiveFileProcArr.length; i ++){\r\nif(receiveFileProcArr[i][0] == obj.value){\r\ndocument.webform.processId.value = receiveFileProcArr[i][0];\r\ndocument.webform.processName.value = receiveFileProcArr[i][1];\r\ndocument.webform.processType.value = receiveFileProcArr[i][2];\r\n");
      out.write("document.webform.tableId.value = receiveFileProcArr[i][3];\r\ndocument.webform.remindField.value = receiveFileProcArr[i][4];\r\nbreak;\r\n}\r\n}\r\n}\r\n\r\n</script>\r\n\r\n<SCRIPT LANGUAGE=\"JavaScript\">\r\n\r\n\r\n\r\n\r\n\r\n//保存\r\n//$:userId\r\n//*:orgId\r\n//@:groupId\r\nfunction include_save(){\r\nwindow.close();\r\n}\r\n\r\n//-->\r\n</SCRIPT>\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
