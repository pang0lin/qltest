/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:59:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.weixin.workflow.daibanflow;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.oa.weixin.common.util.OnlineShowByOpenofficeForWeChat;
import com.js.oa.weixin.common.util.DownloadFileForWeixin;
import java.util.*;
import java.lang.*;

public final class weixinshowhtmlgetdata_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.lang");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.oa.weixin.common.util.OnlineShowByOpenofficeForWeChat");
    _jspx_imports_classes.add("com.js.oa.weixin.common.util.DownloadFileForWeixin");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n");

String year="";
String name = (String) request.getParameter("name");
String fileName = (String) request.getParameter("fileName");
String path = request.getParameter("path");
String filepath = request.getSession().getServletContext().getRealPath("/upload/"+ path + "/") 
		+ System.getProperty("file.separator");
String curPage = null==request.getParameter("curPage") ? "1" : request.getParameter("curPage");
String tohtml = "";

DownloadFileForWeixin toHtml = new DownloadFileForWeixin();

if(fileName.indexOf(".doc") >= 0 || fileName.indexOf(".docx") >= 0){
	tohtml = toHtml.officeToHtml(filepath,fileName);
} else if(fileName.indexOf(".xls") >= 0 || fileName.indexOf(".xlsx") >= 0){
	tohtml = toHtml.convert2Html(filepath+fileName, fileName);
} else if(fileName.endsWith(".txt")){
	tohtml = "<div style=\"width: 100%; height: 100%; text-align: left;\">" + toHtml.txtToHtml(filepath + fileName) + "</div>";
} else if(fileName.endsWith(".pdf")){
	//tohtml = DownloadFileForWeixin.pdf2html(filepath + fileName);
	//DownloadFileForWeixin.pdf2pic(filepath, fileName);
	/*String returnData = DownloadFileForWeixin.pdf2html2(filepath, fileName, curPage);
	String totalPage = returnData.substring(0, returnData.indexOf("|"));
	String src = returnData.substring(returnData.indexOf("|") + 1);
	if("landaedu".equals(com.js.util.config.SystemCommon.getCustomerName())){
		String filepathTemp= filepath.substring(0,filepath.indexOf(System.getProperty("file.separator")+"jsoa"+System.getProperty("file.separator")))+src;
		java.io.File temFile = new java.io.File(filepathTemp);
		if(!temFile.exists()){
			String fileNameTemp=fileName.substring(0,fileName.indexOf("_"));
			src=src.replace(fileNameTemp+"/", "").replace(fileNameTemp+"\\", "");
		}
	}*/
	
	path=request.getParameter("path");
	path="/jsoa/upload/"+path+"/"+fileName;
	String src="/jsoa/pdfview/web/viewer.html?file="+path;
	
	//if(null!=src && !"".equals(src)) src = src.substring(src.indexOf("\\jsoa"));
	tohtml = "<iframe width=\"100%\" height=\"100%\" src=\"" + src + "\" style=\"border: 0;\"></iframe>";
	
}

if(fileName.indexOf(".doc")>=0 || fileName.indexOf(".xls")>=0 || fileName.indexOf(".docx")>=0 || fileName.indexOf(".xlsx")>=0){
	//tohtml+="<div id='messageButtons' class='messageButtons'><div class='messageButton' onclick='hiddenMessageBody()'>关闭</div><div>";
	//如果是公文文件(word2003)追加3个换行防止显示不全
	String tempBr="";
	if(fileName.indexOf(".doc")>=0){
		tempBr="</br></br></br>";
	}
	  tohtml=tohtml.replace("<html>", "").replace("</html>", tempBr).replace("<body>", "").replace("</body>", "").replace("<img src=\"", "<img width=50% src=\"/jsoa/upload/"+path+"/");
	//System.out.println(tohtml);
}


out.write(tohtml);

      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
