/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:45:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.wap2;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.qq.weixin.mp.config.pojo.ViewMenu;
import com.qq.weixin.mp.config.pojo.ComplexMenu;
import com.qq.weixin.mp.pojo.AppRoom;
import com.qq.weixin.mp.config.pojo.Menu;
import com.qq.weixin.mp.config.pojo.App;
import java.util.List;
import com.js.util.config.SystemCommon;

public final class mainPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.qq.weixin.mp.pojo.AppRoom");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.qq.weixin.mp.config.pojo.ComplexMenu");
    _jspx_imports_classes.add("com.qq.weixin.mp.config.pojo.Menu");
    _jspx_imports_classes.add("com.js.util.config.SystemCommon");
    _jspx_imports_classes.add("com.qq.weixin.mp.config.pojo.ViewMenu");
    _jspx_imports_classes.add("com.qq.weixin.mp.config.pojo.App");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");

	String path = request.getContextPath();
	String basePath = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort() + path + "/";

	String appBh = null!=request.getParameter("appBh") ? request.getParameter("appBh") : "";
	System.out.println("--------appBh:"+appBh);
	String menuId = null!=request.getParameter("menuId") ? request.getParameter("menuId") : "";
	String backType = null!=request.getParameter("back") ? "&back="+request.getParameter("back") : "";
	
	ViewMenu menu = (ViewMenu) AppRoom.getMenuByAppBhAndMenuId(appBh, menuId);
	
	String loginType = null==session.getAttribute("loginType") ? "" : session.getAttribute("loginType").toString();

      out.write("\r\n\r\n<!DOCTYPE html>\r\n<html>\r\n\t<head>\r\n\t\t<base href=\"");
      out.print(basePath);
      out.write("\">\r\n\t\t<title>移动办公系统</title>\r\n\t\t<meta content=\"text/html; charset=UTF-8\" http-equiv=Content-Type>\r\n\t\t<meta name=viewport content=\"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=0\">\r\n\t\t<meta name=apple-touch-fullscreen content=YES>\r\n\t\t<meta name=apple-mobile-web-app-capable content=no>\r\n\t\t<meta http-equiv=\"pragma\" content=\"no-cache\">\r\n\t\t<meta http-equiv=\"cache-control\" content=\"no-cache\">\r\n\t\t<meta http-equiv=\"expires\" content=\"0\">\r\n\t\t\r\n\t\t<style>\r\n\t\t");

		if("wap".equals(loginType)){
			
      out.write("\r\n\t\t\t#content { width: 100%; position: absolute; top: -6px; bottom: 0; left: 0;}\r\n\t\t\t");

		} else{
			
      out.write("\r\n\t\t\t#content { width: 100%; position: absolute; top: -6px; bottom: 0; left: 0;}\r\n\t\t\t");

		}
		
      out.write("\r\n\t\t</style>\r\n\t</head>\r\n\t<body>\r\n\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "commonImport.jsp", out, false);
      out.write("\r\n\t\t");

		if("wap".equals(loginType)&&!SystemCommon.getCustomerName().equals("zcl")){
			
      out.write("\r\n\t\t\t<div id=\"mainpage_navdiv\" class=\"top\">\r\n\t\t    \t<a id=\"mainpage_backurl\" href=\"javascript:closeWindow();\">\r\n\t\t    \t\t<img width=\"20\" height=\"15\" src=\"wap2/images/topfh.png\">\r\n\t\t    \t</a>\r\n\t\t    \t<p id=\"mainpage_title\"></p>\r\n\t    \t</div>\r\n\t\t\t");

		}
		
      out.write("\r\n\t\t<div id=\"content\">\r\n\t\t\t<iframe id=\"mainblock\" src=\"");
      out.print(menu.getUrl().substring(2) + backType );
      out.write("\"\r\n\t\t\t\tstyle=\"position: absolute; width: 100%; height: 100%;top: 0; left: 0; border: none;\"  onload=\"javascript:savePervious(this);\"></iframe>\r\n\t\t</div>\r\n\t</body>\r\n</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
