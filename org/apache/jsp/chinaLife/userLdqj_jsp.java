/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:42:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.chinaLife;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.js.system.manager.service.ManagerService;

public final class userLdqj_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.system.manager.service.ManagerService");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);

List<String[]> kqQingData = (List<String[]>)request.getAttribute("dataList");
String year = request.getAttribute("year")+"";
String month = request.getAttribute("month")+"";
int yearNum = new Date().getYear()+1900;

String userId = request.getAttribute("userId")+"";
String userName = request.getAttribute("userName")+"";
String orgId = request.getAttribute("orgId")+"";
String orgName = request.getAttribute("orgName")+"";
String type = request.getAttribute("type")==null?"":request.getAttribute("type")+"";
List<String[]> qjType = (List<String[]>)request.getAttribute("qjType");

ManagerService managerBD = new ManagerService();
List fanwei =managerBD.getRightScope(session.getAttribute("userId").toString(),"07*55*14");//人事管理-考勤维护

Object[] scope = {"1","","","",""};
if(fanwei.size()>0){
	scope = (Object[])fanwei.get(0);
}
String rang = scope[1]+"";
if("1".equals(scope[0]+"")){
	rang = "";
}else if("2".equals(scope[0]+"")){
	String[] orgIdString = (session.getAttribute("orgIdString")+"").replace("$$",",").replace("$", "").split(",");
	rang = "*"+orgIdString[2]+"*";
}else if("3".equals(scope[0]+"")){
	rang = "*"+session.getAttribute("orgId")+"*";
}else if("0".equals(scope[0]+"")){
	rang = "*0*";
}

      out.write("\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n<html>\r\n\t<head>\r\n\t\t<title>员工请假情况统计表</title>\r\n\t\t<link href=\"/jsoa/skin/blue/style.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n\t\t<link rel=stylesheet type=\"text/css\" href=\"/jsoa/public/date_picker/DateObject2.css\">\r\n\t\t<SCRIPT language=javascript src=\"/jsoa/public/date_picker/DateObject.js\"></SCRIPT>\r\n\t\t<SCRIPT language=javascript src=\"/jsoa/public/date_picker/DatePicker.js\"></SCRIPT>\r\n\t\t<SCRIPT language=javascript src=\"/jsoa/public/date_picker/editlib.js\"></SCRIPT>\r\n\t</head>\r\n\t  \r\n\t<body bgcolor=\"#ffffff\" class=\"docBoxNoPanel\">\r\n\t\t<div id=\"Layer1\" >\r\n\t\t\t<div height=\"30px;\" style=\"padding: 10px;display:");
      out.print(("bmMore".equals(request.getParameter("action"))?"none":"") );
      out.write("\">\r\n\t\t\t<form action=\"/jsoa/kqShow.do\" method=\"get\" id=\"searchForm\" name=\"searchForm\">\r\n\t\t\t<input type=\"hidden\" value=\"ldqj\" name=\"action\" >\r\n\t\t\t<input type=\"hidden\" id=\"export\" name=\"export\">\r\n\t\t\t年度：<select id=\"year\" name=\"year\">\r\n\t\t\t");
for(int i=2014;i<=yearNum;i++){
      out.write("\r\n\t\t\t<option value=\"");
      out.print(i );
      out.write('"');
      out.write(' ');
      out.print(year.equals(i+"")?"selected":"" );
      out.write('>');
      out.print(i );
      out.write("年度</option>\r\n\t\t\t");
} 
      out.write("\r\n\t\t\t</select>\r\n\t\t\t月份：<select id=\"month\" name=\"month\">\r\n\t\t\t\t<option value=\"\">选择月份</option>\r\n\t\t\t\t<option value=\"1\" ");
      out.print("1".equals(month)?"selected":"" );
      out.write(">一月份</option><option value=\"2\" ");
      out.print("2".equals(month)?"selected":"" );
      out.write(">二月份</option>\r\n\t\t\t\t<option value=\"3\" ");
      out.print("3".equals(month)?"selected":"" );
      out.write(">三月份</option><option value=\"4\" ");
      out.print("4".equals(month)?"selected":"" );
      out.write(">四月份</option>\r\n\t\t\t\t<option value=\"5\" ");
      out.print("5".equals(month)?"selected":"" );
      out.write(">五月份</option><option value=\"6\" ");
      out.print("6".equals(month)?"selected":"" );
      out.write(">六月份</option>\r\n\t\t\t\t<option value=\"7\" ");
      out.print("7".equals(month)?"selected":"" );
      out.write(">七月份</option><option value=\"8\" ");
      out.print("8".equals(month)?"selected":"" );
      out.write(">八月份</option>\r\n\t\t\t\t<option value=\"9\" ");
      out.print("9".equals(month)?"selected":"" );
      out.write(">九月份</option><option value=\"10\" ");
      out.print("10".equals(month)?"selected":"" );
      out.write(">十月份</option>\r\n\t\t\t\t<option value=\"11\" ");
      out.print("11".equals(month)?"selected":"" );
      out.write(">十一月份</option><option value=\"12\" ");
      out.print("12".equals(month)?"selected":"" );
      out.write(">十二月份</option>\r\n\t\t\t</select>&nbsp;\r\n\t\t\t查询人：<input type=\"text\" name=\"userName\" value=\"");
      out.print(userName );
      out.write("\" onclick=\"selectEmp();\" readonly=\"readonly\" \r\n\t\t\t\t\tstyle=\"width:200px\" class=\"inputText\" id=\"userName\" title=\"请点击选择\">\r\n            <input type=\"hidden\" name=\"userId\" value=\"");
      out.print(userId );
      out.write("\" id=\"userId\" >\r\n            <input type=\"hidden\" name=\"orgName\" value=\"\" onclick=\"selectOrg();\" readonly=\"readonly\" \r\n\t\t\t\t\tstyle=\"width:200px\" class=\"inputText\" id=\"orgName\">\r\n            <input type=\"hidden\" name=\"orgId\" value=\"\" id=\"orgId\">\r\n            请假类型：<select name=\"type\" id=\"type\"><option value=\"\">选择类型</option>\r\n            <option value=\"因公出差\" ");
      out.print("因公出差".equals(type)?"selected":"" );
      out.write(">因公出差</option>\r\n            ");
for(int i=0;i<qjType.size();i++){
            	String[] qj = qjType.get(i); 
      out.write("\r\n            <option value=\"");
      out.print(qj[0] );
      out.write('"');
      out.write(' ');
      out.print(qj[0].equals(type)?"selected":"" );
      out.write('>');
      out.print(qj[1] );
      out.write("</option>\r\n            ");
} 
      out.write("\r\n            </select>\r\n            <input type=\"button\" class=\"btnButton2font\" value=\"查询\" onclick=\"exportExcel(0);\" />\r\n            <input type=\"button\" class=\"btnButton2font\" value=\"导出\" onclick=\"exportExcel(1);\" /></form></div>\r\n\t\t\t<div><table width=\"99%\" align=\"center\" border=\"1\" cellpadding=\"5\" cellspacing=\"0\" >\r\n\t\t\t\t<tr><td colspan=\"17\" align=\"center\" style=\"font-size: 20px;\"><b>员工请假情况统计表</b></td></tr>\r\n\t\t\t\t<tr height=\"20px\"><td align=\"center\"><b>年份</td>\r\n\t\t\t\t<td align=\"center\"><b>部门</b></td>\r\n\t\t\t\t<td align=\"center\"><b>姓名</b></td>\r\n\t\t\t\t<td align=\"center\"><b>被委托/补登人</b></td>\r\n\t\t\t\t<td align=\"center\"><b>职位</b></td>\r\n\t\t\t\t<td align=\"center\"><b>职级</b></td>\r\n\t\t\t\t<td align=\"center\"><b>年假天数</b></td>\r\n\t\t\t\t<td align=\"center\"><b>剩余年假天数</b></td>\r\n\t\t\t\t<td align=\"center\"><b>请假类别</b></td>\r\n\t\t\t\t<td align=\"center\"><b>请假天数</b></td>\r\n\t\t\t\t<td align=\"center\"><b>开始时间</b></td>\r\n\t\t\t\t<td align=\"center\"><b>结束时间</b></td>\r\n\t\t\t\t<td align=\"center\"><b>是否出京</b></td>\r\n\t\t\t\t<td align=\"center\"><b>是否出境</b></td>\r\n\t\t\t\t<td align=\"center\"><b>请假原因</b></td>\r\n");
      out.write("\t\t\t\t<td align=\"center\"><b>状态</b></td></tr>\r\n\t\t\t\t\r\n\t\t\t\t");
for(int i=0;i<kqQingData.size();i++){
					String[] kqQing = kqQingData.get(i); 
      out.write("\r\n\t\t\t\t<tr height=\"20px\"><td align=\"center\">");
      out.print(kqQing[0] );
      out.write("&nbsp;</td>\r\n\t\t\t\t<td align=\"center\">");
      out.print(kqQing[1] );
      out.write("&nbsp;</td>\r\n\t\t\t\t<td align=\"center\">");
      out.print(kqQing[3] );
      out.write("&nbsp;</td>\r\n\t\t\t\t<td align=\"center\">");
      out.print(kqQing[4] );
      out.write("&nbsp;</td>\r\n\t\t\t\t<td align=\"center\">");
      out.print(kqQing[5] );
      out.write("&nbsp;</td>\r\n\t\t\t\t<td align=\"center\">");
      out.print(kqQing[6] );
      out.write("&nbsp;</td>\r\n\t\t\t\t<td align=\"center\">");
      out.print(kqQing[7] );
      out.write("&nbsp;</td>\r\n\t\t\t\t<td align=\"center\">");
      out.print(kqQing[8] );
      out.write("&nbsp;</td>\r\n\t\t\t\t<td align=\"center\">");
      out.print(kqQing[9] );
      out.write("&nbsp;</td>\r\n\t\t\t\t<td align=\"center\">");
      out.print(kqQing[10] );
      out.write("&nbsp;</td>\r\n\t\t\t\t<td align=\"center\">");
      out.print(kqQing[11] );
      out.write("&nbsp;</td>\r\n\t\t\t\t<td align=\"center\">");
      out.print(kqQing[12] );
      out.write("&nbsp;</td>\r\n\t\t\t\t<td align=\"center\">");
      out.print(kqQing[13] );
      out.write("&nbsp;</td>\r\n\t\t\t\t<td align=\"center\">");
      out.print(kqQing[14] );
      out.write("&nbsp;</td>\r\n\t\t\t\t<td align=\"center\">");
      out.print(kqQing[15] );
      out.write("&nbsp;</td>\r\n\t\t\t\t<td align=\"center\">");
      out.print(kqQing[20].equals("1")?"办结":"在办" );
      out.write("&nbsp;</td></tr>");
} 
      out.write("\r\n\t\t\t</table>\r\n\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/public/page/pageUtil.jsp", out, false);
      out.write("\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</body>\r\n\t<script type=\"text/javascript\">\r\n\tfunction selectEmp(){\r\n\t\topenEndow('userId','userName',document.getElementById(\"userId\").value,document.getElementById(\"userName\").value,\r\n\t\t\t\t'user','no','usergroup','");
      out.print(rang );
      out.write("');\r\n\t}\r\n\tfunction exportExcel(flag){\r\n\t\tif(document.getElementById(\"userName\")!=null && (document.getElementById(\"userName\").value==\"\" \r\n\t\t\t||document.getElementById(\"userName\").value==\"请点击选择\") && flag==0 ){\r\n\t\t\tdocument.getElementById(\"userId\").value=\"\";\r\n\t\t}\r\n\t\tif(document.getElementById(\"orgName\")!=null && document.getElementById(\"orgName\").value==\"\"){\r\n\t\t\tdocument.getElementById(\"orgId\").value=\"\";\r\n\t\t}\r\n\t\tdocument.getElementById(\"export\").value=flag;\r\n\t\tdocument.getElementById(\"searchForm\").submit();\r\n\t}\r\n\tfunction selfPage(){\r\n\t\tlocation.href=\"/jsoa/kqShow.do?action=ldqj&userId=");
      out.print(session.getAttribute("userId") );
      out.write("&year=");
      out.print(new Date().getYear()+1900 );
      out.write("&month=");
      out.print((new Date().getMonth()+1) );
      out.write("\";\r\n\t}\r\n\t</script>\r\n</html>\r\n<script src=\"/jsoa/js/openEndow.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
