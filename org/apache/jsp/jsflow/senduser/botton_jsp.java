/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:08:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsflow.senduser;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class botton_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=gbk");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n");

String allowName=request.getParameter("formAttr");
String allowId=request.getParameter("formAttr1");
String show=request.getParameter("show");
String condition=request.getParameter("condition");//选择限制条件

String func=request.getParameter("func");

      out.write("\r\n<html>\r\n<head>\r\n<link rel=stylesheet type=\"text/css\" href=\"/jsoa/public/date_picker/DateObject1.css\">\r\n<SCRIPT language=\"javascript\" src=\"/jsoa/public/date_picker/DateObject.js\"></SCRIPT>\r\n<SCRIPT language=\"javascript\" src=\"/jsoa/public/date_picker/DatePicker.js\"></SCRIPT>\r\n<SCRIPT language=\"javascript\" src=\"/jsoa/public/date_picker/editlib.js\"></SCRIPT>\r\n<SCRIPT language=\"javascript\" src=\"/jsoa/public/date_picker/tree.js\"></SCRIPT>\r\n</head>\r\n\r\n<body bgcolor=\"#FDF8D6\" topmargin=\"0\" leftmargin=\"0\" rightmargin=\"0\" bottommargin=\"0\">\r\n<form name=\"orgTreeBar\"  method=\"post\">\r\n <table border=\"0\" style=\"font-size:12px; margin-right:9px;\">\r\n  \t<tr>\r\n  \t   <td width=\"10%\" nowrap>\r\n  \t    缓急：\r\n  \t    <select>\r\n  \t       <option value=\"\">一般</option>\r\n  \t       <option value=\"\">特急</option>\r\n  \t       <option value=\"\">紧急</option>\r\n  \t    </select>\r\n  \t    </td>\r\n  \t    <td width=\"10%\" nowrap>\r\n  \t    &nbsp;&nbsp;办理期限：<input type=\"checkbox\" name=\"selScheme\" onclick=\"showDeadLine(this);\">\r\n  \t    </td>  \t\r\n  \t    <td id=\"deadlineDateTD\" width=\"10%\" nowrap>\r\n");
      out.write("  \t          <script language=javascript>\t\t\t  \r\n\t\t\t  var dtpDate2 = createDatePicker(\"deadlineDate\",\"2010\",\"1\", \"4\");\t\t\t  \r\n\t\t\t  </script>\r\n  \t    </td>    \r\n\t\t<td height=\"10%\" nowrap align=\"right\">\r\n\t\t<input type=\"button\" value=\"确定\" onClick=\"javascript:turnBack();\">\r\n\t\t<input type=\"button\" value=\"清除\" onClick=\"javascript:clean();\">\r\n\t\t<input type=\"button\" value=\"取消\" onClick=\"javascript:parent.window.close();\">\r\n\t\t</td>\r\n\t</tr>\r\n </table>\r\n</form>\r\n</body>\r\n</html>\r\n<script>\r\nfunction showDeadLine(obj){\r\n\tif(obj.checked){\r\n\t\tdocument.all.deadlineDateTD.style.display='';\r\n\t}else{\r\n\t\tdocument.all.deadlineDateTD.style.display='none';\r\n\t}\r\n}\r\n</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
