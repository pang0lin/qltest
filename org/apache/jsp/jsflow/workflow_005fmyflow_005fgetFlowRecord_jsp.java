/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:07:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsflow;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class workflow_005fmyflow_005fgetFlowRecord_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);

java.util.List alist=new java.util.ArrayList();
if(request.getParameter("record")!=null){
 alist = new com.js.oa.jsflow.service.WorkFlowButtonBD().getAllDealWithLog(request.getParameter("processId"),request.getParameter("table"),request.getParameter("record"));

}									  									  


      out.write("\r\n<html>\r\n<body onload=\"initRecord();\">\r\n<div id=\"divContent\">\r\n\r\n<table width=\"98%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" class=\"flowRecordTable\">\r\n  <tr>\r\n    <td colspan=\"5\" align=\"left\" valign=\"middle\" class=\"flowRecordTitle\"><b>&nbsp;流程记录</b></td>    \r\n  </tr>\r\n  ");
if(alist!=null&&alist.size()>0){
	  Object[] dealObj;
	  for(int i=0;i<alist.size();i++){
		 dealObj=(Object[])alist.get(i);
      out.write("\r\n  <tr>\r\n    <td width=\"5%\" nowrap align=\"left\" valign=\"middle\" class=\"flowRecordBorder\">");
      out.print((i+1));
      out.write("</td>\r\n    <td width=\"10%\" nowrap align=\"left\" valign=\"middle\" class=\"flowRecordBorder\">");
      out.print(dealObj[0]);
      out.write("</td>\r\n    <td width=\"30%\" nowrap align=\"left\" valign=\"middle\" class=\"flowRecordBorder\">");
      out.print(dealObj[1]);
      out.write("</td>\r\n    <td width=\"45%\" nowrap align=\"left\" valign=\"middle\" class=\"flowRecordBorder\">\r\n    ");

    out.print(dealObj[2]);
    if(dealObj[4]!=null && !"null".equals(dealObj[4].toString()) && !"".equals(dealObj[4].toString())){
    	
      out.write("\r\n    \t&nbsp;(<a href=\"#\" style=\"cursor:pointer;\" onclick=\"openDealTipsWindow('");
      out.print(dealObj[5]);
      out.write("')\">办理提示</a>)\r\n    \t");

    }
    
      out.write("\r\n    </td>\r\n    <td width=\"10%\" nowrap align=\"center\" valign=\"middle\" class=\"flowRecordBorder\">");
      out.print(dealObj[3]);
      out.write(" </td>\r\n  </tr>\r\n  ");
   } 											  
	}
  
      out.write("\r\n  \r\n</table>\r\n</div>\r\n</body>\r\n</html>\r\n<script>\r\nfunction initRecord(){\r\n  parent.document.getElementById(\"docinfo4\").innerHTML=document.getElementById(\"divContent\").innerHTML;\r\n}\r\n</script>\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
