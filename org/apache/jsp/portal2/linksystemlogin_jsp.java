/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:40:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.portal2;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.oa.personalwork.netaddress.service.AddressBD;

public final class linksystemlogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.oa.personalwork.netaddress.service.AddressBD");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);

String jsfaction,jsfusername,jsfpassword,ssologin,username,password,jsfformelseparam,elseparam;

jsfaction=request.getParameter("jsfaction");
jsfusername=request.getParameter("jsfusername");
jsfpassword=request.getParameter("jsfpassword");
ssologin=request.getParameter("jsfssologin");
jsfformelseparam=request.getParameter("jsfformelseparam");
String[] formelseparamValue=null;
String[] elseparamValue=null;


String systemId=request.getParameter("systemId");
String userId=session.getAttribute("userId").toString();
AddressBD bd=new AddressBD();
String[] temp=bd.getAccount(systemId,userId);
elseparam=temp[2];
if("1".equals(ssologin)){
	username=session.getAttribute("userAccount").toString();
	password=session.getAttribute("userPassword").toString();	
}else{
	username=temp[0];
	password=temp[1];
}
   
jsfformelseparam = bd.getFormelseAllParam(systemId);

if(!"".equals(jsfformelseparam) && jsfformelseparam!=null){
	formelseparamValue=jsfformelseparam.split("#&#");
}
if(!"".equals(elseparam) && elseparam!=null){
		elseparamValue=elseparam.split("#&#");
}

if(jsfaction.contains("CRMCustomLogin.aspx")){
	try{
		//JiusiSSO
		password = com.js.util.util.DES.encryptFunction("JiusiSSO", password);
	}catch(Exception e){
		e.printStackTrace();
	}
}

      out.write("\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=GBK\">\r\n<title>正在登陆..</title>\r\n</head>\r\n\r\n<body style=\"background-color:#FFF;\" onload=\"load();\">\r\n<BR>\r\n<div style=\"align:center;\">正在登陆系统，请稍侯...</div>\r\n<div style=\"display:none;\">\r\n\t<form name=frm1 action=\"");
      out.print(jsfaction );
      out.write("\" method=\"post\">\r\n\t\t");
      out.print(jsfusername );
      out.write(":<input type=text name=\"");
      out.print(jsfusername );
      out.write("\" value=\"");
      out.print(username );
      out.write("\"><br />\r\n\t\t");
      out.print(jsfpassword );
      out.write(":<input type=text name=\"");
      out.print(jsfpassword );
      out.write("\" value=\"");
      out.print(password );
      out.write("\"><br />\r\n\t\t\r\n\t\t");
if(formelseparamValue!=null){
		for(int i=0;i<formelseparamValue.length;i++){
      out.write("\r\n\t\t");
      out.print(formelseparamValue[i] );
      out.write(":<input type=text class=\"inputText\" name=\"");
      out.print(formelseparamValue[i] );
      out.write("\" id=\"");
      out.print(formelseparamValue[i] );
      out.write('"');
      out.write(' ');
if(elseparamValue!=null){ 
      out.write(" value=\"");
      out.print(elseparamValue[i]);
      out.write('"');
      out.write(' ');
}
      out.write("/>\r\n\t\t<br />\r\n\t\t");
}}
      out.write("\r\n\t\t\r\n\t\t<input type=\"button\" onclick=\"load();\" value=\"Login\" />\r\n\t</form>\r\n</div>\r\n</body>\r\n</html>\r\n<script src=\"/jsoa/js/util.js\"></script>\r\n<script language=\"javascript\">\r\nfunction load(){\r\n\t");
if(jsfaction.contains("oa.lut.cn/names.nsf?Login")){
      out.write("\r\n\t   window.open(\"http://oa.lut.cn/names.nsf?Login&Username=");
      out.print(username);
      out.write("&password=");
      out.print(password );
      out.write("\");\r\n\t   window.close();\r\n\t");
}else{
      out.write("\r\n\t   frm1.submit();\r\n\t");
}
      out.write("\r\n}\r\n</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
