/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:38:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class reset_005fpassword_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-html.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-bean.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fhtml_005fhtml;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fhtml_005fform_0026_005fmethod_005faction;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fhtml_005fpassword_0026_005fstyleClass_005fproperty_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fhtml_005fpassword_0026_005fstyleClass_005fproperty_005fonkeyup_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fhtml_005fhtml = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fhtml_005fform_0026_005fmethod_005faction = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fhtml_005fpassword_0026_005fstyleClass_005fproperty_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fhtml_005fpassword_0026_005fstyleClass_005fproperty_005fonkeyup_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fhtml_005fhtml.release();
    _005fjspx_005ftagPool_005fhtml_005fform_0026_005fmethod_005faction.release();
    _005fjspx_005ftagPool_005fhtml_005fpassword_0026_005fstyleClass_005fproperty_005fnobody.release();
    _005fjspx_005ftagPool_005fhtml_005fpassword_0026_005fstyleClass_005fproperty_005fonkeyup_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n");

   	//设置无缓存
   	response.setHeader("progma","no-cache");   
   	response.setHeader("Cache-Control","no-cache");   
   	response.setDateHeader("Expires",0);

      out.write(' ');
      out.write('\r');
      out.write('\n');

	String minLength=(String)request.getAttribute("minLength");
	String maxLength=(String)request.getAttribute("maxLength");
	String isMustCotainNumAndLetter=(String)request.getAttribute("containNumAndLetter");
	String title=(String)request.getAttribute("title");

      out.write("\r\n<head>\r\n    <title>密码重置</title>\r\n    <style type=\"text/css\">\r\n  \t body,table{font-size:12px;background:url(images/comm_top.gif) repeat-x;}\r\n\t.color{color:#FF0000;}\r\n\t.wrong_info{vertical-align:middle;}\r\n\t.right_info{vertical-align:middle;}\r\n\t.pass_top{width: 48px; background-color:gray; height: 8px; overflow: hidden; border:1px solid #d0d0d0;}\r\n\t.pass_top_show{width: 48px; background-color:#0074DB; height: 8px; overflow: hidden; border:1px solid #d0d0d0;}\r\n\t.pass_bottom{font-family: \"宋体\"; color: #666; padding-left:17px;border:0px;background-color:#FFFFFF;}\r\n\t.pass_bottom_show{font-family: \"宋体\"; color: #666; font-weight:bold; padding-left:17px;border:0px;}\r\n\t.block{padding-left:50px;margin:10px 0px;text-align:left;padding-top:10px;}\r\n\t#contentDiv{position:relative;width:670px;height:220px;}\r\n\t.span_middle{padding-bottom:10px;}\r\n\t.btn{width:50px;height:20px;cursor:pointer;}\r\n\t.input{height:20px;}\r\n\t.tooltip{width:207px;height:75px;}\r\n\t.tooltip span.top {height:75px;color:red;text-align:left;padding:10px 15px 10px 40px;background: url(images/prop.gif) no-repeat;} \r\n");
      out.write("  </style>\r\n  <script type=\"text/javascript\">\r\n  \tvar staticNum=1;\r\n  \tvar minLength=");
      out.print(minLength);
      out.write(";\r\n  \tvar maxLength=");
      out.print(maxLength);
      out.write(";\r\n  \tvar isMustCotainNumAndLetter=");
      out.print(isMustCotainNumAndLetter);
      out.write(";\r\n  \t\r\n\t//此处为string类添加三个成员\r\n\tString.prototype.Trim = function(){ return Trim(this);}\r\n\tString.prototype.LTrim = function(){return LTrim(this);}\r\n\tString.prototype.RTrim = function(){return RTrim(this);}\r\n\t\r\n\t//此处为独立函数\r\n\tfunction LTrim(str)\r\n\t{\r\n\t    var i;\r\n\t    for(i=0;i<str.length;i++)\r\n\t    {\r\n\t        if(str.charAt(i)!=\" \"&&str.charAt(i)!=\" \")break;\r\n\t    }\r\n\t    str=str.substring(i,str.length);\r\n\t    return str;\r\n\t}\r\n\tfunction RTrim(str)\r\n\t{\r\n\t    var i;\r\n\t    for(i=str.length-1;i>=0;i--)\r\n\t    {\r\n\t        if(str.charAt(i)!=\" \"&&str.charAt(i)!=\" \")break;\r\n\t    }\r\n\t    str=str.substring(0,i+1);\r\n\t    return str;\r\n\t}\r\n\tfunction Trim(str)\r\n\t{\r\n\t    return LTrim(RTrim(str));\r\n\t}\r\n  \t\r\n\tvar imgPathRight=\"images/button_ok.gif\";\r\n\tvar imgPathWrong=\"images/button_cancel.png\";\r\n\t/*\r\n\t\t参数:\r\n\t\tvalidateText:要验证的字符串\r\n\t\tregExp:正则表达式\r\n\t\terrorMsg:显示的错误信息\r\n\t*/\r\n\tfunction validate(validateText,regExp,errorMsg)\r\n\t{\r\n\t\tvar msg=errorMsg;\r\n\t\tvar temp =regExp.exec(validateText);\r\n\t\tif(temp!=null)\r\n\t\t{\r\n\t\t\tif(temp[0]==validateText)msg=\"\";\r\n");
      out.write("\t\t\treturn msg;\r\n\t\t}\r\n\t\telse return msg;\r\n\t}\r\n\t/*\r\n\t\t参数:\r\n\t\tvalidateText:要验证的字符串\r\n\t\tregExp:正则表达式\r\n\t\trightMsg:显示的正确信息\r\n\t\terrorMsg:显示的错误信息\r\n\t\tdisplayControl:要显示的位置\r\n\t*/\r\n\tfunction executeValidate(validateText,regExp,errorMsg,displayControl)\r\n\t{\r\n\t\tvar imgright=document.createElement(\"img\");\r\n\t\timgright.setAttribute(\"src\",imgPathRight);\r\n\t\timgright.setAttribute(\"alt\",\"right\");\r\n\t\timgright.setAttribute(\"height\",16);\r\n\t\timgright.setAttribute(\"width\",16);\r\n\t\tvar msg=validate(validateText,regExp,errorMsg);\r\n\t\tdisplayControl.innerHTML=\"\";\r\n\t\t//把信息显示在当前控件的下一个兄弟节点\r\n\t\tif(msg.length>0)//验证失败\r\n\t\t{\r\n\t\t\tdisplayControl.innerHTML=errorMsg;\r\n\t\t\tdisplayControl.style.color=\"red\";\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse//验证通过\r\n\t\t{\r\n\t\t\tdisplayControl.appendChild(imgright);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction checkOldPassword(value)//验证旧密码\r\n\t{\r\n\t\tvar display=document.getElementById(\"oldPasswordMsg\");\r\n\t\tvalue=value.Trim();\r\n\t\tvar regExp=/^[a-zA-Z0-9\\`\\.\\~\\!\\@#$\\%\\^\\&\\_\\-\\\\\\/\\:\\*\\?\\<\\>\\|\\(\\)\\+\\[\\]\\}\\{\\,]{1,32}$/;\r\n\t\treturn executeValidate(value,regExp,\" \",display);\r\n");
      out.write("\t}\r\n\tfunction checkNewPassword(value)//验证新密码\r\n\t{\r\n\t\tvar display=document.getElementById(\"newPasswordMsg\");\r\n\t\tvalue=value.Trim();\r\n\t\t//开启密码强度验证密码长度在6-32位\r\n\t\tif(minLength!=null&&maxLength!=null&&isMustCotainNumAndLetter!=null)\r\n\t\t{\r\n\t\t\tif(isMustCotainNumAndLetter==\"1\")//密码必须包含字母和数字\r\n\t\t\t{\r\n\t\t\t\tvar regExp=/^(?![a-zA-Z]+$)(?![0-9]+$)[a-zA-Z0-9\\`\\.\\~\\!\\@#$\\%\\^\\&\\_\\-\\\\\\/\\:\\*\\?\\<\\>\\|\\(\\)\\+\\[\\]\\}\\{\\,]{");
      out.print(minLength);
      out.write(',');
      out.print(maxLength);
      out.write("}$/;\r\n\t\t\t\treturn executeValidate(value,regExp,\" \",display);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse//只对密码长度限制\r\n\t\t\t{\r\n\t\t\t\tvar regExp=/^[a-zA-Z0-9\\`\\.\\~\\!\\@#$\\%\\^\\&\\_\\-\\\\\\/\\:\\*\\?\\<\\>\\|\\(\\)\\+\\[\\]\\}\\{\\,]{");
      out.print(minLength);
      out.write(',');
      out.print(maxLength);
      out.write("}$/;\r\n\t\t\t\treturn executeValidate(value,regExp,\" \",display);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//未开启密码强度验证密码长度默认为1-32位\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar regExp=/^[a-zA-Z0-9\\`\\.\\~\\!\\@#$\\%\\^\\&\\_\\-\\\\\\/\\:\\*\\?\\<\\>\\|\\(\\)\\+\\[\\]\\}\\{\\,]{1,32}$/;\r\n\t\t\treturn executeValidate(value,regExp,\" \",display);\r\n\t\t}\r\n\t}\r\n\tfunction checkConfirmPassword(value)//重复密码验证\r\n\t{\r\n\t\tvar display=document.getElementById(\"confirmPasswordMsg\");\r\n\t\tvar imgright=document.createElement(\"img\");\r\n\t\timgright.setAttribute(\"src\",imgPathRight);\r\n\t\timgright.setAttribute(\"alt\",\"right\");\r\n\t\timgright.setAttribute(\"height\",16);\r\n\t\timgright.setAttribute(\"width\",16);\r\n\t\toldValue=document.getElementsByName(\"newPassword\")[0].value;\r\n\t\tvar displayControl=document.getElementById(\"confirmPasswordMsg\");\r\n\t\tdisplayControl.innerHTML=\"\";\r\n\t\tif(value.Trim()==oldValue.Trim())\r\n\t\t{\r\n\t\t\tdisplayControl.appendChild(imgright);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tdisplayControl.innerHTML=\" \";\r\n\t\t\tdisplayControl.style.color=\"red\";\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\tfunction validateAll()\r\n\t{\r\n\t\tvar oldPassword=document.getElementsByName(\"oldPassword\")[0];\r\n");
      out.write("\t\tvar newPassword=document.getElementsByName(\"newPassword\")[0];\r\n\t\tvar confirmNewPassword=document.getElementsByName(\"confirmNewPassword\")[0];\r\n\t\tvar oldValue=oldPassword.value;\r\n\t\tvar newValue=newPassword.value;\r\n\t\tvar confirmValue=confirmNewPassword.value;\r\n\t\toldPassword.onblur();\r\n\t\tnewPassword.onblur();\r\n\t\tconfirmNewPassword.onblur();\r\n\t\tif(checkOldPassword(oldValue)&&checkNewPassword(newValue)&&checkConfirmPassword(confirmValue))\r\n\t\t{\r\n\t\t\tdocument.forms[0].submit();\r\n\t\t}\t\t\t\r\n\t}\r\n\t//CharMode函数 \r\n\t//测试某个字符是属于哪一类. \r\n\tfunction CharMode(input)\r\n\t{ \r\n\t\tif (input>=48 && input <=57) //数字 \r\n\t\treturn 1; \r\n\t\tif (input>=65 && input <=90) //大写字母 \r\n\t\treturn 2; \r\n\t\tif (input>=97 && input <=122) //小写 \r\n\t\treturn 4; \r\n\t\telse \r\n\t\treturn 8; //特殊字符 \r\n\t} \r\n\t//bitTotal函数 \r\n\t//计算出当前密码当中一共有多少种模式 \r\n\tfunction bitTotal(num)\r\n\t{ \r\n\t\tmodes=0; \r\n\t\tfor (i=0;i<4;i++)\r\n\t\t{ \r\n\t\t\tif (num & 1) modes++; \r\n\t\t\tnum>>>=1; \r\n\t\t} \r\n\t\treturn modes; \r\n\t} \r\n\t//checkStrong函数 \r\n\t//返回密码的强度级别 \r\n\tfunction checkStrong(pwd)\r\n\t{ \r\n\t\tif (pwd.length<=6) \r\n\t\treturn 1; //密码太短 \r\n");
      out.write("\t\tModes=0; \r\n\t\tfor (i=0;i<pwd.length;i++)\r\n\t\t{ \r\n\t\t\t//测试每一个字符的类别并统计一共有多少种模式. \r\n\t\t\tModes|=CharMode(pwd.charCodeAt(i)); \r\n\t\t} \r\n\t\treturn bitTotal(Modes); \r\n\t} \r\n\t\r\n\t//当用户放开键盘或密码输入框失去焦点时,根据不同的级别显示不同的颜色 \r\n\tfunction pwStrength(pwd)\r\n\t{ \r\n\t\tvar low=document.getElementById(\"strength_L\");\r\n\t\tvar middle=document.getElementById(\"strength_M\");\r\n\t\tvar high=document.getElementById(\"strength_H\");\r\n\t\tvar low_font=document.getElementById(\"strength_L_Font\");\r\n\t\tvar middle_font=document.getElementById(\"strength_M_Font\");\r\n\t\tvar high_font=document.getElementById(\"strength_H_Font\");\r\n\t\tif(pwd.length==0)\r\n\t\t{\r\n\t\t\tlow.className=middle.className=high.className=\"pass_top\";\r\n\t\t\tlow_font.className=middle_font.className=high_font.className=\"pass_bottom\";\r\n\t\t\t\r\n\t\t}\r\n\t\tif (pwd==null||pwd=='')\r\n\t\t{ \r\n\t\t\tlow.className=low.className=low.className=\"pass_top\";\r\n\t\t\tlow_font.className=middle_font.className=high_font.className=\"pass_bottom\";\r\n\t\t} \r\n\t\telse\r\n\t\t{ \r\n\t\t\tS_level=checkStrong(pwd); \r\n\t\t\tswitch(S_level)\r\n\t\t \t{ \r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tlow.className=\"pass_top_show\";\r\n");
      out.write("\t\t\t\t\tmiddle.className=high.className=\"pass_top\";\r\n\t\t\t\t\tlow_font.className=\"pass_bottom_show\";\r\n\t\t\t\t\tmiddle_font.className=high_font.className=\"pass_bottom\";\r\n\t\t\t\t\tbreak; \r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tlow.className=middle.className=\"pass_top_show\";\r\n\t\t\t\t\thigh.className=\"pass_top\";\r\n\t\t\t\t\tmiddle_font.className=\"pass_bottom_show\";\r\n\t\t\t\t\tlow_font.className=high_font.className=\"pass_bottom\";\r\n\t\t\t\t\tbreak; \r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tlow.className=middle.className=high.className=\"pass_top_show\";\r\n\t\t\t\t\tlow_font.className=middle_font.className=\"pass_bottom\";\r\n\t\t\t\t\thigh_font.className=\"pass_bottom_show\";\r\n\t\t\t\t\tbreak;\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\t\t\t\t\r\n\t\t\t} \r\n\t\t} \r\n\t\treturn; \r\n\t} \r\n\tvar init=new function()\r\n  \t{\r\n  \t\tvar state=\"");
      out.print(request.getParameter("state"));
      out.write("\";\r\n  \t\tif(state==\"complete\")\r\n  \t\t{\r\n  \t\t\talert(\"密码修改成功!\");\r\n  \t\t\tlocation.href=\"login.jsp\";\r\n  \t\t\treturn;\r\n  \t\t}\r\n  \t\tif(state==\"fail\")\r\n  \t\t{\r\n  \t\t\talert(\"密码修改失败!\");\r\n  \t\t\treturn;\r\n  \t\t}\r\n  \t\tif(state==\"validate_fail\")\r\n  \t\t{\r\n  \t\t\talert(\"原始密码不正确!\");\r\n  \t\t\treturn;\r\n  \t\t}\r\n  \t}\r\n  \tfunction re_set()\r\n  \t{\r\n  \t\tvar low=document.getElementById(\"strength_L\");\r\n\t\tvar middle=document.getElementById(\"strength_M\");\r\n\t\tvar high=document.getElementById(\"strength_H\");\r\n\t\tvar low_font=document.getElementById(\"strength_L_Font\");\r\n\t\tvar middle_font=document.getElementById(\"strength_M_Font\");\r\n\t\tvar high_font=document.getElementById(\"strength_H_Font\");\r\n\t\tlow.className=middle.className=high.className=\"pass_top\";\r\n\t\tlow_font.className=middle_font.className=high_font.className=\"pass_bottom\";\r\n\t\tdocument.getElementsByName(\"oldPassword\")[0].onfocus();\r\n\t\tdocument.getElementsByName(\"newPassword\")[0].onfocus();\r\n\t\tdocument.getElementsByName(\"confirmNewPassword\")[0].onfocus();\r\n\t\tvar imgs=document.getElementsByTagName(\"img\");\r\n\t\tif(imgs.length>2)\r\n");
      out.write("\t\t{\r\n\t\t\tfor(var i=0;i<imgs.length;i++)\r\n\t\t\t{\r\n\t\t\t\tif(imgs[i].id==\"btnok\"||imgs[i].id==\"btncancel\")continue;\r\n\t\t\t\telse imgs[i].removeNode(true);\r\n\t\t\t\tdocument.getElementById(\"btncancel\").onclick();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n  \t}\r\n  \t\t\tfunction enableTooltips()\r\n\t\t\t{\r\n                var oldMsg,newMsg,confirmMsg;\r\n                if (!document.getElementById || !document.getElementsByTagName) \r\n                    return;\r\n\t\t\t\t/*\r\n\t\t\t\t\t旧密码验证框\r\n\t\t\t\t*/\r\n                oldMsg = document.createElement(\"span\");\r\n                oldMsg.onmouseover=modiIndex;\r\n                oldMsg.id = \"oldMsg\";\r\n                oldMsg.setAttribute(\"id\", \"oldMsg\");\r\n                oldMsg.style.position = \"absolute\";\r\n                document.getElementById(\"contentDiv\").appendChild(oldMsg);\r\n\t\t\t\t/*\r\n\t\t\t\t\t新密码验证框\r\n\t\t\t\t*/\r\n\t\t\t\tnewMsg = document.createElement(\"span\");\r\n\t\t\t\tnewMsg.onmouseover=modiIndex;\r\n                newMsg.id = \"newMsg\";\r\n                newMsg.setAttribute(\"id\", \"newMsg\");\r\n                newMsg.style.position = \"absolute\";\r\n");
      out.write("                document.getElementById(\"contentDiv\").appendChild(newMsg);\r\n\t\t\t\t/*\r\n\t\t\t\t\t重复验证框\r\n\t\t\t\t*/\r\n\t\t\t\tconfirmMsg = document.createElement(\"span\");\r\n\t\t\t\tconfirmMsg.onmouseover=modiIndex;\r\n                confirmMsg.id = \"confirmMsg\";\r\n                confirmMsg.setAttribute(\"id\", \"confirmMsg\");\r\n                confirmMsg.style.position = \"absolute\";\r\n                document.getElementById(\"contentDiv\").appendChild(confirmMsg);\r\n\t\t\t\t//为文本框绑定事件\r\n\t\t\t\tvar oldText=document.getElementsByName(\"oldPassword\")[0];\r\n\t\t\t\tvar oldMsg=\"旧密码长度为1-32位,不能包含 \\',\\\" 等字符!\";\r\n\t\t\t\tPrepare(oldText,oldMsg,'oldMsg');\r\n\t\t\t\tvar newText=document.getElementsByName(\"newPassword\")[0];\r\n\t\t\t\tvar newMsg=\"\";\r\n\t\t\t\t//开启密码强度验证密码长度在6-32位\r\n\t\t\t\tif(minLength!=null&&maxLength!=null&&isMustCotainNumAndLetter!=null)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(isMustCotainNumAndLetter==\"1\")//密码必须包含字母和数字\r\n\t\t\t\t\t\tnewMsg=\"新密码长度为");
      out.print(minLength);
      out.write('-');
      out.print(maxLength);
      out.write("位,同时包含字母和数字,不能包含 \\',\\\" 等非法字符!\";\r\n\t\t\t\t\telse//只对密码长度限制\r\n\t\t\t\t\t\tnewMsg=\"新密码长度为");
      out.print(minLength);
      out.write('-');
      out.print(maxLength);
      out.write("位,不能包含 \\',\\\" 等非法字符!\";\r\n\t\t\t\t}\r\n\t\t\t\t//未开启密码强度验证密码长度默认为1-32位\r\n\t\t\t\telse\r\n\t\t\t\t\tnewMsg=\"新密码长度为1-32位,不能包含 \\',\\\" 等非法字符!\";\r\n\t\t\t\tPrepare(newText,newMsg,'newMsg');\r\n\t\t\t\tvar confirmText=document.getElementsByName(\"confirmNewPassword\")[0];\r\n\t\t\t\tvar confirmMsg=\"两次密码必须一致!\";\r\n\t\t\t\tPrepare(confirmText,confirmMsg,'confirmMsg');\r\n            }\r\n            function showTooltip(el,id,tooltip)//验证,并显示错误信息\r\n\t\t\t{\r\n\t\t\t\thideTooltip(id);//先隐藏先前显示的提示框\r\n\t\t\t\t//验证是否正确\r\n\t\t\t\tif(id=='oldMsg')\r\n\t\t\t\t{\r\n\t\t\t\t\tif(checkOldPassword(this.value))\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif(id=='newMsg')\r\n\t\t\t\t{\r\n\t\t\t\t\tif(checkNewPassword(this.value))\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif(id=='confirmMsg')\r\n\t\t\t\t{\r\n\t\t\t\t\tif(checkConfirmPassword(this.value))\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n                document.getElementById(id).appendChild(tooltip);\r\n                Locate(el,id);\r\n            }\r\n            \r\n            function hideTooltip(id)//移除错误信息\r\n\t\t\t{\r\n                var d = document.getElementById(id);\r\n                if (d.childNodes.length > 0) \r\n                    d.removeChild(d.firstChild);\r\n");
      out.write("            }\r\n            \r\n            function setOpacity(el)//设置透明度\r\n\t\t\t{\r\n                el.style.filter = \"alpha(opacity:95)\";\r\n                el.style.KHTMLOpacity = \"0.95\";\r\n                el.style.MozOpacity = \"0.95\";\r\n                el.style.opacity = \"0.95\";\r\n            }\r\n            \r\n            function CreateEl(type, className)//创建元素\r\n\t\t\t{\r\n                var x = document.createElement(type);\r\n                x.className = className;\r\n                x.style.display = \"block\";\r\n                return (x);\r\n            }\r\n            \r\n            function Locate(el,id)//定位\r\n\t\t\t{\r\n                var posx = 0, posy = 0;\r\n\t\t\t\tvar top=el.offsetTop;\r\n\t\t\t\tvar left=el.offsetLeft+150;\r\n                document.getElementById(id).style.top = top + \"px\";\r\n                document.getElementById(id).style.left = left + \"px\";\r\n            }\r\n            function Prepare(el,msg,id)//准备工作\r\n\t\t\t{\r\n                var tooltip,content;\r\n                tooltip = CreateEl(\"span\", \"tooltip\");\r\n                content = CreateEl(\"span\", \"top\");\r\n");
      out.write("                content.innerHTML = msg;\r\n                tooltip.appendChild(content);\r\n                setOpacity(tooltip);\r\n                el.onblur = function()\r\n                {\tvalue=el.value;\r\n                \tshowTooltip(el,id,tooltip);\r\n                };\r\n                el.onfocus = function(){hideTooltip(id)};\r\n            }\r\n            function modiIndex()\r\n            {\r\n            \tthis.style.zIndex=++staticNum;\r\n            }\r\n           \r\n  </script>\r\n</head>\r\n  \r\n\r\n\r\n  \r\n");
      //  html:html
      org.apache.struts.taglib.html.HtmlTag _jspx_th_html_005fhtml_005f0 = (org.apache.struts.taglib.html.HtmlTag) _005fjspx_005ftagPool_005fhtml_005fhtml.get(org.apache.struts.taglib.html.HtmlTag.class);
      boolean _jspx_th_html_005fhtml_005f0_reused = false;
      try {
        _jspx_th_html_005fhtml_005f0.setPageContext(_jspx_page_context);
        _jspx_th_html_005fhtml_005f0.setParent(null);
        int _jspx_eval_html_005fhtml_005f0 = _jspx_th_html_005fhtml_005f0.doStartTag();
        if (_jspx_eval_html_005fhtml_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n  <body>\r\n  \t");
            //  html:form
            org.apache.struts.taglib.html.FormTag _jspx_th_html_005fform_005f0 = (org.apache.struts.taglib.html.FormTag) _005fjspx_005ftagPool_005fhtml_005fform_0026_005fmethod_005faction.get(org.apache.struts.taglib.html.FormTag.class);
            boolean _jspx_th_html_005fform_005f0_reused = false;
            try {
              _jspx_th_html_005fform_005f0.setPageContext(_jspx_page_context);
              _jspx_th_html_005fform_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fhtml_005f0);
              // /reset_password.jsp(462,3) name = action type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_html_005fform_005f0.setAction("/ResetPassword");
              // /reset_password.jsp(462,3) name = method type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_html_005fform_005f0.setMethod("post");
              int _jspx_eval_html_005fform_005f0 = _jspx_th_html_005fform_005f0.doStartTag();
              if (_jspx_eval_html_005fform_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("\r\n  \t\t<div id=\"contentDiv\">\r\n\t  \t<fieldset>\r\n\t    \t<legend>");
                  out.print(title);
                  out.write("</legend>\r\n\t\t  \t\t<!-- 旧密码 -->\r\n\t\t  \t\t<div id=\"pwd_old\" class=\"block\">\r\n\t\t  \t\t\t<span class=\"span_middle\"><font color=\"red\" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</font>旧密码&nbsp;&nbsp;</span>\r\n\t\t  \t\t\t<span>\r\n\t  \t\t\t  \t");
                  if (_jspx_meth_html_005fpassword_005f0(_jspx_th_html_005fform_005f0, _jspx_page_context))
                    return;
                  out.write("</span>\r\n\t\t  \t\t\t<span id=\"oldPasswordMsg\"></span>\r\n\t  \t\t  \t</div>\r\n\t\t  \t\t<!-- 新密码 -->\r\n\t\t  \t\t<div id=\"pwd_new\" class=\"block\">\r\n\t\t  \t\t\t<span class=\"span_middle\"><font color=\"red\" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</font>新密码&nbsp;&nbsp;</span>\r\n\t\t  \t\t\t<span>");
                  if (_jspx_meth_html_005fpassword_005f1(_jspx_th_html_005fform_005f0, _jspx_page_context))
                    return;
                  out.write("</span>\r\n\t\t  \t\t\t<span style=\"display:");
                  out.print(request.getAttribute("isDisplay"));
                  out.write(";width:150px;\"></span>\r\n\t\t  \t\t\t<span id=\"newPasswordMsg\"></span>\r\n\t\t  \t\t</div>\r\n\t\t  \t\t\r\n\t\t  \t\t<!-- 密码确认 -->\r\n\t\t  \t\t<div id=\"pwd_confirm\" class=\"block\">\r\n\t\t  \t\t\t<span class=\"span_middle\"><font color=\"red\" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</font>密码确认</span>\r\n\t\t  \t\t\t<span>");
                  if (_jspx_meth_html_005fpassword_005f2(_jspx_th_html_005fform_005f0, _jspx_page_context))
                    return;
                  out.write("</span>\r\n\t\t  \t\t\t<span id=\"confirmPasswordMsg\"></span>\r\n\t\t  \t\t</div>\r\n\t\t  \t\t<div id=\"button\" style=\"float:left;margin-bottom:10px;\"> \r\n\t\t  \t\t\t<img id=\"btnok\" src=\"images/baocun.gif\" onClick=\"return validateAll();\" Class=\"btn\"/>\r\n\t\t  \t\t\t<img id=\"btncancel\" src=\"images/chongzhi.gif\" onClick=\"re_set();reset();\" Class=\"btn\"/>\r\n\t\t  \t\t</div>\r\n\t\t  \t\t\r\n\t\t  \t\t<!-- 隐藏域 -->\r\n\t\t  \t\t<div>\r\n\t\t  \t\t\t<input name=\"userAccount\" type=\"hidden\" value=\"");
                  out.print(request.getAttribute("userAccount") );
                  out.write("\"></input>\r\n\t\t  \t\t\t<input name=\"isDisplay\" type=\"hidden\" value=\"");
                  out.print(request.getAttribute("isDisplay") );
                  out.write("\"></input>\r\n\t\t  \t\t\t<input name=\"minLength\" type=\"hidden\" value=\"");
                  out.print(request.getAttribute("minLength") );
                  out.write("\"></input>\r\n\t\t  \t\t\t<input name=\"maxLength\" type=\"hidden\" value=\"");
                  out.print(request.getAttribute("maxLength") );
                  out.write("\"></input>\r\n\t\t  \t\t\t<input name=\"containNumAndLetter\" type=\"hidden\" value=\"");
                  out.print(request.getAttribute("containNumAndLetter"));
                  out.write("\"></input>\r\n\t\t  \t\t\t<input name=\"title\" type=\"hidden\" value=\"");
                  out.print(request.getAttribute("title") );
                  out.write("\"></input>\r\n\t\t  \t\t</div>\r\n\t\t  \t\r\n\t  \t</fieldset>\r\n\t  \t<div style=\"display:inline;position:absolute;top:77;left:285;\">\r\n\t\t\t<table style=\"display:");
                  out.print(request.getAttribute("isDisplay"));
                  out.write("\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td id=\"strength_L\" class=\"pass_top\"></td>\r\n\t\t\t\t\t<td id=\"strength_M\" class=\"pass_top\"></td>\r\n\t\t\t\t\t<td id=\"strength_H\" class=\"pass_top\"></td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td id=\"strength_L_Font\" class=\"pass_bottom\">弱</td>\r\n\t\t\t\t\t<td id=\"strength_M_Font\" class=\"pass_bottom\">中</td>\r\n\t\t\t\t\t<td id=\"strength_H_Font\" class=\"pass_bottom\">强</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</table>\r\n\t \t</div>\r\n  \t\t</div>\r\n\t  \t\r\n  \t");
                  int evalDoAfterBody = _jspx_th_html_005fform_005f0.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_html_005fform_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fhtml_005fform_0026_005fmethod_005faction.reuse(_jspx_th_html_005fform_005f0);
              _jspx_th_html_005fform_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_html_005fform_005f0, _jsp_getInstanceManager(), _jspx_th_html_005fform_005f0_reused);
            }
            out.write("\r\n  </body>\r\n \t <script type=\"text/javascript\">\r\n \t \t\r\n\t  \tvar contentDiv = document.getElementById(\"contentDiv\");\r\n\t   \tcontentDiv.style.left=(document.body.clientWidth/2-contentDiv.clientWidth/2)+\"px\";\r\n\t  \tcontentDiv.style.top=(document.body.scrollTop+document.body.clientHeight/2-contentDiv.clientHeight/2)+\"px\";\r\n\t \tvar isDisplay=\"");
            out.print(request.getAttribute("isDisplay"));
            out.write("\";\r\n\t  \tif(isDisplay==\"none\")\r\n\t  \t{\r\n\t  \t\tdocument.getElementById(\"pwd_old\").style.paddingLeft=\"150px\";\r\n\t  \t\tdocument.getElementById(\"pwd_new\").style.paddingLeft=\"150px\";\r\n\t  \t\tdocument.getElementById(\"pwd_confirm\").style.paddingLeft=\"150px\";\r\n\t  \t\tdocument.getElementById(\"button\").style.paddingLeft=\"250px\";\r\n\t  \t}\r\n\t  \telse\r\n\t  \t{\r\n\t  \t\tdocument.getElementById(\"pwd_old\").style.paddingLeft=\"30px\";\r\n\t  \t\tdocument.getElementById(\"pwd_new\").style.paddingLeft=\"30px\";\r\n\t  \t\tdocument.getElementById(\"pwd_confirm\").style.paddingLeft=\"30px\";\r\n\t  \t\tdocument.getElementById(\"button\").style.paddingLeft=\"130px\";\r\n\t  \t}\r\n\t  \tenableTooltips();\r\n  \t</script>\r\n");
            int evalDoAfterBody = _jspx_th_html_005fhtml_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_html_005fhtml_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fhtml_005fhtml.reuse(_jspx_th_html_005fhtml_005f0);
        _jspx_th_html_005fhtml_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_html_005fhtml_005f0, _jsp_getInstanceManager(), _jspx_th_html_005fhtml_005f0_reused);
      }
      out.write("\r\n\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_html_005fpassword_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  html:password
    org.apache.struts.taglib.html.PasswordTag _jspx_th_html_005fpassword_005f0 = (org.apache.struts.taglib.html.PasswordTag) _005fjspx_005ftagPool_005fhtml_005fpassword_0026_005fstyleClass_005fproperty_005fnobody.get(org.apache.struts.taglib.html.PasswordTag.class);
    boolean _jspx_th_html_005fpassword_005f0_reused = false;
    try {
      _jspx_th_html_005fpassword_005f0.setPageContext(_jspx_page_context);
      _jspx_th_html_005fpassword_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);
      // /reset_password.jsp(470,9) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_html_005fpassword_005f0.setProperty("oldPassword");
      // /reset_password.jsp(470,9) name = styleClass type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_html_005fpassword_005f0.setStyleClass("input");
      int _jspx_eval_html_005fpassword_005f0 = _jspx_th_html_005fpassword_005f0.doStartTag();
      if (_jspx_th_html_005fpassword_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fhtml_005fpassword_0026_005fstyleClass_005fproperty_005fnobody.reuse(_jspx_th_html_005fpassword_005f0);
      _jspx_th_html_005fpassword_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_html_005fpassword_005f0, _jsp_getInstanceManager(), _jspx_th_html_005fpassword_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_html_005fpassword_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  html:password
    org.apache.struts.taglib.html.PasswordTag _jspx_th_html_005fpassword_005f1 = (org.apache.struts.taglib.html.PasswordTag) _005fjspx_005ftagPool_005fhtml_005fpassword_0026_005fstyleClass_005fproperty_005fonkeyup_005fnobody.get(org.apache.struts.taglib.html.PasswordTag.class);
    boolean _jspx_th_html_005fpassword_005f1_reused = false;
    try {
      _jspx_th_html_005fpassword_005f1.setPageContext(_jspx_page_context);
      _jspx_th_html_005fpassword_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);
      // /reset_password.jsp(476,13) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_html_005fpassword_005f1.setProperty("newPassword");
      // /reset_password.jsp(476,13) name = onkeyup type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_html_005fpassword_005f1.setOnkeyup("pwStrength(this.value)");
      // /reset_password.jsp(476,13) name = styleClass type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_html_005fpassword_005f1.setStyleClass("input");
      int _jspx_eval_html_005fpassword_005f1 = _jspx_th_html_005fpassword_005f1.doStartTag();
      if (_jspx_th_html_005fpassword_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fhtml_005fpassword_0026_005fstyleClass_005fproperty_005fonkeyup_005fnobody.reuse(_jspx_th_html_005fpassword_005f1);
      _jspx_th_html_005fpassword_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_html_005fpassword_005f1, _jsp_getInstanceManager(), _jspx_th_html_005fpassword_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_html_005fpassword_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  html:password
    org.apache.struts.taglib.html.PasswordTag _jspx_th_html_005fpassword_005f2 = (org.apache.struts.taglib.html.PasswordTag) _005fjspx_005ftagPool_005fhtml_005fpassword_0026_005fstyleClass_005fproperty_005fnobody.get(org.apache.struts.taglib.html.PasswordTag.class);
    boolean _jspx_th_html_005fpassword_005f2_reused = false;
    try {
      _jspx_th_html_005fpassword_005f2.setPageContext(_jspx_page_context);
      _jspx_th_html_005fpassword_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);
      // /reset_password.jsp(484,13) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_html_005fpassword_005f2.setProperty("confirmNewPassword");
      // /reset_password.jsp(484,13) name = styleClass type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_html_005fpassword_005f2.setStyleClass("input");
      int _jspx_eval_html_005fpassword_005f2 = _jspx_th_html_005fpassword_005f2.doStartTag();
      if (_jspx_th_html_005fpassword_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fhtml_005fpassword_0026_005fstyleClass_005fproperty_005fnobody.reuse(_jspx_th_html_005fpassword_005f2);
      _jspx_th_html_005fpassword_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_html_005fpassword_005f2, _jsp_getInstanceManager(), _jspx_th_html_005fpassword_005f2_reused);
    }
    return false;
  }
}
