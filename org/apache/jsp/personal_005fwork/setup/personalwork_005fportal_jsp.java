/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:01:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.personal_005fwork.setup;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.util.util.StringSplit;
import com.js.oa.portal.service.CustomDesktopBD;
import com.js.oa.portal.po.CustomDesktopLayoutPO;
import java.util.*;
import java.net.URLEncoder;

public final class personalwork_005fportal_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.util.util.StringSplit");
    _jspx_imports_classes.add("java.net.URLEncoder");
    _jspx_imports_classes.add("com.js.oa.portal.service.CustomDesktopBD");
    _jspx_imports_classes.add("com.js.oa.portal.po.CustomDesktopLayoutPO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n");
 

 String urlPath="portal2/";
 ServletContext sct=session.getServletContext();
 String path=sct.getRealPath("/")+urlPath+"layout";
 if(com.js.util.config.SystemCommon.getUseClusterServer()==1){
 	path=sct.getRealPath("/")+"upload/layout";
 }
 String domainId=session.getAttribute("domainId")==null?"0":session.getAttribute("domainId").toString();
 String userName=session.getAttribute("userName").toString();
 String personPorname=request.getParameter("personPorname");
 String porPerId=request.getParameter("porPerId");
 CustomDesktopBD customDesktopBD = new CustomDesktopBD();
 CustomDesktopLayoutPO customDesktopLayoutPO = new CustomDesktopLayoutPO();
 
 String layoutName = personPorname;
 String userOrgGroup = "$"+session.getAttribute("userId").toString()+"$";
 String viewRangeName = userName+",";
 customDesktopLayoutPO.setMenuName(layoutName);
 customDesktopLayoutPO.setLayoutName(userName+"个人门户");
 customDesktopLayoutPO.setViewUser(StringSplit.splitWith(userOrgGroup,"$","*@"));
 customDesktopLayoutPO.setViewOrg(StringSplit.splitWith(userOrgGroup,"*","@$"));
 customDesktopLayoutPO.setViewGroup(StringSplit.splitWith(userOrgGroup,"@","$*"));
 customDesktopLayoutPO.setCreatedEmp(Long.parseLong(session.getAttribute("userId").toString()));
 customDesktopLayoutPO.setCreatedOrg(Long.parseLong(session.getAttribute("orgId").toString()));
 customDesktopLayoutPO.setViewRangeName(viewRangeName);
 customDesktopLayoutPO.setDomainId(domainId);//domainID
 customDesktopLayoutPO.setShowOrder("1");
 customDesktopLayoutPO.setMenuName(layoutName);
 customDesktopLayoutPO.setMenuType(1);
 customDesktopLayoutPO.setIsUrl("0");
 customDesktopLayoutPO.setUrl("");
 customDesktopLayoutPO.setIspublic("0");
 customDesktopLayoutPO.setPersonEmpId(session.getAttribute("userId").toString());
 String  opResult ="";
 if(porPerId!=null&&!"".equals(porPerId)){
    opResult = customDesktopBD.updateLayoutForPerson(customDesktopLayoutPO,path,domainId,session.getAttribute("userId").toString(),porPerId);
 }else{
    opResult = customDesktopBD.saveLayoutForPerson(customDesktopLayoutPO,path,domainId,session.getAttribute("userId").toString());
 }
 
 
 
 
 out.write(opResult);

      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
