/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:56:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.public_;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class saveasgroup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

String webapp=request.getContextPath();
String pName=request.getParameter("divPTemp");
String pId=request.getParameter("personId");

      out.write("\r\n<HTML>\r\n<HEAD><TITLE>新增个人组类别</TITLE></HEAD>\r\n<style type=\"text/css\">\r\n</style>\r\n<script src=\"/jsoa/js/js.js\" language=\"javascript\"></script>\r\n<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<SCRIPT language=javascript src=\"/jsoa/webmail/ajax_util.js\"></SCRIPT>\r\n<BODY  class=\"MainFrameBox Pupwin\" onkeydown=\"entySubmit()\">\r\n<FORM  NAME =\"frm\" METHOD=\"POST\">\r\n<TABLE width=\"100%\" height=\"100%\" valign=\"top\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\"  style=\"padding-left:10px;\" class=\"docBoxNoPanel\">\r\n  <tr>\r\n     <td  style=\"font-size:15px;color:#003366;padding-top:8px;\">\r\n     <b>新增个人组</b>\r\n     </td>\r\n  </tr>\r\n  <TR valign=\"top\" style=\"padding-top:12px;\">\r\n     <TD align=\"left\" id=\"3230\">\r\n      名称：&nbsp;<input style=\"width:320px;\" type=\"text\" maxLength=\"50\" name=\"nameTemp\" value=\"\">\r\n     </TD>\r\n  </TR>   \r\n  <TR>\r\n     <TD align=\"left\" style=\"padding-bottom:20px;\">\r\n        <div id=\"fileNameDiv\" style=\"height: 40px;\"></div>\r\n     <input type=\"hidden\" name=\"continueUpload\" value=\"0\">\r\n\t <INPUT NAME=\"submit\" id=\"but001\" VALUE=\"保存\" TYPE=\"button\" onClick=\"checkForm()\" class=\"btnButton4Font\">\r\n\t <INPUT NAME=\"submit\" id=\"but001\" VALUE=\"取消\" TYPE=\"button\" onClick=\"javascript:window.close();\"  class=\"btnButton4Font\">\r\n");
      out.write("\t <br>\r\n     </TD>\r\n  </TR>\r\n</TABLE>\r\n</FORM>\r\n</BODY>\r\n</HTML>\r\n<script language=\"javascript\">\r\nfunction entySubmit(){\r\n  if(event.keyCode==13){\r\n    //checkForm();\r\n  }\r\n }\r\n\r\nfunction checkForm(){\r\nvar name=frm.nameTemp.value;\r\n  if(name==''||name==null||name.replace(/(^\\s*)|(\\s*$)/g,\"\")==''){\r\n     alert('请输入类别名称！');\r\n     document.all.nameTemp.select();\r\n     return false;\r\n  }else{\r\n     var url='");
      out.print(webapp);
      out.write("'+\"/GroupAction.do?action=checkName&name=\"+name;\r\n     sendG(url,getResult,null);\r\n  }\r\n}\r\n\r\nfunction getResult(cartXML){\r\n  var cart = cartXML.getElementsByTagName(\"result\")[0];\r\n  var name = cart.getElementsByTagName(\"name\")[0].firstChild.nodeValue;\r\n  if(name=='1'){\r\n    alert(\"类别名称重复！\");\r\n    document.all.nameTemp.select();\r\n    return false;\r\n  }else{\r\n    saveAsPrivateGroup();\r\n  }\r\n}\r\n\r\nfunction saveAsPrivateGroup(){\r\n    var name=frm.nameTemp.value;\r\n    var urlTemp='");
      out.print(webapp);
      out.write("'+\"/GroupAction.do?action=saveAsPrivateGroup&groupName=\"+name+\"&PName=");
      out.print(pName);
      out.write("&PId=");
      out.print(pId);
      out.write("\";\r\n    sendG(urlTemp,getResultTemp,null);\r\n}\r\n\r\nfunction getResultTemp(cartXML){\r\n  var cart = cartXML.getElementsByTagName(\"result\")[0];\r\n  var flag = cart.getElementsByTagName(\"flag\")[0].firstChild.nodeValue;\r\n  if(flag=='1'){\r\n    alert('保存成功！');\r\n    window.close();\r\n  }else{\r\n    alert('保存失败！');\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
