/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:58:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.public_.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.jsupload.upload.SmartUpload;
import java.util.Map;
import com.js.oa.netdisk.service.*;
import com.js.system.util.SysSetupReader;
import java.util.*;
import org.apache.commons.fileupload.FileItem;
import com.js.oa.info.infomanager.service.InformationBD;
import com.js.lang.Resource;

public final class smartUpload_005fnetdisk_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.js.oa.netdisk.service");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.jsupload.upload.SmartUpload");
    _jspx_imports_classes.add("com.js.lang.Resource");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("org.apache.commons.fileupload.FileItem");
    _jspx_imports_classes.add("com.js.oa.info.infomanager.service.InformationBD");
    _jspx_imports_classes.add("com.js.system.util.SysSetupReader");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n");
      com.jsupload.upload.SmartUpload myUpload = null;
      myUpload = (com.jsupload.upload.SmartUpload) _jspx_page_context.getAttribute("myUpload", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (myUpload == null){
        myUpload = new com.jsupload.upload.SmartUpload();
        _jspx_page_context.setAttribute("myUpload", myUpload, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\"\r\n\trel=\"stylesheet\" type=\"text/css\" />\r\n");

    request.setCharacterEncoding("GBK"); 
	Calendar cal = Calendar.getInstance();
	String year = cal.get(Calendar.YEAR)+"";//年
	String local = session.getAttribute("org.apache.struts.action.LOCALE").toString();
	String mode = (String) request.getParameter("mode");
	String path = (String) request.getParameter("path");
	String tableName = (String) request.getParameter("tableName");
	String fileNames = (String) request.getParameter("fileName");
	String saveNames = (String) request.getParameter("saveName");
	String fileNum = (String) request.getParameter("fileMaxNum");
	String fileType = (String) request.getParameter("fileType");
	String channelId = request.getParameter("channelId");
	String isPersonalDocument = (String) request
			.getParameter("isPersonalDocument");//判断是否是个人文档上传,如果不是空则是个人文档上传要判断是否超出了系统开关里面的个人文档容量设置
	String empId = session.getAttribute("userId").toString();
	com.js.system.util.SysSetupReader ssReader = com.js.system.util.SysSetupReader
			.getInstance();
	long useSize = ssReader.getUseNetDiskSize(empId);
	long allSize = ssReader.getUserNetDiskSize(empId) * 1024 * 1024;
	com.js.util.util.UploadFile upFile = new com.js.util.util.UploadFile();
	String currenid = "0";
	if (request.getParameter("currenid") != null && !"null".equals(request.getParameter("currenid")) && !"".equals(request.getParameter("currenid"))) {
		currenid = request.getParameter("currenid");
	}
	String fileidstring = "";
	if (request.getParameter("fileidstring") != null
			&& !"null".equals(request.getParameter("fileidstring"))) {
		fileidstring = request.getParameter("fileidstring");
	}
	int fileMinWidth = 0;
	int fileMinHeight = 0;
	int fileMaxWidth = 0;
	int fileMaxHeight = 0;
	int fileSize = 0;
	if (fileNum.equals("0"))
		fileNum = "10";
	if (request.getParameter("fileMinWidth") != null) {
		fileMinWidth = Integer.parseInt((String) request
				.getParameter("fileMinWidth"));
	}
	if (request.getParameter("fileMinHeight") != null) {
		fileMinHeight = Integer.parseInt((String) request
				.getParameter("fileMinHeight"));
	}
	if (request.getParameter("fileMaxWidth") != null) {
		fileMaxWidth = Integer.parseInt((String) request
				.getParameter("fileMaxWidth"));
	}
	if (request.getParameter("fileMaxHeight") != null) {
		fileMaxHeight = Integer.parseInt((String) request
				.getParameter("fileMaxHeight"));
	}
	String domainId = session.getAttribute("domainId").toString();
	String attachSizeLimit = SysSetupReader.getInstance()
			.getAttachLimit(domainId);
	if (!attachSizeLimit.startsWith("1")) {
		Map map = (Map) session.getAttribute("ftpMap");
		String fileSizeLimitAll = "0";//默认限制大小
		if (map != null && map.get("FileSizeLimitAll") != null) {
			fileSizeLimitAll = map.get("FileSizeLimitAll").toString();//配置文件限制大小
			if (fileSizeLimitAll.startsWith("1")) {//是否限制，1：限制；0，不限制
				fileSize = Integer.parseInt(fileSizeLimitAll
						.substring(1));
			}
		}
	} else {
		fileSize = Integer.parseInt(attachSizeLimit.substring(1));
	}
	//System.out.println(isPersonalDocument);
	String fileSizeMsg = "";
	if (fileSize / 1000000 > 0) {
		fileSizeMsg = String.valueOf(fileSize / (1024 * 1024)) + "MB";
	} else if (fileSize / 1000 > 0) {
		fileSizeMsg = String.valueOf(fileSize / 1024) + "KB";
	} else {
		fileSizeMsg = String.valueOf(fileSize) + "字节";
	}
	java.util.List listObj = null;
	String continueUpload = "0";
	String saveName = "";
	String fileName = "";
	String fileExt = "";
	String myRandom = "";
	String fileSuffix = "";
	String filePath = "";
	if ("add".equals(mode)) {
		boolean tooBig = false;
		boolean notFile = false;
		boolean typeErr = false;
		boolean notAgree = false;
		boolean tooLong = false;
		boolean sizeAllow = false;
		myUpload.initialize(request);
		myUpload.setMAX_SIZE(fileSize);
		int file_size = 0;
		int upLoadAllFileSize = 0;
		List fileList = new ArrayList();
		try {
			fileList = myUpload.getFileList();
		} catch (Exception e) {
			out.println("<div style=\"witdh:100%;height:100%;\" class=\"docBox\">");
			out.println("<center style=\"padding-top:100px;\">");
			out.println("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">");
			out.println("<tr>");
			out.println("<td width=\"60\"><img src=\"/jsoa/images/errorFace_excel.gif\"/></td>");
			out.println("<td width=\"220\"><font color=\"#FF0000\">ERROR:上传失败！文件尺寸超过规定大小:"+ fileSizeMsg + "</font></td>");
			out.println("</tr>");
			out.println("<tr>");
			out.println("<td>&nbsp;</td>");
			out.println("<td align=\"center\" valign=\"middle\" height=\"65\"><input type=\"button\" class=\"btnButton2font\" onclick=\"javascript:history.back(-1);\" value='返回重试'></input></td>");
			out.println("</tr>");
			out.println("</table>");
			out.println("</center>");
			out.println("</div>");
			return;
		}
		String[] banType = SmartUpload.banType;
		for (int j = 0; j < fileList.size(); j++) {
			FileItem fileItem = (FileItem) fileList.get(j);
			if (fileItem.isFormField())//果如是非上传控件
			{
				String filedName = fileItem.getFieldName();
				String filedContent = fileItem.getString();
				if ("continueUpload".equalsIgnoreCase(filedName)) {
					continueUpload = new String(
							filedContent.getBytes(), "GBK");
				}
			} else if (!fileItem.isFormField())//如果是<input type="file">
			{
				String fileNameTemp = fileItem.getName();
				for (int i = 0; i < banType.length; i++) {
					if (fileNameTemp.endsWith(banType[i])) {
						fileItem.delete();
						out.println("<script>alert('上传失败！非法文件类型！');history.back(-1);</script>");
						return;
					}
				}
				upLoadAllFileSize += fileItem.getSize();//上传总大小
			}
		}
		if (upLoadAllFileSize == 0) {
			out.println("<div style=\"witdh:100%;height:100%;\" class=\"docBox\">");
			out.println("<center style=\"padding-top:100px;\">");
			out.println("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">");
			out.println("<tr>");
			out.println("<td width=\"60\"><img src=\"/jsoa/images/errorFace_excel.gif\"/></td>");
			out.println("<td width=\"220\"><font color=\"#FF0000\">ERROR:上传失败！请选择非空文件上传！</font></td>");
			out.println("</tr>");
			out.println("<tr>");
			out.println("<td>&nbsp;</td>");
			out.println("<td align=\"center\" valign=\"middle\" height=\"65\"><input type=\"button\" class=\"btnButton2font\" onclick=\"javascript:history.back(-1);\" value='返回重试'></input></td>");
			out.println("</tr>");
			out.println("</table>");
			out.println("</center>");
			out.println("</div>");
			return;
		}

		long size = 0;
		listObj = new java.util.ArrayList();
		for (int j = 0; j < fileList.size(); j++) {
			
			FileItem fileItem = (FileItem) fileList.get(j);//获取上传文件
			// 忽略空的上传控件和简单form字段而不是上传域的文件域(<input type="text" />等)
			if (fileItem.getSize() <= 0 || fileItem.isFormField()) {
				continue;
			}
			fileName = fileItem.getName();//获取上传文件名
			if (!"".equals(fileName) && null != fileName) {
				fileName = fileName.substring(fileName
						.lastIndexOf("\\") + 1);
				fileExt = fileName
						.substring(fileName.lastIndexOf(".") + 1);//获取上传文件扩展名
			}

			// 得到文件的大小
			size = fileItem.getSize();
			if ("".equals(path) || size == 0)//path为空将找不到要上传的目录
			{
				notFile = true;
			} else if (fileSize == 0 || upLoadAllFileSize < fileSize)//系统对上传文件总大小无限制,或者当前上传文件的总大小小于系统限制
			{
				file_size = (int) size;//获取文件大小
				fileSuffix = fileExt;
				fileSuffix = fileSuffix.toLowerCase();
				useSize = useSize
						+ Long.parseLong(String
								.valueOf(upLoadAllFileSize));
				if (".jsp,.asp,.php,.exe".indexOf(fileSuffix) >= 0)//判断时候合法
				{
					notAgree = true;
				} else if ("".equals(fileType)
						|| fileType.indexOf(fileSuffix) >= 0)//对扩展名无限制,或者当前文件扩展名符合限制
				{
					if (fileName.length() > 50)//文件名太长
					{
						fileName = fileName.substring(0, 40);//截断	
						fileName+="~1."+fileExt;
						tooLong = true;
					} 
					
					if (allSize != 0 && useSize >= allSize
							&& "1".equals(isPersonalDocument)) {
						sizeAllow = true;
					} else {
						myRandom = new com.js.util.util.Random().getFileRandomName();
						
						//add by xinqingsong						
						
			            //path=year+"/"+path;
			                
						filePath = request.getSession()
								.getServletContext().getRealPath("/")+ "upload/" + year+"/"+path + "/";
						saveName = year+"_"+myRandom + "." + fileExt;//生成新文件名
						//add by xinqingsong
						
						myUpload.saveAs(fileItem, filePath + saveName);//保存文件
						//转邮件，需要插入文档记录
						upFile.setFileSize(saveName, file_size);
						java.util.List list = new java.util.ArrayList();
						myRandom=year+"_"+myRandom;
						
						list.add(myRandom);
						list.add(fileName);
						list.add(fileSuffix);
						list.add(session.getAttribute("userName")
								.toString());
						list.add(session.getAttribute("userId")
								.toString());
						list.add(currenid);
						list.add(String.valueOf(file_size));
						list.add(session.getAttribute("userAccount")
								.toString());
						list.add(fileidstring);
						list.add(session.getAttribute("domainId")
								.toString());
						 
						if (path.equals("information")) {
							list.add(channelId);
							list.add(session.getAttribute("orgId")
									.toString());
							list.add(session.getAttribute("orgName")
									.toString());
							list.add(session
									.getAttribute("orgIdString")
									.toString());
							list.add(session.getAttribute("corpId").toString());
						}
						listObj.add(list);
					}
				} else {
					typeErr = true;//类型错误
				}
			} else {
				tooBig = true;//文件太大
			}
		}
		if (notFile) {

      out.write("\r\n<SCRIPT LANGUAGE=\"JavaScript\">\r\n          alert(\"");
      out.print(Resource.getValue(local, "common",
									"comm.uploadattachmentnotfound"));
      out.write("\");\r\n     </script>\r\n");

	} else if (tooBig) {

      out.write("\r\n<SCRIPT LANGUAGE=\"JavaScript\">\r\n           alert(\"您上传的文件大于");
      out.print(fileSizeMsg);
      out.write("!\");\r\n      </script>\r\n");

	} else if (typeErr) {

      out.write("\r\n<SCRIPT LANGUAGE=\"JavaScript\">\r\n          alert(\"");
      out.print(Resource.getValue(local, "common",
									"comm.onlyuploadtype"));
      out.print(fileType);
      out.print(Resource.getValue(local, "common",
									"comm.attachment"));
      out.write("!\");\r\n      </script>\r\n");

	} else if (notAgree) {

      out.write("\r\n<SCRIPT LANGUAGE=\"JavaScript\">\r\n          alert(\"");
      out.print(Resource.getValue(local, "common",
									"comm.attremind3"));
      out.write("!\");\r\n      </script>\r\n");

	} else if (sizeAllow) {

      out.write("\r\n<SCRIPT LANGUAGE=\"JavaScript\">\r\n          alert(\"您的个人文档空间不足!\");\r\n      </script>\r\n\r\n");

	} else {
			try {
				if (listObj != null && listObj.size() > 0) {
					if (path.equals("information")) {
						InformationBD infoBD = new InformationBD();
						infoBD.saveDocFile(listObj,empId);
					} else {
						NetdiskBD netdiskBD = new NetdiskBD();
						boolean result = false;
						result = netdiskBD.saveupload(listObj);
					}
				}
			} catch (Exception e) {
				e.printStackTrace();
			}

      out.write("\r\n<SCRIPT LANGUAGE=\"JavaScript\">\r\n    <!--\r\n        alert(\"");
      out.print(Resource.getValue(local, "common",
									"comm.upsuccess"));
      out.write("\");\r\n\t\twindow.opener.location.reload();\r\n\t\t ");
if("0".equals(continueUpload)){
      out.write("\r\n\t\t\twindow.close();\r\n\t\t");
}
      out.write("\r\n    //-->\r\n    </SCRIPT>\r\n");

	}
	}

      out.write("\r\n<HTML>\r\n\t<HEAD>\r\n\t\t<TITLE>");
      out.print(Resource.getValue(local, "common",
									"comm.attupload"));
      out.write("</TITLE>\r\n\t</HEAD>\r\n\t<script src=\"/jsoa/js/js.js\" language=\"javascript\"></script>\r\n\r\n\t<SCRIPT language=\"javascript\" src=\"/jsoa/js/openEndow.js\"></SCRIPT>\r\n\t<SCRIPT language=\"javascript\" src=\"/jsoa/js/public.js\"></SCRIPT>\r\n\t<script src=\"/jsoa/js/HashMap.js\" language=\"javascript\"></script>\r\n\t<link href=\"/jsoa/webmail/mail.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n\r\n\t<BODY class=\"MainFrameBox Pupwin\">\r\n\r\n\t\t<div id=\"uploadDiv\" style=\"display: block\">\r\n\t\t\t<TABLE width=\"100%\" height=\"100%\" valign=\"top\" border=\"0\"\r\n\t\t\t\tcellpadding=\"0\" cellspacing=\"0\" style=\"padding-left: 10px;\"\r\n\t\t\t\tclass=\"docBoxNoPanel\">\r\n\t\t\t\t<FORM ENCTYPE=\"multipart/form-data\" NAME=\"frm\"\r\n\t\t\t\t\tACTION=\"smartUpload_netdisk.jsp?isPersonalDocument=");
      out.print(isPersonalDocument);
      out.write("&channelId=");
      out.print(channelId);
      out.write("&path=");
      out.print(path);
      out.write("&mode=add&fileName=");
      out.print(fileNames);
      out.write("&saveName=");
      out.print(saveNames);
      out.write("&tableName=");
      out.print(tableName);
      out.write("&fileMaxSize=");
      out.print(fileSize);
      out.write("&fileMaxNum=");
      out.print(fileNum);
      out.write("&fileType=");
      out.print(fileType);
      out.write("&fileMinWidth=");
      out.print(fileMinWidth);
      out.write("&fileMinHeight=");
      out.print(fileMinHeight);
      out.write("&fileMaxWidth=");
      out.print(fileMaxWidth);
      out.write("&fileMaxHeight=");
      out.print(fileMaxHeight);
      out.write("&currenid=");
      out.print(currenid);
      out.write("&fileidstring=");
      out.print(fileidstring);
      out.write("\"\r\n\t\t\t\t\tMETHOD=\"POST\" onSubmit=\"javascript:return upLoadProcess();\">\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td style=\"font-size: 15px; color: #003366; padding-top: 8px;\">\r\n\t\t\t\t\t\t<b>上传本地文件</b>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<TR valign=\"top\" style=\"padding-top: 12px;\" id=\"upload1\">\r\n\t\t\t\t\t<TD align=\"left\" id=\"3230\">\r\n\t\t\t\t\t\t<div id=\"div001\">\r\n\t\t\t\t\t\t\t请选择您要上传的文件\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div id=\"fileInputDiv\">\r\n\t\t\t\t\t\t\t<div id=\"fileInputDiv1\">\r\n\t\t\t\t\t\t\t\t<INPUT type=\"file\" name=\"file\" id=\"file1\"\r\n\t\t\t\t\t\t\t\t\tonChange=\"addInput(this)\" onKeyDown=\"return false\"\r\n\t\t\t\t\t\t\t\t\tonKeyPress=\"return false\" style=\"width: 100%\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</TD>\r\n\t\t\t\t</TR>\r\n\t\t\t\t<TR>\r\n\t\t\t\t\t<TD align=\"left\" style=\"padding-bottom: 20px;\">\r\n\t\t\t\t\t\t<div id=\"fileNameDiv\" style=\"height: 40px;\"></div>\r\n\t\t\t\t\t\t<input type=\"hidden\" name=\"continueUpload\" value=\"0\">\r\n\t\t\t\t\t\t<INPUT NAME=\"submit\" id=\"but001\" VALUE=\"上传\" TYPE=\"submit\"\r\n\t\t\t\t\t\t\tclass=\"btnButton4Font\">\r\n\t\t\t\t\t\t<INPUT NAME=\"submit\" id=\"but001\" VALUE=\"取消\" TYPE=\"button\"\r\n\t\t\t\t\t\t\tonClick=\"javascript:window.close();\" class=\"btnButton4Font\">\r\n");
      out.write("\r\n\t\t\t\t\t</TD>\r\n\t\t\t\t</TR>\r\n\t\t\t\t</FORM>\r\n\t\t\t</TABLE>\r\n\t\t</div>\r\n\r\n\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\"\r\n\t\t\tstyle=\"padding-left: 10px; height: 100%;\" class=\"docBoxNoPanel\">\r\n\t\t\t<tr>\r\n\t\t\t\t<td align=\"center\" valign=\"middle\">\r\n\t\t\t\t\t<div id=\"uploadprocee\" style=\"display: none\" align=\"center\">\r\n\t\t\t\t\t\t正在上传附件，请稍等...\r\n\t\t\t\t\t\t<MARQUEE direction=right scrollAmount=8 scrollDelay=100>\r\n\t\t\t\t\t\t\t<SPAN class=progressBarHandle-0></SPAN>\r\n\t\t\t\t\t\t\t<SPAN class=progressBarHandle-1></SPAN>\r\n\t\t\t\t\t\t\t<SPAN class=progressBarHandle-2></SPAN>\r\n\t\t\t\t\t\t\t<SPAN class=progressBarHandle-3></SPAN>\r\n\t\t\t\t\t\t\t<SPAN class=progressBarHandle-4></SPAN>\r\n\t\t\t\t\t\t</MARQUEE>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t</table>\r\n\r\n\t</BODY>\r\n</HTML>\r\n<script language=\"javascript\">\r\nvar index = 1;\r\nvar number=0;\r\nvar filesMap = new HashMap();\r\nfunction addInput(obj){\r\n    document.getElementById(\"fileInputDiv\" + index).style.display = 'none';\r\n    index++;\r\n    number++;\r\n    var s = obj.value.lastIndexOf(\"\\\\\");\r\n\tif(s < 0){\r\n\t\ts = obj.value.lastIndexOf(\"/\");\r\n");
      out.write("\t}\r\n\tvar filename = obj.value.substring(s + 1);\r\n\tvar html =  \"<div id=\\\"fileInputDiv\" + index + \"\\\" style=\\\"\\\">\" + \"</div>\";\r\n\t//var e = document.createElement(html);\r\n\tvar e = document.createElement(\"div\");\r\n\te.id=\"fileInputDiv\" + index;\r\n\te.style.display=\"\";\r\n\tvar inputHTML = \"<INPUT type=\\\"file\\\" name=\\\"file\\\" id=\\\"file\" + index + \"\\\" onchange=\\\"addInput(this)\\\" onkeydown=\\\"return false\\\" onkeypress=\\\"return false\\\" style=\\\"width: 100%\\\">\";\r\n\t//var eInput = document.createElement(inputHTML);\r\n\t//e.appendChild(eInput)\r\n\te.innerHTML=inputHTML;\r\n\t\r\n\tdocument.getElementById(\"fileInputDiv\").appendChild(e);\r\n\t\r\n    if(filesMap.contains(obj.value)){\r\n        number--;\r\n        alert('您上传的附件已存在！');\r\n        document.getElementById(\"fileInputDiv\" + (index-1)).removeNode(true);\r\n        return;\r\n    }\r\n\t if(");
      out.print(fileNum);
      out.write(">0){\r\n       if(number>");
      out.print(fileNum);
      out.write("){\r\n\t\t  number--;\r\n\t      alert('一次最多能上传");
      out.print(fileNum);
      out.write("个附件！');\r\n\t      document.getElementById(\"fileInputDiv\" + (index-1)).removeNode(true);\r\n\t      return;\r\n      }\r\n    }\r\n\t\r\n\t\r\n\tvar nameHTML = \"\";\r\n\tnameHTML += \"<div id='fileNameDiv\" + index + \"' title='\" + filename+ \"' style='float: left;height: 18px; line-height: 14px;' noWrap>\"\r\n\tnameHTML+=filename;\r\n\tnameHTML += \"<img src='/jsoa/images/del.gif' onclick='deleteFile(\" + index + \")'/>\";\t\t\r\n\tnameHTML += \"&nbsp;</div>\";\r\n\tdocument.getElementById(\"fileNameDiv\").innerHTML += nameHTML;\r\n\tfilesMap.put(index, obj.value);\r\n\t\r\n}\r\nfunction deleteFile(i){\r\n  number--;\r\n  filesMap.remove(i);\r\n  var fileInputdiv=document.getElementById(\"fileInputDiv\" + (i-1));\r\n  document.getElementById(\"fileInputDiv\").removeChild(fileInputdiv); \r\n  var fileNamediv=document.getElementById(\"fileNameDiv\" + i);\r\n  document.getElementById(\"fileNameDiv\").removeChild(fileNamediv); \r\n}\r\n\r\nfunction upLoadProcess(){\r\n     document.getElementById('uploadDiv').style.display = \"none\";\r\n     document.getElementById('uploadprocee').style.display = \"\";\r\n");
      out.write("     check();\r\n}\r\n\r\nvar img=null;\r\nfunction check(){\r\n   var min=document.getElementsByName(\"file\").length;\r\n   if(min==1&&document.getElementsByName(\"file\")[0].value==\"\"||document.getElementsByName(\"file\")[0].value==null){\r\n       alert(\"");
      out.print(Resource.getValue(session.getAttribute("org.apache.struts.action.LOCALE").toString(),"common", "comm.seluploadfile"));
      out.write("\");\r\n        return false;\r\n   }\r\n    var _fileType=\"");
      out.print(fileType);
      out.write("\";\r\n    _fileType=_fileType.toLowerCase();\r\n    if(_fileType.indexOf(\"jpg\")>=0 || _fileType.indexOf(\"jpeg\")>=0 || _fileType.indexOf(\"gif\")>=0 || _fileType.indexOf(\"bmp\")>=0){\r\n    var fileMinWidth=\"");
      out.print(fileMinWidth);
      out.write("\";\r\n    var fileMinHeight=\"");
      out.print(fileMinHeight);
      out.write("\";\r\n    var fileMaxWidth=\"");
      out.print(fileMaxWidth);
      out.write("\";\r\n    var fileMaxHeight=\"");
      out.print(fileMaxHeight);
      out.write("\";\r\n    if(fileMinWidth>0 || fileMaxWidth>0){\r\n        try{\r\n            if(img) img.removeNode(true);\r\n            img=document.createElement(\"img\");\r\n            img.style.position=\"absolute\";\r\n            img.style.visibility=\"hidden\";\r\n            img.attachEvent(\"onreadystatechange\",orsc);\r\n            img.attachEvent(\"onerror\",oe);\r\n            document.body.insertAdjacentElement(\"beforeend\",img);\r\n            var fileValue=document.all.photo.value;\r\n            img.src=fileValue;\r\n            fileValue=fileValue.toLowerCase();\r\n            fileValue=fileValue.substring(fileValue.lastIndexOf(\".\")+1);\r\n            if(_fileType.indexOf(fileValue)>=0){\r\n                var fileOffsetWidth=img.offsetWidth;\r\n                var fileOffsetHeight=img.offsetHeight;\r\n                if(fileMinWidth>0 && (fileMinWidth>fileOffsetWidth || fileMinHeight>fileOffsetHeight)){\r\n                    if(!confirm(\"");
      out.print(Resource.getValue(local, "common",
							"comm.sysallowuploadminpic"));
      out.write("\"+fileMinWidth+\"X\"+fileMinHeight+\",");
      out.print(Resource.getValue(local, "common", "comm.uploadpicsize"));
      out.write("\"+fileOffsetWidth+\"X\"+fileOffsetHeight+\",");
      out.print(Resource.getValue(local, "common",
							"comm.cantshowtoupload"));
      out.write("\")){\r\n                        return false;\r\n                    }\r\n                }else if(fileMaxWidth>0 && (fileMaxWidth<fileOffsetWidth || fileMaxHeight<fileOffsetHeight)){\r\n                    if(!confirm(\"");
      out.print(Resource.getValue(local, "common",
							"comm.sysallowuploadmaxpic"));
      out.write("\"+fileMaxWidth+\"X\"+fileMaxHeight+\",");
      out.print(Resource.getValue(local, "common", "comm.uploadpicsize"));
      out.write("\"+fileOffsetWidth+\"X\"+fileOffsetHeight+\",");
      out.print(Resource.getValue(local, "common",
							"comm.cantshowtoupload"));
      out.write("\")){\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }catch(e){\r\n            alert(e);\r\n        }\r\n    }\r\n    }\r\n}\r\nfunction oe()\r\n{\r\n}\r\nfunction orsc()\r\n{\r\n    if(img.readyState!=\"complete\")return false;\r\n}\r\n</script>\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
