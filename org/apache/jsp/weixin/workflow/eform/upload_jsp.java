/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:59:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.weixin.workflow.eform;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.lang.Resource;

public final class upload_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.lang.Resource");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n<html>\r\n<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<body topmargin=\"0\">\r\n<script language =\"javascript\">\r\n//alert(window.parent.document.all.user_Id.form.name);\r\n</script>\r\n");
java.util.Map sysMap = com.js.system.util.SysSetupReader.getInstance().getSysSetupMap(session.getAttribute("domainId").toString());
     String  tableName = request.getParameter("fileName")+"Table";
      String fileName = request.getParameter("fileName");
     String  saveName = request.getParameter("saveName");
     String path = ("workflow".equals(request.getParameter("path")))?"workflow":"customform";
    String fileMaxSize = "0";
    String fileType = "";
    String fileMaxNum = "20";
    int fileMaxWidth = 0;
    int fileMaxHeight = 0;
    int fileMinWidth = 0;
    int fileMinHeight = 0;

      out.write("\r\n\r\n\r\n<table width=\"100%\" border=\"0\" id=\"");
      out.print(tableName);
      out.write("\">\r\n\t<tr>\r\n\t\t<td width=\"42%\"><input type=\"button\" id=\"");
      out.print(tableName);
      out.write("_bt\" class=\"btnButton4font\" onclick=\"javascript:addAccessory('");
      out.print(path);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(fileName);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(saveName);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(tableName);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(fileMaxSize);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(fileMaxNum);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(fileType);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(fileMinWidth);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(fileMinHeight);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(fileMaxWidth);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(fileMaxHeight);
      out.write("');\" value=\"上传\" /><input type=\"hidden\" name=\"saveFileNameTemp_0_1\" value=\"\"></td>\r\n\t\t<td width=\"25%\" height=\"25\"><table width=\"90%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n\t\t\t<tr>\t\t\t \r\n\t\t\t  <td align=\"center\"></td>\r\n\t\t\t</tr>\r\n\t\t  </table>\r\n\t\t </td>\r\n\t </tr>\r\n</table>\r\n<table style=\"display:none\">\r\n   <tr>\r\n       <td><iframe id=\"delFile\" name=\"delFile\" src=\"\"></iframe></td>\r\n\t   <input type=\"hidden\" name=\"allAttachSize\" value=\"0\">\r\n   </tr>\r\n</table>\r\n</body>\r\n</html>\r\n<script language =\"javascript\">\r\n//alert(window.parent.document.all.user_Id.form.name);\r\nfunction addAccessory(path,fileName,saveName,tableName,fileSize,fileNum,fileType,fileMinWidth,fileMinHeight,fileMaxWidth,fileMaxHeight){\r\n\r\n    var len=0;\r\n    var obj=eval(\"document.all.\"+saveName);\r\n    if(obj){\r\n\t//alert((eval(\"document.all.\"+saveName)).length);\r\n        if(obj.length){\r\n            len=obj.length;\r\n        }else{\r\n            len=1;\r\n        }\r\n    }else{\r\n        len=0;\r\n    }\r\n\r\n    if(fileNum==\"0\" || len<fileNum){\r\n        JSMainWinOpenForParentOpener(\"/jsoa/eform/smartUpload.jsp?path=\"+path+\"&fileName=\"+fileName+\"&saveName=\"+saveName+\"&tableName=\"+tableName+\"&fileMaxSize=\"+fileSize+\"&fileMaxNum=\"+fileNum+\"&fileType=\"+fileType+\"&fileMinHeight=\"+fileMinHeight+\"&fileMinWidth=\"+fileMinWidth+\"&fileMaxHeight=\"+fileMaxHeight+\"&fileMaxWidth=\"+fileMaxWidth,'上传','menubar=0,scrollbars=0,locations=0,width=400,height=200,resizable=yes',450,230);\r\n");
      out.write("    }else{\r\n        alert(\"您最多只能上传\"+fileNum+\"个附件\");\r\n    }\r\n\t//alert(\"eqweqw\");\r\n}\r\nfunction delaccessory(id,table,path,fileName,saveName){\r\n\tvar del=\"A\"+id;\r\n    var obj=eval(\"document.all.\"+table+\".rows\");\r\n\tfor(var i=0;i<obj.length;i++){\r\n\t\tif(obj[i].cells[0].id==del){\r\n\t\t\tif(eval(\"document.all.\"+saveName+\".value\")){\r\n\t\t\t\tvar temp=eval(\"document.all.\"+saveName+\".value\");\r\n\t\t\t\tdocument.all.delFile.src=\"/jsoa/eform/deleteFile.jsp?delpath=\"+path+\"&delfiles=\"+temp;\r\n\t\t\t\twindow.parent.document.all.");
      out.print(saveName);
      out.write(".value = window.parent.document.all.");
      out.print(saveName);
      out.write(".value.replace(temp,'aaaaaa');\r\n\t\t\t}else{\r\n\t\t\t\tvar j=i-1;\r\n\t\t\t\tvar temp=eval(\"document.all.\"+saveName+\"[\"+j+\"].value\");\r\n\t\t\t\tdocument.all.delFile.src=\"/jsoa/eform/deleteFile.jsp?delpath=\"+path+\"&delfiles=\"+temp;\r\n\t\t\t\twindow.parent.document.all.");
      out.print(saveName);
      out.write(".value = window.parent.document.all.");
      out.print(saveName);
      out.write(".value.replace(temp,'aaaaaa');\r\n\t\t\t}\r\n\t\t\t//obj[i].removeNode(true);\r\n\t\t\teval(\"document.all.\"+table+\".deleteRow(\"+i+\")\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction clearAccessory(table,path,saveName,fileName){\r\n   var obj=eval(\"document.all.\"+table+\".rows\");\r\n   var delfiles=\"\";\r\n   for(var i=obj.length-1;i>0;i--){\r\n       if(eval(\"document.all.\"+saveName+\".value\")){\r\n           var temp=eval(\"document.all.\"+saveName+\".value\");\r\n           delfiles+=temp+\",\";\r\n        }else{\r\n            var j=i-1;\r\n            var temp=eval(\"document.all.\"+saveName+\"[\"+j+\"].value\");\r\n            delfiles+=temp+\",\";\r\n        }\r\n        //obj(i).removeNode(true);\r\n        eval(\"document.all.\"+table+\".deleteRow(\"+i+\")\");\r\n    }\r\n    document.all.delFile.src=\"/jsoa/public/jsp/deleteFile.jsp?delpath=\"+path+\"&delfiles=\"+delfiles;\r\n}\r\n\r\n\r\n</script>\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
