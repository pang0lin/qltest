/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:54:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.iSignatureHTML_jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class test_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=gb2312");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n<html>\r\n<body>\r\n<table width=\"100%\" border=0 cellpadding=\"0\" cellspacing=\"0\">\r\n<tr>\r\n<td>\r\n\r\n\r\n\t<table border=\"1\" width=400 align=\"center\" id=\"tab1\">\r\n\t\t<tr>\r\n\t\t\t<td width=\"50\">章1：</td>\r\n\t\t\t<td><div id=\"zhang1\" style='position:absolute;width:100%;height:100%;'>章1位置</div>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td width=\"50\">章2：</td>\r\n\t\t\t<td><div id=\"zhang2\">章2位置</div>&nbsp;</td>\r\n\t\t</tr>\r\n\t</table>\r\n\r\n<button onclick=\"DoJFSignature();\">盖章</button>\r\n<OBJECT id=\"SignatureControl\"  classid=\"clsid:D85C89BE-263C-472D-9B6B-5264CD85B36E\" codebase=\"iSignatureHTML.cab#version=5,0,2,18\" width=0 height=0 VIEWASTEXT>\r\n<param name=\"ServiceUrl\" value=\"http://127.0.0.1:7001/jsoa/iSignatureHTML.jsp.mssql/Service.jsp\"><!--读去数据库相关信息-->\r\n<param name=\"WebAutoSign\" value=\"0\">             <!--是否自动数字签名(0:不启用，1:启用)-->\r\n<!--param name=\"Weburl\"  value=\"\">        <签章服务器响应-->\r\n</OBJECT>\r\n</td>\r\n</tr>\r\n</table>\r\n</body>\r\n<script language=\"javascript\">\r\nvar wnd;\r\nfunction DoJFSignature()\r\n{\r\n    if( wnd != undefined ){\r\n\t\tvar results = wnd.split(\";\");\r\n");
      out.write("\t\tdocument.all.SignatureControl.CharSetName = results[0];\t\t//多语言集\r\n\t\tdocument.all.SignatureControl.WebAutoSign = results[1];\t\t//自动数字签名\r\n\t\tdocument.all.SignatureControl.WebCancelOrder = results[2];\t//撤消顺序\r\n\t\tdocument.all.SignatureControl.PassWord = results[3];\t\t\t//签章密码\r\n\r\n\t\tvar tmp = document.all.SignatureControl.WebSetFontOther((results[4]==\"1\"?true:false),\r\n\t\t\tresults[5],results[6],results[7],results[8],results[9],\r\n\t\t\t(results[10]==\"1\"?true:false));\t\t\t\t//设置签章附加文字格式\r\n\t\tdocument.all.SignatureControl.WebIsProtect=results[11];\t\t//保护表单数据， 0不保护  1保护表单数据，可操作  2保存表单数据，并不能操作  默认值1\r\n    }else\r\n\t{\r\n\t\tdocument.all.SignatureControl.WebIsProtect=1;\t\t\t    //保护表单数据， 0不保护  1保护表单数据，可操作  2保存表单数据，并不能操作  默认值1\r\n\t}\r\n\r\n  document.all.SignatureControl.FieldsList=\"HTJB=合同级别;XYBH=协议编号;BMJH=保密级别;JF=甲方签章;YF=乙方签章;HZNR=合作内容;QLZR=权利责任;CPMC=产品名称;DGSL=订购数量;DGRQ=订购日期\"       //所保护字段\r\n  document.all.SignatureControl.DivId=\"zhang1\";                     //签章所在的层\r\n  document.all.SignatureControl.Position(50,0);                     //签章位置\r\n   document.all.SignatureControl.SaveHistory=\"False\";                    //是否自动保存历史记录,true保存  false不保存  默认值false\r\n");
      out.write("   document.all.SignatureControl.UserName=\"lyj\";                         //文件版签章用户\r\n   document.all.SignatureControl.WebCancelOrder=1;\t\t\t    //签章撤消原则设置, 0无顺序 1先进后出  2先进先出  默认值0\r\n  document.all.SignatureControl.RunSignature();                          //执行签章操作\r\n}\r\n</script>\r\n</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
