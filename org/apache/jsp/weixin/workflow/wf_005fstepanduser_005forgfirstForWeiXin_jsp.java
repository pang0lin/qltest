/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:59:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.weixin.workflow;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.system.service.usermanager.UserBD;
import com.js.oa.jsflow.vo.ActivityVO;
import com.js.oa.jsflow.service.WorkFlowButtonBD;
import com.js.oa.jsflow.service.WorkFlowBD;
import com.js.util.util.DataSourceBase;
import java.util.*;
import javax.sql.*;
import java.sql.*;
import com.js.util.util.BrowserJudge;

public final class wf_005fstepanduser_005forgfirstForWeiXin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/weixin/public/onlineForWeiXin.jsp", Long.valueOf(1499751472000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.sql");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.oa.jsflow.vo.ActivityVO");
    _jspx_imports_classes.add("com.js.util.util.DataSourceBase");
    _jspx_imports_classes.add("com.js.oa.jsflow.service.WorkFlowButtonBD");
    _jspx_imports_classes.add("com.js.util.util.BrowserJudge");
    _jspx_imports_classes.add("com.js.system.service.usermanager.UserBD");
    _jspx_imports_classes.add("com.js.oa.jsflow.service.WorkFlowBD");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n");
      out.write("\r\n<script language=\"JScript.Encode\" src=\"/jsoa/js/browinfo.js\"></script>\r\n<script language=\"JScript.Encode\" src=\"/jsoa/js/rtxint.js\"></script>\r\n<script language=\"javascript\">\r\nfunction rtxonline(a){\r\n\t RAP(a);\r\n}\r\n</script>");
      out.write('\r');
      out.write('\n');

boolean bflag = true;
if(BrowserJudge.isOtherBrowser(request)) bflag = false;
request.setCharacterEncoding("utf-8");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);
int menuIndex = 0;

DataSource ds = new DataSourceBase().getDataSource();
Connection conn = null;
Statement stmt = null;
ResultSet rs = null;
conn = ds.getConnection();
stmt = conn.createStatement();

//参数
String selectUser = "";			// 待选人员
String selectUserName = "";		// 待选人员
String selectUserAccounts = "";	// 待选人员
String range = "*0*";			// 指定范围
String show = "";				// 显示
String transactType = "1";		// 默认多人并行

//表单字段参数
String participantUserField = "";//表单中的某个字段名

WorkFlowBD workFlowBD = new WorkFlowBD();
WorkFlowButtonBD workFlowButtonBD = new WorkFlowButtonBD();

//com.js.oa.jsflow.vo.ActivityVO activityVO = new com.js.oa.jsflow.util.WorkflowCommon().getFirstActivity(request);

String firstActivityId = request.getParameter("firstActivityId");
ActivityVO activityVO = workFlowBD.getFirstProcActiVO(firstActivityId);

//第一步节点办理方式
transactType = activityVO.getTransactType();

//参与者类型
//0 流程发起人的上级领导
//1 由上一节点参与者从所有用户中选择
//2 从候选人员中指定
//3 指定全部办理人
//4 由表单中的某个字段值决定

//节点参与者类型
int participantType = activityVO.getParticipantType();
List candidate;
Object[] tmp;
List leaderList;
switch(participantType) {
	case 3:	// 指定全部办理人
		candidate = activityVO.getParticipantUser();
		for(int i=0; i<candidate.size(); i++){
			tmp = (Object[]) candidate.get(i); 
			selectUser += tmp[0] + ",";
			selectUserName += tmp[1] + ",";
		}
		if(selectUser.indexOf(",") != -1){
			selectUser = selectUser.substring(0, selectUser.length()-1);
			selectUserName = selectUserName.substring(0, selectUserName.length()-1);
		}
		break;
	case 2:	// 从候选人中指定
		candidate = activityVO.getParticipantUser();
		for(int i=0; i<candidate.size(); i++){
			tmp = (Object[]) candidate.get(i); 
			selectUser += tmp[0] + ",";
			selectUserName += tmp[1] + ",";
		}
		if(selectUser.indexOf(",") != -1){
			selectUser = selectUser.substring(0, selectUser.length()-1);
			selectUserName = selectUserName.substring(0, selectUserName.length()-1);
		}
		break;
	case 4:	// 由表单中的某个字段值决定
		participantUserField = activityVO.getParticipantUserField();
		participantUserField = workFlowButtonBD.getFieldInfoByFieldId(participantUserField);
		break;
	case 8:	// 从指定范围中选定
		range = activityVO.getParticipantGivenOrg();
		
		show = "user";
		if(range!=null && !range.equals("") && range.indexOf("@")>=0){
			show += "group";
		}
		if(range!=null && !range.equals("") && range.indexOf("*")>=0){
			show += "org";
		}
		break;
	case 9:	// 由上一节点参与者从所在组织中选择
		String sidelineOrg = workFlowButtonBD.getUserSideLineOrgId(session.getAttribute("userId").toString())==null 
					? "" : workFlowButtonBD.getUserSideLineOrgId(session.getAttribute("userId").toString());
		range = "*" + session.getAttribute("orgId") + "*" + sidelineOrg;
		show += "user";
		break;
	case 10:	// 组织领导
		range = "*" + session.getAttribute("orgId") + "*";
		/**2017-01-22 增加兼职的部门领导**/
		rs = stmt.executeQuery("SELECT sidelineorg FROM org_employee WHERE emp_id=" + session.getAttribute("userId"));
		if(rs.next()){
			String rangeTemp=rs.getString(1);
			if(rangeTemp!=null && !"null".equals(rangeTemp)){
				range+=rangeTemp;
			}
		}
		rs.close();
		show += "org";
		break;
	case 13:	// 由上一节点参与者从选定的群组中选择
		//show += "group";
		range = activityVO.getParticipantGivenOrg();
		String temp = range;
		range = "";

		String domainId = session.getAttribute("domainId")==null ? "0" : session.getAttribute("domainId").toString();
		String userId = session.getAttribute("userId").toString();
		String orgIdString = session.getAttribute("orgIdString").toString();
		String where="";

		if("".equals(orgIdString)){
			// 组织Id为0则可以查看所以组
			where = " or 1=1";
		}else{
			orgIdString = orgIdString.substring(1, orgIdString.length()-1);
			String[] orgArr = orgIdString.split("\\$\\$");
			for(int i=0; i<orgArr.length; i++){
				where += " or rangeorg like '%*" + orgArr[i] + "*%' ";
			}
			rs = stmt.executeQuery("select group_id from org_group where groupuserstring like '%$" + userId + "$%'");
			while(rs.next()){
				where += " or rangegroup like '%@" + rs.getString(1) + "@%' ";
			}
			rs.close();
		}
		rs = stmt.executeQuery("select group_id from org_group where " 
				+ "((rangeemp is null and rangeorg is null and rangegroup is null) or " 
				+ "(rangeemp='' and rangeorg='' and rangegroup='') or  rangeemp like '%$" 
				+ userId + "$%' " + where + ") and domain_id=" + domainId);
		while(rs.next()){
			if(temp.indexOf("@"+rs.getString(1)+"@") != -1){
				range += "@" + rs.getString(1) + "@";
			}
		}
		rs.close();
		
		if(range!=null && !"".equals(range)){
			show = "usergroup";
		}
		break;
	case 12:	// 由上一节点参与者从所有组织中选择
		 show += "org";
		break;
	case 1:	// 由上一节点参与者从所有用户中选择
		// show += "user";
		// 与指定范围相同的处理（范围为全部*0*）   从指定范围中选定
		range = "*0*";
		show = "userorggroup";
		break;
	case 11:	// 上一节点所有参与者 
		selectUser = session.getAttribute("userId").toString();
		selectUserName = session.getAttribute("userName").toString();
		break;
	case 7:	// 上一节点办理人的上级领导
		leaderList = new WorkFlowBD().getLeaderList(session.getAttribute("userId").toString());

		for(int i=0; i<leaderList.size(); i++){
			tmp = (Object[]) leaderList.get(i); 
			selectUser += tmp[0] + ",";
			selectUserName += tmp[1] + ",";
		}
		if(selectUser.indexOf(",") != -1){
			selectUser = selectUser.substring(0, selectUser.length()-1);
			selectUserName = selectUserName.substring(0, selectUserName.length()-1);
		}
		break;
	case 0:	// 流程发起人的上级领导 
		leaderList = new WorkFlowBD().getLeaderList(session.getAttribute("userId").toString());

		for(int i=0; i<leaderList.size(); i++){
			tmp = (Object[]) leaderList.get(i); 
			selectUser += tmp[0] + ",";
			selectUserName += tmp[1] + ",";
		}
		if(selectUser.indexOf(",") != -1){
			selectUser = selectUser.substring(0, selectUser.length()-1);
			selectUserName = selectUserName.substring(0, selectUserName.length()-1);
		}
		break;
	case 5:	// 流程发起人
		selectUser = session.getAttribute("userId").toString();
		selectUserName = session.getAttribute("userName").toString();
		break;
	case 6:	// 从角色中指定 
		candidate = workFlowBD.getRoleUserIDAndName(activityVO.getPartRole(), session.getAttribute("userId").toString());
		for(int i=0; i<candidate.size(); i++){
			tmp = (Object[]) candidate.get(i); 
			selectUser += tmp[0] + ",";
			selectUserName += tmp[1] + ",";
		}
		if(selectUser.indexOf(",") != -1){
			selectUser = selectUser.substring(0, selectUser.length()-1);
			selectUserName = selectUserName.substring(0, selectUserName.length()-1);
		}
		break;
	case 15:	// 从岗位中指定 
		candidate = workFlowBD.getPositionUserIDAndName(activityVO.getPartRole(), session.getAttribute("userId").toString());
		for(int i=0; i<candidate.size(); i++){
			tmp = (Object[]) candidate.get(i); 
			selectUser += tmp[0] + ",";
			selectUserName += tmp[1] + ",";
		}
		if(selectUser.indexOf(",") != -1){
			selectUser = selectUser.substring(0, selectUser.length()-1);
			selectUserName = selectUserName.substring(0, selectUserName.length()-1);
		}
		break;
	case 14:	// 流程发起人上级组织 并且 职务级别
		candidate = workFlowButtonBD.getLeaderByDutyLevelAndOrg(session.getAttribute("userId").toString(), activityVO.getPartRole());
		for(int i=0; i<candidate.size(); i++){
			tmp = (Object[]) candidate.get(i); 
			selectUser += tmp[0] + ",";
			selectUserName += tmp[1] + ",";
		}
		if(selectUser.indexOf(",") != -1){
			selectUser = selectUser.substring(0, selectUser.length()-1);
			selectUserName = selectUserName.substring(0, selectUserName.length()-1);
		}
		break;
}

if(!"".equals(selectUser)){
	selectUserAccounts = new UserBD().getUserAccountByIds(selectUser);
}

      out.write("\r\n<html>\r\n\t<head>\r\n\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n\t\t<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n\t\t<script language=\"JScript.Encode\" src=\"/jsoa/js/browinfo.js\"></script>\r\n\t\t<script language=\"JScript.Encode\" src=\"/jsoa/js/rtxint.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"/jsoa/js/weixin/mobiscroll/js/jquery-1.9.1.min.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"/jsoa/js/weixin/wf_stepanduser_tree.js\"></script>\r\n\t\t\r\n\t\t<style type=\"text/css\">\r\n\t\t.Hidden{ display:none; overflow: auto;}\r\n\t\t.Show{ display:;}\r\n\t\t</style>\r\n\t</head>\r\n\r\n\t<body onload=\"loadSelUserWin();\">\r\n\t\t<div id=\"submenuBox");
      out.print(menuIndex);
      out.write("\" style=\"width: 100%;\">\r\n\t  \t\t<div id=\"org_list\" class=\"Hidden\"></div>\r\n\t\t</div>\r\n\t\t\r\n\t\t<SCRIPT LANGUAGE=\"JavaScript\">\r\n\t\t// 设置显示人员列表div的高度像素\r\n\t\tvar w = $(window).height();\r\n\t\t$(\"#org_list\").height(w);\r\n\t\t\r\n\t\tfunction HightLight(obj){\r\n\t\t\tobj.style.color = \"red\";\r\n\t\t}\r\n\t\t\r\n\t\tfunction NomalLight(obj){\r\n\t\t\tobj.style.color = \"black\";\r\n\t\t}\r\n\t\tparent.document.frm1.participantType.value = \"");
      out.print(participantType );
      out.write("\";\r\n\t\t//初始化办理方式\r\n\t\t\r\n\t\tvar approveMode = parent.document.frm1.approveMode;\r\n\t\tvar transactType = '");
      out.print(transactType );
      out.write("';\r\n\t\tvar transactTypes = transactType.split(\"\");\r\n\t\tvar transHTML = \"<select name=\\\"approveMode\\\" id=\\\"approveMode\\\" size=\\\"1\\\" >\";\r\n\t\tfor(var i=0; i<transactTypes.length; i++){\r\n\t\t\tif(transactTypes[i] != ''){\r\n\t\t\t\tif(transactTypes[i] == '0'){\r\n\t\t\t\t\ttransHTML += \"<option value=\\\"0\\\">单选</option>\";\r\n\t\t\t\t} else if(transactTypes[i] == '1'){\r\n\t\t\t\t\ttransHTML += \"<option value=\\\"1\\\">并行</option>\";\r\n\t\t\t\t} else if(transactTypes[i] == '2'){\r\n\t\t\t\t\ttransHTML += \"<option value=\\\"2\\\">单人</option>\";\r\n\t\t\t\t} else if(transactTypes[i]=='3'){\r\n\t\t\t\t\ttransHTML += \"<option value=\\\"3\\\">串行</option>\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\ttransHTML += \"</select>\";\r\n\t\tapproveMode.outerHTML = transHTML;\r\n\t\t\r\n\t\t");

		// 判断页面显示方式
		if(participantType==1 || participantType==8 || participantType==2 || participantType==4 
			|| participantType==9 || participantType==10 || participantType==6 || participantType==13 
			|| participantType==0 || participantType==7 || participantType==11 || participantType==14 
			|| participantType==15){
			// 候选人。表单值，本部门，组织领导，角色，所有群组13，流程发起人上级领导，上一节点办理上级领导，上一节点所有参与者
			
      out.write("\r\n\t\t\tparent.document.getElementById(\"middleTR1\").style.display = '';\r\n\t\t    parent.document.getElementById(\"selTextarea1\").style.display = 'none';\t\r\n\t\t\t// 赋值\r\n\t\t\tvar opText = \"");
      out.print(selectUserName);
      out.write("\";\r\n\t\t\tvar opValue = \"");
      out.print(selectUser);
      out.write("\";\r\n\t\t\tif(parent.document.frm1.participantType.value!=4 && parent.document.frm1.participantType.value!=14){\r\n\t\t\t//if(opText.indexOf(\",\") != -1){\r\n\t\t\t\tvar opTextArr = opText.split(\",\");\r\n\t\t\t\tvar opValueArr = opValue.split(\",\");\r\n\t\t\t\t// 只有一个候选人 直接赋值\r\n\t\t\t\tif(opTextArr.length == 1){\r\n\t\t\t\t\tfor(var i=0; i<opTextArr.length; i++){\r\n\t\t\t\t\t\tif(opTextArr[i] != ''){\r\n\t\t\t\t\t\t\tvar oOption = document.createElement(\"OPTION\");\r\n\t\t\t\t\t\t\toSelect.options.add(oOption);\r\n\t\t\t\t\t\t\t");

							if(bflag){
								
      out.write("oOption.innerText = opTextArr[i];");

							}else{
								
      out.write("oOption.textContent = opTextArr[i];");

							} 
							if(BrowserJudge.isNotPc(request)){
								
      out.write("\r\n\t\t\t\t\t\t\t\tvar showNames = parent.document.getElementById(\"showNames\");\r\n\t\t\t\t\t\t\t\tvar htmlDiv = \"<div id='A\" + opValue + \"A' name='A\" + opValue \r\n\t\t\t\t\t\t\t\t\t\t+ \"A' title='点击移出' onclick=\\\"dropNameDiv('A\" + opValue + \"A','$\" \r\n\t\t\t\t\t\t\t\t\t\t+ opValue + \"$')\\\" style='float: left; width: 100%; fontSize:12px;'>\" \r\n\t\t\t\t\t\t\t\t\t\t+ opText + \"</div>\";\r\n\t\t  \t        \t\t\tshowNames.innerHTML += htmlDiv;\r\n\t\t\t\t\t\t\t\t");

							}
							
      out.write("\r\n\t\t\t\t\t\t\toOption.value = \"$\" + opValueArr[i] + \"$\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t//} \r\n\t\t\t}\r\n\t\t\t");

		}else{
			// 显示textarea
			
      out.write("\r\n\t\t\tparent.document.getElementById(\"middleTR1\").style.display = 'none';\r\n\t\t    parent.document.getElementById(\"selTextarea1\").style.display = '';\r\n\t\t    parent.document.frm1.selRange.value = \"");
      out.print(range);
      out.write("\";\r\n\t\t\t// 赋值\r\n\t\t\tvar opText = \"");
      out.print(selectUserName);
      out.write("\";\r\n\t\t\tvar opValue = \"");
      out.print(selectUser);
      out.write("\";\t\r\n\t\t\r\n\t\t\t");

			//participantType==1 or 8 的时候安装选择范围处理
			if(participantType == 12){
				// 显示选择对象按钮
				
      out.write("\r\n\t\t\t\t//parent.document.frm1.all.selTextareaTag.style.display = '';\r\n\t\t\t\tparent.document.getElementById(\"selectedTxt\").cols = \"62\";\r\n\t\t\t\tparent.document.getElementById(\"selectedTxt2\").style.width = \"98%\";\r\n\t\t\t\t//parent.frm1.approveMode.style.width = \"85%\";\r\n\t\t\t\tparent.document.frm1.selectedTxtId.value = \"\";\r\n\t\t\t\tparent.document.getElementById(\"selectedTxt\").value = \"\";\r\n\t\t\t\t");

			} else{
				// 将制定的用户带入选择人框
				
      out.write("\r\n\t\t\t\t//parent.document.frm1.all.selTextareaTag.style.display = 'none';\r\n\t\t\t\tparent.document.getElementById(\"selectedTxt\").cols = \"68\";\r\n\t\t\t\tparent.document.getElementById(\"selectedTxt2\").style.width = \"98%\";\r\n\t\t\t\t//parent.frm1.approveMode.style.width = \"99%\";\r\n\t\t\t\tvar opV = opValue.split(\",\");\r\n\t\t\t\topValue = \"\";\r\n\t\t\t\tfor(var i=0; i<opV.length; i++){\r\n\t\t\t\t\tif(opV[i] != \"\"){\r\n\t\t\t\t\t\topValue += \"$\" + opV[i] + \"$\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tparent.document.frm1.selectedTxtId.value = opValue;\r\n\t\t\t\tparent.document.getElementById(\"selectedTxt\").value = opText;\r\n\t\t\t\t");

			}
		}
		
      out.write("\r\n\t\t\r\n\t\tfunction loadSelUserWin(){\r\n\t\t\t");

			// 由表单中的某个字段值决定
			if( participantType == 4){
				
      out.write("\r\n\t\t\t\tif(eval(\"parent.document.all.");
      out.print(participantUserField);
      out.write("_Id\")){\r\n\t\t\t\t\tvar selectUser = eval(\"parent.document.all.");
      out.print(participantUserField);
      out.write("_Id.value\");\r\n\t\t\t\t\tvar selectUserName = eval(\"parent.document.all.");
      out.print(participantUserField);
      out.write("_Name.value\");\r\n\t\t\t\t\tif(selectUserName.indexOf(\",\") != -1){\r\n\t\t\t\t\t\tselectUserName = selectUserName.substring(0, selectUserName.length-1);\r\n\t\t\t\t\t} else{\r\n\t\t\t\t\t\tselectUser = \"$\" + selectUser + \"$\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 新节点\r\n\t\t\t\t\tString.prototype.replaceAll = function(s1,s2){\r\n\t\t\t\t\t\tvar demo = this;\r\n\t\t\t\t\t \twhile(demo.indexOf(\"$$\") != -1)\r\n\t\t\t\t\t \t\tdemo = demo.replace(s1, s2);\r\n\t\t\t\t\t \treturn demo;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tselectUser = selectUser.replaceAll(\"$$\", \",\");\r\n\t\t\t\t\tselectUser = selectUser.substring(1, selectUser.length-1);\r\n\t\t\t\t\tloadXML('userorggroup', 'no', '");
      out.print(show);
      out.write("', '', '");
      out.print(range);
      out.write("', selectUser, selectUserName, '');\r\n\t\t\t\t} else{\r\n\t\t\t\t\talert(\"请将表单上的选人字段设为可写！\");\r\n\t\t\t\t}\r\n\t\t\t\t");

			}else{
				
      out.write("\r\n\t\t\t\tshowList('userorggroup', 'no', '");
      out.print(show);
      out.write("', '', '");
      out.print(range);
      out.write("', '");
      out.print(selectUser);
      out.write("', '");
      out.print(selectUserName);
      out.write("', '");
      out.print(selectUserAccounts);
      out.write("', '");
      out.print(participantType);
      out.write("', 'org_list');\r\n\t\t\t\t//loadXML('userorggroup','no','");
      out.print(show);
      out.write("','','");
      out.print(range);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(selectUser);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(selectUserName);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(selectUserAccounts);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(participantType);
      out.write("');\r\n\t\t\t\t");

			}
			
      out.write("\r\n\t\t}\r\n\t\t</SCRIPT>\r\n\t</body>\r\n</html>\r\n");

stmt.close();
conn.close();

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
