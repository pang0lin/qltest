/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:57:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.public_.edit8._005fexample;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class default_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n<HTML>\r\n<HEAD>\r\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=EmulateIE7\">\r\n<TITLE>eWebEditor ： 代码实例</TITLE>\r\n<META http-equiv=Content-Type content=\"text/html; charset=GBK\">\r\n<link rel='stylesheet' type='text/css' href='example.css'>\r\n</HEAD>\r\n<BODY>\r\n\r\n\r\n<p><b>导航 ： 示例首页</b></p>\r\n\r\n<p><b>示例目录中，包括的实例代码有：</b></p>\r\n<ol>\r\n<li><a href=\"standard.jsp\">标准调用示例</a> (_example/standard.jsp)\r\n<li><a href=\"popup.jsp\">弹窗调用示例</a> (_example/popup.jsp)\r\n<li><a href=\"remote.jsp\">远程文件自动上传示例</a> (_example/remote.jsp)\r\n<li><a href=\"clientapi.jsp\">客户端API示例</a> (_example/clientapi.jsp)\r\n<li><a href=\"para_file.jsp\">上传文件接口示例</a> (_example/para_file.jsp)\r\n<li><a href=\"dlg_upload.jsp\">输入框调用上传文件对话框示例</a>(_example/dlg_upload.jsp)\r\n<li><a href=\"para_extcss.jsp\">外部样式引用接口示例</a> (_example/para_extcss.jsp)\r\n<li>表单接收示例(上面示例点提交后即为此页) (_example/retrieve.jsp)\r\n<li><a href=\"pagination.jsp\">分页显示处理示例</a> (_example/pagination.jsp)\r\n<li><a href=\"ajax.jsp\">Ajax应用之创建和删除编辑器实例</a> (_example/ajax.jsp)\r\n<li><a href=\"replacebycode.jsp\">用Javascript把文本框或DIV替换为编辑器</a> (_example/replacebycode.jsp)\r\n");
      out.write("<li><a href=\"replacebyclass.jsp\">用样式类名把文本框自动替换为编辑器</a> (_example/replacebyclass.jsp)\r\n</ol>\r\n\r\n\r\n<p><b>更多相关在线网址：</b></p>\r\n<ul>\r\n<li>首页：<br>\r\n  <a href=\"http://www.ewebeditor.net\" target=\"_blank\">http://www.ewebeditor.net</a><br><br>\r\n<li>在线演示：<br>\r\n  <a href=\"http://www.ewebeditor.net/demo/\" target=\"_blank\">http://www.ewebeditor.net/demo/</a><br><br>\r\n<li>联系我们：<br>\r\n  网站：<a href=\"http://www.ewebeditor.net\" target=\"_blank\">http://www.ewebeditor.net</a><br>\r\n  邮箱：<a href=\"mailto:service@ewebsoft.com\">service@ewebsoft.com</a><br>\r\n  公司：福州极限软件开发有限公司\r\n\r\n</ul>\r\n\r\n</BODY>\r\n</HTML>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
