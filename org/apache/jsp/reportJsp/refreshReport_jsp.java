/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:54:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.reportJsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class refreshReport_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/runqianReport4.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005freport_005fhtml_0026_005fwidth_005fsrcType_005fselectText_005fscrollWidth_005fscrollHeight_005fscrollBorder_005fneedPageMark_005fname_005fheight_005fgenerateParamForm_005ffuncBarLocation_005fbeanName_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005freport_005fhtml_0026_005fwidth_005fsrcType_005fselectText_005fscrollWidth_005fscrollHeight_005fscrollBorder_005fneedPageMark_005fname_005fheight_005fgenerateParamForm_005ffuncBarLocation_005fbeanName_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005freport_005fhtml_0026_005fwidth_005fsrcType_005fselectText_005fscrollWidth_005fscrollHeight_005fscrollBorder_005fneedPageMark_005fname_005fheight_005fgenerateParamForm_005ffuncBarLocation_005fbeanName_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n<html>\r\n\t<head>\r\n\t\t<title>刷新报表定义并清除其缓存</title>\r\n\t\t<style>\r\n\t\t\t.tableHeader {\r\n\t\t\t\tbackground-color: #308dbb;\r\n\t\t\t\tcolor: white;\r\n\t\t\t\tfont-family: verdana, arial, helvetica, sans-serif;\r\n\t\t\t\tfont-size: 11px;\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t\ttext-align: center;\r\n\t\t\t\tpadding-right: 3px;\r\n\t\t\t\tpadding-left: 3px;\r\n\t\t\t\tpadding-top: 4px;\r\n\t\t\t\tpadding-bottom: 4px;\r\n\t\t\t\tmargin: 0px;\r\n\t\t\t\tborder-right-style: solid;\r\n\t\t\t\tborder-right-width: 1px;\r\n\t\t\t\tborder-color: white;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t.button {\r\n\t\t\t\tfont-family: verdana, arial, helvetica, sans-serif;\r\n\t\t\t\tfont-size: 12px;\r\n\t\t\t\tborder: 1px solid #A5C6CC;\r\n\t\t\t\tpadding: 1px;\r\n\t\t\t}\t\t\t\r\n\t\t\t\r\n\t\t\t.title {font-size: 20px; color: #C61313; font-weight: bold; }\r\n\t\t</style>\r\n\t\t<script type=\"text/javascript\">\r\n\t\t\tfunction selectDo(form,markvalue){\r\n\t\t\t  var subGo=0;\r\n\t\t\t  for(var i = 0; i < form.elements.length; i++){\r\n\t\t        if( form.elements[i].type==\"checkbox\" ){\r\n\t\t\t\t  if( form.elements[i].checked ){\r\n\t\t\t\t\t  subGo++;\r\n\t\t\t\t   }\r\n\t\t\t    }\r\n\t\t\t   }\r\n\t\t\r\n\t\t\t    if(subGo<1){\r\n\t\t\t\t   alert(\"您没有选择！\");\r\n");
      out.write("\t\t\t\t   return ;\r\n\t\t\t    }\r\n\t\t\t    if ( markvalue == 'refresh'){\r\n\t\t\t         if(window.confirm(\"确认此操作吗？ 请确认！\")==false)return;\r\n\t\t\t    }\r\n\t\t          \r\n\t\t          form.mark.value = markvalue;\r\n\t\t          form.submit();\r\n\t\t      }\r\n\t\t      \r\n\r\n\t\t\t function selectAll(form ){\r\n\t\t\t\t  for(var i=0; i<form.elements.length; i++){\r\n\t\t\t        if(form.elements[i].type==\"checkbox\"){\r\n\t\t\t\t\t\tform.elements[i].checked = true;\r\n\t\t\t\t     }\r\n\t\t\t\t   }\r\n\t\t\t \t}\r\n\t\t\t \t\r\n\t\t\t function clearAll(form ){\r\n\t\t\t\t  for( var i=0; i<form.elements.length; i++){\r\n\t\t\t        if(form.elements[i].type==\"checkbox\"){\r\n\t\t\t\t\t\tform.elements[i].checked = false;\r\n\t\t\t\t     }\r\n\t\t\t\t   }\r\n\t\t\t \t}\t\t      \r\n\t\t</script>\r\n\t</head>\r\n     ");

      com.runqian.report4.cache.CacheManager cacheManager = com.runqian.report4.cache.CacheManager.getInstance();


			if ( "refresh".equals( request.getParameter( "mark" ) ) ){
				String[] keys = request.getParameterValues( "keys" );
             if ( keys != null ){
                  for ( int i=0 ;i < keys.length ; i++ ){
                       String key = keys[i];
                       cacheManager.modifyReportDefine( key );
                  }
             }				
			}
		
      out.write("\r\n\t<body>\r\n\t  <div align=\"center\">\r\n\t\t    <span class=title>刷新报表定义并清除其缓存</span>\r\n\t  </div>\r\n\r\n\t\t\r\n\t\t<form method=post action=\"\" name=cacheForm>\r\n\t\t    <input type=hidden name='mark'>\r\n\t\t\t<table border=1  align=center cellSpacing=0 cellPadding=3 width=\"90%\"  style=\"BORDER-COLLAPSE: collapse\">\r\n         <tr>                \r\n             <td colspan=2 class=tableHeader>报表缓存列表</td>\t\r\n         </tr>\r\n\t\t\t\t");

					java.util.Map entMap = cacheManager.getReportEntries();
					for (java.util.Iterator it = entMap.keySet().iterator(); it.hasNext();) {
						Object key = it.next();
				
      out.write("\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td width=3%>\r\n\t\t\t\t\t\t<input type=checkbox name=\"keys\" value=\"");
      out.print(key);
      out.write("\">\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td style=\"font-size: 12px\">\r\n\t\t\t\t\t\t");
      out.print(key);
      out.write("\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t");

				}
				
      out.write("\r\n\t\t\t</table>\r\n\t\t\t<table border=0 width=\"90%\" align=center >\r\n\t\t\t\t<tr>\r\n\t\t\t\t   <td>\r\n\t\t\t\t\t   <input type=button name=all value=\"全选\" class=\"button\" onclick=\"selectAll(this.form)\">\r\n\t\t\t\t\t   <input type=button name=no value=\"全否\" class=\"button\" onclick=\"clearAll(this.form)\">\r\n\t\t\t\t\t   <input type=button name=show value=\"清除缓存\" class=\"button\" onclick=\"selectDo(this.form , 'refresh')\">\r\n\t\t\t\t\t   <input type=button name=show value=\"显示报表\" class=\"button\" onclick=\"selectDo(this.form , 'show')\">\r\n\t\t\t\t\t   <input type=button name=refresh value=\"刷新列表\" class=\"button\" onclick=\"document.location=document.location\">\r\n\t\t\t\t\t   <!--<input type=button name=del value=\"删除缓存\" class=\"button\" onclick=\"selectDo(this.form , 'del')\">-->\r\n\t\t\t\t\t    \r\n\t\t\t\t   </td>\r\n\t\t\t\t</tr>\r\n\t\t\t</table>\r\n\t\t</form>\r\n\r\n");

			if ( "show".equals( request.getParameter( "mark" ) ) ){//show
				      String[] keys = request.getParameterValues( "keys" );
              if ( keys != null ){
                   String key = keys[0];
                  
      out.write("\r\n\t\t\t\t\t          <center>\r\n\t\t\t\t\t\t\t\t\t   ");
      //  report:html
      com.runqian.report4.tag.HtmlTag _jspx_th_report_005fhtml_005f0 = (com.runqian.report4.tag.HtmlTag) _005fjspx_005ftagPool_005freport_005fhtml_0026_005fwidth_005fsrcType_005fselectText_005fscrollWidth_005fscrollHeight_005fscrollBorder_005fneedPageMark_005fname_005fheight_005fgenerateParamForm_005ffuncBarLocation_005fbeanName_005fnobody.get(com.runqian.report4.tag.HtmlTag.class);
      boolean _jspx_th_report_005fhtml_005f0_reused = false;
      try {
        _jspx_th_report_005fhtml_005f0.setPageContext(_jspx_page_context);
        _jspx_th_report_005fhtml_005f0.setParent(null);
        // /reportJsp/refreshReport.jsp(139,12) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_report_005fhtml_005f0.setName("report1");
        // /reportJsp/refreshReport.jsp(139,12) name = srcType type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_report_005fhtml_005f0.setSrcType("defineBean");
        // /reportJsp/refreshReport.jsp(139,12) name = beanName type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_report_005fhtml_005f0.setBeanName(key);
        // /reportJsp/refreshReport.jsp(139,12) name = width type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_report_005fhtml_005f0.setWidth("740");
        // /reportJsp/refreshReport.jsp(139,12) name = height type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_report_005fhtml_005f0.setHeight("600");
        // /reportJsp/refreshReport.jsp(139,12) name = funcBarLocation type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_report_005fhtml_005f0.setFuncBarLocation("");
        // /reportJsp/refreshReport.jsp(139,12) name = needPageMark type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_report_005fhtml_005f0.setNeedPageMark("yes");
        // /reportJsp/refreshReport.jsp(139,12) name = generateParamForm type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_report_005fhtml_005f0.setGenerateParamForm("no");
        // /reportJsp/refreshReport.jsp(139,12) name = selectText type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_report_005fhtml_005f0.setSelectText("yes");
        // /reportJsp/refreshReport.jsp(139,12) name = scrollWidth type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_report_005fhtml_005f0.setScrollWidth("580");
        // /reportJsp/refreshReport.jsp(139,12) name = scrollHeight type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_report_005fhtml_005f0.setScrollHeight("430");
        // /reportJsp/refreshReport.jsp(139,12) name = scrollBorder type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_report_005fhtml_005f0.setScrollBorder("border:none");
        int _jspx_eval_report_005fhtml_005f0 = _jspx_th_report_005fhtml_005f0.doStartTag();
        if (_jspx_th_report_005fhtml_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005freport_005fhtml_0026_005fwidth_005fsrcType_005fselectText_005fscrollWidth_005fscrollHeight_005fscrollBorder_005fneedPageMark_005fname_005fheight_005fgenerateParamForm_005ffuncBarLocation_005fbeanName_005fnobody.reuse(_jspx_th_report_005fhtml_005f0);
        _jspx_th_report_005fhtml_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_report_005fhtml_005f0, _jsp_getInstanceManager(), _jspx_th_report_005fhtml_005f0_reused);
      }
      out.write("\r\n\t\t\t\t\t\t\t\t\t\t</center>\r\n                  ");

               }			    
			}


      out.write("\t\t\r\n\r\n\t</body>\r\n</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
