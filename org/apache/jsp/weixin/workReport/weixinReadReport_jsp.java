/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:00:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.weixin.workReport;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.system.service.messages.MessagesBD;
import com.js.oa.scheme.worklog.po.WorkLogCommentPO;
import java.util.Iterator;
import java.util.Set;
import com.js.oa.scheme.worklog.service.WorkLogBD;
import java.util.Date;
import com.js.oa.scheme.worklog.po.WorkLogPO;
import com.js.wap.util.DateTools;

public final class weixinReadReport_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Iterator");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("com.js.oa.scheme.worklog.po.WorkLogPO");
    _jspx_imports_classes.add("com.js.oa.scheme.worklog.po.WorkLogCommentPO");
    _jspx_imports_classes.add("java.util.Set");
    _jspx_imports_classes.add("com.js.oa.scheme.worklog.service.WorkLogBD");
    _jspx_imports_classes.add("com.js.wap.util.DateTools");
    _jspx_imports_classes.add("com.js.system.service.messages.MessagesBD");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE html>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");
 
Long domainId=Long.valueOf(session.getAttribute("domainId").toString());
request.setCharacterEncoding("UTF-8");
String path = request.getContextPath();
WorkLogBD worklogBD = new WorkLogBD();
String keepDay = worklogBD.getWorkLogKeepDay(domainId.toString());
Long logId = Long.valueOf(request.getParameter("logId"));
String from = null!=request.getParameter("from") ? request.getParameter("from") : "";

WorkLogPO worklogPO = worklogBD.selectSingleWorkLogPO(logId);

String logType = worklogPO.getLogType();
String logContent = worklogPO.getLogContent();
if(null == logContent)logContent = "";

Date logDate = worklogPO.getLogDate();
Date logWriteDate = worklogPO.getLogWriteDate();
String empName = worklogPO.getEmpName();
String beginIndex = null!=request.getParameter("beginIndex") ? request.getParameter("beginIndex") : "0";
String repUser = null!=request.getParameter("repUser") ? request.getParameter("repUser") : "mine";
String worklogEmp = "mine".equals(repUser) ? "&nbsp;" : "提交人：" + empName;
boolean showEdit = false;
long useTime = new java.util.Date().getTime() - logWriteDate.getTime();
long keepTime = 3600 * 24 * 1000 * (Long.parseLong(keepDay));
if(useTime < keepTime){
    showEdit = true;
}
// 日报的评价留言
Set worklogComment = worklogPO.getWorklogComment();

      out.write("\r\n<HTML>\r\n\t<HEAD>\r\n\t\t<TITLE>汇报信息</TITLE>\r\n\t\t<META content=\"text/html; charset=UTF-8\" http-equiv=\"Content-Type\">\r\n\t\t<META name=\"viewport\" content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;\">\r\n\t\t<META name=\"apple-touch-fullscreen\" content=\"YES\">\r\n\t\t<META name=\"apple-mobile-web-app-capable\" content=\"no\">\r\n\r\n\t\t<link rel=\"stylesheet\" href=\"/jsoa/css/weixin/weixin_main.css\">\r\n\t\t<link rel=\"stylesheet\" href=\"/jsoa/css/weixin/weixin_zsgl.css\">\r\n\t\t<META name=\"GENERATOR\" content=\"MSHTML 8.00.6001.19154\">\r\n\t\t<STYLE type=\"text/css\">\r\n\t\t.reply_bar{\r\n\t\t    background: #fff;\r\n\t\t    color: #8f8e93;\r\n\t\t    font-weight: 700;\r\n\t\t    padding:10px;\r\n\t\t}\r\n\t\t</STYLE>\r\n\t</head>\r\n\t\r\n\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/wap2/commonImport.jsp", out, false);
      out.write("\r\n\t<BODY onload=\"setHeader('javascript:closeWindow()', '汇报信息');\" class=\"wapcss\">\r\n\t\t<div class=\"form\">\r\n\t\t\t<div style=\"margin-top: 15px;\">\r\n\t\t\t\t<span style=\"float: left; margin-left: 5px;\">");
      out.print(worklogEmp );
      out.write("</span>\r\n\t\t\t\t<span style=\"float: right; margin-right: 5px;\">\r\n\t\t\t\t\t<a href=\"javascript:void(0);\" onclick=\"showInfo(this)\" style=\"text-decoration: none;\">详情</a>\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n    \t\t<div class=\"zsgllineitem\"></div>\r\n    \t\t<div id=\"information\" style=\"display: none; background: #efefef;\">\r\n\t\t\t\t<div class=\"item\" style=\"padding: 0;\">\t\r\n\t\t\t\t\t<div class=\"title\">填写日期：</div>\r\n\t\t\t\t\t<div class=\"content\" align=\"left\">\r\n\t\t\t\t\t\t<div class=\"info\">");
      out.print(DateTools.getYMD(logWriteDate) );
      out.write("</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"zsgllineitem\"></div>\r\n\t\t\t\t<div class=\"item\" style=\"padding: 0;\">\r\n\t\t\t\t\t<div class=\"title\">日志日期：</div>\r\n\t\t\t\t\t<div class=\"content\" align=\"left\">\r\n\t\t\t\t\t\t<div class=\"info\">");
      out.print(DateTools.getYMD(logDate));
      out.write("</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"zsgllineitem\"></div>\r\n\t\t\t\t");

				if("0".equals(logType)){
					
      out.write("\r\n\t\t\t\t\t");
      out.write("\r\n\t\t\t\t\t<div class=\"item\" style=\"padding: 0;\">\t\r\n\t\t\t\t\t\t<div class=\"title\">工&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;时：</div>\r\n\t\t\t\t\t\t<div class=\"content\" align=\"left\">\r\n\t\t\t\t\t\t\t<div class=\"info\">");
      out.print(worklogPO.getManHour());
      out.write("小时</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t");

				} else if("1".equals(logType)){
					
      out.write("\r\n\t\t\t\t\t");
      out.write("\r\n\t\t\t\t\t<div class=\"item\" style=\"padding: 0;\">\r\n\t\t\t\t\t\t<div class=\"title\">时&nbsp;&nbsp;间&nbsp;&nbsp;段：</div>\r\n\t\t\t\t\t\t<div class=\"content\" align=\"left\">\r\n\t\t\t\t\t\t\t<div class=\"info\">");
      out.print(worklogPO.getStartPeriod());
      out.write('-');
      out.print(worklogPO.getEndPeriod());
      out.write("</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t");

				} else{
					
      out.write("\r\n\t\t\t\t\t<div class=\"item\" style=\"padding: 0;\">\r\n\t\t\t\t\t\t<div class=\"content\">REPORT REAR FAILED!</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t");

				}
				
      out.write("\r\n\t\t\t\t<div class=\"zsgllineitem\"></div>\r\n    \t\t</div>\r\n    \t\t\r\n\t\t \t<div class=\"item\">\r\n\t\t\t\t<div class=\"content\" style=\"width:99%;\">\r\n\t\t\t\t \t<textarea style=\"width:96%;\" rows=\"6\" readonly=\"readonly\">");
      out.print(logContent );
      out.write("</textarea>\r\n\t        \t</div>\r\n\t\t \t</div>\r\n\t\t \t\r\n\t\t \t");

		 	if(null!=worklogComment && !worklogComment.isEmpty()){
				Iterator it = worklogComment.iterator();
				MessagesBD messagesBD = new MessagesBD();
				String useraccounts = "";
				String tempTime = "";
				
      out.write("\r\n\t\t\t\t<div class=\"reply_bar\">\r\n\t\t\t\t\t<div style=\"padding-left: 10px;\">评价留言(");
      out.print(worklogComment.size() );
      out.write(")</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"zsgllineitem\"></div>\r\n\t\t\t\t<div class=\"listcomment\">\r\n\t\t\t\t\t");

					while(it.hasNext()){
						WorkLogCommentPO comm = (WorkLogCommentPO) it.next();
						messagesBD.changeMessageStatus(comm.getCommentId().toString(), session.getAttribute("userId").toString(), "WorkLogComment", "b");
						
						useraccounts = com.js.system.util.StaticParam.getUserAccountsByEmpId(comm.getCommentIssuerId().toString());
						tempTime = comm.getCommentIssueTime().toString().length()>19 ? comm.getCommentIssueTime().toString().substring(0, 19)
									: comm.getCommentIssueTime().toString();
						
      out.write("\r\n\t\t\t\t\t\t<div class=\"item\" style=\"padding: 5px; padding-left: 0;\">\r\n\t\t\t\t\t\t\t<div class=\"picture\">\r\n\t\t\t\t\t\t\t\t<img class=\"picshow\" src='/jsoa/weixin/common/getUserAvatar.jsp?userId=");
      out.print(useraccounts );
      out.write("' />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"content\">\r\n\t\t\t\t\t\t\t\t<div class=\"first\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\" style=\"padding: 0;\">");
      out.print(comm.getCommentIssuerOrg() + "." + comm.getCommentIssuerName() );
      out.write("</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"time\">");
      out.print(tempTime );
      out.write("</div>\r\n\t\t\t\t\t\t\t \t</div>\r\n\t\t\t\t\t\t\t \t<div class=\"second\" style=\"text-align: left;\">");
      out.print(comm.getCommentContent() );
      out.write("</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t");

					}
					
      out.write("\r\n\t\t\t\t</div>\r\n\t\t\t\t");

			}
		 	
      out.write("\r\n\t\t</div>\r\n\t\t\r\n\t\t<!-- 按钮 -->\r\n\t\t<div class=\"footer\">\r\n\t      \t<div class=\"buttons\">\r\n\t           \t");

	      		if(!worklogPO.getCreatedEmp().toString().equals(session.getAttribute("userId").toString())){	// 自己不能评价自己的日报，只有上级可以评价下属日报
	      			
      out.write("\r\n\t      \t\t\t<div class=\"button\" onclick=\"javascript:location.href='");
      out.print(path);
      out.write("/weixin/workReport/weixinReportComment.jsp?logId=");
      out.print(logId );
      out.write("&repUser=");
      out.print(repUser );
      out.write("&beginIndex=");
      out.print(beginIndex );
      out.write("'\">评价</div>\r\n\t      \t\t\t");

	      		}
	           	if(showEdit && "mine".equals(repUser)){	// 可以修改自己规定时间内的日报，规定时间在系统设置中设定
		           	
      out.write("\r\n\t\t\t\t\t<div class=\"button\" onclick=\"javascript:location.href='");
      out.print(path);
      out.write("/weixin/workReport/weixinModifyReport.jsp?logId=");
      out.print(logId );
      out.write("&repUser=");
      out.print(repUser );
      out.write("&beginIndex=");
      out.print(beginIndex );
      out.write("'\">修改</div>\r\n\t\t           \t");

	           	}
	           	if("message".equals(from)){
	           		
      out.write("\r\n\t           \t\t<div id=\"closeWindow\" class=\"button gray\">返回</div>\r\n\t           \t\t");

	           	} else{
	           		
      out.write("\r\n\t           \t\t<div class=\"button gray\" onclick=\"javascript:window.history.back();\">返回</div>\r\n\t           \t\t");

	           	}
	           	
      out.write("\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/weixin/common/weixin_messageReminders.jsp", out, false);
      out.write("\r\n\t\t<script type=\"text/javascript\">\r\n\t\t\r\n\t\tfunction reply(){\r\n\t\t\tvar leaveword = document.getElementById(\"leaveword\").value;\r\n\t\t\tif(leaveword==null || leaveword==\"\"){\r\n\t\t\t\tvar msg = document.getElementById(\"msg\");\r\n\t\t\t\tmsg.innerHTML = \"评价留言不能为空!\";\r\n\t\t\t\treturn;\r\n\t\t\t}else if(leaveword.length > 500){\r\n\t\t\t\tvar msg = document.getElementById(\"msg\");\r\n\t\t\t\tmsg.innerHTML = \"评价留言长度不能大于500个字符!\";\r\n\t\t\t\treturn;\r\n\t\t\t}else{}\r\n\t\t\tdocument.subForm.submit();\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfunction showInfo(obj){\r\n\t\t\tvar infoDiv = document.getElementById(\"information\");\r\n\t\t\tif(infoDiv.style.display == \"none\"){\r\n\t\t\t\tinfoDiv.style.display = \"block\";\r\n\t\t\t\tobj.innerHTML = \"隐藏\";\r\n\t\t\t} else{\r\n\t\t\t\tinfoDiv.style.display = \"none\";\r\n\t\t\t\tobj.innerHTML = \"详情\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t</script>\r\n\t</body>\r\n</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
