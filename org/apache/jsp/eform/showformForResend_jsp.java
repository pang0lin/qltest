/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:03:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.eform;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.oa.userdb.service.CustomDatabaseBD;
import com.js.oa.eform.service.CustomFormBD;
import java.util.List;
import com.js.oa.jsflow.service.WorkFlowBD;
import com.js.util.config.SystemCommon;

public final class showformForResend_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.oa.eform.service.CustomFormBD");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.js.util.config.SystemCommon");
    _jspx_imports_classes.add("com.js.oa.userdb.service.CustomDatabaseBD");
    _jspx_imports_classes.add("com.js.oa.jsflow.service.WorkFlowBD");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n");

request.setCharacterEncoding("GBK");
CustomFormBD cst = new CustomFormBD();
CustomDatabaseBD userDB = new CustomDatabaseBD();
String scriptappend = "";
String domainId = session.getAttribute("domainId")==null ? "0" : session.getAttribute("domainId").toString();
String parent_fromDraft = "draftForm".equals(request.getParameter("action")) ? "1" : "0";
if("1".equals(request.getParameter("resubmit"))){
	parent_fromDraft = "1";
}
String hideTableHTML = "";
String showTableHTML = "";
List boxFieldList = userDB.getOnchangeMethodInfo(pageId, domainId);

//读取隐藏字段（不可编辑字段）
String hide_Field = request.getAttribute("hideField")==null ? "" : request.getAttribute("hideField").toString();

      out.write("\r\n\r\n<style type=\"text/css\">\r\n.flowInput { behavior:url(/jsoa/js/validate.htc); /*border:1px solid #E8E8E8;*/}\r\n.flowInputRed { behavior:url(/jsoa/js/formvalidate.htc); /*border:1px solid #E8E8E8;*/}\r\n.flowInputenter { border:1px solid blue; }\r\n.mustwrite { border:1px solid red; }\r\n.divnowrap { meizz:expression(this.noWrap=true);}\r\n</style>\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/jsoa/eform/ext/resources/css/ext-all-jiusi.css\"/>\r\n<script type=\"text/javascript\" src=\"/jsoa/eform/ext/adapter/ext/ext-base.js\"></script>\r\n<script type=\"text/javascript\" src=\"/jsoa/eform/ext/ext-all.js\"></script>\r\n<script type=\"text/javascript\" src=\"/jsoa/eform/js/ajax.js\"></script>\r\n<!-- 为实现国资委物品 联想查询  20160326 by 陈明伟start-->\r\n<script type=\"text/javascript\" src=\"/jsoa/js/jquery-1.4.2.min.js\"></script>\r\n<script type=\"text/javascript\" src=\"/jsoa/js/jquery.autocomplete.min.js\"></script>\r\n<!-- 为实现国资委物品 联想查询  20160326 by 陈明伟 end-->\r\n<!-- 为实现haier机种明细  20161111-->\r\n<script type=\"text/javascript\" src=\"/jsoa/eform/js/haierSpecial.js\"></script>\r\n");
      out.write("<SCRIPT type=\"text/javascript\">\r\n  var currentRow = null;\r\n  var tblTR = new Array();\r\n  var tblTRHTML = new Array();\r\n  var extWidth = \"250px\";\r\n  ");

  //取设置了检索的字段信息
  
  //取设置了提取数据的字段信息
  
      out.write("\r\n  var tempComboBoxStore = new Array();\r\n  var tempSelectHtml = new Array();\r\n  var tempCombofieldObjArr=new Array();\r\n  var tempComboBoxCntArr=new Array();\r\n  Ext.onReady(function(){\r\n\t//Ext.QuickTips.init();\r\n\t");

	String[] fieldObj;
	String hide_field_readonly=","+hide_Field+",";
	for(int fi=0;fi<boxFieldList.size();fi++){
		fieldObj=(String[])boxFieldList.get(fi);
		if("1".equals(fieldObj[2])){
			//需要输入检索
			if (hide_field_readonly.indexOf(","+fieldObj[0]+",") >= 0 || hide_field_readonly.indexOf(fieldObj[1]) >= 0) {
				//如果是只读字段则不使用输入样式
				continue;
			}else{
			
	
      out.write("\r\n\t//记录字段值\r\n\tvar tempCombofieldObj={};\r\n\ttempCombofieldObj.id=\"");
      out.print(fieldObj[1]);
      out.write("\";\r\n\ttempCombofieldObj.val=");
      out.print(net.sf.json.JSONArray.fromObject(fieldObj));
      out.write(";\r\n\ttempCombofieldObjArr[tempCombofieldObjArr.length]=tempCombofieldObj;\r\n\t//记录html\r\n\tvar tempSelectHtmlObj={};\r\n\ttempSelectHtmlObj.id=\"");
      out.print(fieldObj[1]);
      out.write("\";\r\n\ttempSelectHtmlObj.val=document.getElementById(\"");
      out.print(fieldObj[1]);
      out.write("\").parentNode.parentNode.innerHTML;\r\n\ttempSelectHtml[tempSelectHtml.length]=tempSelectHtmlObj;\r\n\textWidth = document.getElementById(\"");
      out.print(fieldObj[1]);
      out.write("\")==null?extWidth:document.getElementById(\"");
      out.print(fieldObj[1]);
      out.write("\").offsetWidth+\"px\";\r\n\t//alert(extWidth);\r\n\ttry{\r\n\t\tvar cb");
      out.print(fi);
      out.write(" = new Ext.form.ComboBox({\r\n\t\t\ttypeAhead: true,\r\n\t\t\ttriggerAction: 'all',\r\n\t\t\ttransform:'");
      out.print(fieldObj[1]);
      out.write("',\r\n\t\t\t//width:'200',\r\n\t\t\tforceSelection:true,\r\n\t\t\t//listClass:'inputText',\r\n\t\t\t//minListWidth:205+2+2,\t\t\t\r\n\t\t\tlisteners:{\r\n\t        \tselect:{\r\n\t\t\t\t\tfn:function(combo, record, index){\r\n\t\t\t\t\t\t//判断是否有onchange方法\r\n\t\t\t\t\t\t");
if(!"0".equals(fieldObj[3])){
      out.write("\r\n\t\t\t\t\t\t\t");
      out.print(fieldObj[1]);
      out.write("_onchange(combo);\r\n\t\t\t\t\t\t");
}
      out.write("\r\n\t\t\t\t\t}\r\n\t        \t},\r\n\t\t\t\t'beforequery':function(e){         \r\n\t\t\t \t\tvar combo = e.combo;    \r\n\t\t\t \t\tif(!e.forceAll){    \r\n\t\t\t  \t\t\tvar input = e.query;    \r\n\t\t\t  \t\t\t// 检索的正则  \r\n\t\t\t\t\t\t var regExp = new RegExp(\".*\" + input + \".*\");  \r\n\t\t\t\t\t\t// 执行检索  \r\n\t\t\t\t\t\t combo.store.filterBy(function(record,id){    \r\n\t\t\t \t\t\t\t// 得到每个record的项目名称值  \r\n\t\t\t\t\t\t\tvar text = record.get(combo.displayField);    \r\n\t\t\t\t\t\t\treturn regExp.test(text);   \r\n\t\t\t\t\t\t });  \r\n\t\t\t\t\t\t combo.expand();    \r\n\t\t\t\t\t\treturn false;  \r\n\t\t\t     }  \r\n\t\t\t   }  \r\n\t\t\t}\r\n\t    });\r\n\t\tcb");
      out.print(fi);
      out.write(".el.setStyle({\r\n\t\t\t//width:extWidth\r\n\t\t\t//top:'0.1px'\r\n\t\t});\r\n\t\t//记录数据源\r\n\t\tvar tempComboBoxStoreObj={};\r\n\t\ttempComboBoxStoreObj.id=\"");
      out.print(fieldObj[1]);
      out.write("\";\r\n\t\ttempComboBoxStoreObj.val=cb");
      out.print(fi);
      out.write(".store;\r\n\t\ttempComboBoxStore[tempComboBoxStore.length]=tempComboBoxStoreObj;\r\n\t\t//记录个数\r\n\t\tvar tempComboBoxCnt={};\r\n\t\ttempComboBoxCnt.id=\"");
      out.print(fieldObj[1]);
      out.write("\";\r\n\t\ttempComboBoxCnt.val=1;\r\n\t\ttempComboBoxCntArr[tempComboBoxCntArr.length]=tempComboBoxCnt;\r\n\t}catch(ee){\r\n\t}\r\n\t\r\n\t");
    }
	   }
	}
      out.write("\r\n\ttempComboBoxCreateFun();\r\n});\r\nfunction tempComboBoxCreateFun1(vid){\r\n\tvar r=-1;\r\n\tfor(var j=0;j<tempComboBoxStore.length;j++){\r\n\t\t if(vid.indexOf(tempComboBoxStore[j].id)>=0){\r\n\t\t\t r=j;\r\n\t\t\t break;\r\n\t\t }\r\n\t }\r\n\treturn r;\r\n}\r\n  function tempComboBoxCreateFun(){\r\n\t  if(tempComboBoxStore.length>0){\r\n\t\t  var tempSelect=currentRow.parentNode.getElementsByTagName(\"select\");\r\n\t\t if(tempSelect.length==0){\r\n\t\t\t return;\r\n\t\t }\r\n\t\t for(var i=tempSelect.length-1;i>=0;i--){\r\n\t\t\t var tempXh=tempComboBoxCreateFun1(tempSelect[i].id);\r\n\t\t\t if(tempXh != -1){\r\n\t\t\t\t//判断当id重复时增加后缀\r\n\t\t\t\t if(tempComboBoxCntArr[tempXh].id==tempSelect[i].id){\r\n\t\t\t\t\t var tt=parseInt(tempComboBoxCntArr[tempXh].val);\r\n\t\t\t\t\t tempSelect[i].id=tempSelect[i].id+\"_\"+tt;\r\n\t\t\t\t\t tempComboBoxCntArr[tempXh].val=tt++;\r\n\t\t\t\t }\r\n\t\t\t\t extWidth = document.getElementById(tempSelect[i].id)==null?extWidth:document.getElementById(tempSelect[i].id).offsetWidth+\"px\";\r\n\t\t\t\t\tnew Ext.form.ComboBox({\r\n\t\t\t\t\t\ttypeAhead: true,\r\n\t\t\t\t\t\ttriggerAction: 'all',\r\n\t\t\t\t\t\ttransform:tempSelect[i].id,\r\n");
      out.write("\t\t\t\t\t\tforceSelection:true,\t\t\r\n\t\t\t\t\t\tlisteners:{\r\n\t\t\t\t        \tselect:{\r\n\t\t\t\t\t\t\t\tfn:function(combo, record, index){\r\n\t\t\t\t\t\t\t\t\t//判断是否有onchange方法\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tvar tempTransform = tempComboBoxCreateFun1(combo.transform);\r\n\t\t\t\t\t\t\t\t\tvar tempf=tempCombofieldObjArr[tempTransform].val;\r\n\t\t\t\t\t\t\t\t\tif(tempf[3]!=0){\r\n\t\t\t\t\t\t\t\t\t\t//tempComboBox_onchange(combo,tempf);\r\n\t\t\t\t\t\t\t\t\t\ttempComboBox_onchange1(combo);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t        \t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t    });\r\n\t\t\t }\r\n\t\t\t \r\n\t\t }\r\n\t\t \r\n      }\r\n\t\t\r\n\t}\r\n\r\n//构造字段onchange事件\r\n");

for(int fi=0;fi<boxFieldList.size();fi++){
	fieldObj=(String[])boxFieldList.get(fi);
	
	if(!"0".equals(fieldObj[3]) || "1".equals(fieldObj[12])){
		//onchange fangfa

      out.write("\t\r\nfunction ");
      out.print(fieldObj[1]);
      out.write("_onchange(obj){\r\n    var curIndex=0;\r\n    var curObj;\r\n    if(obj.name!=undefined){\r\n    \tcurObj=document.getElementsByName(obj.name);\r\n    }else{\r\n    \tcurObj=document.getElementsByName(obj.hiddenName);\r\n    \tobj = obj.wrap.dom.childNodes[0];\r\n    }\r\n    for(var i=0;i<curObj.length;i++){\r\n    \tif(curObj[i]==obj){\r\n    \t\tcurIndex=i;\r\n    \t}\r\n    }\r\n    ");

    if("2".equals(fieldObj[3])||"3".equals(fieldObj[3])){
		out.print(fieldObj[5]);
	}
    
      out.write("\r\n    var selValue=obj.value;\r\n    selValue=escape(escape(selValue));\r\n   \r\n\t");

	if("1".equals(fieldObj[3])||"3".equals(fieldObj[3])){
		
      out.write("\r\n\t\t//提取数据\t\t\r\n\t\tvar submitPersonIdObj=document.getElementsByName(\"submitPersonId\");\r\n\t\tvar submitPersonObj=document.getElementsByName(\"submitPerson\");\r\n\t\tvar submitPersonId=\"\",submitPerson=\"\";\r\n\t\tif(submitPersonIdObj.length>0){\r\n\t\t\tsubmitPersonId=submitPersonIdObj[0].value;\r\n\t\t}\r\n\t\tif(submitPersonObj.length>0){\r\n\t\t\tsubmitPerson=submitPersonObj[0].value;\r\n\t\t}\r\n\t\tsubmitPerson=escape(escape(submitPerson));\r\n\t\tJSRequest.sendPOST(\"/jsoa/eform/fetchdata.jsp?curIndex=\"+curIndex+\"&fieldId=");
      out.print(fieldObj[0]);
      out.write("&submitPersonId=\"+submitPersonId+\"&submitPerson=\"+submitPerson+\"&selValue=\"+selValue,\"\",showFormSubData);\r\n\t\t");

	}
	if(fieldObj[12]!=null&&"1".equals(fieldObj[12])){
		if(fieldObj[9]!=null && fieldObj[10]!=null){
	
      out.write("\r\n\tJSRequest.sendPOST(\"/jsoa/eform/fetchdata_inteface.jsp?transValue=\"+selValue+\"&curIndex=\"+curIndex+\"&fieldId=");
      out.print(fieldObj[0]);
      out.write("\",\"\",showInteface_Data);\r\n\t");

	}}
	
	
      out.write("\r\n}\r\nfunction tempComboBox_onchange1(obj){\r\n    var curIndex=0;\r\n    var curObj;\r\n    if(obj.name!=undefined){\r\n    \tcurObj=document.getElementsByName(obj.name);\r\n    }else{\r\n    \tcurObj=document.getElementsByName(obj.hiddenName);\r\n    \tobj = obj.wrap.dom.childNodes[0];\r\n    }\r\n    for(var i=0;i<curObj.length;i++){\r\n    \tif(curObj[i]==obj){\r\n    \t\tcurIndex=i;\r\n    \t}\r\n    }\r\n    ");

    if("2".equals(fieldObj[3])||"3".equals(fieldObj[3])){
		out.print(fieldObj[5]);
	}
    
      out.write("\r\n    var selValue=obj.value;\r\n    selValue=escape(escape(selValue));\r\n   \r\n\t");

	if("1".equals(fieldObj[3])||"3".equals(fieldObj[3])){
		
      out.write("\r\n\t\t//提取数据\t\t\r\n\t\tvar submitPersonIdObj=document.getElementsByName(\"submitPersonId\");\r\n\t\tvar submitPersonObj=document.getElementsByName(\"submitPerson\");\r\n\t\tvar submitPersonId=\"\",submitPerson=\"\";\r\n\t\tif(submitPersonIdObj.length>0){\r\n\t\t\tsubmitPersonId=submitPersonIdObj[0].value;\r\n\t\t}\r\n\t\tif(submitPersonObj.length>0){\r\n\t\t\tsubmitPerson=submitPersonObj[0].value;\r\n\t\t}\r\n\t\tsubmitPerson=escape(escape(submitPerson));\r\n\t\tJSRequest.sendPOST(\"/jsoa/eform/fetchdata.jsp?curIndex=\"+curIndex+\"&fieldId=");
      out.print(fieldObj[0]);
      out.write("&submitPersonId=\"+submitPersonId+\"&submitPerson=\"+submitPerson+\"&selValue=\"+selValue,\"\",showFormSubData);\r\n\t\t");

	}
	if(fieldObj[12]!=null&&"1".equals(fieldObj[12])){
		if(fieldObj[9]!=null && fieldObj[10]!=null){
	
      out.write("\r\n\tJSRequest.sendPOST(\"/jsoa/eform/fetchdata_inteface.jsp?transValue=\"+selValue+\"&curIndex=\"+curIndex+\"&fieldId=");
      out.print(fieldObj[0]);
      out.write("\",\"\",showInteface_Data);\r\n\t");

	}}
	
	
      out.write("\r\n}\r\n");
  }
	//输入检索的回车触发事件
	if("450".equals(fieldObj[7])){
		
      out.write("\r\nfunction ");
      out.print(fieldObj[1]);
      out.write("_enter(obj){\r\n\tvar curIndex=0;\r\n    var curObj=document.getElementsByName(obj.name);\r\n    for(var i=0;i<curObj.length;i++){\r\n    \tif(curObj[i]==obj){\r\n    \t\tcurIndex=i;\r\n    \t}\r\n    }\r\n    var inputValueObj=document.getElementsByName(\"");
      out.print(fieldObj[1]);
      out.write("_temp\");\r\n  \r\n\tvar inputValue=inputValueObj[curIndex].value;\t\r\n   \r\n\tvar submitPersonObj=document.getElementsByName(\"submitPersonId\");\r\n\tvar submitPersonId=\"\";\r\n\tif(submitPersonObj.length>0){\r\n\t\tsubmitPersonId=submitPersonObj[0].value;\r\n\t}\r\n\t//如果是程序调用需解析参数\r\n\tvar interfacePara=\"\";\r\n\t");

	if(fieldObj[8]!=null && fieldObj[8].startsWith("$[interface")){
		
      out.write("\r\n\t\tinterfacePara=\"&getDataFlag=1\";\r\n\t\t");
		
		if(fieldObj[8].indexOf(";;;;")>0){			
			//有设置参数 @@ 表示表单中字段  @$@ 表示默认字段
			String interfaceParaStr=fieldObj[8].substring(fieldObj[8].indexOf(";;;;")+4,fieldObj[8].length()-1);			
			String[] interfaceParaArr=interfaceParaStr.split(",");			
			String interfaceParaTemp;
			for(int interi=0;interi<interfaceParaArr.length;interi++){				
				if(interfaceParaArr[interi].startsWith("@@")){					
					//表单中的值组织参数
					interfaceParaTemp=interfaceParaArr[interi].substring(2,interfaceParaArr[interi].length()-2);
					if(interfaceParaTemp.equals(fieldObj[1])){
      out.write("\r\n\t\t\t\t\tvar fieldText = \"\";\r\n\t\t\t\t\tif(curIndex>0){\r\n\t\t\t\t\t\tvar objTemp = document.getElementsByName(\"");
      out.print(interfaceParaTemp);
      out.write("_temp\");\r\n\t\t\t\t\t\tfieldText = objTemp[curIndex].value;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tfieldText = document.getElementById(\"");
      out.print(interfaceParaTemp);
      out.write("_temp\").value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinterfacePara+=\"&");
      out.print(interfaceParaTemp);
      out.write("=\"+fieldText;\r\n\t\t\t\t\t");
}else{
      out.write("\r\n\t\t\t\t\tvar fieldText = \"\";\r\n\t\t\t\t\tif(curIndex>0){\r\n\t\t\t\t\t\tvar objTemp = document.getElementsByName(\"");
      out.print(interfaceParaTemp);
      out.write("\");\r\n\t\t\t\t\t\tfieldText = objTemp[curIndex].value;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tfieldText = document.getElementById(\"");
      out.print(interfaceParaTemp);
      out.write("\").value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinterfacePara+=\"&");
      out.print(interfaceParaTemp);
      out.write("=\"+fieldText;\r\n\t\t\t\t\t");
}
				}				
			}
		}
	}
	
      out.write("\r\n\tJSMainWinOpen2(\"/jsoa/FormDataFilterAction.do?curIndex=\"+curIndex+\"&fieldId=");
      out.print(fieldObj[0]);
      out.write("&fieldName=");
      out.print(fieldObj[1]);
      out.write("&submitPersonId=\"+submitPersonId+\"&inputValue=\"+escape(escape(inputValue))+interfacePara,\"\",\"\");\r\n");

if("2".equals(fieldObj[3])||"3".equals(fieldObj[3])){
	out.print(fieldObj[5]);
}

      out.write("\r\n}\r\n\t\t");

	}
}
      out.write("\r\nfunction tempComboBox_onchange(obj,tempData){\r\n\t   var curIndex=0;\r\n\t   if(obj.name != undefined){\r\n\t\t   var curObj=document.getElementsByName(obj.name);\r\n\t\t    for(var i=0;i<curObj.length;i++){\r\n\t\t    \tif(curObj[i]==obj){\r\n\t\t    \t\tcurIndex=i;\r\n\t\t    \t}\r\n\t\t    }\r\n\t   }\r\n\t   if(obj.transform != undefined){\r\n\t\t   var tmp = obj.transform;\r\n\t\t   var inx = tmp.substring(tmp.lastIndexOf(\"_\")+1);\r\n\t\t   try { \r\n\t\t\t   curIndex = parseInt(inx)-1;\r\n\t\t   }catch(e){\r\n\t\t\t   curIndex = 0; \r\n\t\t   }\r\n\t   }\r\n\t    if(tempData[3]==\"1\"||tempData[3]==\"3\"){\r\n\t\t\r\n\t\t\t//提取数据\r\n\t\t\tvar selValue=obj.value;\r\n\t\t\tvar submitPersonIdObj=document.getElementsByName(\"submitPersonId\");\r\n\t\t\tvar submitPersonObj=document.getElementsByName(\"submitPerson\");\r\n\t\t\tvar submitPersonId=\"\",submitPerson=\"\";\r\n\t\t\tif(submitPersonIdObj.length>0){\r\n\t\t\t\tsubmitPersonId=submitPersonIdObj[0].value;\r\n\t\t\t}\r\n\t\t\tif(submitPersonObj.length>0){\r\n\t\t\t\tsubmitPerson=submitPersonObj[0].value;\r\n\t\t\t}\r\n\t\t\tJSRequest.sendPOST(\"/jsoa/eform/fetchdata.jsp?curIndex=\"+curIndex+\"&fieldId=\"+tempData[0]+\"&submitPersonId=\"+submitPersonId+\"&submitPerson=\"+submitPerson+\"&selValue=\"+selValue,\"\",showFormSubData);\r\n");
      out.write("\t    }\r\n\t    if(tempData[12]!=null && tempData[12]==\"2\"){\r\n\t    \tif(tempData[9]!=null && tempData[10]!=null){\r\n\t    \t\tJSRequest.sendPOST(\"/jsoa/eform/fetchdata_inteface.jsp?transValue=\"+obj.value+\"&curIndex=\"+curIndex+\"&fieldId=\"+tempData[0],\"\",showInteface_Data);\r\n\t    \t}\r\n\t    }\r\n\t    if(tempData[3] ==\"2\" || tempData[3] ==\"3\"){\r\n\t    \teval(tempData[5]);\r\n\t    }\r\n\t\t\t\r\n}\r\ndocument.onkeydown=listenKeyDown;\r\n\r\nfunction listenKeyDown(){\r\n\tvar event = arguments[0] ||window.event;\r\n\tif(event.keyCode==13){\r\n\t\t//按下了enter\r\n\t\ttry{\r\n\t\t    var obj=event.srcElement;\r\n\t\t\tvar objname=event.srcElement.name;\t\r\n\t\t\t\r\n\t\t\tvar curIndex=0;\r\n\t\t    var curObj=document.getElementsByName(objname);\r\n\t\t    for(var i=0;i<curObj.length;i++){\r\n\t\t    \tif(curObj[i]==obj){\r\n\t\t    \t\tcurIndex=i;\r\n\t\t    \t}\r\n\t\t    }\r\n    \r\n\t\t\tobjname=objname.substring(0,objname.length-5);\r\n\t\t\tobjname=objname+\"_btn\";\t\t\t\r\n\t\t\t\r\n\t\t\tobj=document.getElementsByName(objname);\r\n\t\t\tobj[curIndex].click();\r\n\t\t\t\r\n\t\t\t//eval(objname+\"_enter(\"+document.getElementsByName(objname)[0]+\")\");\r\n");
      out.write("\t\t}catch(e){\r\n\t\t\t//alert(e);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction showIntefaceData(response){\r\n\r\n\tvar context = response.responseText;\r\n\t\r\n\tcontext=context.substring(context.indexOf(\"{\"));\r\n\t\r\n\tif(context.length>2){\r\n\t\tcontext=context.substring(2,context.length-3);\r\n\t\t\r\n\t\tvar contextValue=context.split(\"];[\");\r\n\t\t\r\n\t\tfor(var i=0;i<contextValue.length;i++){\r\n\t\t\t\r\n\t\t\tif(contextValue[i].indexOf(\":{\")>0 &&contextValue[i].substring(contextValue[i].length-1)==\"}\" ){\r\n\t\t\t\tvar kValue = contextValue[i].split(\":{\");\r\n\t\t\t\treturn_Value(\"{\"+kValue[1],kValue[0]) ;\r\n\t\t\t}else{\r\n\t\t\t\tvar kValue=contextValue[i].split(\":\");\r\n\t\t\t\treturn_Value(kValue[1],kValue[0]) ;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t  \r\n\r\n}\r\n\r\n\r\nfunction return_Value(showValue,fieldName){\r\n\tif(document.getElementById(fieldName)){\r\n\t\tvar fieldObj =document.getElementById(fieldName);\r\n\t\tif(fieldObj.nodeName==\"SELECT\"&&(showValue.substring(0,2)==\"{[\" && showValue.substring(showValue.length-2,showValue.length)==\"]}\")){//下拉框形式\r\n\t\t\tvar showValues =  showValue.substring(2,showValue.length-2).split(\"],[\");\r\n");
      out.write("\t \t\tfieldObj.options.length=0;\r\n\t \t\t\r\n\t \t\tvar option =document.createElement(\"option\");\r\n\t \t\tfieldObj.appendChild(option);\r\n\t\t\toption.value = \"\";\r\n\t\t\toption.text = \"--请选择--\";\r\n\t\t\t\r\n\t \t\tfor(var i=0;i<showValues.length;i++){\r\n\t \t\t\tvar option2 = document.createElement(\"option\");\r\n\t \t \t\tfieldObj.appendChild(option2);\r\n\t \t \t\t\r\n\t \t\t\tvar optionShow = showValues[i].split(\":\");\r\n\t \t\t\toption2.value = optionShow[0]+\"@#@\"+optionShow[1];\r\n\t \t\t\toption2.text = optionShow[1];\r\n\t \t\t}\r\n\t \t}else{\r\n\t \t\tdocument.getElementById(fieldName).value=showValue;\r\n\t \t}\r\n\t}\r\n}\r\n\r\nfunction showInteface_Data(response){\r\n\t \r\n\tif(response!=null && response.responseText!=\"\" && response.responseXML.documentElement!=null){\r\n    \tvar root=response.responseXML.documentElement;\r\n    \t\r\n    \t//如是字表多行时需确定本行的位置\r\n    \tvar curIndex=root.getElementsByTagName(\"curIndex\")[0].firstChild.nodeValue;\r\n    \tvar datas= root.getElementsByTagName(\"data\");\r\n    \tvar formfield,fetchdata,content;\r\n    \t//alert(\"11222\"+datas);\r\n    \tfor(var i=0;i<datas.length;i++){\r\n    \t\tformfield=datas[i].getElementsByTagName(\"formfield\")[0].firstChild.nodeValue;\r\n");
      out.write("    \t\tif(formfield==\"error\"){\r\n    \t\t\tcontent=datas[i].getElementsByTagName(\"content\")[0].firstChild.nodeValue;\r\n    \t\t\talert(content);\r\n    \t\t}else{\r\n\t    \t\tfetchdata=datas[i].getElementsByTagName(\"fetchdata\")[0].firstChild.nodeValue;\r\n\t    \t\tcontent=datas[i].getElementsByTagName(\"content\")[0].firstChild.nodeValue;\r\n\t    \t\t//alert(formfield);\r\n\t    \t\t//alert(content);\r\n\t    \t\t//if(fetchdata==\"0\"){\r\n\t    \t\treturn_Value(content,formfield);\r\n\t    \t\t//}\r\n\t\t\t}\t\r\n    \t}\r\n    \t\r\n\t}\t\t\r\n}\t\r\nfunction showFormSubData(response){\r\n\t//将取回的数据显示在正确的表单中\r\n\tif(response!=null && response.responseText!=\"\" && response.responseXML.documentElement!=null){\r\n    \tvar root=response.responseXML.documentElement;\r\n\t\t\r\n    \t//如是字表多行时需确定本行的位置\r\n    \tvar curIndex=root.getElementsByTagName(\"curIndex\")[0].firstChild.nodeValue;\r\n    \tvar datas= root.getElementsByTagName(\"data\");\r\n    \tvar formfield,fetchdata,fieldtype,content,fieldTagName;\r\n    \tvar subdatas,datavalue,datatext;\r\n    \tvar oprObj;\r\n    \tvar oprObjId\r\n    \tfor(var i=0;i<datas.length;i++){\r\n");
      out.write("    \t\t// 控件名称\r\n    \t\tformfield=datas[i].getElementsByTagName(\"formfield\")[0].firstChild.nodeValue;\r\n    \t\tfetchdata=datas[i].getElementsByTagName(\"fetchdata\")[0].firstChild.nodeValue;\r\n    \t\t// 控件类型\r\n    \t\tfieldtype=datas[i].getElementsByTagName(\"fieldtype\")[0].firstChild.nodeValue;\r\n    \t\t\r\n    \t\tif(fetchdata==\"0\"){\t// 检索赋值\r\n\t    \t\t// 控件的值\r\n\t    \t\tif(null != datas[i].getElementsByTagName(\"content\")[0].firstChild){\r\n\t    \t\t\tcontent=datas[i].getElementsByTagName(\"content\")[0].firstChild.nodeValue;\r\n\t    \t\t} else{\r\n\t    \t\t\tcontent = \"\";\r\n\t    \t\t}\r\n\t    \t\t\r\n\t\t\t\t//alert(formfield + \"---\" + fetchdata);\r\n\t    \t\t// 根据控件名称和下标索引获取控件对象\r\n\t    \t\toprObj = document.getElementsByName(formfield);\r\n\t    \t\t\r\n\t    \t\t// 判断要赋值的控件的类型\r\n\t    \t\tif(\"103\" == fieldtype){\t// 单选\r\n\t    \t\t\tif(null!=content && \"\"!=content){\r\n\t\t    \t\t\tvar index = 0;\r\n\t\t    \t\t\tfor(var j=0; j<oprObj.length; j++){\t// 遍历所有的radio选项\r\n\t\t    \t\t\t\tif(oprObj[j].value == content){\t// 判断值为选择值的radio选择\r\n\t\t    \t\t\t\t\tif(index == curIndex){\t// 选中值跟选择值相同，且下标相同的radio选项\r\n\t\t    \t\t\t\t\t\toprObj[j].checked = \"checked\";\r\n");
      out.write("\t\t    \t\t\t\t\t} else{\r\n\t\t    \t\t\t\t\t\toprObj[j].checked = \"\";\r\n\t\t    \t\t\t\t\t}\r\n\t\t    \t\t\t\t\tindex++;\r\n\t\t    \t\t\t\t}\r\n\t\t    \t\t\t}\r\n\t    \t\t\t}\r\n\t    \t\t} else if(\"104\" == fieldtype){\t// 多选\r\n\t    \t\t\tif(null!=content && \"\"!=content){\r\n\t    \t\t\t\t// 统计页面上出现同名同值复选框的个数\r\n\t    \t\t\t\tvar sum = 0;\r\n\t    \t\t\t\tfor(var j=0; j<oprObj.length; j++){\r\n\t    \t\t\t\t\tif(oprObj[0].value == oprObj[j].value){\r\n\t    \t\t\t\t\t\tsum++;\r\n\t    \t\t\t\t\t}\r\n\t    \t\t\t\t}\r\n\t    \t\t\t\t// 页面上设置的同名多选控件中选项的个数\r\n\t    \t\t\t\tvar count = oprObj.length / sum;\r\n\t    \t\t\t\t// 循环开始下标\r\n\t    \t\t\t\tvar index = curIndex * count;\r\n\t    \t\t\t\tcontent = \",\" + content;\r\n\t    \t\t\t\tfor(var j=index; j<(index+count); j++){\r\n\t    \t\t\t\t\tif(content.indexOf(\",\"+oprObj[j].value+\",\") > -1){\t// 多选值中包含当前选项的值\r\n\t    \t\t\t\t\t\toprObj[j].checked = \"checked\";\r\n\t    \t\t\t\t\t} else{\r\n\t    \t\t\t\t\t\toprObj[j].checked = \"\";\r\n\t    \t\t\t\t\t}\r\n\t    \t\t\t\t}\r\n\t    \t\t\t}\r\n\t    \t\t} else if(\"105\" == fieldtype){\t// 下拉框\r\n\t    \t\t\tvar opts = oprObj[curIndex].options;\t// 获取所有选项\r\n\t    \t\t\tfor(var j=0; j<opts.length; j++){\r\n\t\t\t\t\t\tif(content == opts[j].value){\t// 选项值等于选择值时，选项选中\r\n");
      out.write("\t\t\t\t\t\t\topts[j].selected = \"selected\";\r\n\t\t\t\t\t\t} else{\r\n\t\t\t\t\t\t\topts[j].selected = \"\";\r\n\t\t\t\t\t\t}\r\n\t    \t\t\t}\r\n\t    \t\t}else if(\"210\"==fieldtype){//单选人\r\n\t    \t\t\toprObj = document.getElementsByName(formfield+\"_Name\");\r\n\t    \t\t\toprObjId = document.getElementById(formfield+\"_Id\");\r\n\t    \t\t\tif(null!=content && \"\"!=content){\r\n\t    \t\t\tvar name=content.substring(0,content.indexOf(\";\"));\r\n\t    \t\t\tvar id=content.substring(content.indexOf(\";\")+1);\r\n\t    \t\t\t\toprObj[curIndex].value = name;\r\n\t    \t\t\t\toprObjId.value=id;\r\n\t    \t\t\t}\r\n\t    \t\t}else{\t// 其他类型控件，直接赋值，需要特殊处理时在之前加if判断\r\n\t    \t\t\t");

	    			if(com.js.util.config.SystemCommon.getSYWorkflowHR() == 1){
	    				
      out.write("\r\n\t\t\t\t\t\tif(content.indexOf(\"00:00:00.0\") > 0){\r\n\t\t\t\t\t\t\tcontent = content.replace(\"00:00:00.0\",\"\");\r\n\t\t\t\t\t\t}\r\n\t    \t\t\t\t");

	    			}
	    			
      out.write("\r\n\t    \t\t\toprObj[curIndex].value = content;\r\n\t    \t\t}\r\n    \t\t} else if(fetchdata == \"2\"){\t// 级联\r\n    \t\t\tsubdatas=datas[i].getElementsByTagName(\"content\")[0].getElementsByTagName(\"subdata\");\r\n    \t\t\t//下拉列表形式    \t\t\t\r\n    \t\t\t//oprObj=eval(\"document.all.\"+formfield);\r\n    \t\t\toprObj=document.getElementsByName(formfield)[curIndex];    \t\t\t\r\n    \t\t\t\r\n    \t\t\tfieldTagName=oprObj.tagName;    \t\t\t\r\n    \t\t\tif(fieldTagName==\"INPUT\" || fieldTagName==\"TEXTAREA\"){\r\n    \t\t\t\t//普通输入 \r\n    \t\t\t\toprObj.value=\"\";   \r\n    \t\t\t\tif(subdatas[0].getElementsByTagName(\"datatext\")[0].firstChild!=null){\t\t\t\t\r\n\t    \t\t\t\tdatavalue=subdatas[0].getElementsByTagName(\"datatext\")[0].firstChild.nodeValue; \r\n\t    \t\t\t\toprObj.value=datavalue;\r\n    \t\t\t\t}\r\n    \t\t\t}else if(fieldTagName==\"SELECT\"){\r\n    \t\t\t\t//删除原来的option    \t\t\t\t\r\n    \t\t\t\tjs_deleteAllOptions(oprObj);    \t\t\t\t\r\n    \t\t\t\t//新增option\r\n    \t\t\t\tfor(var j=0;j<subdatas.length;j++){\r\n    \t\t\t\t    try{\r\n\t    \t\t\t\t\tdatavalue=subdatas[j].getElementsByTagName(\"datavalue\")[0].firstChild.nodeValue;\r\n\t    \t\t\t\t\tdatatext=subdatas[j].getElementsByTagName(\"datatext\")[0].firstChild.nodeValue;\r\n");
      out.write("\t    \t\t\t\t\tjs_addOption(oprObj,datavalue,datatext);\r\n    \t\t\t\t\t}catch(e){\r\n    \t\t\t\t\t}\r\n    \t\t\t\t}\r\n    \t\t\t\toprObj.onchange();    \t\t\t\t\r\n    \t\t\t}\r\n    \t\t}\r\n\r\n    \t}\r\n    }\r\n}\r\n\r\nfunction js_deleteAllOptions(obj){\r\n\twhile(length!=0){ \r\n　　 \tvar length=obj.options.length;\r\n　　 \tfor(var i=0;i<length;i++)\r\n　　 \t\tobj.options.remove(i);\r\n　　 \tlength=length/2;\r\n　　 }\r\n}\r\nfunction js_addOption(obj,optionValue,optionText){\r\n\tvar newOption=new Option(optionText,optionValue); \r\n\tobj.options[obj.length]=newOption; \r\n} \r\n\r\nsetInterval(\"updateOnlineTime()\",30000);\r\nfunction updateOnlineTime(){\r\n\t\r\n\t var workId=\"\";\r\n\t var processId=\"\";\r\n\t var recordId=\"\";\r\n\t var tableId=\"\";\r\n   \r\n    if(document.getElementById(\"workId\")){\r\n     workId=document.getElementById(\"workId\").value;\r\n    }\r\n    if(document.getElementById(\"processId\")){\r\n    \tprocessId=document.getElementById(\"processId\").value;\r\n    }\r\n    if(document.getElementById(\"recordId\")){\r\n    \trecordId=document.getElementById(\"recordId\").value;\r\n    }\r\n    if(document.getElementById(\"tableId\")){\r\n");
      out.write("    \ttableId=document.getElementById(\"tableId\").value;\r\n    }\r\n    if(document.getElementById(\"tableId\")!=null&&document.getElementById(\"workId\")!=null&&document.getElementById(\"processId\")!=null&&document.getElementById(\"recordId\")!=null){\r\n\t   JSRequest.sendPOST(\"/jsoa/jsflow/jsflow_updateonlineTime.jsp?processId=\"+processId+\"&recordId=\"+recordId+\"&wfWorkId=\"+workId+\"&tableId=\"+tableId,\"\",doTime);\r\n\t}\r\n}\r\nfunction  doTime(){\r\n\r\n}\r\n</SCRIPT>\r\n<script language=javascript src=\"/jsoa/eform/js/form.js\"></script>\r\n<input type=\"hidden\" name=\"user_Id\" id=\"user_Id\" value=\"");
      out.print(session.getAttribute("userId"));
      out.write("\"/>\r\n<input type=\"hidden\" name=\"user_Name\" id=\"user_Name\" value=\"");
      out.print(session.getAttribute("userName"));
      out.write("\"/>\r\n<input type=\"hidden\" name=\"user_Account\" id=\"user_Account\" value=\"");
      out.print(session.getAttribute("userAccount"));
      out.write("\"/>\r\n<input type=\"hidden\" name=\"org_Name\" id=\"org_Name\" value=\"");
      out.print(session.getAttribute("orgName"));
      out.write("\"/>\r\n<input type=\"hidden\" name=\"org_ID\" id=\"org_ID\" value=\"");
      out.print(session.getAttribute("orgId"));
      out.write("\"/>\r\n<input type=\"hidden\" name=\"group_ID\" id=\"group_ID\" value=\"");
      out.print(session.getAttribute("groupId"));
      out.write("\"/>\r\n<input type=\"hidden\" name=\"Hide_Field\" id=\"Hide_Field\" value=\"");
      out.print(request.getAttribute("hideField"));
      out.write("\"/>\r\n<input type=\"hidden\" name=\"Page_Id\" id=\"Page_Id\" value=\"");
      out.print(pageId);
      out.write("\"/>\r\n<input type=\"hidden\" name=\"Info_Id\" id=\"Info_Id\" value=\"");
      out.print(request.getAttribute("infoId"));
      out.write("\"/>\r\n<input type=\"hidden\" name=\"work_Status\" id=\"work_Status\" value=\"");
      out.print(request.getParameter("workStatus"));
      out.write("\"/>\r\n<input type=\"hidden\" name=\"parent_fromDraft\" id=\"parent_fromDraft\" value=\"");
      out.print(parent_fromDraft);
      out.write("\">\r\n<input type=\"hidden\" name=\"totalValueSet\" id=\"totalValueSet\" value=\"\" />\r\n<input type=\"hidden\" name=\"dateCompare\" id=\"dateCompare\" value=\"\" />\r\n<input type=\"hidden\" name=\"sendSMS\" id=\"sendSMS\" value=\"");
      out.print(SystemCommon.getSendSMS() );
      out.write("\" />\r\n<!-- 取 -->\r\n");
      out.print(cst.getComputeFieldHTML(pageId));
      out.write("\r\n<div id=\"formHTML\">\r\n<!-- 读取表单设计模板 begin -->\r\n");
      out.print(cst.getCode(pageId));
      out.write("\r\n<!-- 读取表单设计模板 end -->\r\n</div>\r\n\r\n<script type=\"text/javascript\">\r\n");

String allCoumputFieldStr = cst.getMainAndForeignComputeFields(pageId);
//判断当前表单是否新增
if(request.getAttribute("infoId")==null || request.getAttribute("infoId").toString().toUpperCase().equals("NULL") 
		|| request.getAttribute("infoId").toString().trim().length()<1){
	//初始化显示界面(新增)
	//System.out.println("新增表单.........................................................");
	// 如果是发起子流程则如果子流程中的表单与主表单相同则将数据继承
	String pareFormId = request.getParameter("pareTableId");
	boolean isNewForm = true;
	if(pareFormId!=null || !"null".equals(pareFormId) || !"".equals(pareFormId)){
		//取得父表单ID则比较父表单ID是否与当前表单ID相同，如果相同的话，则继承主表单数据
		isNewForm = cst.isNewForm(pareFormId, pageId);
	}
	
	if(isNewForm){
		//新表单
		//取得表单关联的所有字段信息的数据(主表)
		String[][] fieldArr = cst.getPageField(pageId);
		String forHideField = "";	// 可写字段
		if(fieldArr != null){
			//遍历所有字段，获得字段的页面显示脚本
			for(int i=0; i<fieldArr.length; i++){
				if(fieldArr[i][0]!=null && (!fieldArr[i][0].trim().equals(""))){
					out.print(cst.getHTML(fieldArr[i][0],hide_Field,domainId,fieldArr[i][1],request,allCoumputFieldStr));
				}
			}
		}
		//获得表单关联的所有子表字段
		String[][] forFieldArr = cst.getForeignField(pageId);
		if(forFieldArr != null){
			String tempHideField = "," + hide_Field + ",";
			//遍历所有字段，获得字段的页面显示脚本
			for(int i=0; i<forFieldArr.length; i++){
				if(forFieldArr[i][2]!=null && (!forFieldArr[i][2].trim().equals(""))){
					out.print(cst.getHTML(forFieldArr[i][2], hide_Field, domainId, forFieldArr[i][3], request, allCoumputFieldStr));
				}
				if(tempHideField.indexOf("," + forFieldArr[i][3] + ",") < 0){	// 不可写字段中不包含当前字段
					// 字段名称追加到可写字段
					forHideField += "," + forFieldArr[i][2] + ",";
				}
			}
		}
         
		//start
		//获得表单关联的所有子表数组
		String[] tables = cst.getForeignTable(pageId);
		if (tables != null && tables.length > 0) {
			//遍历所有子表
			for (int i=0; i<tables.length; i++) {
				if (tables[i] == null || tables[i].trim().length() < 1){
					continue;
				}
				
				String[][] forFields = cst.getForeignFieldList(pageId,tables[i],domainId);
				if(forFields!=null && forFields.length>0){
					boolean hideTable = true;	// 子表是否有可写字段
					for(int k=0; k<forFields.length; k++){
						// 遍历所有字段，可写字段中包含当前字段
						if(forHideField.indexOf(forFields[k][5]) > -1){	// 子表可增删行
							// 如果该子表中有可编辑字段，则该表可编辑
							hideTable = false;
						}
					}
					//生成子表是否可编辑的HTML元素，用于数据更新、增加删除行的控制
					if(hideTable){
						hideTableHTML += "<input type=hidden name=hideTable id=hideTable value=" + tables[i] + ">";
					} else{
						showTableHTML += "<input type=hidden name=showTable id=showTable value=" + tables[i] + ">";
					}
				}
				
				if(i == 0){	// 将第一个子表设置为增加行、删除行图标所在的焦点
					scriptappend = "currentRow = document.getElementsByName('" + tables[i] + "TR')[document.getElementsByName('" + tables[i] + "TR').length-1];setAbsolute(currentRow);";
				}
				String agent = request.getHeader("USER-AGENT");   
				if (null != agent && -1 != agent.indexOf("MSIE")) { //判断浏览器
					if(-1 != agent.indexOf("MSIE 10")){
						out.print("document.getElementById('" + tables[i] + "DIV').childNodes[1].onclick=setDelRowsValue;");
					} else{
						out.print("document.getElementById('" + tables[i] + "DIV').childNodes[0].onclick=setDelRowsValue;");//给子表的div加单击事件，把要删除的行记录到临时变量里以备删除
					}
				} else{
					out.print("document.getElementById('" + tables[i] + "DIV').childNodes[1].onclick=setDelRowsValue;");
				}

				//设置统计字段
				String[][] tlFlds = cst.getTotalFieldByTableName(pageId, tables[i], domainId);
				if(tlFlds !=null && tlFlds.length>0){
					String tlfld = "";
					String duiying = "";
					int show = 0;
			
					for(int p=0; p<tlFlds.length; p++){
						String totalValue = tlFlds[p][3];
						if(totalValue.startsWith("1;")){
							show = 1;
							break;
						}
					}
					out.print("addTotalRow('" + tables[i] + "'," + show + ");");
					for(int p=0; p<tlFlds.length; p++){
						tlfld += tlFlds[p][0] + ",";
						String totalValue = tlFlds[p][3];
						if(totalValue.endsWith(";yes")){
							duiying += tlFlds[p][0] + ":";
							String[] toValue = totalValue.split(";");
							for(int to=1; to<toValue.length-1; to++){
								String[] tValue = toValue[to].split("@");
								duiying += tValue[0] + ",";
							}
							while(duiying.endsWith(",")){
								duiying = duiying.substring(0, duiying.length() - 1);
							}
							duiying += ";";
						}
						if(totalValue.startsWith("1;")){
							out.print("document.getElementById('" + tables[i] + "TOTALTD').innerHTML+='<span>" + tlFlds[p][1] + ":<label id=" + tlFlds[p][0] + "totallabel></label></span>';");
						} else{
							out.print("document.getElementById('" + tables[i] + "TOTALTD').innerHTML+='<span style=display:none;>" + tlFlds[p][1] + ":<label id=" + tlFlds[p][0] + "totallabel></label></span>';");
						}
					}
					out.print("document.getElementById('" + tables[i] + "TOTALTD').innerHTML+='<input type=hidden name=totalField id=totalField value=" + tlfld + ">';");
					out.print("document.getElementById('totalValueSet').value+='" + duiying + "';");
					out.print("setTotalValue();");
					while(duiying.endsWith(";")){
						duiying = duiying.substring(0, duiying.length()-1);
					}
				}
			}
		}
	} else{
		//子流程表单与主流程表单用的是同一张数据表，取主流程中的数据填充表单

		pageId = pareFormId;

		//当前表单为编辑表单（表单已有对应的数据）
		//System.out.println("新增子流程的继承主流程数据.........................................................");
		String forHideField = "";//字表不可编辑字段

		if("1".equals(request.getParameter("flag"))){
			hide_Field = "ALL";
		}
		//所有字段不可编辑，该种情况表示在自定义模块中点击链接查看信息
		String[][] fieldArr = cst.getPageField(pageId);//读取表单那关联的所有主表字段信息
		if(fieldArr != null){
			for(int i=0; i<fieldArr.length; i++){
				//遍历所有主表字段
				//System.out.println(fieldArr[i][0]+"   :"+fieldArr[i][1]);
				if(fieldArr[i][0]!=null && (!fieldArr[i][0].trim().equals(""))){
					//获得主表字段的显示脚本
					out.print(cst.getEditHTML(fieldArr[i][0], request.getParameter("pareRecordId"), pageId, hide_Field, domainId, fieldArr[i][1], parent_fromDraft, allCoumputFieldStr, request));
				}
			}
		}

		//start
		//获得表单那关联的所有子表
		String[] tables = cst.getForeignTable(pageId);
		//System.out.println("talbe:"+tables.length);
		if (tables != null && tables.length > 0) {
			for (int i = 0; i < tables.length; i++) {
				//遍历所有子表
				if (tables[i] == null || tables[i].trim().length() < 1)continue;
					//提取字表关联的所有字段
					String[][] forFields = cst.getForeignFieldList(pageId,tables[i],domainId);
					//System.out.println("forFields:"+forFields.length);
					//拼装SQL
					String sql = "";	//查询子表关联到表单中的所有字段值的SQL语句
					if(forFields!=null && forFields.length>0){
						boolean hideTable = true;	//子表是否有可写字段
						for(int k=0; k<forFields.length; k++){
							//遍历所有字段
							sql += forFields[k][5] + ",";	//将字段添加到数据查询的SQL中
							if(forHideField.indexOf(forFields[k][5]) < 0){
								//如果该子表中有可编辑字段，则该表可编辑
								hideTable = false;
							}
						}
				
						//生成子表是否可编辑的HTML元素，用于数据更新、增加删除行的控制
						if(hideTable){
							hideTableHTML += "<input type=hidden name=hideTable id=hideTable value="+tables[i]+">";
						} else{
							showTableHTML += "<input type=hidden name=showTable id=showTable value="+tables[i]+">";
						}
						sql = sql.substring(0,sql.length()-1);
					}
					//System.out.println("sql:"+sql);
					//提取子表数据
					String[][] data = null;
					if(sql.length() > 1){
						sql = "select " + sql + "," + tables[i] +"_id from " + tables[i] +" where " + tables[i]+"_FOREIGNKEY="+request.getParameter("pareRecordId")+ " order by "+ tables[i] +"_id";
						data = cst.loadDataBySQL(sql,String.valueOf(forFields.length+1));
					} else{
						continue;
					}
					//设置页面子表行数
					if(data!=null && data.length>0){
						for(int n=0; n<data.length-1; n++){	//遍历所有数据，解析数据行，根据记录数量增加行
							String script = "currentRow = document.getElementsByName('"+tables[i]+"TR')[document.getElementsByName('"+tables[i]+"TR').length-1];addRow();";
							out.print(script);
						}
						for(int n=0; n<data.length; n++){	//遍历数据，解析数据在表单上的展示
							//解析数据
							for(int m=0; m<forFields.length; m++){	//遍历字段，生成该字段及其值展示在表单上的脚本
								out.print(cst.getForeignEditHTML(request,forFields[m][5],data[n][m],forFields,"",m,String.valueOf(n),forFields[m][0],parent_fromDraft,tables[i],request.getParameter("pareRecordId"),data[n][forFields.length],forFields[m][10],allCoumputFieldStr));
							}
							String script = "document.getElementsByName('"+forFields[0][0]+"-"+forFields[0][5]+"')["+String.valueOf(n)+"].innerHTML+='<input type=hidden id="+tables[i]+"id name="+tables[i]+"id value="+data[n][forFields.length]+">';";
							out.print(script);
						}
					} else{//该子表没有数据，隐藏模板中初始化的第一个数据行
						for(int m=0; m<forFields.length; m++){
							out.print(cst.getForeignEditHTML(request,forFields[m][5],"",forFields,(("0".equals(request.getParameter("workStatus"))||"-1".equals(request.getParameter("workStatus"))||"-2".equals(request.getParameter("workStatus")))?hide_Field+forHideField:"ALL"),m,"0",forFields[m][0],parent_fromDraft,tables[i],request.getParameter("pareRecordId"),"-100",forFields[m][10],allCoumputFieldStr));
						}
						out.print("document.getElementsByName('"+tables[i]+"TR')[0].style.display='none';");
					}
					String agent = request.getHeader("USER-AGENT");   
					if (null != agent && -1 != agent.indexOf("MSIE")) { //判断浏览器
						if(-1 != agent.indexOf("MSIE 10")){
							out.print("document.getElementById('"+tables[i]+"DIV').childNodes[1].onclick=setDelRowsValue;");
						} else{
							out.print("document.getElementById('"+tables[i]+"DIV').childNodes[0].onclick=setDelRowsValue;");//给子表的div加单击事件，把要删除的行记录到临时变量里以备删除
						}
					} else{
						out.print("document.getElementById('"+tables[i]+"DIV').childNodes[1].onclick=setDelRowsValue;");
					}
					//设置统计字段
					String[][] tlFlds = cst.getTotalFieldByTableName(pageId,tables[i],domainId);             
				
					if(tlFlds !=null && tlFlds.length>0){
						//增加统计字段显示行
						/*
						out.print("addTotalRow('"+tables[i]+"');");
						String tlfld = "";
						for(int p=0; p<tlFlds.length; p++){//遍历统计字段，设置对应的统计字段表单元素
							tlfld +=  tlFlds[p][0]+",";
							String totalValue = tlFlds[p][3];
							if(totalValue.startsWith("1;")){
								out.print("document.getElementById('"+tables[i]+"TOTALTD').innerHTML+='<span>"+tlFlds[p][1]+":<label id="+tlFlds[p][0]+"totallabel></label></span>';");
							} else{
								out.print("document.getElementById('"+tables[i]+"TOTALTD').innerHTML+='<span style=display:none;>"+tlFlds[p][1]+":<label id="+tlFlds[p][0]+"totallabel></label></span>';");
							}     
						}
						out.print("document.getElementById('"+tables[i]+"TOTALTD').innerHTML+='<input type=hidden name=totalField  id=totalField value="+tlfld+">';");
						out.print("setTotalValue();");
						*/
				
						String tlfld = "";
						String duiying = "";
						int show = 0;
				
						for(int p=0; p<tlFlds.length; p++){
							String totalValue = tlFlds[p][3];
							if(totalValue.startsWith("1;")){
								show = 1;
								break;
							}
						}
						out.print("addTotalRow('" + tables[i] + "'," + show + ");");
						
						for(int p=0; p<tlFlds.length; p++){
                          	  tlfld += tlFlds[p][0] + ",";
                          	  String totalValue = tlFlds[p][3];
                          	  if(totalValue.endsWith(";yes")){
                          	  		duiying+=tlFlds[p][0]+":";
                          	  		String[] toValue = totalValue.split(";");
                          	  		for(int to=1;to<toValue.length-1;to++){
                          	  			String[] tValue = toValue[to].split("@");
                          	  			duiying+=tValue[0]+",";
                          	  		}
                          	  		while(duiying.endsWith(",")){
                          	  			duiying = duiying.substring(0, duiying.length()-1);
                          	  		}
                          	  		duiying+=";";
                          	  }
                          	  if(totalValue.startsWith("1;")){
                          	  		out.print("document.getElementById('"+tables[i]+"TOTALTD').innerHTML+='<span>"+tlFlds[p][1]+":<label id="+tlFlds[p][0]+"totallabel></label></span>';");
                          	  }else{
                          	  		out.print("document.getElementById('"+tables[i]+"TOTALTD').innerHTML+='<span style=display:none;>"+tlFlds[p][1]+":<label id="+tlFlds[p][0]+"totallabel></label></span>';");
                          	  }
                          }
                          out.print("document.getElementById('"+tables[i]+"TOTALTD').innerHTML+='<input type=hidden name=totalField id=totalField value="+tlfld+">';");
                          out.print("document.getElementById('totalValueSet').value+='"+duiying+"';");
                          out.print("setTotalValue();");
                          while(duiying.endsWith(";")){
                          	  duiying = duiying.substring(0, duiying.length()-1);
                          }
              }
			}
		}//end
	}
} else{
	//当前表单为编辑表单（表单已有对应的数据）
	String forHideField = "";//字表不可编辑字段
	//所有字段不可编辑，该种情况表示在自定义模块中点击链接查看信息
	String[][] fieldArr = cst.getPageField(pageId);//读取表单那关联的所有主表字段信息
	if(fieldArr!=null){
		for(int i=0;i<fieldArr.length;i++){
			//遍历所有主表字段
			if(fieldArr[i][0]!=null && (!fieldArr[i][0].trim().equals(""))){
				//获得主表字段的显示脚本
				out.print(cst.getEditHTML(fieldArr[i][0],request.getAttribute("infoId").toString(),pageId,hide_Field,domainId,fieldArr[i][1],parent_fromDraft,allCoumputFieldStr,request));
			}
		}
	}
   
	//start
	//获得表单那关联的所有子表
	String[] tables = cst.getForeignTable(pageId);
	if (tables != null && tables.length > 0) {
		for (int i = 0; i < tables.length; i++) {
			//遍历所有子表
			if (tables[i] == null || tables[i].trim().length() < 1)continue;
			//提取字表关联的所有字段
			String[][] forFields = cst.getForeignFieldList(pageId,tables[i],domainId);
			//拼装SQL
			String sql = "";//查询子表关联到表单中的所有字段值的SQL语句
			if(forFields!=null && forFields.length>0){
				boolean hideTable = true;//子表是否有可写字段
				for(int k=0; k<forFields.length; k++){
					//遍历所有字段
					sql += forFields[k][5]+",";//将字段添加到数据查询的SQL中
					if(forHideField.indexOf(forFields[k][5])<0){
						//如果该子表中有可编辑字段，则该表可编辑
						hideTable = false;
					}
				}
				//生成子表是否可编辑的HTML元素，用于数据更新、增加删除行的控制
				
				if(hideTable){
					hideTableHTML += "<input type=hidden name=hideTable id=hideTable value="+tables[i]+">";
				} else{
					showTableHTML += "<input type=hidden name=showTable id=showTable value="+tables[i]+">";
				}
				sql = sql.substring(0,sql.length()-1);
			}
              
			//提取子表数据
			String foreignHideField=hide_Field+forHideField;
		
			String[][] data = null;
			if(sql.length() > 1){
				sql = "select " + sql + "," + tables[i] +"_id from " + tables[i] +" where " + tables[i]+"_FOREIGNKEY="+request.getAttribute("infoId").toString()+ " order by "+ tables[i] +"_id";
				data = cst.loadDataBySQL(sql,String.valueOf(forFields.length + 1));
			} else{
				continue;
			}
			
			//设置页面子表行数
			if(data!=null && data.length>0){
				for(int n=0; n<data.length-1; n++){//遍历所有数据，解析数据行，根据记录数量增加行
					String script = "currentRow = document.getElementById('"+tables[i]+"TR');addRow();";
					out.print(script);
				}
				for(int n=0; n<data.length; n++){//遍历数据，解析数据在表单上的展示
					//解析数据
					for(int m=0; m<forFields.length; m++){//遍历字段，生成该字段及其值展示在表单上的脚本
						//System.out.println("----------------------:"+data[n][m]);
						String valueString = "";
						if(data[n][m]!=null && data[n][m].toString().startsWith(".")){
							valueString = "0" + data[n][m];
						} else if(!"105".equals(forFields[m][1])){
							valueString = data[n][m];
						}else{
							valueString = data[n][m];
						}
						out.print(cst.getForeignEditHTML(request,forFields[m][5],valueString,forFields,foreignHideField,m,String.valueOf(n),forFields[m][0],parent_fromDraft,tables[i],request.getAttribute("infoId").toString(),data[n][forFields.length],forFields[m][10],allCoumputFieldStr));
					}
					String script = "document.getElementsByName('"+forFields[0][0]+"-"+forFields[0][5]+"')["+String.valueOf(n)+"].innerHTML+='<input type=hidden id="+tables[i]+"id name="+tables[i]+"id value="+data[n][forFields.length]+">';";
					out.print(script);
				}
			} else{//该子表没有数据，隐藏模板中初始化的第一个数据行
				for(int m=0; m<forFields.length; m++){
					out.print(cst.getForeignEditHTML(request,forFields[m][5],"",forFields,foreignHideField,m,"0",forFields[m][0],parent_fromDraft,tables[i],request.getAttribute("infoId").toString(),"-100",forFields[m][10],allCoumputFieldStr));
				}
				//	吴凯20130205修改为不隐藏
				//out.print("document.getElementsByName('"+tables[i]+"TR')[0].style.display='none';");
			}
			
			String agent = request.getHeader("USER-AGENT");   
			if (null!=agent && -1!=agent.indexOf("MSIE")) { //判断浏览器
				if(-1 != agent.indexOf("MSIE 10")){
					out.print("document.getElementById('" + tables[i] + "DIV').childNodes[1].onclick=setDelRowsValue;");
				} else{
					out.print("document.getElementById('" + tables[i] + "DIV').childNodes[0].onclick=setDelRowsValue;");//给子表的div加单击事件，把要删除的行记录到临时变量里以备删除
				}
			} else{
				out.print("document.getElementById('" + tables[i] + "DIV').childNodes[1].onclick=setDelRowsValue;");
			}
			//设置统计字段
			String[][] tlFlds = cst.getTotalFieldByTableName(pageId, tables[i], domainId);
			if(tlFlds!=null && tlFlds.length>0){
				//增加统计字段显示行
				/*
				out.print("addTotalRow('"+tables[i]+"');");
				String tlfld = "";
				for(int p=0;p<tlFlds.length;p++){//遍历统计字段，设置对应的统计字段表单元素
					tlfld +=  tlFlds[p][0]+",";
					String totalValue = tlFlds[p][3];
					if(totalValue.startsWith("1;")){
						out.print("document.getElementById('"+tables[i]+"TOTALTD').innerHTML+='<span>"+tlFlds[p][1]+":<label id="+tlFlds[p][0]+"totallabel></label></span>';");
					} else{
						out.print("document.getElementById('"+tables[i]+"TOTALTD').innerHTML+='<span style=display:none;>"+tlFlds[p][1]+":<label id="+tlFlds[p][0]+"totallabel></label></span>';");
					}  
				}
				out.print("document.getElementById('"+tables[i]+"TOTALTD').innerHTML+='<input type=hidden name=totalField id=totalField value="+tlfld+">';");
				out.print("setTotalValue();");
				*/
		
				String tlfld = "";
				String duiying = "";
				int show = 0;
		
				for(int p=0; p<tlFlds.length; p++){
					String totalValue = tlFlds[p][3];
					if(totalValue.startsWith("1;")){
						show = 1;
						break;
					}
				}
				out.print("addTotalRow('" + tables[i] + "'," + show + ");");
				for(int p=0; p<tlFlds.length; p++){
					tlfld +=  tlFlds[p][0]+",";
					String totalValue = tlFlds[p][3];
					if(totalValue.endsWith(";yes")){
						duiying += tlFlds[p][0] + ":";
						String[] toValue = totalValue.split(";");
						for(int to=1; to<toValue.length-1; to++){
							String[] tValue = toValue[to].split("@");
							duiying += tValue[0] + ",";
						}
						while(duiying.endsWith(",")){
							duiying = duiying.substring(0, duiying.length()-1);
						}
						duiying += ";";
					}
					if(totalValue.startsWith("1;")){
						out.print("document.getElementById('"+tables[i]+"TOTALTD').innerHTML+='<span>"+tlFlds[p][1]+":<label id="+tlFlds[p][0]+"totallabel></label></span>';");
					} else{
						out.print("document.getElementById('"+tables[i]+"TOTALTD').innerHTML+='<span style=display:none;>"+tlFlds[p][1]+":<label id="+tlFlds[p][0]+"totallabel></label></span>';");
					}
				}
				out.print("document.getElementById('"+tables[i]+"TOTALTD').innerHTML+='<input type=hidden name=totalField id=totalField value="+tlfld+">';");
				out.print("document.getElementById('totalValueSet').value+='"+duiying+"';");
				out.print("setTotalValue();");
				while(duiying.endsWith(";")){
					duiying = duiying.substring(0, duiying.length()-1);
				}
			}
		}
	}//end
}

      out.write("\r\n\r\n\r\n</script>\r\n");

//子表的计算字段设置
out.print(cst.getForeignComputeFieldHTML(pageId));
out.print(hideTableHTML+showTableHTML);  

      out.write("\r\n<script language=javascript src=\"/jsoa/eform/datetime/time.js\"></script>\r\n<script language=\"javascript\">\r\nif(document.all.wf_ua){\r\n\tif(document.all.wf_ua.length){\r\n\t\t\r\n\t} else{\r\n\t\teval(\"document.all.\" + document.all.wf_ua.value + \".value='");
      out.print(session.getAttribute("userAccount"));
      out.write("'\");\r\n\t}\r\n}\r\n</script>\r\n\r\n<div id=\"adddelrow_div\" style=\"border: #0a246a 1px solid; visibility: hidden; z-index:1000; width: 30px; position: absolute\">\r\n\t<table height=\"100%\" cellSpacing=0 cellPadding=0 width=\"100%\" border=0>\r\n\t\t<tr>\r\n\t\t\t<td onmouseover=\"this.style.borderRight='1px #0A246A solid'\" onmouseout=\"this.style.borderRight=''\" align=\"middle\">\r\n\t\t\t\t<img title=\"点击删除记录\" style=\"cursor: pointer;width:12;height:12\" src=\"/jsoa/eform/images/delarrow.gif\" onclick=\"delRow()\" align=\"absMiddle\">\r\n\t\t\t</td>\r\n\t\t\t<td onmouseover=\"this.style.borderLeft='1px #0A246A solid'\" onmouseout=\"this.style.borderLeft=''\" align=\"middle\">\r\n\t\t\t\t<img title=\"点击添加记录\" style=\"cursor: pointer;width:12;height:12\" src=\"/jsoa/eform/images/addarrow.gif\" onclick=\"addRow();tempComboBoxCreateFun();\" align=\"absMiddle\">\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</table>\r\n</div>\r\n");

String projectType = session.getServletContext().getInitParameter("projectType");
if(projectType!=null&&"tjgzw".equals(projectType)){//是天津国资委项目 增加 物品管理子表 联想查询 div


      out.write("\t\r\n<!-- 国资委 物品管理 联想查询 -->\r\n<div  id=\"b\" style=\"display:none;border:1px solid #000000;overflow:auto;background-color: #d9ffff\">\r\n\t<table id=\"atable\">\r\n\r\n\t</table>\r\n </div>\r\n ");

}
 
      out.write("\r\n<script language=\"JavaScript\">\r\n//document.body.attachEvent(\"onload\",function(){});\r\n//alert(document.body.readyState);\r\nsetNoWrap();\r\ninitRow();\r\n");

if(projectType!=null&&"tjgzw".equals(projectType)){//是天津国资委项目 增加 物品管理子表 联想查询 只适用与物品检索 且物品单位在可见列的第三列


      out.write("\t\r\nfunction showc1(node){\r\n\t //$(node) 将dom对象转为jquery对象\r\n\t $(\"#b\").width($(node).width()+4);\r\n    $(\"#b\").height($(node).height()*10);\r\n\t $(\"#b\").css(\"position\",\"absolute\"); \r\n\t $(\"#b\").css(\"top\",$(node).offset().top+$(node).height()+6);//设置div的位置在input的下面\r\n\t $(\"#b\").css(\"left\",$(node).offset().left);//设置div的位置在input的左面\r\n\t var table = $(\"#atable\");\r\n\t table.html(\"\");\r\n\t //联想查询并返回json\r\n\t $.ajax({\r\n\t        url: \"/jsoa/TjgzwAction.do?type=goodsquery\",\r\n\t        type: \"POST\",\r\n\t        dataType:\"json\",\r\n\t        async:false,\r\n\t        data:{\"query_str\":encodeURI($(node).val(),'UTF8'),\"type\":\"goodsquery\"},\r\n\t        success: function(data) {\r\n\t             var rs = data.rs;\r\n\t             //构建联想查询 选择项\r\n\t        \t for(var i=0;i<rs.length;i++){\r\n\t\t        \t var temp = rs[i];\r\n\t        \t\t var tr = $(\"<tr></tr>\");//创建一个td的对象\r\n\t\t\t       \t var td = $(\"<td></td>\");//创建一个td的对象\r\n\t\t\t       \t tr.width($(node).width());//设置tr宽度等于input的宽度\r\n\t\t\t       \t tr.height($(node).height()+5);//设置tr高度等于input的高度\r\n\t\t\t       \t table.width($(node).width());//设置table宽度等于input的宽度\t \r\n");
      out.write("\t\t\t       \t td.bind(\"mouseover\",function(){//绑定mouseover事件 触发时将td背景色变为blue\r\n\t\t\t       \t\t$(this).css(\"background\",\"#89cff0\");//$(this)指的是当前td\r\n\t\t\t       \t });\r\n\t\t\t       \t td.bind(\"mouseout\",function(){//绑定mouseout事件 触发时将td背景色变为white\r\n\t\t\t       \t\t$(this).css(\"background\",\"d9ffff\"); \r\n\t\t\t       \t });\r\n\t\t\t       \t td.bind(\"click\",function(){////绑定click事件 完成相应的操作\r\n\t\t\t       \t\t$(node).val($(this).html());\r\n\t\t\t       \t\t//计算当前node的序号\r\n\t\t\t       \t\tvar index_cur=$(\":input[name ='\"+$(node).attr(\"name\")+\"']\").index($(node));\r\n\t\t\t       \t\tvar id_name = $(node).attr(\"name\").substring(0,$(node).attr(\"name\").lastIndexOf(\"_\"));//当前行 第一列元素name\r\n\t\t\t       \t\tvar d_name_temp1 = id_name.substring(id_name.lastIndexOf(\"f\")+1);//当前行 第三列元素name temp\r\n\t\t\t       \t\tvar d_name_temp2 = parseInt(d_name_temp1)+parseInt(2);\r\n\t\t\t       \t\tvar d_name_temp = id_name.substring(0,id_name.lastIndexOf(\"f\")+1)+d_name_temp2;\r\n\t\t\t       \t\tvar td_id = $(this).attr(\"id\");\r\n\t\t\t       \t\tvar td_ids = td_id.split(\"&\");\r\n\t\t\t       \t\t$(\":input[name ='\"+id_name+\"']\").eq(index_cur).val($(this).html());//设置当前行的id\r\n");
      out.write("\t\t\t       \t\t$(\":input[name ='\"+d_name_temp+\"']\").eq(index_cur).val(td_ids[1]);\r\n\t\t\r\n\t\t\t       \t\t$(\"#b\").hide();\r\n\t\t\t       \t });          \r\n\t\t\t           td.html(temp.goods_name);\r\n\t\t\t           td.attr(\"id\",temp.id+\"&\"+temp.goods_unit);//td的id为：\"物品id&单位\"\r\n\t\t\t           tr.append(td);      \r\n\t\t\t           table.append(tr);\r\n\t        \t }\r\n\t           \r\n\t        },\r\n\t        error: function(result, status) { //如果没有上面的捕获出错会执行这里的回调函数\r\n\t            alert(\"访问异常，请关闭浏览器。\");\r\n\t        },\r\n\t        complete: function(XMLHttpRequest, textStatus) {\r\n\t            // var a = textStatus;\r\n\t        }\r\n\t    });\r\n\t \r\n    \r\n    $(\"#b\").show();\r\n    \r\n   \r\n\r\n}\r\n");

	}

      out.write("\r\n</script>\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
