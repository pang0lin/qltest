/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:08:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.iWebOfficeSign.Signature;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.*;
import java.text.*;
import java.util.*;
import java.sql.*;
import DBstep.iDBManager2000.*;
import com.js.system.manager.service.ManagerService;

public final class SignatureUserList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("DBstep.iDBManager2000");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.system.manager.service.ManagerService");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=gb2312");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n<html>\r\n<head>\r\n<title>用户签章管理</title>\r\n<link href=\"");
      out.print(request.getContextPath());
      out.write("/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n");

String haveRight=request.getParameter("haveRight")+"";
String domainId = session.getAttribute("domainId")==null?"0":session.getAttribute("domainId").toString();

String userId=session.getAttribute("userId")==null?"0":session.getAttribute("userId").toString();
String orgId=session.getAttribute("orgId")==null?"0":session.getAttribute("orgId").toString(); 



      out.write("\r\n\r\n<script language=\"javascript\">\r\n\r\n\r\nfunction resizeWin(w,h){\r\n  //window.resizeTo(w,h);\r\n  var t=0;\r\n  var l=0;\r\n  l=(screen.width-w)/2;\r\n  t=(screen.height-h)/2;\r\n  //window.moveTo(l,t);\r\n}\r\n\r\nfunction ConfirmDel(FileUrl){\r\n\tif (confirm('是否确定删除该印签！')){\r\n\t\tlocation.href=FileUrl;\r\n\t}\r\n}\r\nfunction init(){\r\n\r\nresizeWin(960,600);\r\n");
if("yes".equals(haveRight)){
      out.write('\r');
      out.write('\n');
}else{
      out.write("\r\n\twindow.opener='xxx';\r\n\twindow.close();\r\n");
}
      out.write("\r\n}\r\n\r\nfunction changePanle(obj,cURL){\r\n\tlocation.href=cURL;\r\n}\r\n</script>\r\n</head>\r\n<body class=\"MainFrameBox\" onload=\"init();\">\r\n<table width=\"100%\" height=\"25\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"inlineBottomLine\">\r\n  <tr>\r\n    <td>\r\n    \t <div id=\"PanleDIV\" class=\"tabPanel\" onClick=\"changePanle(this,'/jsoa/MyInfoAction.do?action=load');\">\r\n        <div class=\"tabPanelLeft\"></div>\r\n        <div class=\"tabPanelCenter\">个人信息</div>\r\n        <div class=\"tabPanelRight\"></div>      \r\n      </div>\r\n\t  \r\n\t    <div class=\"btnBQspace AlignLeft\"></div>\r\n\t    \r\n\t    <div id=\"PanleDIV\" class=\"tabPanel\" onClick=\"changePanle(this,'/jsoa/personal_work/setup/personalwork_passwordsetup.jsp');\">\r\n        <div class=\"tabPanelLeft\"></div>\r\n        <div class=\"tabPanelCenter\">密码设置</div>\r\n        <div class=\"tabPanelRight\"></div>      \r\n      </div>\r\n      \r\n      <div class=\"btnBQspace AlignLeft\"></div>\r\n\t    \r\n\t    <div id=\"PanleDIV\" class=\"tabPanel\" onClick=\"changePanle(this,'/jsoa/StatusSetupAction.do?flag=load');\">\r\n");
      out.write("        <div class=\"tabPanelLeft\"></div>\r\n        <div class=\"tabPanelCenter\">状态设置</div>\r\n        <div class=\"tabPanelRight\"></div>      \r\n      </div>\r\n      <div class=\"btnBQspace AlignLeft\"></div>\r\n\t    \r\n\t    <div id=\"PanleDIV\" class=\"tabPanel\" onClick=\"changePanle(this,'/jsoa/RemindSetAction.do?flag=load');\">\r\n        <div class=\"tabPanelLeft\"></div>\r\n        <div class=\"tabPanelCenter\">提醒设置</div>\r\n        <div class=\"tabPanelRight\"></div>      \r\n      </div>\r\n       <div class=\"btnBQspace AlignLeft\"></div>\r\n\t    \r\n\t    <div id=\"PanleDIV\" class=\"tabPanel\" onClick=\"changePanle(this,'/jsoa/NetEmpAction.do?flag=load');\">\r\n        <div class=\"tabPanelLeft\"></div>\r\n        <div class=\"tabPanelCenter\">关联人员</div>\r\n        <div class=\"tabPanelRight\"></div>      \r\n      </div>\r\n      <div class=\"btnBQspace AlignLeft\"></div>\r\n\t    \r\n\t    <div id=\"PanleDIV\" class=\"tabPanel\" onClick=\"changePanle(this,'/jsoa/AddressAction.do?action=list&myAddressClass=none');\">\r\n        <div class=\"tabPanelLeft\"></div>\r\n        <div class=\"tabPanelCenter\">关联系统</div>\r\n");
      out.write("        <div class=\"tabPanelRight\"></div>      \r\n      </div>\r\n      \r\n      <div class=\"btnBQspace AlignLeft\"></div>\r\n\t    \r\n\t    <div id=\"PanleDIV\" class=\"tabPanel\" onClick=\"changePanle(this,'/jsoa/OfficalDictionAction.do?action=list');\">\r\n        <div class=\"tabPanelLeft\"></div>\r\n        <div class=\"tabPanelCenter\">常用语</div>\r\n        <div class=\"tabPanelRight\"></div>      \r\n      </div>\r\n      \r\n      <div class=\"btnBQspace AlignLeft\"></div>\r\n\t    <div id=\"PanleDIV\" class=\"tabPanel\" onClick=\"changePanle(this,'/jsoa/WorkProxyAction.do?action=list');\">\r\n        <div class=\"tabPanelLeft\"></div>\r\n        <div class=\"tabPanelCenter\">工作代理</div>\r\n        <div class=\"tabPanelRight\"></div>      \r\n      </div>\r\n      <div class=\"btnBQspace AlignLeft\"></div>\r\n\t    <div id=\"PanleDIV\" class=\"tabPanel\" onClick=\"changePanle(this,'/jsoa/GroupAction.do?action=privateGroup&groupType=1');\">\r\n        <div class=\"tabPanelLeft\"></div>\r\n        <div class=\"tabPanelCenter\">个人组</div>\r\n        <div class=\"tabPanelRight\"></div>      \r\n");
      out.write("      </div>\r\n      <div class=\"btnBQspace AlignLeft\"></div>\r\n\t    <div id=\"PanleDIV\" class=\"tabPanel\" onClick=\"changePanle(this,'/jsoa/ShortCutAction.do?action=load');\">\r\n        <div class=\"tabPanelLeft\"></div>\r\n        <div class=\"tabPanelCenter\">面板设置</div>\r\n        <div class=\"tabPanelRight\"></div>      \r\n      </div>\r\n      ");

      if(com.js.util.config.SystemCommon.getUserDefineSignaturePassword()==1){
    	  
      out.write("\r\n     <div class=\"btnBQspace AlignLeft\"></div>\r\n\t    <div id=\"PanleDIV\" class=\"tabPanelSelected\" onClick=\"changePanle(this,'/jsoa/iWebOfficeSign/Signature/SignatureUserList.jsp');\">\r\n        <div class=\"tabPanelLeft\"></div>\r\n        <div class=\"tabPanelCenter\">签章管理</div>\r\n        <div class=\"tabPanelRight\"></div>      \r\n      </div>    \t \r\n    \t  ");

      }
      
      out.write("\r\n\t</td>\r\n\t\t<td align=\"right\" nowrap>\r\n\t\t&nbsp;\r\n\t\t</td>\r\n  </tr>\r\n</table>\r\n\r\n\r\n<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"listTable\"> \r\n\t<tr>\r\n\t\t\r\n\t\t<td nowrap class=\"listTableHead\">签章名称</td>\r\n\t\t<td nowrap class=\"listTableHead\">签章类型</td>\r\n\t\t<td nowrap class=\"listTableHead\">使用范围</td>\r\n\t\t<td nowrap class=\"listTableHeadLast\" width=\"15%\">处理</td>\r\n\t</tr>\r\n\t");

          DBstep.iDBManager2000 DbaObj=new DBstep.iDBManager2000();
           if (DbaObj.OpenConnection())
           {
             try
             {
               /*ResultSet result=DbaObj.ExecuteQuery("select SignatureID,UserName,MarkName,MarkType from Signature where DOMAIN_ID=" + domainId + " and ( ( useuserid is null and useorgid is null ) or  useuserid like'$"+userId+"$'"+ " or useorgid like '*"+orgId+"*' ) order by SignatureID desc") ;*/
			   ResultSet result=DbaObj.ExecuteQuery("select SignatureID,UserName,MarkName,MarkType,useName from Signature where domain_id="+session.getAttribute("domainId")+" and belongUserId="+userId+" order by SignatureID desc") ;
               while ( result.next() )
               {
                String mSignatureID=result.getString("SignatureID");
        
      out.write("\r\n\t<tr>\r\n\t\t<td class=\"listTableLine2\">");
      out.print(result.getString("MarkName"));
      out.write("&nbsp;</td>\r\n\t\t<td class=\"listTableLine2\">");
      out.print(result.getString("MarkType"));
      out.write("&nbsp;</td>\r\n\t\t<td class=\"listTableLine2\">");
      out.print(result.getString("useName"));
      out.write("&nbsp;</td>\r\n\t\t<td class=\"listTableLine2\" align=\"center\" nowrap>\r\n\t\t\t<input type=button onclick=\"javascript:editPassword('");
      out.print(mSignatureID);
      out.write("');\" name=\"Edit\" value=\" 修改 \">\r\n\t\t</td>\r\n\t</tr>\r\n\t");

              }
          result.close() ;
             }
             catch(Exception e)
             {
               System.out.println(e.toString());
             }
             DbaObj.CloseConnection() ;
           }
           else
           {
             out.println("OpenDatabase Error") ;
           }

        
      out.write("\r\n</table>\r\n</body>\r\n</html>\r\n<script src=\"/jsoa/js/util.js\"></script>\r\n<script>\r\nfunction changePanle(obj,cURL){\r\n\tlocation.href=((window.location.href).substring(0,(window.location.href).indexOf(\"/jsoa\")))+cURL;\r\n}\r\nfunction editPassword(signatureId){\r\n\tJSMainWinOpenNew('/jsoa/iWebOfficeSign/Signature/editPassword.jsp?signatureId='+signatureId,\"\",\"\");\r\n}\r\n</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
