/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:03:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.eform;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import jxl.Workbook;
import jxl.format.Alignment;
import jxl.format.Border;
import jxl.format.BorderLineStyle;
import jxl.format.Colour;
import jxl.format.UnderlineStyle;
import jxl.format.VerticalAlignment;
import jxl.write.Label;
import jxl.write.WritableCellFormat;
import jxl.write.WritableFont;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import java.util.*;

public final class newProductPageExport_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("jxl.format.Colour");
    _jspx_imports_classes.add("jxl.Workbook");
    _jspx_imports_classes.add("jxl.write.Label");
    _jspx_imports_classes.add("jxl.write.WritableSheet");
    _jspx_imports_classes.add("jxl.write.WritableWorkbook");
    _jspx_imports_classes.add("jxl.format.UnderlineStyle");
    _jspx_imports_classes.add("jxl.write.WritableCellFormat");
    _jspx_imports_classes.add("jxl.format.Alignment");
    _jspx_imports_classes.add("jxl.format.BorderLineStyle");
    _jspx_imports_classes.add("jxl.format.VerticalAlignment");
    _jspx_imports_classes.add("jxl.format.Border");
    _jspx_imports_classes.add("jxl.write.WritableFont");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("application/vnd.ms-excel;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);
try{
	String title = "新品原材料导出";
	String[] headTitle ={"图号","货品中文名称","类别","主单位","副单位","换算关系","托外否","年使用量","压缩机",
	                      "寄售标志","资材员","采购批量","采购期","HS编码","预设仓库","保管员","安全库存","最大库存",
	                      "发料类型","计划价格","最小包装单位","最小包装数量","主供应商","检查成绩书号","样品评价报告编码",
	                      "是否加急","希望完成时间","技术担当","厂家","送样时间","检验完成时间","样品合格否","检验员",
	                      "检验期","成本办担当","品证担当","提报人","提报时间","状态","办理人"};
	
	
 	java.util.HashMap<String,String> parmMap=new java.util.HashMap<String,String>();
 	String tuhao=request.getParameter("tuhao");
 	String lczt=request.getParameter("lczt");
 	String jccjs=request.getParameter("jccjs");
 	String tbr=request.getParameter("tbr");
 	String tbsjs=request.getParameter("tbsjs");
 	String tbsje=request.getParameter("tbsje");
 	if(tuhao==null||"".equals(tuhao)){
 		parmMap.put("tuhao","");
 	}else{
 		parmMap.put("tuhao", java.net.URLDecoder.decode(tuhao, "UTF-8"));
 	}
 	if(lczt==null){
 		parmMap.put("lczt","");
 	}else{
 		parmMap.put("lczt",lczt);
 	}
 	if(jccjs==null){
 		parmMap.put("jccjs","");
 	}else{
 		parmMap.put("jccjs",jccjs);
 	}
 	if(tbr==null||"".equals(tbr)){
 		parmMap.put("tbr","");
 	}else{
 		parmMap.put("tbr", java.net.URLDecoder.decode(tbr, "UTF-8"));
 	}
 	if(tbsjs==null){
 		parmMap.put("tbsjs","");
 	}else{
 		parmMap.put("tbsjs",tbsjs);
 	}
 	if(tbsje==null){
 		parmMap.put("tbsje","");
 	}else{
 		parmMap.put("tbsje",tbsje);
 	}
 	parmMap.put("export","1");
 	java.util.List<java.util.Map<String, String>> list = com.js.oa.eform.util.HaierSpecialModels.getNewProductInfo(parmMap);
 
	
	
	response.setCharacterEncoding("GBK");
    java.io.OutputStream os = response.getOutputStream();// 取得输出流   
    response.reset();// 清空输出流
    title = java.net.URLEncoder.encode(title,"UTF-8");
    response.setHeader("Content-disposition", "attachment; filename="+title+".xls");// 设定输出文件头   
    response.setContentType("application/msexcel");// 定义输出类型 
        
    //建立excel文件
    WritableWorkbook wwb = Workbook.createWorkbook(os); 
    
    //创建一个工作表   ，一个excel文件中可以创建多个工作表
    WritableSheet ws = wwb.createSheet("新品原材料", 10);

    //设置单元格的文字格式
    WritableFont wf = new WritableFont(WritableFont.TIMES,12,WritableFont.NO_BOLD,false,UnderlineStyle.NO_UNDERLINE,Colour.BLACK);
    
    //单元格样式
    WritableCellFormat wcf = new WritableCellFormat(wf);
    wcf.setVerticalAlignment(VerticalAlignment.CENTRE);//垂直对齐
    wcf.setAlignment(Alignment.LEFT); //水平对齐
    wcf.setBorder(Border.ALL,BorderLineStyle.NONE);//边框
    wcf.setWrap(false);//是否换行
    wcf.setLocked(true);
    
    WritableCellFormat fwcf = new WritableCellFormat(wf);
    fwcf.setVerticalAlignment(VerticalAlignment.CENTRE);//垂直对齐
    fwcf.setAlignment(Alignment.CENTRE); //水平对齐
    fwcf.setWrap(false);//是否换行
    
    WritableFont nwf = new WritableFont(WritableFont.TIMES,12,WritableFont.NO_BOLD,false,UnderlineStyle.NO_UNDERLINE,Colour.RED);
    WritableCellFormat nwcf = new WritableCellFormat(nwf);
    nwcf.setVerticalAlignment(VerticalAlignment.CENTRE);//垂直对齐
    nwcf.setAlignment(Alignment.CENTRE); //水平对齐
    nwcf.setBorder(Border.ALL,BorderLineStyle.NONE);//边框
    nwcf.setWrap(false);//是否换行
    
    //插入单元格值（列，行，值，单元格样式）
    for(int i=0;i<headTitle.length;i++){
    	ws.addCell(new Label(i, 0, headTitle[i], fwcf));
    }
    if(list!=null && list.size()>0){
    	for(int i=0;i<list.size();i++){
    		java.util.Map<String, String> map=list.get(i);
    		//图号
    		ws.addCell(new Label(0,i+1,map.get("tuhao"),wcf));
			//货品中文名称
			ws.addCell(new Label(1,i+1,map.get("hpzwmc"),wcf));
			//类别
			ws.addCell(new Label(2,i+1,map.get("lb"),wcf));
			//主单位
			ws.addCell(new Label(3,i+1,map.get("zdw"),wcf));
			//副单位
			ws.addCell(new Label(4,i+1,map.get("fdw"),wcf));
			//换算关系
			ws.addCell(new Label(5,i+1,map.get("hsgx"),wcf));
			//托外否
			ws.addCell(new Label(6,i+1,map.get("twf"),wcf));
			//年使用量
			ws.addCell(new Label(7,i+1,map.get("nsyl"),wcf));
			//压缩机
			ws.addCell(new Label(8,i+1,map.get("ysj"),wcf));
			//寄售标志
			ws.addCell(new Label(9,i+1,map.get("xp_jsbz"),wcf));
			//资材员
			ws.addCell(new Label(10,i+1,map.get("xp_zcy"),wcf));
			//采购批量
			ws.addCell(new Label(11,i+1,map.get("xp_cgpl"),wcf));
			//采购期
			ws.addCell(new Label(12,i+1,map.get("xp_cgq"),wcf));
			//HS编码	
			ws.addCell(new Label(13,i+1,map.get("xp_hs"),wcf));
			//预设仓库
			ws.addCell(new Label(14,i+1,map.get("xp_ysck"),wcf));
			//保管员
			ws.addCell(new Label(15,i+1,map.get("xp_bgy"),wcf));
			//安全库存
			ws.addCell(new Label(16,i+1,map.get("xp_aqkc"),wcf));
			//最大库存
			ws.addCell(new Label(17,i+1,map.get("xp_zdkc"),wcf));
			//发料类型
			ws.addCell(new Label(18,i+1,map.get("xp_fllx"),wcf));
			//计划价格
			ws.addCell(new Label(19,i+1,map.get("xp_jhjg"),wcf));
			//最小包装单位
			ws.addCell(new Label(20,i+1,map.get("xp_zxbzdw"),wcf));
			//最小包装数量
			ws.addCell(new Label(21,i+1,map.get("xp_zxbzsl"),wcf));
			//主供应商
			ws.addCell(new Label(22,i+1,map.get("xp_zgys"),wcf));
			//检查成绩书号	
			ws.addCell(new Label(23,i+1,map.get("xp_jccjsh"),wcf));
			//样品评价报告编码
			ws.addCell(new Label(24,i+1,map.get("xp_pjbgbh"),wcf));
			//是否加急	
			ws.addCell(new Label(25,i+1,map.get("sfjj"),wcf));
			//希望完成时间
			ws.addCell(new Label(26,i+1,map.get("xwwcsj"),wcf));
			//技术担当
			ws.addCell(new Label(27,i+1,map.get("jsdd"),wcf));
			//厂家
			ws.addCell(new Label(28,i+1,map.get("ylp_cj"),wcf));
			//送样时间
			ws.addCell(new Label(29,i+1,map.get("ylp_sysj"),wcf));
			//检验完成时间
			ws.addCell(new Label(30,i+1,map.get("ylp_jywcsj"),wcf));
			//样品合格否
			ws.addCell(new Label(31,i+1,map.get("xp_yphgf"),wcf));
			//检验员
			ws.addCell(new Label(32,i+1,map.get("xp_jyy"),wcf));
			//检验期
			ws.addCell(new Label(33,i+1,map.get("jyq"),wcf));
			//成本办担当
			ws.addCell(new Label(34,i+1,map.get("ylp_cbbdd"),wcf));
			//品证担当
			ws.addCell(new Label(35,i+1,map.get("ylp_pzdd"),wcf));
			//提报人
			ws.addCell(new Label(36,i+1,map.get("tbr"),wcf));
			//提报时间
			ws.addCell(new Label(37,i+1,map.get("tbsj"),wcf));
			//状态
			ws.addCell(new Label(38,i+1,map.get("zt"),wcf));
			//办理人
			ws.addCell(new Label(39,i+1,map.get("blr"),wcf));
        }
    }	
    
    wwb.write();
    wwb.close();	  
}catch(Exception ex){
	ex.printStackTrace();
}
      out.write("\r\n\r\n\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
