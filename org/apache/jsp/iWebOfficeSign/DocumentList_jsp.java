/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:08:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.iWebOfficeSign;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.text.DateFormat;
import java.util.Date;
import DBstep.iDBManager2000.*;

public final class DocumentList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


DBstep.iDBManager2000 DbaObj=new DBstep.iDBManager2000();
//列出所有模版
public String GetTemplateList(String ObjType, String FileType)
  {
    String mTemplateList,mstr="";
    mTemplateList = "<select name=" + ObjType + " >";
    mTemplateList = mTemplateList +  "<option value=''>--------不用模版--------</option>";
    String Sql = "select RecordID,Descript from Template_File where FileType='" + FileType + "'"; //打开数据库
    try {
      if (DbaObj.OpenConnection()) {
        try {
          ResultSet result = DbaObj.ExecuteQuery(Sql);
          mstr="selected";
          while (result.next()) {
            mTemplateList = mTemplateList + "<option value='" + result.getString("RecordID") + "'"+mstr+">" + result.getString("Descript") + "</option>";
          }
          result.close();
        }
        catch (SQLException sqlex) {
          System.out.println(sqlex.toString());
        }
      }
      else {
        System.out.println("GetTemplateList: OpenDatabase Error");
      }
    }
    finally {
      DbaObj.CloseConnection();
    }
    mTemplateList = mTemplateList + "</select>";
    return (mTemplateList);
  }
  /**
   * 功能或作用：格式化日期时间
   * @param DateValue 输入日期或时间
   * @param DateType 格式化 EEEE是星期, yyyy是年, MM是月, dd是日, HH是小时, mm是分钟,  ss是秒
   * @return 输出字符串
   */
  public String FormatDate(String DateValue,String DateType)
  {
    String Result;
    SimpleDateFormat formatter = new SimpleDateFormat(DateType);
    try{
      Date mDateTime = formatter.parse(DateValue);
      Result = formatter.format(mDateTime);
    }catch(Exception ex){
      Result = ex.getMessage();
    }
    if (Result.equalsIgnoreCase("1900-01-01")){
      Result = "";
    }
    return Result;
  }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("DBstep.iDBManager2000");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("java.text.DateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=gb2312");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n");
      out.write("\r\n<html>\r\n<head>\r\n<title>iWebOfficeSign实例</title>\r\n<link rel='stylesheet' type='text/css' href='test.css'>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=gb2312\">\r\n</head>\r\n<script language=\"javascript\">\r\n//window.close();\r\n</script>\r\n<body bgcolor=\"#ffffff\">\r\n<div align=\"center\"><font size=4 color=\"ff0000\">全文批注管理示例[iWebOfficeSign]</font></div>\r\n<hr size=1>\r\n<div class=\"IptStyle\">\r\n注：演示版能打开和保存网络上的文件，全文批注。正式版可实现更强大的功能，如要正式版，请与金格科技联系。<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;如要正确演示本示例，您必须:<br>\r\n1.安装Office2000系统和IE5.0以上版本，最好在Window 98以上的计算机上运行<br>\r\n2.安装iWebOfficeSign、iWebOffice2003插件，请您在打开本页面的弹出窗口时，选择[是]按钮,才能正常运行。<br>\r\n</div>\r\n<hr size=1>\r\n<OBJECT id=\"WebOffice\" width=\"100%\" height=\"24\" classid=\"clsid:23739A7E-5741-4D1C-88D5-D50B18F7C347\" codebase=\"iWebOffice2003.ocx#version=5,7,0,0\" >\r\n</OBJECT>\r\n<hr size=1>\r\n<br>\r\n<table border=0  cellspacing='0' cellpadding='0' width=100% align=center class=TBStyle>\r\n<tr>\r\n  <td colspan=6 class=\"TDTitleStyle\">\r\n     &nbsp;<input type=button name=\"BookMark\" value=\"标签管理\"  onclick=\"javascript:location.href='BookMark/BookMarkList.jsp'\">\r\n");
      out.write("     &nbsp;<input type=button name=\"Template\" value=\"模板管理\"  onclick=\"javascript:location.href='Template/TemplateList.jsp'\">\r\n     &nbsp;<input type=button name=\"Template\" value=\"签章管理\"  onclick=\"javascript:location.href='Signature/SignatureList.jsp'\">\r\n  </td>\r\n</tr>\r\n\r\n<tr>\r\n  <td colspan=2 class=\"TDTitleStyle\" nowrap>\r\n    请选择模版:");
      out.print(GetTemplateList("doc",".doc"));
      out.write("\r\n    <input type=button value=\"新建Word 文档\"  onclick=\"javascript:location.href='DocumentEdit.jsp?FileType=.doc&UserName='+username.value+'&Template='+doc.value;\">\r\n    <br>\r\n    请选择模版:");
      out.print(GetTemplateList("xls",".xls"));
      out.write("\r\n    <input type=button value=\"新建Excel文档\"  onclick=\"javascript:location.href='DocumentEdit.jsp?FileType=.xls&UserName='+username.value+'&Template='+xls.value;\">\r\n  </td>\r\n  <td colspan=4 class=\"TDTitleStyle\">由于不同用户保留痕迹将使用不同的颜色，所以在修改文档时请更改身份<input type=text name=username size=8 value=\"演示人\"></td>\r\n</tr>\r\n\r\n<tr>\r\n  <td nowrap align=center class=\"TDTitleStyle\" height=\"25\">编号</td>\r\n  <td nowrap align=center class=\"TDTitleStyle\">主题</td>\r\n  <td nowrap align=center class=\"TDTitleStyle\">作者</td>\r\n  <td nowrap align=center class=\"TDTitleStyle\">类型</td>\r\n  <td nowrap align=center class=\"TDTitleStyle\">日期</td>\r\n  <td nowrap align=center class=\"TDTitleStyle\">处理</td>\r\n</tr>\r\n");

    try {
      if (DbaObj.OpenConnection()) {
        try {
          ResultSet result = DbaObj.ExecuteQuery("select Status,RecordID,HtmlPath,DocumentID,Subject,Author,FileType,FileDate from Document where FileType='.doc' order by DocumentID desc");
          while (result.next()) {
            String RecordID = result.getString("RecordID");

      out.write("\r\n<tr>\r\n  <td class=\"TDStyle\">");
      out.print(result.getString("DocumentID"));
      out.write("&nbsp;</td>\r\n  <td class=\"TDStyle\">");
      out.print(result.getString("Subject"));
      out.write("&nbsp;</td>\r\n  <td class=\"TDStyle\">");
      out.print(result.getString("Author"));
      out.write("&nbsp;</td>\r\n  <td class=\"TDStyle\">");
      out.print(result.getString("FileType"));
      out.write("&nbsp;</td>\r\n  <td class=\"TDStyle\">");
      out.print(FormatDate(result.getString("FileDate"),"yyyy-MM-dd"));
      out.write("&nbsp;</td>\r\n  <td class=\"TDStyle\" nowrap>\r\n    <input type=\"button\" onclick=\"javascript:location.href='DocumentEdit.jsp?RecordID=");
      out.print(RecordID);
      out.write("&EditType=1&UserName='+username.value;\" value=\"修改[无痕迹]\">\r\n    <input type=\"button\" onclick=\"javascript:location.href='DocumentEdit.jsp?RecordID=");
      out.print(RecordID);
      out.write("&EditType=2&UserName='+username.value;\" value=\"修改[有痕迹]\">\r\n    <input type=\"button\" onclick=\"javascript:location.href='SignatureEdit.jsp?RecordID=");
      out.print(RecordID);
      out.write("&UserName='+username.value;\" value=\"领导签批\">\r\n    <input type=\"button\" onclick=\"javascript:location.href='DocumentCheck.jsp?RecordID=");
      out.print(RecordID);
      out.write("&EditType=3&UserName='+username.value;\" value=\"对照核稿\">\r\n  </td>\r\n</tr>\r\n");

          }
          result.close();
        }
        catch (SQLException sqlex) {
          System.out.println(sqlex.toString());
        }
      }
      else {
        out.println("OpenDatabase Error");
      }
    }
    finally {
      DbaObj.CloseConnection();
    }

      out.write("\r\n</table>\r\n</body>\r\n</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
