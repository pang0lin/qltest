/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:54:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.iSignatureHTML_jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.*;
import java.text.*;
import java.util.*;
import java.sql.*;
import DBstep.iDBManager2000.*;

public final class DocumentList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


  Integer mDocumentCount;
  DBstep.iDBManager2000 ObjConnBean = new DBstep.iDBManager2000();

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("DBstep.iDBManager2000");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=gb2312");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n");
      out.write('\r');
      out.write('\n');

    String mScriptName = "/DocumentList.jsp";
    String mServerName="/Service.jsp";
    String mHttpUrlName=request.getRequestURI();
    //String mServerUrl="http://"+request.getServerName()+":"+request.getServerPort()+mHttpUrlName.substring(0,mHttpUrlName.lastIndexOf(mScriptName))+mServerName;
	String mServerUrl = "http://127.0.0.1:7001/jsoa/iSignatureHTML.jsp.mssql/Service.jsp";

      out.write("\r\n<html>\r\n<head>\r\n<title>金格电子签章系统iSignature HTML V6</title>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=gb2312\">\r\n<meta HTTP-EQUIV=\"Pragma\" CONTENT=\"no-cache\">\r\n<link REL=\"stylesheet\" href=\"Test.css\" type=\"text/css\">\r\n<style type=\"text/css\">\r\n<!--\r\n.SmallButton\r\n{\r\n\tBORDER-RIGHT: 1pt ridge;\r\n\tBORDER-TOP: 1pt ridge;\r\n\tBORDER-LEFT: 1pt ridge;\r\n\tWIDTH: 200pt;\r\n\tCURSOR: hand;\r\n\tCOLOR: #000055;\r\n\tBORDER-BOTTOM: 1pt ridge;\r\n\tBACKGROUND-COLOR: #D1DEEF;\r\n\tTEXT-ALIGN: center;\r\n\tfont: 宋体;\r\n\tfont-size: 10pt;\r\n}\r\n-->\r\n</style>\r\n<script language=\"javascript\">\r\n\r\n//作用：全部选择\r\nfunction SelectAllDocument()\r\n{\r\n  var mLength=document.getElementsByName(\"DocumentChk\").length;\r\n  var vItem;\r\n  for (var i=0;i<mLength;i++)\r\n  {\r\n         vItem=document.getElementsByName(\"DocumentChk\")[i];\r\n\t vItem.checked=true;\r\n   }\r\n}\r\n\r\n//作用：全部不选择\r\nfunction NoSelectAllDocument()\r\n{\r\n  var mLength=document.getElementsByName(\"DocumentChk\").length;\r\n  var vItem;\r\n  for (var i=0;i<mLength;i++)\r\n  {\r\n         vItem=document.getElementsByName(\"DocumentChk\")[i];\r\n");
      out.write("\t vItem.checked=false;\r\n   }\r\n}\r\n\r\n//作用：进行批量签章\r\nfunction RunBatchSignature()\r\n{\r\n  var mLength=document.getElementsByName(\"DocumentChk\").length;\r\n  var vItem;\r\n  var DocumentList=\"\";\r\n  for (var i=0;i<mLength;i++)\r\n  {\r\n         vItem=document.getElementsByName(\"DocumentChk\")[i];\r\n         if (vItem.checked)\r\n         {\r\n         if (i!=mLength-1)\r\n         {\r\n\t   DocumentList=DocumentList+vItem.value+\";\";\r\n          } else\r\n         {\r\n           DocumentList=DocumentList+vItem.value;\r\n         }\r\n         }\r\n   }\r\n  mainForm.SignatureControl.FieldsList=\"XYBH=协议编号;BMJH=保密级别;JF=甲方签章;YF=乙方签章;HZNR=合作内容;QLZR=权利责任;CPMC=产品名称;DGSL=订购数量;DGRQ=订购日期\"       //所保护字段\r\n  mainForm.SignatureControl.Position(0,0);                        //签章位置\r\n  mainForm.SignatureControl.DocumentList=DocumentList;                        //签章页面ID\r\n  mainForm.SignatureControl.WebSetFontOther(\"True\",\"同意通过\",\"0\",\"宋体\",\"11\",\"000128\",\"True\");  //默认签章附加信息及字体,具体参数信息参阅技术白皮书\r\n  mainForm.SignatureControl.SaveHistory=\"True\";                    //是否自动保存历史记录,true保存  false不保存  默认值false\r\n");
      out.write("  mainForm.SignatureControl.UserName=\"wjd\";                          //文件版签章用户\r\n  mainForm.SignatureControl.WebCancelOrder=0;\t\t\t                 //签章撤消原则设置, 0无顺序 1先进后出  2先进先出  默认值0\r\n  mainForm.SignatureControl.DivId = \"yfdiv\";                    //签章所在层\r\n  mainForm.SignatureControl.RunBatchSignature();                //执行批量签章\r\n}\r\n\r\n</script>\r\n\r\n</head>\r\n<form name=\"mainForm\">\r\n<body bgcolor=\"#ffffff\">\r\n<table width=\"100%\" border=0 cellpadding=\"0\" cellspacing=\"0\">\r\n<tr>\r\n<td>\r\n\r\n<div align=\"center\"><font size=4 color=ff0000>金格电子签章系统iSignature HTML V6</font></div>\r\n<hr color=\"red\">\r\n<div>\r\n<font size=2 color=ff0000>\r\n注：正式版可实现更强大的功能，如要正式版，请与金格科技联系。如要正确演示本示例，您必须:<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;1、如未安装插件，请等待几秒钟安装iSignature HTML签章中间件，请您在打开本页面的弹出窗口时，选择[是]按钮,才能正常运行。<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;2、iSignature HTML电子签章演示版能直接在IE6、IE7里进行签名和印章.\r\n\r\n<br></div>\r\n\r\n<div id=\"install\" style=\"display:none\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;3、您可以点下面按扭将iSignature电子签章HTML版软件下载到本地安装\r\n</font>\r\n    <input type=\"button\" class=\"SmallButton\" OnClick=\"location.href='iSignatureHTML.zip';\" value=\"下载金格iSignature电子签章HTML版软件\"/>\r\n");
      out.write("</div>\r\n\r\n<div id=\"chk\" >\r\n<img src=\"load.gif\" width=\"100%\" height=\"16\">\r\n</div>\r\n\r\n<div id=\"obj\" style=\"display:none\">\r\n<OBJECT id=\"SignatureControl\" classid=\"clsid:D85C89BE-263C-472D-9B6B-5264CD85B36E\" codebase=\"iSignatureHTML.cab#version=6,0,0,18\" width=\"0\" height=\"0\">\r\n<param name=\"ServiceUrl\" value=\"");
      out.print(mServerUrl);
      out.write("\"> <!--读去数据库相关信息-->\r\n</OBJECT>\r\n</div>\r\n\r\n\r\n\r\n<input type=button value=\"新建文档\"  onclick=\"javascript:location.href='DocumentEdit.jsp';\">&nbsp;\r\n<input type=button value=\"批量签章\"  onclick=\"RunBatchSignature();\">&nbsp;\r\n<input type=button value=\"全    选\"  onclick=\"SelectAllDocument();\">&nbsp;\r\n<input type=button value=\"全 不 选\"  onclick=\"NoSelectAllDocument();\">&nbsp;\r\n<input type=button value=\"使用说明\"  onclick=\"javascript:JSMainWinOpen('http://www.goldgrid.cn/iHtmlSignature/iHtmlSignature.htm');\">\r\n<table border=0  cellspacing='0' cellpadding='0' width=100% align=center class=TBStyle>\r\n<tr>\r\n  <td nowrap align=center class=\"TDTitleStyle\" height=\"25\">选择</td>\r\n  <td nowrap align=center class=\"TDTitleStyle\" height=\"25\">协议编号</td>\r\n  <td nowrap align=center class=\"TDTitleStyle\">保密级别</td>\r\n  <td nowrap align=center class=\"TDTitleStyle\">乙方名称</td>\r\n  <td nowrap align=center class=\"TDTitleStyle\">订购数量</td>\r\n  <td nowrap align=center class=\"TDTitleStyle\">订购日期</td>\r\n  <td nowrap align=center class=\"TDTitleStyle\">处理</td>\r\n</tr>\r\n");

  String strSql = "",strDocumentID = "";
  if (ObjConnBean.OpenConnection()) {
    ResultSet rs = null;
    Statement stmt = null;

    try {
      strSql = "select DocumentID,BMJH,YF,DGSL,DGRQ from HTMLDocument order by AutoNo desc";
      rs = ObjConnBean.ExecuteQuery(strSql);
      while (rs.next()){
        strDocumentID = rs.getString("DocumentID");

      out.write("\r\n<tr>\r\n  <td class=\"TDStyle\" align=center>\r\n    <input type=checkbox name=\"DocumentChk\" value=");
      out.print(rs.getString("DocumentID"));
      out.write(">\r\n  </td>\r\n  <td class=\"TDStyle\">");
      out.print(rs.getString("DocumentID"));
      out.write("&nbsp;</td>\r\n  <td class=\"TDStyle\">");
      out.print(rs.getString("BMJH"));
      out.write("&nbsp;</td>\r\n  <td class=\"TDStyle\">");
      out.print(rs.getString("YF"));
      out.write("&nbsp;</td>\r\n  <td class=\"TDStyle\">");
      out.print(rs.getString("DGSL"));
      out.write("&nbsp;</td>\r\n  <td class=\"TDStyle\">");
      out.print(rs.getString("DGRQ"));
      out.write("&nbsp;</td>\r\n  <td class=\"TDStyle\"  nowrap>\r\n    <input type=button onclick=\"javascript:location.href='DocumentEdit.jsp?DocumentID=");
      out.print(rs.getString("DocumentID"));
      out.write("';\" value=\"签名印章\">\r\n  </td>\r\n</tr>\r\n");

   }
  rs.close();
    }catch (SQLException e) {
      out.println(e.getMessage());
    }
    ObjConnBean.CloseConnection();
  }

      out.write("\r\n</table>\r\n</td>\r\n</tr>\r\n</table>\r\n</body>\r\n</form>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\n  var mObject=false;\r\n  try{\r\n    var mFieldList = mainForm.SignatureControl.FieldsList;\r\n  }catch(e){mObject=true;}\r\n\r\nif (!mObject){\r\n  document.all.install.style.display=\"none\";\r\n  document.all.obj.style.display=\"block\";\r\n  document.all.chk.style.display=\"none\";\r\n}\r\nelse{\r\n  document.all.install.style.display=\"block\";\r\n  document.all.obj.style.display=\"none\";\r\n  document.all.chk.style.display=\"none\";\r\n}\r\n</script>\r\n</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
