/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:46:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.wap2.report;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.util.util.DataSourceBase;
import java.sql.ResultSet;
import com.js.oa.scheme.workreport.po.WorkReportPO;
import com.js.wap.service.WapBD;
import com.js.wap.util.WapUtil;
import com.js.wap.util.DateTools;
import com.js.wap.util.WapStringTool;

public final class wapReadWMReport_005f3g_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.oa.scheme.workreport.po.WorkReportPO");
    _jspx_imports_classes.add("com.js.wap.util.WapStringTool");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("com.js.wap.util.WapUtil");
    _jspx_imports_classes.add("com.js.util.util.DataSourceBase");
    _jspx_imports_classes.add("com.js.wap.util.DateTools");
    _jspx_imports_classes.add("com.js.wap.service.WapBD");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"DTD/xhtml1-strict.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n");
 
request.setCharacterEncoding("UTF-8");
String path = request.getContextPath();

String userId = (String)session.getAttribute(WapUtil.EMP_ID);
Long domainId = session.getAttribute("domainId") == null ? Long.valueOf("0")
				: Long.valueOf(session.getAttribute("domainId").toString());
String repId = request.getParameter("repId");
String leaderId = request.getParameter("leaderId");
WorkReportPO wrpo = new WapBD().getReportById(userId,domainId,repId);

String empName = "";
String empId = "";
String orgName = "";
String reportReader = "";
String reportReaderId = "";
String course = "";
String content = "";
String reportType = "";
//String leader = "";
boolean tag = false;
if(null != wrpo){

	empName = wrpo.getReportEmpName();
	empId = new Long(wrpo.getEmpId()).toString();
	orgName = wrpo.getReportDepart();
	reportReader = wrpo.getReportReader();
	reportReaderId = wrpo.getReportReaderId();
		
	course = wrpo.getReportCourse();
	content = wrpo.getPreviousReport(); 
	content = WapStringTool.Html2Text(content);
				
	reportType = new Byte(wrpo.getReportType()).toString();
	//leader = new WorkFlowBD().getLeader(empId);
	//out.print("reportReaderId:" + reportReaderId + "*");
	//out.print("$"+userId+"$");
	
	if(null != reportReaderId && !"".equals(reportReaderId) && reportReaderId.contains("$"+userId+"$"))
		tag = true;
}
String beginIndex=request.getParameter("beginIndex").toString();
String repUser=request.getParameter("repUser").toString();
String repType=request.getParameter("repType").toString();
String url=path+"/wap/action/WapReportAction.do?method=getWapWMRepList&amp;beginIndex=" + beginIndex + "&amp;repUser=" + repUser + "&amp;repType=" + repType;

      out.write("\r\n<HTML xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<HEAD>\r\n<TITLE>汇报信息</TITLE>\r\n<META content=\"text/html; charset=UTF-8\" http-equiv=Content-Type>\r\n<META name=viewport content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;\">\r\n<META name=apple-touch-fullscreen content=YES>\r\n<META name=apple-mobile-web-app-capable content=no>\r\n<LINK rel=apple-touch-icon href=\"");
      out.print(path );
      out.write("/wap2/images/iphone.jpg\">\r\n<LINK rel=stylesheet type=text/css href=\"");
      out.print(path );
      out.write("/wap2/css/main_3g.css\">\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(path );
      out.write("/wap2/js/cookie.js\"></SCRIPT>\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(path );
      out.write("/wap2/js/util.js\"></SCRIPT>\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(path );
      out.write("/wap2/js/frost.js\"></SCRIPT>\r\n<META name=GENERATOR content=\"MSHTML 8.00.6001.19154\">\r\n<script type=\"text/javascript\">\r\n\tfunction reply(){\r\n\t\tvar leaveword = document.getElementById(\"leaveword\").value;\r\n\t\tif(leaveword==null || leaveword==\"\"){\r\n\t\t\tvar msg = document.getElementById(\"msg\");\r\n\t\t\tmsg.innerHTML = \"评价留言不能为空!\";\r\n\t\t\treturn;\r\n\t\t}else if(leaveword.length>500){\r\n\t\t\tvar msg = document.getElementById(\"msg\");\r\n\t\t\tmsg.innerHTML = \"评价留言长度不能大于500个字符!\";\r\n\t\t\treturn;\r\n\t\t}else{}\r\n\t\t\r\n\t\tdocument.reportRepForm.submit();\t\r\n\t} \r\n</script>\r\n</head>\r\n\r\n<body>\r\n\t<div class=\"main\">\r\n\t\t<div id=\"top\">\r\n\t\t\t<span id=\"lp2\"><div class=\"btn_3\"><a href=\"");
      out.print(url );
      out.write("\">返回</a></div></span>\r\n\t\t\t<span id=\"title2\"></span>\r\n\t\t</div>\r\n<div class=\"f_1\">汇报信息</div>\r\n<form name=\"reportRepForm\" action=\"");
      out.print(path);
      out.write("/wap2/report/wapReplyWMRep_3g.jsp\" method=\"post\">\r\n<div class=\"box_2\">\r\n\t<div class=\"list_2\">\r\n\t\t\t\t<div class=\"t1\">汇报人:</div>\r\n\t\t\t\t<div class=\"t2\">");
      out.print(empName );
      out.write("</div>\r\n\t\t\t\t<div class=\"clear\"></div>\r\n\t</div>\r\n\t<div class=\"list_2\">\r\n\t\t\t\t<div class=\"t1\">所属部门:</div>\r\n\t\t\t\t<div class=\"t2\">");
      out.print(orgName);
      out.write("</div>\r\n\t\t\t\t<div class=\"clear\"></div>\r\n\t</div>\r\n\t<div class=\"list_2\">\r\n\t\t\t\t<div class=\"t1\">提交至:</div>\r\n\t\t\t\t<div class=\"t2\">");
      out.print(reportReader);
      out.write("</div>\r\n\t\t\t\t<div class=\"clear\"></div>\r\n\t</div>\r\n\t<div class=\"list_2\">\r\n\t\t\t\t<div class=\"t1\">汇报期间:</div>\r\n\t\t\t\t<div class=\"t2\">");
      out.print(DateTools.getBEStr(course) );
      out.write("</div>\r\n\t\t\t\t<div class=\"clear\"></div>\r\n\t</div>\r\n  <div class=\"list_2\">\r\n\t\t\t\t<div class=\"t1\">汇报内容:</div>\r\n\t\t\t\t<div class=\"t2\">");
      out.print(content );
      out.write("</div>\r\n\t\t\t\t<div class=\"clear\"></div>\r\n\t</div>\r\n\t");
StringBuffer  html=new StringBuffer("");
	DataSourceBase dataSourceBase=new DataSourceBase();
	ResultSet rs=null;
	try{
		String sql="select postilcontent,postilempname from rep_postil where report_id="+repId;
		dataSourceBase.begin();
		rs=dataSourceBase.executeQuery(sql);
		while(rs.next()){
			html.append(rs.getString(1)+"<br/><div align='right'>"+rs.getString(2)+"</div><br/>");
		}
	}catch(Exception e){
		e.printStackTrace();
	}finally{
		try{
			rs.close();
			dataSourceBase.end();
		}catch(Exception e){
			e.printStackTrace();
		}
	}
	 
      out.write("\r\n\t <div class=\"list_2\">\r\n\t\t\t\t<div class=\"t1\">评价留言</div>\r\n\t\t\t\t<div class=\"t2\">");
      out.print(html.toString() );
      out.write("</div>\r\n\t\t\t\t<div class=\"clear\"></div>\r\n\t</div> \r\n\t");
if(tag){
	if("3".equals(reportType)){
      out.write("\r\n\t<div class=\"list_2\">\r\n\t\t\t\t<div class=\"t1\">考核等级:</div>\r\n\t\t\t\t<div class=\"t2\"><select name=\"grade\">\r\n\t\t\t\t\t<option value=\"A+\">A+</option>\r\n\t\t\t\t\t<option value=\"A\">A</option>\r\n\t\t\t\t\t<option value=\"A-\">A-</option>\r\n\t\t\t\t\t<option value=\"B+\" selected=\"selected\">B+</option>\r\n\t\t\t\t\t<option value=\"B\">B</option>\r\n\t\t\t\t\t<option value=\"B-\">B-</option>\r\n\t\t\t\t\t<option value=\"C+\">C+</option>\r\n\t\t\t\t\t<option value=\"C\">C</option>\r\n\t\t\t\t\t<option value=\"C-\">C-</option>\r\n\t\t\t\t</select></div>\r\n\t\t\t\t<div class=\"clear\"></div>\r\n\t</div>");
} 
      out.write("\r\n\t<div class=\"list_2\" align=\"center\">\r\n\t<input type=\"hidden\" name=\"repId\" value=\"");
      out.print(repId);
      out.write("\"/>\r\n  \t\t<input type=\"hidden\" name=\"leaderId\" value=\"");
      out.print(leaderId );
      out.write("\"/>\r\n  \t\t<input type=\"hidden\" name=\"usersId\" value=\"");
      out.print(reportReaderId.replace("$","_") );
      out.write("\"/>\r\n  \t\t<input type=\"hidden\" name=\"usersName\" value=\"");
      out.print(reportReader );
      out.write("\"/>\r\n  \t\t<input type=\"hidden\" name=\"reportType\" value=\"");
      out.print(reportType );
      out.write("\"/>\r\n  \t\t<textarea id=\"leaveword\" name=\"leaveword\" style=\"width:250px;\" rows=\"3\"></textarea><!-- 最大长度为500-->\r\n\t\t<div id=\"msg\" style=\"color:red;\"></div>\r\n\t\t<br/>\r\n\t\t<input class=\"button2\" type=\"button\" value=\"回复\" onclick=\"javascript:reply();\" />\r\n\t\t<div class=\"clear\"></div>\r\n\t</div>\r\n\t");
}else{
      out.write("\r\n\t<div class=\"list_2\" align=\"center\">\r\n\t<font color=\"#CC0000\">注意：无评价权限！</font>\r\n\t<div class=\"clear\"></div>\r\n\t</div>");
}
      out.write("\r\n\t</div>\r\n</form>\r\n</div>\r\n</body>\r\n</html>\r\n\r\n\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
