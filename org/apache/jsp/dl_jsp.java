/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:38:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class dl_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


try{ 
	String _queryString=request.getQueryString();
	String queryString="&"+com.js.util.util.BASE64.BASE64DecoderNoBR(_queryString);
	String temp;
	java.util.Calendar cal = java.util.Calendar.getInstance();
	String year = String.valueOf(cal.get(java.util.Calendar.YEAR));//Äê
	int index=0;
	String informationId="",path="",FileName="",name="",moduleCode="";
	
	//²éÕÒinformationId
	index=queryString.indexOf("&informationId");
	if(index>=0){
		temp=queryString.substring(index+15);
		if(temp.indexOf("&")>=0){
			informationId=temp.substring(0,temp.indexOf("&"));
		}else{
			informationId=temp;
		}
		
	}
	//²éÕÒpath
	index=queryString.indexOf("&path");
	if(index>=0){
		temp=queryString.substring(index+6);
		if(temp.indexOf("&")>=0){
			path=temp.substring(0,temp.indexOf("&"));
		}else{
			path=temp;
		}
	}
	//²éÕÒFileName
	index=queryString.indexOf("&FileName");
	if(index>=0){
		temp=queryString.substring(index+10);
		if(temp.indexOf("&")>=0){
			FileName=temp.substring(0,temp.indexOf("&"));
		}else{
			FileName=temp;
		}
		if(!FileName.substring(4,5).equals("_"))
		{
			path="0000/"+path;
		}else
		{
			path=FileName.substring(0,4)+"/"+path;
		}
		
	}
	//²éÕÒname
	index=queryString.indexOf("&name");
	if(index>=0){
		temp=queryString.substring(index+6);
		if(temp.indexOf("&")>=0){
			name=temp.substring(0,temp.indexOf("&"));
		}else{
			name=temp;
		}
		//System.out.println("name="+name);
	}
	//²éÕÒmoduleCode
			index=queryString.indexOf("&moduleCode");
			if(index>=0){
				temp=queryString.substring(index+12);
				if(temp.indexOf("&")>=0){
					moduleCode=temp.substring(0,temp.indexOf("&"));
				}else{
					moduleCode=temp;
				}
			}
	//informationId,path,FileName,name;
	
  // µÃµ½ÎÄ¼þÃû×ÖºÍÂ·¾¶
  //String informationId=request.getParameter("informationId");
  String filepath="";
  HttpServletRequest HSR=(HttpServletRequest)pageContext.getRequest();
  HttpSession session1=HSR.getSession(false);

  if(informationId!=null && !"null".equals(informationId) && !"".equals(informationId)){
	  try{
		  //¼ÇÂ¼ÖªÊ¶¹ÜÀíÎÄµµÔÄ¶Á´ÎÊý²¢¼ÇÂ¼²é¿´ÈË
		  com.js.oa.info.infomanager.service.InformationBD info=new com.js.oa.info.infomanager.service.InformationBD();
		  
		  String userId=session.getAttribute("userId").toString();
		  String userName=session.getAttribute("userName").toString();
		  String orgId=session.getAttribute("orgId").toString();
		  String orgName=session.getAttribute("orgName").toString();
		  String orgIdString=session.getAttribute("orgIdString").toString();
		  
		  info.recordReader(userId,userName,orgId,orgName,orgIdString,informationId);
	  }catch(Exception ex){
		  ex.printStackTrace();
	  }
  }
  
  //ÅÐ¶ÏÊÇ·ñÊ¹ÓÃÁËÎÄ¼þ·þÎñÆ÷
  if(com.js.util.config.SystemCommon.getUseClusterServer()==1){
	  response.sendRedirect(com.js.util.config.SystemCommon.getClusterServerUrl()+
			  "/download_f.jsp?"+_queryString);
  }else{
	  //Ö±½ÓÏÂÔØ
	  //String path=request.getParameter("path");
	 	  
	  if(path.indexOf("./")>=0 || path.indexOf(".\\")>=0 || FileName.indexOf("./")>=0 || FileName.indexOf(".\\")>=0){
			System.out.println("²»ÔÊÐíÏÂÝduploadÒÔÍâµÄÄ¿Â¼ÎÄ¼þ£¡");
			throw new Exception("²»ÔÊÐíÏÂÝduploadÒÔÍâµÄÄ¿Â¼ÎÄ¼þ£¡");
	  }
	  filepath=HSR.getRealPath("/upload/")+"/"+path+"/";
	  
	  filepath = filepath.replaceAll("\\\\", "/");
	  
	  if("".equals(moduleCode) || moduleCode ==null)
	  {
		  if(filepath.contains("cooperate"))
		  {
			  moduleCode="co_attach_waitsend";
		  }
		  if(filepath.contains("workflow"))
		  {
			  moduleCode="oa_workflow_waitsend";
		  }
		  if(filepath.contains("customform"))
		  {
			  moduleCode="oa_workflow_complete";
		  }
		  if(filepath.contains("archives"))
		  {
			  moduleCode="oa_archives_fujian";
		  }
	  }
	  
	 // String Filename = request.getParameter("FileName");
	  //String name = request.getParameter("name");
	  String nameShow=name;
	  name=new String(name.getBytes("GBK"),"iso-8859-1");  
	  java.io.File file = new java.io.File(filepath + FileName);
	  if(file.exists()){
		  // ÉèÖÃÏìÓ¦Í·ºÍÏÂÔØ±£´æµÄÎÄ¼þÃû
		  //response.setContentType("application/msword");
		  response.setContentType("csv");
	
		  response.setHeader("Content-Disposition","attachment; filename=\"" + name + "\"");
	
		  // ´ò¿ªÖ¸¶¨ÎÄ¼þµÄÁ÷ÐÅÏ¢
		  /*java.io.FileInputStream fileInputStream = new java.io.FileInputStream(filepath + FileName);
	
		  // Ð´³öÁ÷ÐÅÏ¢
		  int i;
		  while ((i=fileInputStream.read()) != -1) {
		   out.write(i);
		  }
		  fileInputStream.close();
		  out = pageContext.pushBody();
		  out.clear();
		  out.close();*/
		  
		  java.io.FileInputStream fis=new java.io.FileInputStream(file);
		  java.io.BufferedInputStream buff=new java.io.BufferedInputStream(fis);
		  
		  byte [] b=new byte[1024];//Ïàµ±ÓÚÎÒÃÇµÄ»º´æ
		  long k=0;//¸ÃÖµÓÃÓÚ¼ÆËãµ±Ç°Êµ¼ÊÏÂÔØÁË¶àÉÙ×Ö½Ú
		  
		  //´Óresponse¶ÔÏóÖÐµÃµ½Êä³öÁ÷,×¼±¸ÏÂÔØ
		  java.io.OutputStream myout=response.getOutputStream();
		  //¿ªÊ¼Ñ­»·ÏÂÔØ
		  while(k<file.length()){
			  int j=buff.read(b,0,1024);
			  k+=j;
			  //½«bÖÐµÄÊý¾ÝÐ´µ½¿Í»§¶ËµÄÄÚ´æ
			  myout.write(b,0,j);
		  }
		  //½«Ð´Èëµ½¿Í»§¶ËµÄÄÚ´æµÄÊý¾Ý,Ë¢ÐÂµ½´ÅÅÌ
		  myout.flush();
		  buff.close();
		  fis.close();			  
		  myout.close();
		  out.clear();  
		  out = pageContext.pushBody();  
	  }else{
		  response.setContentType("text/html; charset=GBK");
		  
      out.write("\r\n\t\t  <html>\r\n\t      <head>\r\n\t      <title></title>\r\n\t      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=GBK\">\r\n\t\t  <SCRIPT LANGUAGE=\"JavaScript\">\r\n\t\t\talert(\"File Not Found!\");\r\n\t\t    history.back();\r\n\t\t  </SCRIPT>\r\n\t\t  </head>\r\n\t\t  <body>\r\n\t\t  </body>\r\n\t\t  </html>\r\n\t\t  ");

	  }
  }//end of Ö±½ÓÏÂÔØ
}catch(Exception ex){
ex.printStackTrace();
	response.setContentType("text/html; charset=GBK");
	  
      out.write("\r\n\t  <html>\r\n    <head>\r\n    <title></title>\r\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=GBK\">\r\n\t  <SCRIPT LANGUAGE=\"JavaScript\">\r\n\t\talert(\"File Not Found!\");\r\n\t    history.back();\r\n\t  </SCRIPT>\r\n\t  </head>\r\n\t  <body>\r\n\t  </body>\r\n\t  </html>\r\n\t  ");

}
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
