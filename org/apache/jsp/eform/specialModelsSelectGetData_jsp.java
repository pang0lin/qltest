/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:03:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.eform;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class specialModelsSelectGetData_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

String type=request.getParameter("type");
if("1".equals(type)){//获取左侧表数据
	String machineType=request.getParameter("machineType");
	String machineTypeName=request.getParameter("machineTypeName");
	java.util.HashMap<String,String> parmMap=null;
	
	if(machineType!=null){
		if(parmMap==null){
			parmMap=new java.util.HashMap<String,String>();
		}
		parmMap.put("machineType", machineType);
	}
	if(machineTypeName!=null){
		if(parmMap==null){
			parmMap=new java.util.HashMap<String,String>();
		}
		parmMap.put("machineTypeName",java.net.URLDecoder.decode(machineTypeName, "UTF-8"));
	}
	java.util.List<String[]> list=com.js.oa.eform.util.HaierSpecialModels.getSpecialModelList(parmMap); 
	if(list.size()==0){
		 out.print("<tr><td colspan=\"3\" class=\"listTableLine1\" align=\"center\">暂无数据</td></tr>");
	}else{
		int index = 0;
	    String listClass="listTableLine1";
		   for(String[] arr:list){
			   index ++;
				if(index%2 != 0){
				     listClass="listTableLine2";
				}else{
				     listClass="listTableLine1";
				}
			   out.print("<tr>");
			   out.print("<td class=\""+listClass+"\"><input type=\"checkbox\" id=\""+arr[0]+"\"></td>");
			   out.print("<td class=\""+listClass+"\">"+arr[0]+"</td>");
			   out.print("<td class=\""+listClass+"\">"+arr[1]+"</td>");
			   out.print("</tr>");
		   }
	}
	
}else if("2".equals(type)){//获取右侧表数据
	String eono=request.getParameter("eono");
	String fno=request.getParameter("fno");
	java.util.List<String[]> list=com.js.oa.eform.util.HaierSpecialModels.getSpecialRelationList(eono,fno);
	if(list.size()==0){
		 out.print("<tr><td colspan=\"2\" class=\"listTableLine1\" align=\"center\">暂无数据</td></tr>");
	}else{
		int index = 0;
	    String listClass="listTableLine1";
	    StringBuffer tempData=new StringBuffer(";;");
		   for(String[] arr:list){
			   index ++;
				if(index%2 != 0){
				     listClass="listTableLine2";
				}else{
				     listClass="listTableLine1";
				}
			   out.print("<tr>");
			   out.print("<td class=\""+listClass+"\"><input type=\"checkbox\" id=\""+arr[0]+"\"></td>");
			   out.print("<td class=\""+listClass+"\">"+arr[1]+"</td>");
			   out.print("</tr>");
			   tempData.append(arr[0]).append(";;");
		   }
		   out.print("$$$$"+tempData.toString());
	}
	
}else if("3".equals(type)){
	String eono=request.getParameter("eono");
	String fno=request.getParameter("fno");
	String specialData=request.getParameter("specialData");
	String result=com.js.oa.eform.util.HaierSpecialModels.saveSpecialRelationList(eono,fno,specialData);
	out.print(result);
}else if("4".equals(type)){
	String oldeono=request.getParameter("oldeono");
	String oldfno=request.getParameter("oldfno");
	com.js.oa.eform.util.HaierSpecialModels.delSpecialRelationList(oldeono,oldfno);
}else if("changeStatus".equals(type)){
	String ids = request.getParameter("ids");
	String status = request.getParameter("status");
	String result = com.js.oa.eform.util.HaierSpecialModels.drawingChange(ids,status);
	out.print(result);
}else if("ylp".equals(type)){
	String manufactor = request.getParameter("manufactor");
	if(manufactor==null){
		manufactor="";
	}else{
		manufactor=java.net.URLDecoder.decode(manufactor, "UTF-8");
	}
	 java.util.List<java.util.Map<String, String>> list = com.js.oa.eform.util.HaierSpecialModels.getDependentTicketData(manufactor); 
	 if(list!=null&&list.size()>0){
		 int index = 0;
	    String listClass="listTableLine1";
		for(java.util.Map<String,String> map :list){
			index ++;
			if(index%2 != 0){
			     listClass="listTableLine2";
			}else{
			     listClass="listTableLine1";
			}
			String tlx="";
			if("1".equals(map.get("jst_3006_f3080"))){
				tlx="产品试验";
			}else if("2".equals(map.get("jst_3006_f3080"))){
				tlx="部品测定";
			}
			String pqf="";
			if("1".equals(map.get("jst_3006_f3081"))){
				pqf="初品";
			}else if("2".equals(map.get("jst_3006_f3081"))){
				pqf="P试";
			}else if("3".equals(map.get("jst_3006_f3081"))){
				pqf="抽样";
			}else if("4".equals(map.get("jst_3006_f3081"))){
				pqf="投诉";
			}else if("5".equals(map.get("jst_3006_f3081"))){
				pqf="其他";
			}
			String psffq="";
			if("1".equals(map.get("sffq"))){
				psffq="是";
			}else if("0".equals(map.get("sffq"))){
				psffq="否";
			}
			String psfhg="";
			if("1".equals(map.get("jst_3006_f3103"))){
				psfhg="合格";
			}else if("2".equals(map.get("jst_3006_f3103"))){
				psfhg="不合格";
			}
			String pmc=map.get("jst_3006_f3085");
			if(pmc==null||"null".equalsIgnoreCase(pmc)){
				pmc="";
			}
			out.print("<tr>");
			if("0".equals(map.get("sffq"))&&"1".equals(map.get("jst_3006_f3103"))){
				out.print("<td class=\""+listClass+"\"><input type=\"checkbox\" name=\"ckx\" id=\""+map.get("jst_3006_id")+"\"></td>");
			}else{
				out.print("<td class=\""+listClass+"\"><input type=\"checkbox\" name=\"ckx\" id=\""+map.get("jst_3006_id")+"\" disabled=\"disabled\"></td>");
			}
			out.print("<td class=\""+listClass+"\">"+tlx+"</td>");
			out.print("<td class=\""+listClass+"\">"+pqf+"</td>");
			out.print("<td class=\""+listClass+"\">"+map.get("thmc")+"</td>");
			out.print("<td class=\""+listClass+"\">"+map.get("jst_3006_f3082")+"</td>");
			out.print("<td class=\""+listClass+"\">"+map.get("jst_3006_f3083")+"</td>");
			out.print("</tr>");
		}
	 }else{
		 out.print("<tr> <td colspan=\"6\" class=\"listTableLine2\" align=\"center\">暂无数据</td></tr>");
	 }
	 
}else if("checkExist".equals(type)){
	String th=request.getParameter("th");
	String eo=request.getParameter("eo");
	String recordId=request.getParameter("recordId");
	String result=com.js.oa.eform.util.HaierSpecialModels.checkBaseDataExist(th,eo,recordId); 
	out.print(result);
}else if("1001".equals(type)){
	String manufactor = request.getParameter("manufactor");
	if(manufactor==null){
		manufactor="";
	}else{
		manufactor=java.net.URLDecoder.decode(manufactor, "UTF-8");
	}
	java.util.List<String> list = com.js.oa.eform.util.HaierSpecialModels.getYsjInfo(manufactor); 
	if(list!=null&&list.size()>0){
		StringBuffer str=new StringBuffer();
		for(String ss:list){
			str.append("<option value=\""+ss+"\">"+ss+"</option>");
		}
		out.print(str);
	}else{
		out.print("<option value=''>数据异常或无数据</option>");
	}
}else if("1002".equals(type)){
	String tuhao = request.getParameter("tuhao");
	if(tuhao==null){
		tuhao="";
	}else{
		tuhao=java.net.URLDecoder.decode(tuhao, "UTF-8");
	}
	java.util.Map<String,String> res=com.js.oa.eform.util.HaierSpecialModels.checkTuhao(tuhao);
	if("true".equals(res.get("res"))){
		out.print("t");
	}else{
		out.print(res.get("reason"));
	}
}else if("1003".equals(type)){
	String tuhao = request.getParameter("tuhao");
	if(tuhao==null){
		tuhao="";
	}else{
		tuhao=java.net.URLDecoder.decode(tuhao, "UTF-8");
	}
	java.util.Map<String,String> res=com.js.oa.eform.util.HaierSpecialModels.checkTuhaoEoGn(tuhao);
	if("true".equals(res.get("res"))){
		out.print("t");
	}else{
		out.print(res.get("reason"));
	}
}


      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
