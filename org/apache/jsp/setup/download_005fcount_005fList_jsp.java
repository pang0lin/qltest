/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:50:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.setup;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class download_005fcount_005fList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);


List dataList = (List)request.getAttribute("dataList");
String headTitle = request.getAttribute("headTitle")+"";
String[] title = headTitle.split(",");

      out.write("\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n<html>\r\n  <head>\r\n<title>部门人员上线统计</title>\r\n<link href=\"skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<link rel=stylesheet type=\"text/css\" href=\"/jsoa/public/date_picker/DateObject1.css\">\r\n<SCRIPT language=javascript src=\"/jsoa/public/date_picker/DateObject.js\"></SCRIPT>\r\n<SCRIPT language=javascript src=\"/jsoa/public/date_picker/DatePicker.js\"></SCRIPT>\r\n<SCRIPT language=javascript src=\"/jsoa/public/date_picker/editlib.js\"></SCRIPT>\r\n<SCRIPT language=javascript src=\"/jsoa/public/date_picker/tree.js\"></SCRIPT>\r\n\r\n</head>\r\n<body leftmargin=\"0\" topmargin=\"0\" class=\"MainFrameBox\">\r\n<table width=\"100%\" border=0 cellpadding=\"0\" cellspacing=\"0\">\r\n<tr><td>\r\n<table width=\"100%\" border=\"0\" align=\"center\" cellpadding=\"1\" cellspacing=\"1\" class=\"searchbar\" id=\"searchbar\" style=\"display:none;\">\r\n   <form name=\"frm\" id=\"frm\" action=\"/jsoa/LogCountAction.do?action=downloadCountSearch\" method=\"post\">\r\n\t  <tr>\r\n\t       <td width=\"20\" rowspan=3>&nbsp;</td>\r\n\t\t  <td width=\"50\">人员：</td>\r\n\t\t  <td >\r\n\t\t\t<input type=\"text\" class=\"inputtext\" name=\"empName\" id=\"empName\"  title=\"请输入部分或完整姓名\" />\r\n");
      out.write("\t\t\t\r\n\t\t\t</td>\r\n\t\t \r\n\t\t  <td >查询日期：</td>\r\n\t\t  <td colspan=\"3\">\r\n\t\t  <script language=javascript>var dtpDate = createDatePickerByDateStr(\"beginDate\",\"");
      out.print((request.getAttribute("begin")+"").replace("-", "/") );
      out.write("\");</script> 至\r\n\t\t  <script language=javascript>var dtpDate = createDatePickerByDateStr(\"endDate\",\"");
      out.print((request.getAttribute("end")+"").replace("-", "/") );
      out.write("\");</script>\r\n\t\t\t<input type=\"checkbox\" id=\"searchTime\" name=\"searchTime\" value=\"1\" ");
      out.print(request.getAttribute("searchTime")!=null && "1".equals(request.getAttribute("searchTime")+"")?"checked":"" );
      out.write(" >\r\n\t\t\t<input type=\"hidden\" id=\"flag\" name=\"flag\" value=\"m\" />\r\n\t\t   </td>\r\n\t\t  \r\n\t\t  <td colspan=\"2\" align=\"right\">\r\n\t\t  <input type=\"button\" class=\"btnButton2Font\" onClick=\"searchSubmit();\" value=\"查询\"/>\r\n\t\t  <input type=\"button\" class=\"btnButton2Font\" onClick=\"searchReset();\" value=\"重置\"/>\r\n\t\t  </td>\r\n\t </tr>\r\n   </form>\r\n</table>\r\n</td></tr>\r\n\r\n<tr><td>\r\n<table width=\"100%\" height=\"25\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"inlineBottomLine\">\r\n  <tr>\r\n  \t<td align=\"right\" nowrap>\r\n  \t<input type=\"button\" class=\"btnButton4Font\" onclick=\"exportExcel()\" value=\"导出Excel\" />\r\n  \t<input type=\"button\" class=\"btnButton2Font\" onclick=\"search();\" value=\"查询\" />&nbsp;</td>\r\n  </tr>\r\n  </table>\r\n<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"listTable\">\r\n\t<tr>");
for(int i=0;i<title.length;i++){
      out.write("\r\n\t\t\t<td width=\"70px\" \r\n\t\t\t\t\tclass=\"");
      out.print((i==title.length-1?"listTableHeadLast":"listTableHead") );
      out.write("\">\r\n\t\t\t");
      out.print(title[i] );
      out.write("\r\n\t\t\t</td>\r\n\t\t");
} 
      out.write("</tr>\r\n\t");
for(int i=0;i<dataList.size();i++){ 
      out.write("\r\n\t<tr>");
Object[] obj = (Object[])dataList.get(i);
		for(int k=0;k<title.length;k++){
		int c = (i%2)+1;
      out.write("\r\n\t\t<td class=\"listTableLine");
      out.print(c );
      out.write('"');
      out.write('>');
      out.print(obj[k] );
      out.write("</td>\r\n\t\t");
} 
      out.write("\r\n\t</tr>");
 }
      out.write("\r\n</table>\r\n</td></tr><tr><td>");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/public/page/pageUtil.jsp", out, false);
      out.write("</td></tr>\r\n</table>\r\n</body>\r\n<script type=\"text/javascript\">\r\nfunction searchSubmit(){\r\n\tdocument.getElementById(\"frm\").submit();\r\n}\r\nfunction searchReset(){\r\n\twindow.location.href='/jsoa/LogCountAction.do?action=downloadCount'\r\n}\r\nfunction selectOrg(){\r\n\topenEndow('orgId','orgName',document.getElementById(\"orgId\").value,document.getElementById(\"orgName\").value,'org','no','org','*0*');\r\n}\r\nfunction search(){\r\n\tvar searchbar = document.getElementById(\"searchbar\");\r\n\tif(searchbar.style.display==\"\"){\r\n\t\tsearchbar.style.display=\"none\";\r\n\t}else{\r\n\t\tsearchbar.style.display=\"\";\r\n\t}\r\n}\r\nfunction exportExcel(){\r\n\tvar empName = \"");
      out.print(request.getParameter("empName") );
      out.write("\";\r\n\tlocation.href=\"/jsoa/LogCountAction.do?action=exportDownload&empName=\"+empName+\"&searchTime=");
      out.print(request.getAttribute("searchTime") );
      out.write("\";\r\n}\r\nfunction changeMonth(month){\r\n\tlocation.href=\"/jsoa/LogCountAction.do?action=orgList&flag=m&begin=\"+month+\"-01\";\r\n}\r\nfunction showOrgLoginEmp(orgId,begin){\r\n\tJSMainWinOpen(\"/jsoa/LogCountAction.do?action=orgShow&orgId=\"+orgId+\"&flag=d&begin=\"+begin,\"\",\"\");\r\n}\r\n</script>\r\n</html>\r\n<script src=\"/jsoa/js/openEndow.js\"></script>\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
