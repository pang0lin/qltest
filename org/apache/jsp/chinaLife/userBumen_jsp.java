/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:42:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.chinaLife;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class userBumen_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);

List<Map<String,String>> list = (List<Map<String,String>>)request.getAttribute("dataList");
String year = request.getAttribute("year")+"";
String month = request.getAttribute("month")+"";
int yearNum = new Date().getYear()+1900;

      out.write("\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n<html>\r\n\t<head>\r\n\t\t<title>公司各部门");
      out.print(year );
      out.write('年');
      out.print(month );
      out.write("月考勤情况的通报</title>\r\n\t\t<link href=\"/jsoa/skin/blue/style.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n\t</head>\r\n\t  \r\n\t<body bgcolor=\"#ffffff\" class=\"docBoxNoPanel\">\r\n\t\t<div id=\"Layer1\" >\r\n\t\t<div height=\"30px;\" style=\"padding: 10px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t\t\t年度：<select id=\"year\" name=\"year\">\r\n\t\t\t");
for(int i=2014;i<=yearNum;i++){
      out.write("\r\n\t\t\t<option value=\"");
      out.print(i );
      out.write('"');
      out.write(' ');
      out.print(year.equals(i+"")?"selected":"" );
      out.write('>');
      out.print(i );
      out.write("年度</option>\r\n\t\t\t");
} 
      out.write("\r\n\t\t\t</select>\r\n\t\t\t月份：<select id=\"month\" name=\"month\">\r\n\t\t\t\t<option value=\"1\" ");
      out.print("1".equals(month)?"selected":"" );
      out.write(">一月份</option><option value=\"2\" ");
      out.print("2".equals(month)?"selected":"" );
      out.write(">二月份</option>\r\n\t\t\t\t<option value=\"3\" ");
      out.print("3".equals(month)?"selected":"" );
      out.write(">三月份</option><option value=\"4\" ");
      out.print("4".equals(month)?"selected":"" );
      out.write(">四月份</option>\r\n\t\t\t\t<option value=\"5\" ");
      out.print("5".equals(month)?"selected":"" );
      out.write(">五月份</option><option value=\"6\" ");
      out.print("6".equals(month)?"selected":"" );
      out.write(">六月份</option>\r\n\t\t\t\t<option value=\"7\" ");
      out.print("7".equals(month)?"selected":"" );
      out.write(">七月份</option><option value=\"8\" ");
      out.print("8".equals(month)?"selected":"" );
      out.write(">八月份</option>\r\n\t\t\t\t<option value=\"9\" ");
      out.print("9".equals(month)?"selected":"" );
      out.write(">九月份</option><option value=\"10\" ");
      out.print("10".equals(month)?"selected":"" );
      out.write(">十月份</option>\r\n\t\t\t\t<option value=\"11\" ");
      out.print("11".equals(month)?"selected":"" );
      out.write(">十一月份</option><option value=\"12\" ");
      out.print("12".equals(month)?"selected":"" );
      out.write(">十二月份</option>\r\n\t\t\t</select>&nbsp;\r\n\t\t\t<input type=\"button\" class=\"btnButton2font\" value=\"查询\"  onclick=\"searchData();\" /></div>\r\n\t\t\t<div><table width=\"90%\" align=\"center\" border=\"1\" cellpadding=\"5\" cellspacing=\"0\" >\r\n\t\t\t\t<tr height=\"20px\"><td align=\"center\" width=\"20%\"><b>部门</td>\r\n\t\t\t\t<td align=\"center\"><b>事  假（人次）</b></td>\r\n\t\t\t\t<td align=\"center\"><b>病  假（人次）</b></td>\r\n\t\t\t\t<td align=\"center\"><b>年休假（人次）</b></td>\r\n\t\t\t\t<td align=\"center\"><b>产  假（人次）</b></td>\r\n\t\t\t\t<td align=\"center\"><b>其  他（人次）</b></td>\r\n\t\t\t\t<td align=\"center\"><b>迟  到（人次）</b></td>\r\n\t\t\t\t<td align=\"center\"><b>早  退（人次）</b></td>\r\n\t\t\t\t<td align=\"center\"><b>缺  勤（人次）</b></td></tr>\r\n\t\t\t\t");
for(int i=0;i<list.size();i++){
				Map<String,String> map = list.get(i);	
      out.write("\r\n\t\t\t\t<tr height=\"20px\"><td align=\"center\">");
      out.print(map.get("orgName")==null?"0":map.get("orgName") );
      out.write("</td>\r\n\t\t\t\t<td align=\"center\" style=\"cursor: pointer;\" title=\"查看详情\" onclick=\"showMore(");
      out.print(map.get("orgId")+","+year+","+month );
      out.write(",'事假',this);\">");
      out.print(map.get("事假")==null?"0":map.get("事假") );
      out.write("</td>\r\n\t\t\t\t<td align=\"center\" style=\"cursor: pointer;\" title=\"查看详情\" onclick=\"showMore(");
      out.print(map.get("orgId")+","+year+","+month );
      out.write(",'病假',this);\">");
      out.print(map.get("病假")==null?"0":map.get("病假") );
      out.write("</td>\r\n\t\t\t\t<td align=\"center\" style=\"cursor: pointer;\" title=\"查看详情\" onclick=\"showMore(");
      out.print(map.get("orgId")+","+year+","+month );
      out.write(",'年假',this);\">");
      out.print(map.get("年假")==null?"0":map.get("年假") );
      out.write("</td>\r\n\t\t\t\t<td align=\"center\" style=\"cursor: pointer;\" title=\"查看详情\" onclick=\"showMore(");
      out.print(map.get("orgId")+","+year+","+month );
      out.write(",'产假',this);\">");
      out.print(map.get("产假")==null?"0":map.get("产假") );
      out.write("</td>\r\n\t\t\t\t<td align=\"center\" style=\"cursor: pointer;\" title=\"查看详情\" onclick=\"showMore(");
      out.print(map.get("orgId")+","+year+","+month );
      out.write(",'其他',this);\">");
      out.print(map.get("其他")==null?"0":map.get("其他") );
      out.write("</td>\r\n\t\t\t\t<td align=\"center\" style=\"cursor: pointer;\" title=\"查看详情\" onclick=\"showMore(");
      out.print(map.get("orgId")+","+year+","+month );
      out.write(",'迟到',this);\">");
      out.print(map.get("迟到")==null?"0":map.get("迟到") );
      out.write("</td>\r\n\t\t\t\t<td align=\"center\" style=\"cursor: pointer;\" title=\"查看详情\" onclick=\"showMore(");
      out.print(map.get("orgId")+","+year+","+month );
      out.write(",'早退',this);\">");
      out.print(map.get("早退")==null?"0":map.get("早退") );
      out.write("</td>\r\n\t\t\t\t<td align=\"center\" style=\"cursor: pointer;\" title=\"查看详情\" onclick=\"showMore(");
      out.print(map.get("orgId")+","+year+","+month );
      out.write(",'缺勤',this);\">");
      out.print(map.get("缺勤")==null?"0":map.get("缺勤") );
      out.write("</td></tr>");
} 
      out.write("\r\n\t\t\t</table></div>\r\n\t\t</div>\r\n\t\t<script type=\"text/javascript\">\r\n\t\tfunction showMore(orgId,year,month,type,obj){\r\n\t\t\t//alert(orgId+\"  \"+type);\r\n\t\t\tvar value = obj.innerHTML;\r\n\t\t\tif(value==\"0\"){\r\n\t\t\t\talert(\"没有相关数据！\");\r\n\t\t\t}else{\r\n\t\t\t\twindow.open(\"/jsoa/kqShow.do?action=bmMore&year=\"+year+\"&month=\"+month+\"&orgId=\"+orgId+\"&type=\"+type);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction searchData(){\r\n\t\t\tvar year = document.getElementById(\"year\").value;\r\n\t\t\tvar month = document.getElementById(\"month\").value;\r\n\t\t\tlocation.href = \"/jsoa/kqShow.do?action=bumen&year=\"+year+\"&month=\"+month;\r\n\t\t}\r\n\t\t</script>\r\n\t</body>\r\n</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
