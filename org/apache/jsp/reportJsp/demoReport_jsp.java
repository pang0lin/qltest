/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:54:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.reportJsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.runqian.report4.util.ReportUtils;
import com.runqian.report4.model.ReportDefine;

public final class demoReport_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.runqian.report4.model.ReportDefine");
    _jspx_imports_classes.add("com.runqian.report4.util.ReportUtils");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n\r\n\r\n\r\n    ");

    	String path = request.getContextPath();
    	String graphUrl = request.getParameter("graphUrl");
    	String raqName = request.getParameter("raq");
    	String raqPath = request.getSession().getServletContext().getRealPath("/")+"/reportFiles/"+raqName;
    	ReportDefine rd = (ReportDefine)ReportUtils.read(raqPath);
    	int colCount = rd.getColCount();
    	String colNames = "";
    	for(int i=1;i<=colCount;i++){
    		colNames += rd.getCell(1,(short)i).getValue()==null?"":rd.getCell(1,(short)i).getValue().toString();
    		colNames +=","; 
    	}
    	colNames = colNames.substring(0,colNames.length()-1);
    
      out.write("\r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n<title>报表展示</title>\r\n<link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"");
      out.print(path);
      out.write("/mis2/gezComponents/jquery/jqueryui/jqueryuicss/jqueryui.css\" /> \r\n<link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"");
      out.print(path);
      out.write("/mis2/gezComponents/jquery/jqgrid/css/ui.jqgrid.css\" /> \r\n<script src=\"");
      out.print(path);
      out.write("/mis2/gezComponents/jquery/jquery.js\" type=\"text/javascript\"></script> \r\n<script src=\"");
      out.print(path);
      out.write("/mis2/gezComponents/jquery/jqueryui/jqueryuijs/jqueryui.js\" type=\"text/javascript\"></script>\r\n<script src=\"");
      out.print(path);
      out.write("/mis2/gezComponents/jquery/jqgrid/js/i18n/grid.locale-en.js\" type=\"text/javascript\"></script>\r\n<script src=\"");
      out.print(path);
      out.write("/mis2/gezComponents/jquery/jqgrid/js/jquery.jqGrid.min.js\" type=\"text/javascript\"></script>\r\n<script src=\"");
      out.print(path);
      out.write("/mis2/gezComponents/jsUtils/JqGridUtil.js\" type=\"text/javascript\"></script>\r\n<script type=\"text/javascript\">\r\n\t$(document).ready(function(){\r\n\t\tvar colNamesStr='");
      out.print(colNames);
      out.write("';\r\n\t\tvar colNamesArr = colNamesStr.split(\",\");\r\n\t\tvar colCount = '");
      out.print(colCount);
      out.write("';\r\n\t\tvar colModel = [\r\n\t\t\t{name:\"name\",index:\"name\",width:\"12%\",sortable:false},\r\n\t\t\t{name:\"AAT\",index:\"AAT\",width:\"6%\",sortable:true,sorttype:\"int\"},\r\n\t\t\t{name:\"SSE\",index:\"SSE\",width:\"6%\",sortable:true,sorttype:\"int\"},\r\n\t\t\t{name:\"PPT\",index:\"PPT\",width:\"6%\",sortable:true,sorttype:\"int\"},\r\n\t\t\t{name:\"ITC\",index:\"ITC\",width:\"6%\",sortable:true,sorttype:\"int\"},\r\n\t\t\t{name:\"PET\",index:\"PET\",width:\"12%\",sortable:true,sorttype:\"int\"}\r\n\t\t];\r\n\t\tvar jqUtil = new JqGridUtil();\r\n\t\tjqUtil.mSelect = false;\r\n\t\tjqUtil.jsonReader.reportitems = true;\r\n\t\tjqUtil.getGridData(\"demotable\",\"");
      out.print(path);
      out.write("/demoServlet\",\"raq=");
      out.print(raqName);
      out.write("\",colNamesArr,colModel);\r\n\t\t$('#demotable').jqGrid('setGridParam',{onSelectRow:gridSelectRow});\r\n\t});\r\n\tfunction gridSelectRow(id){\r\n\t\tvar rowData = $('#demotable').jqGrid('getRowData',id);\r\n\t\t$('#bframe').attr(\"src\",\"");
      out.print(graphUrl );
      out.write("?name=\"+rowData.name\r\n\t\t\t\t\t\t\t+\"&AAT=\"+rowData.AAT\r\n\t\t\t\t\t\t\t+\"&SSE=\"+rowData.SSE\r\n\t\t\t\t\t\t\t+\"&PPT=\"+rowData.PPT\r\n\t\t\t\t\t\t\t+\"&ITC=\"+rowData.ITC\r\n\t\t\t\t\t\t\t+\"&PET=\"+rowData.PET);\r\n\t}\r\n</script>\r\n</head>\r\n<body>\r\n\t<div>\r\n\t\t<table id=\"demotable\"></table>\r\n\t</div>\r\n\t<div>\r\n\t\t<iframe id=\"bframe\" src=\"");
      out.print(graphUrl );
      out.write("\" width=\"100%\" height=\"100%\"></iframe>\r\n\t</div>\r\n</body>\r\n</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
