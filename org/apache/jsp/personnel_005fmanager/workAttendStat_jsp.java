/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:52:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.personnel_005fmanager;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class workAttendStat_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-logic.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fname_005fid;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fname_005fid = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fname_005fid.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n<html>\r\n<head>\r\n<link rel=stylesheet type=\"text/css\" href=\"style/cssmain.css\">\r\n<link rel=stylesheet type=\"text/css\" href=\"/jsoa/public/date_picker/DateObject1.css\">\r\n<SCRIPT language=javascript src=\"/jsoa/public/date_picker/DateObject.js\"></SCRIPT>\r\n<SCRIPT language=javascript src=\"/jsoa/public/date_picker/DatePicker.js\"></SCRIPT>\r\n<SCRIPT language=javascript src=\"/jsoa/public/date_picker/editlib.js\"></SCRIPT>\r\n<SCRIPT language=javascript src=\"/jsoa/public/date_picker/tree.js\"></SCRIPT>\r\n<script language=\"javascript\" src=\"/jsoa/js/openEndow.js\"></script>\r\n<title>考勤表</title>\r\n</head>\r\n<script language=\"javascript\">\r\n<!--\r\n//self.moveTo(0,0);\r\n//self.resizeTo(screen.availWidth,screen.availHeight);\r\n//-->\r\n</script>\r\n<body>\r\n<p align=\"center\"><font size=\"5\" face=\"黑体\">");
      out.print(request.getParameter("searchYear"));
      out.write('年');
      out.print(request.getParameter("searchMonth"));
      out.write("月员工考勤表 </p>\r\n<table width=\"100%\" border=\"0\">\r\n    <tr>\r\n    <td>单位名称：");
      out.print(request.getParameter("searchOrgName"));
      out.write("</td><td></td>\r\n    </tr>\r\n    <tr>\r\n    <td colspan=\"2\">\r\n        <table width=\"100%\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\" bordercolor=\"#000000\" bordercolordark=\"#FFFFFF\">\r\n            <tr>\r\n                <td rowspan=\"2\" align=\"center\">序<br>号</td>\r\n                <td rowspan=\"2\" align=\"center\">姓名</td>\r\n                <td rowspan=\"2\" align=\"center\">1</td>\r\n                <td rowspan=\"2\" align=\"center\">2</td>\r\n                <td rowspan=\"2\" align=\"center\">3</td>\r\n                <td rowspan=\"2\" align=\"center\">4</td>\r\n                <td rowspan=\"2\" align=\"center\">5</td>\r\n                <td rowspan=\"2\" align=\"center\">6</td>\r\n                <td rowspan=\"2\" align=\"center\">7</td>\r\n                <td rowspan=\"2\" align=\"center\">8</td>\r\n                <td rowspan=\"2\" align=\"center\">9</td>\r\n                <td rowspan=\"2\" align=\"center\">10</td>\r\n                <td rowspan=\"2\" align=\"center\">11</td>\r\n                <td rowspan=\"2\" align=\"center\">12</td>\r\n                <td rowspan=\"2\" align=\"center\">13</td>\r\n");
      out.write("                <td rowspan=\"2\" align=\"center\">14</td>\r\n                <td rowspan=\"2\" align=\"center\">15</td>\r\n                <td rowspan=\"2\" align=\"center\">16</td>\r\n                <td rowspan=\"2\" align=\"center\">17</td>\r\n                <td rowspan=\"2\" align=\"center\">18</td>\r\n                <td rowspan=\"2\" align=\"center\">19</td>\r\n                <td rowspan=\"2\" align=\"center\">20</td>\r\n                <td rowspan=\"2\" align=\"center\">21</td>\r\n                <td rowspan=\"2\" align=\"center\">22</td>\r\n                <td rowspan=\"2\" align=\"center\">23</td>\r\n                <td rowspan=\"2\" align=\"center\">24</td>\r\n                <td rowspan=\"2\" align=\"center\">25</td>\r\n                <td rowspan=\"2\" align=\"center\">26</td>\r\n                <td rowspan=\"2\" align=\"center\">27</td>\r\n                <td rowspan=\"2\" align=\"center\">28</td>\r\n                <td rowspan=\"2\" align=\"center\">29</td>\r\n                <td rowspan=\"2\" align=\"center\">30</td>\r\n                <td rowspan=\"2\" align=\"center\">31</td>\r\n                <td colspan=\"6\" align=\"center\">合计</td>\r\n");
      out.write("                <td colspan=\"2\" align=\"center\">出勤率（%）</td>\r\n            </tr>\r\n            <tr>\r\n                <td align=\"center\" height=\"22\">旷<br>工</td>\r\n                <td align=\"center\">病<br>假</td>\r\n                <td align=\"center\">事<br>假</td>\r\n                <td align=\"center\">工<br>伤</td>\r\n                <td align=\"center\">婚<br>丧</td>\r\n                <td align=\"center\">小<br>记</td>\r\n                <td align=\"center\">当月</td>\r\n                <td align=\"center\">年累</td>\r\n            </tr>\r\n            ");
int index = 1;
            Object[] statObj = null;
            char[] record = null;
      out.write("\r\n            ");
      //  logic:iterate
      org.apache.struts.taglib.logic.IterateTag _jspx_th_logic_005fiterate_005f0 = (org.apache.struts.taglib.logic.IterateTag) _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fname_005fid.get(org.apache.struts.taglib.logic.IterateTag.class);
      boolean _jspx_th_logic_005fiterate_005f0_reused = false;
      try {
        _jspx_th_logic_005fiterate_005f0.setPageContext(_jspx_page_context);
        _jspx_th_logic_005fiterate_005f0.setParent(null);
        // /personnel_manager/workAttendStat.jsp(79,12) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_logic_005fiterate_005f0.setId("statList");
        // /personnel_manager/workAttendStat.jsp(79,12) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_logic_005fiterate_005f0.setName("statList");
        int _jspx_eval_logic_005fiterate_005f0 = _jspx_th_logic_005fiterate_005f0.doStartTag();
        if (_jspx_eval_logic_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          java.lang.Object statList = null;
          if (_jspx_eval_logic_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_logic_005fiterate_005f0);
          }
          statList = (java.lang.Object) _jspx_page_context.findAttribute("statList");
          do {
            out.write("\r\n                ");

                statObj = (Object[])statList;
                record = statObj[1].toString().toCharArray();
                
            out.write("\r\n                <tr>\r\n                    <td align=\"center\" height=\"22\">");
            out.print(index++);
            out.write("</td>\r\n                    <td>");
            out.print(statObj[0]);
            out.write("</td>\r\n                    ");
for(int j = 0; j < record.length; j ++){
            out.write("\r\n                    <td align=\"center\">\r\n                        ");

                        switch(record[j]){
                            case 'a':
                            out.print("×");
                            break;
                            case 'b':
                            out.print("⊙");
                            break;
                            case 'c':
                            out.print("△");
                            break;
                            case 'd':
                            out.print("○");
                            break;
                            case 'e':
                            out.print("T");
                            break;
                            case 'f':
                            out.print("H");
                            break;
                            case 'g':
                            out.print("＄");
                            break;
                            case 'h':
                            out.print("﹟");
                            break;
                            case 'i':
                            out.print("S");
                            break;
                            case 'j':
                            out.print("@");
                            break;
                            case 'k':
                            out.print("√");
                            break;
                            case 'l':
                            out.print("C");
                            break;
                            case 'm':
                            out.print("R");
                            break;
                            case 'n':
                            out.print("F");
                            break;
                            default:
                            out.print("&nbsp");
                            break;
                        }
            out.write("\r\n                    </td>\r\n                    ");
}
            out.write("\r\n                    <td align=\"center\">");
            out.print(statObj[2]);
            out.write("</td>\r\n                    <td align=\"center\">");
            out.print(statObj[3]);
            out.write("</td>\r\n                    <td align=\"center\">");
            out.print(statObj[4]);
            out.write("</td>\r\n                    <td align=\"center\">");
            out.print(statObj[5]);
            out.write("</td>\r\n                    <td align=\"center\">");
            out.print(statObj[6]);
            out.write("</td>\r\n                    <td align=\"center\">");
            out.print(statObj[7]);
            out.write("</td>\r\n                    <td align=\"center\">");
            out.print(statObj[8]);
            out.write("</td>\r\n                    <td align=\"center\">");
            out.print(statObj[9]);
            out.write("</td>\r\n                </tr>\r\n            ");
            int evalDoAfterBody = _jspx_th_logic_005fiterate_005f0.doAfterBody();
            statList = (java.lang.Object) _jspx_page_context.findAttribute("statList");
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_logic_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_logic_005fiterate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fname_005fid.reuse(_jspx_th_logic_005fiterate_005f0);
        _jspx_th_logic_005fiterate_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_logic_005fiterate_005f0, _jsp_getInstanceManager(), _jspx_th_logic_005fiterate_005f0_reused);
      }
      out.write("\r\n        </table>\r\n    </td>\r\n    </tr>\r\n    <tr>\r\n    \t<td colspan=\"2\">符号：×事假 ⊙病假 △工伤 ○旷工 T探亲假 H婚假 ＄产假 ﹟护理假 S丧假 @调休 √上班 C出差 R休息 F放假</td>\r\n    </tr>\r\n</table>\r\n</body>\r\n</html>\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
