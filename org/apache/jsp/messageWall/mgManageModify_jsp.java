/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:03:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.messageWall;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.oa.messageWall.po.MessageWallGrantPO;

public final class mgManageModify_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.oa.messageWall.po.MessageWallGrantPO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n");

	response.setHeader("Cache-Control","no-store");
	response.setHeader("Pragma","no-cache");
	response.setDateHeader ("Expires", 0);
	
	String userId=session.getAttribute("userId").toString();

      out.write("\r\n\r\n<html>\r\n\t<head>\r\n\t\t<title>留言墙权限设置</title>\r\n\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=gb2312\">\r\n\t</head>\r\n\t\r\n\t<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n\t<link rel=stylesheet type=\"text/css\" href=\"/jsoa/public/date_picker/DateObject2.css\">\r\n\t<script type=\"text/javascript\" src=\"/jsoa/js/resource/");
      out.print(session.getAttribute("org.apache.struts.action.LOCALE"));
      out.write("/CommonResource.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"/jsoa/js/js.js\" type=\"text/javascript\"></script>\r\n\t\r\n\t<script type=\"text/javascript\">\r\n\t//初始化页面\r\n\tfunction init() {\r\n\t\t");

		if(request.getAttribute("updateGrant")!=null && request.getAttribute("updateGrant")=="1"){
		
      out.write("\r\n\t\t\tvar hhref=\"/jsoa/messageWallGrantAction.do?method=setting\";\r\n\t\t\topener.location.href= hhref ;\r\n\t\t\twindow.close();\r\n\t\t");

		}
		
      out.write("\r\n\t\tvar width=screen.width;\r\n\t\tif(width>800){\r\n\t\t\tresizeWin(820,660);\r\n\t\t}else{\r\n\t\t\tresizeWin(800,600);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction checkNum(){\r\n\t\tvar reg = new RegExp(\"^[1-9][0-9]*$\");\r\n\t\tvar num = document.getElementById(\"wallmaxnum\");\r\n\t\tif(\"\" == num.value){\r\n\t\t\talert(\"填写最大限制数！\");\r\n\t\t\tnum.focus();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif(!reg.test(num.value)){\r\n\t\t\talert(\"最大限制数必须为非0的正整数！\");\r\n\t\t\tnum.focus();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tfunction saveForm(){\r\n\t\tif(checkNum()){\r\n\t\t\tmgForm.submit();\r\n\t\t}\r\n\t}\r\n\t</script>\r\n\t<script src=\"/jsoa/js/checkText.js\" type=\"text/javascript\"></script>\r\n\t<script type=\"text/javascript\" src=\"/jsoa/js/openEndow.js\"></script>\r\n\t<script src=\"/jsoa/js/util.js\" type=\"text/javascript\"></script>\r\n\t");

	MessageWallGrantPO mg = null!=request.getAttribute("mg") ? (MessageWallGrantPO) request.getAttribute("mg") 
								: new MessageWallGrantPO();
	 
      out.write("\r\n\t<body class=\"MainFrameBox Pupwin\" onload=\"init();\">\r\n\t\t<form id=\"mgForm\" action=\"/jsoa/messageWallGrantAction.do?method=save\" method=\"post\">\r\n\t\t\t<input type=\"hidden\" value=\"");
      out.print(mg.getId() );
      out.write("\" id=\"id\" name=\"id\">\r\n\t\t\t<table width=\"100%\" border=\"0\" cellpadding=\"10\" cellspacing=\"0\" class=\"docBoxNoPanel\">\r\n\t \t\t\t<tr>\r\n    \t\t\t\t<td>\r\n\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellpadding=\"2\" cellspacing=\"1\">\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td width=\"100\" nowrap=\"nowrap\">\r\n\t\t\t\t\t\t\t\t\t模块名称&nbsp;<label class=\"mustFillcolor\">*</label>：\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t        <td width=\"40%\">\r\n\t\t\t\t\t\t        \t<input type=\"text\" class=\"inputText\" id=\"wallname\" name=\"wallname\" value=\"");
      out.print(null==mg.getWallname() ? "" : mg.getWallname() );
      out.write("\" style=\"width:100%;\" readonly=\"readonly\">\r\n\t\t\t\t\t\t        </td>\r\n\t\t\t\t\t\t        <td width=\"100\" nowrap=\"nowrap\">最大限制数&nbsp;<label class=\"mustFillcolor\">*</label>：</td>\r\n\t\t\t\t\t\t        <td>\r\n\t\t\t\t\t\t        \t<input type=\"text\" class=\"inputText\" id=\"wallmaxnum\" name=\"wallmaxnum\" value=\"");
      out.print(mg.getWallmaxnum() );
      out.write("\" style=\"width:70%;\">\r\n\t\t\t\t\t\t        \t<label class=\"mustFillcolor\">（非0正整数）</label>\r\n\t\t\t\t\t\t        </td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>使用用户&nbsp;&nbsp;：</td>\r\n\t\t\t\t\t\t        <td colspan=\"3\">\r\n\t\t\t\t\t\t        \t<input type=\"hidden\" id=\"userRange\" name=\"userRange\" value=\"");
      out.print(null==mg.getWallreadorg() ? "" : mg.getWallreadorg() );
      out.print(null==mg.getWallreadgroup() ? "" : mg.getWallreadgroup() );
      out.print(null==mg.getWallreader() ? "" : mg.getWallreader() );
      out.write("\">\r\n\t\t\t\t\t\t        \t<input type=\"hidden\" id=\"select_user\" name=\"select_user\" value=\"");
      out.print(session.getAttribute("grantRange"));
      out.write("\">\r\n\t\t\t\t\t\t        \t<input class=\"inputText\" type=\"text\" readonly=\"readonly\" style=\"width:100%;\" title=\"请点击选择\" id=\"userRangeCh\" name=\"userRangeCh\" value=\"");
      out.print(null==mg.getWallreadname() ? "" : mg.getWallreadname() );
      out.write("\" \r\n\t\t\t\t\t\t        \t\tonclick=\"openEndow('userRange', 'userRangeCh', mgForm.userRange.value,mgForm.userRangeCh.value,'userorggroup','no','userorggroup',document.all.select_user.value)\">\r\n\t\t\t\t\t\t\t\t </td>\r\n\t\t\t\t\t\t\t\t<td>&nbsp;</td>\r\n\t\t\t\t\t\t\t\t<td>&nbsp;</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>管&nbsp;理&nbsp;员&nbsp;&nbsp;：</td>\r\n\t\t\t\t\t\t        <td colspan=\"3\">\r\n\t\t\t\t\t\t        \t<input type=\"hidden\" id=\"wallmanagerid\" name=\"wallmanagerid\" value=\"");
      out.print(null==mg.getWallmanagerid() ? "" : mg.getWallmanagerid() );
      out.write("\">\r\n\t\t\t\t\t\t        \t<input type=\"text\" id=\"wallmanager\" name=\"wallmanager\" style=\"width:100%;\" class=\"inputTextarea\" readonly=\"readonly\" rows=\"1\" title=\"请点击选择\" value=\"");
      out.print(null==mg.getWallmanager() ? "" : mg.getWallmanager() );
      out.write("\" \r\n\t\t\t\t\t\t        \t\tonclick=\"openEndow('wallmanagerid','wallmanager',mgForm.wallmanagerid.value, mgForm.wallmanager.value,'user','no','user','*0*');\">\r\n\t\t\t\t\t\t\t\t </td>\r\n\t\t\t\t\t\t\t\t<td>&nbsp;</td>\r\n\t\t\t\t\t\t\t\t<td>&nbsp;</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>&nbsp;</td>\r\n\t\t\t\t\t\t\t\t<td>&nbsp;</td>\r\n\t\t\t\t\t\t\t\t<td>&nbsp;</td>\r\n\t\t\t\t\t\t\t\t<td>&nbsp;</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td colspan=\"4\">\r\n\t\t\t\t\t\t\t\t");

								if(null != request.getAttribute("update")){
									
      out.write("\r\n\t\t\t\t\t\t\t\t\t<input class=\"btnButton4font\" type=\"button\" onclick=\"saveForm()\" value=\"保存退出\">\r\n\t\t\t\t\t\t\t\t\t<input class=\"btnButton4font\" type=\"reset\" value=\"重置\">\r\n\t\t\t\t\t\t\t\t\t<input class=\"btnButton4font\" type=\"button\" onclick=\"javascript:window.close()\" value=\"退出\">\r\n\t\t\t\t\t\t\t\t\t");

								}
								 
      out.write("\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</table>                       \r\n\t\t</form>\r\n\t</body>\r\n</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
