/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:59:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.weixin.workflow;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.oa.personalwork.person.po.PersonPO;
import java.util.List;
import com.js.lang.Resource;
import com.js.util.util.CharacterTool;

public final class workFlowList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.util.util.CharacterTool");
    _jspx_imports_classes.add("com.js.oa.personalwork.person.po.PersonPO");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.js.lang.Resource");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n\r\n\r\n");

request.setCharacterEncoding("UTF-8");
String projectId=request.getParameter("relProjectId");
if(projectId==null || "null".equals(projectId) || "".equals(projectId)){
	projectId="-1";
}
String moduleId=(String)request.getAttribute("moduleId");
if(null!=moduleId&&!"".equals(moduleId)){ 
	moduleId=CharacterTool.getFilteScriptString(moduleId);            
}

String loginType = null!=session.getAttribute("loginType") ? session.getAttribute("loginType").toString() : "";
 
      out.write("\r\n<!DOCTYPE html>\r\n<html>\r\n\t<head>\r\n\t\t<META content=\"text/html; charset=UTF-8\" http-equiv=\"Content-Type\">\r\n\t\t<META name=viewport content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;\">\r\n\t\t<META name=apple-touch-fullscreen content=YES>\r\n\t\t<META name=apple-mobile-web-app-capable content=no>\r\n\t\t<link rel=\"stylesheet\" href=\"/jsoa/css/weixin/weixin_main.css\">\r\n\t\t<TITLE>发起流程</TITLE>\r\n\t</head>\r\n    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/wap2/commonImportOther.jsp", out, false);
      out.write("\r\n\t<body class=\"bodyClass\" onload=\"setHeader('javascript:closeWindow(\\'gzlc\\');','发起流程');\">\r\n\t\t<div class=\"list workflowcss\">\r\n\t\t    ");

			java.util.List processList = (java.util.List) request.getAttribute("processList");
			java.util.ArrayList packageList = (java.util.ArrayList) request.getAttribute("packageList");
			Object[] packageObj = null;
			Object[] processObj = null;
			if(null!=processList && processList.size()>0 && null!=packageList && packageList.size()>0){
				for(int i = 0; i < packageList.size(); i ++){
					packageObj = (Object[]) packageList.get(i);
					
      out.write("\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div style=\"height: 40px; background: #efefef;\">\r\n\t\t\t\t\t\t\t<span style=\"height: 40px; line-height: 40px; margin-left: 5px; font-size: 20px;\"><b>");
      out.print(packageObj[1] );
      out.write("</b></span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t");

						int count = 0;
						for(int j = 0; j < processList.size(); j ++){
							processObj = (Object[]) processList.get(j);
							if((packageObj[0].toString()).equals(processObj[0].toString())){
								count++;
		  						
      out.write("\r\n\t\t  \t\t\t\t\t\t<a style=\"text-decoration: none;\"  href=\"javascript:void(0);\" onclick=\"newForm('");
      out.print(processObj[2]);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(processObj[4]);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(processObj[3]);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(processObj[5]);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(processObj[6]);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(processObj[7]);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(processObj[8]);
      out.write("');\">\r\n\t\t  \t\t\t\t\t\t\t<div class=\"item\" style=\"height: 40px;\">\r\n\t\t\t\t\t\t\t\t   \t\t<div class=\"picture\">\r\n\t\t\t\t\t\t\t\t   \t\t\t<img style=\"width: 30px; height: 30px; vertical-align: middle;\" border='0' alt=\"发起流程\" src=\"images/weixin/detail.png\"/>\r\n\t\t\t\t\t\t\t\t   \t\t</div>\r\n\t\t\t\t\t\t\t\t   \t\t<div class=\"content\">\r\n\t\t\t\t\t\t\t\t   \t\t\t<div class=\"first\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">");
      out.print(processObj[3]);
      out.write("</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t        </div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t  \t\t\t\t\t\t</a>\r\n\t\t  \t\t\t\t\t\t");

		  					}
						}
						if(count == 0){
							
      out.write("没有流程");

						}
						
      out.write("\r\n\t\t\t\t\t</div>\r\n\t\t          \t");

				}
			} else{
				
      out.write("\r\n\t\t\t\t<div class=\"item\">\r\n\t\t\t\t\t<div class=\"nodata\">没有查询到数据！</div>\r\n\t        \t</div>\r\n\t\t\t\t");

			}
			
      out.write("\r\n\t\t</div>\r\n\t</body>\r\n\t<script type=\"text/javascript\">\r\n\tfunction newForm(processId,tableId,processName,processType,remindField,formType,jspFile){\r\n\t    var url = '/jsoa/weiXinJsFlowAddAction.do?action=add&processId='+processId+'&tableId='+tableId+'&processName='+processName+'&processType='+processType+'&remindField='+remindField+'&moduleId=");
      out.print(moduleId);
      out.write("&formType='+formType+'&relProjectId=");
      out.print(projectId);
      out.write("&jspFile='+jspFile\r\n\t    ");

	    if("wap".equals(loginType)){
	    	
      out.write("\r\n\t    \twindow.parent.parent.location.href = url;\r\n\t    \t");

	    } else{
	    	
      out.write("\r\n\t    \tlocation.href = url;\r\n\t    \t");

	    }
	    
      out.write("\r\n    }\r\n\t</script>\r\n</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
