/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:40:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.portal2;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.js.oa.portal.service.*;

public final class selectColumPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("com.js.oa.portal.service");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n\r\n\r\n");

String tablevalue=request.getParameter("tablevalue")==null?"":request.getParameter("tablevalue");
String cNames=request.getParameter("cNames")==null?"":request.getParameter("cNames");
String cIds=request.getParameter("cIds")==null?"":request.getParameter("cIds");
String domainId = session.getAttribute("domainId") == null ? "0": session.getAttribute("domainId").toString();
CustomDesktopBD customDesktopBD=new CustomDesktopBD();
List listInfo = customDesktopBD.listInformationClass(domainId);

      out.write("\r\n\r\n<html>\r\n  <head>\r\n    \r\n    <title>选择栏目</title>\r\n    \r\n\t<meta http-equiv=\"pragma\" content=\"no-cache\">\r\n\t<meta http-equiv=\"cache-control\" content=\"no-cache\">\r\n\t<meta http-equiv=\"expires\" content=\"0\">    \r\n\t<meta http-equiv=\"keywords\" content=\"keyword1,keyword2,keyword3\">\r\n\t<meta http-equiv=\"description\" content=\"This is my page\">\r\n\t<!--\r\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"styles.css\">\r\n\t-->\r\n\r\n  </head>\r\n  \r\n  <body>\r\n    <table>\r\n    ");
 
    if(!listInfo.isEmpty()) {  
    
     for(int i=0;i<listInfo.size();i++)
    {
     Object[] obj = (Object[]) listInfo.get(i);
     String className=obj[2].toString();
	 String classValue=obj[0].toString();
      if(i%2==0){
      out.write("\r\n\t\t  <tr>\r\n\t\t");
}
      out.write("\r\n\t\t\r\n\t\t<td><input type=checkbox  value=\"");
      out.print(classValue);
      out.write('"');
      out.write(' ');
if((","+cIds+",").indexOf(","+classValue+",")>=0){ 
      out.write(" checked");
} 
      out.write("  onclick=addNameAndId('");
      out.print(classValue);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(className);
      out.write("',this) />");
      out.print(className);
      out.write("</td>\r\n\t\t\r\n\t\t");

		if(i%2==1){ 
      out.write("\r\n\t\t\t\t</tr>\r\n\t");
} 
      out.write("\r\n    ");
} }
      out.write("\r\n    <tr>\r\n    <td>\r\n    <input type=\"button\" value=\"提交\"  onclick=\"save();\" />\r\n    </td>\r\n    </tr>\r\n    </table>\r\n  </body>\r\n  \r\n  <script type=\"text/javascript\">\r\n  var colnames=\"");
      out.print(cNames);
      out.write("\";\r\n    var colids=\"");
      out.print(cIds);
      out.write("\";\r\n     \r\n      function addNameAndId(id,name,one)\r\n      {\r\n          if(one.checked)\r\n          {\r\n          colnames=colnames+name+\",\";\r\n          colids=colids+id+\",\";\r\n          }else\r\n          {\r\n          colnames=colnames.replace(name+\",\",\"\");    \r\n          colids=colnames.replace(id+\",\",\"\");    \r\n          \r\n          }\r\n      \r\n      }\r\n  \r\n      function save(){\r\n       opener.document.getElementById(\"columName\").value=colnames;\r\n       opener.document.getElementById(\"columIds\").value=colids;\r\n         window.close();\r\n      }\r\n  </script>\r\n  \r\n  \r\n</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
