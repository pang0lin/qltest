/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:43:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.userdb.newCode;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.oa.userdb.newCode.po.CodeSetPO;
import com.js.oa.userdb.newCode.po.NewCodePO;

public final class codeSet_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-nested.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-tiles.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-logic.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-html.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-template.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-bean.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.oa.userdb.newCode.po.CodeSetPO");
    _jspx_imports_classes.add("com.js.oa.userdb.newCode.po.NewCodePO");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fhtml_005fhtml;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fscope_005fname_005fid;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fhtml_005fhtml = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fscope_005fname_005fid = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fhtml_005fhtml.release();
    _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fscope_005fname_005fid.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);

      out.write('\r');
      out.write('\n');
      //  html:html
      org.apache.struts.taglib.html.HtmlTag _jspx_th_html_005fhtml_005f0 = (org.apache.struts.taglib.html.HtmlTag) _005fjspx_005ftagPool_005fhtml_005fhtml.get(org.apache.struts.taglib.html.HtmlTag.class);
      boolean _jspx_th_html_005fhtml_005f0_reused = false;
      try {
        _jspx_th_html_005fhtml_005f0.setPageContext(_jspx_page_context);
        _jspx_th_html_005fhtml_005f0.setParent(null);
        int _jspx_eval_html_005fhtml_005f0 = _jspx_th_html_005fhtml_005f0.doStartTag();
        if (_jspx_eval_html_005fhtml_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=gb2312\">\r\n<link href=\"/jsoa/skin/");
            out.print(session.getAttribute("skin"));
            out.write("/style-");
            out.print(session.getAttribute("browserVersion"));
            out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<title>设置文号编码规则</title>\r\n");

	if(request.getAttribute("reload")!=null){ 
	String codeId=(String)request.getAttribute("codeId");

            out.write("\r\n<script language=\"JavaScript\">\r\nlocation.href=((window.location.href).substring(0,(window.location.href).indexOf(\"/jsoa\")))+\"/jsoa/NewCodeAction.do?action=codeSetList&codeId=");
            out.print(codeId);
            out.write("\";\r\n</script>\r\n");

}else{ 
	NewCodePO newCodePo = (NewCodePO)request.getAttribute("newCodePo");
	String codeParameterFormat=(String)request.getAttribute("codeParameterFormat");

            out.write("\r\n</head>\r\n<body class=\"MainFrameBox Pupwin\">\r\n<input type=\"hidden\" id=\"codeId\" name=\"codeId\" value=\"");
            out.print(newCodePo.getCodeId());
            out.write("\">\r\n<table width=\"100%\" border=\"0\" cellpadding=\"1\" cellspacing=\"10\" class=\"docBoxNoPanel\">\r\n\t <tr>\r\n\t\t<td style=\"width:100px;\">文号名称：</td>\r\n\t\t<td>");
            out.print(newCodePo.getCodeName() );
            out.write("</td>\r\n\t</tr> \r\n\t<tr>\r\n\t\t<td style=\"width:100px;\">文号描述：</td>\r\n\t\t<td>");
            out.print( newCodePo.getCodeContent()==null||"null".equals(newCodePo.getCodeContent())?"":newCodePo.getCodeContent());
            out.write("</td>\r\n\t</tr> \r\n\t<tr>\r\n\t\t<td style=\"width:100px;\">参考文号格式：</td>\r\n\t\t<td>");
            out.print(codeParameterFormat );
            out.write("</td>\r\n\t</tr> \r\n</table> \r\n<table width=\"100%\" height=\"25\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"inlineBottomLine\">\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n    <td align=\"right\" nowrap>    \r\n    <input type=\"button\" class=\"btnButton2Font\" onclick=\"javascript:addCodeSet()\" value=\"新增分段\"/>\r\n    </td>\r\n  </tr>\r\n</table>\r\n<div style=\"height:400px; overflow:auto;\">\r\n<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"listTable\">\r\n\t<tr >\r\n\t\t<td class=\"listTableHead\" style=\"width:50px;\">序号</td>\r\n\t\t<td class=\"listTableHead\" style=\"width:30%;\">分段名称</td>\r\n\t\t<td class=\"listTableHead\" style=\"width:15%;\">分段类型</td>\r\n\t\t<td class=\"listTableHead\">分段格式</td>\r\n\t\t<td width=\"10%\" nowrap class=\"listTableHeadLast\"> 操作</td>\r\n\t</tr>\r\n\t\t");

			int index=0;
		
            out.write("\r\n\t\t");
            //  logic:iterate
            org.apache.struts.taglib.logic.IterateTag _jspx_th_logic_005fiterate_005f0 = (org.apache.struts.taglib.logic.IterateTag) _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fscope_005fname_005fid.get(org.apache.struts.taglib.logic.IterateTag.class);
            boolean _jspx_th_logic_005fiterate_005f0_reused = false;
            try {
              _jspx_th_logic_005fiterate_005f0.setPageContext(_jspx_page_context);
              _jspx_th_logic_005fiterate_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fhtml_005f0);
              // /userdb/newCode/codeSet_list.jsp(68,2) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_logic_005fiterate_005f0.setId("codeSetList");
              // /userdb/newCode/codeSet_list.jsp(68,2) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_logic_005fiterate_005f0.setName("codeSetList");
              // /userdb/newCode/codeSet_list.jsp(68,2) name = scope type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_logic_005fiterate_005f0.setScope("request");
              int _jspx_eval_logic_005fiterate_005f0 = _jspx_th_logic_005fiterate_005f0.doStartTag();
              if (_jspx_eval_logic_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                java.lang.Object codeSetList = null;
                if (_jspx_eval_logic_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_logic_005fiterate_005f0);
                }
                codeSetList = (java.lang.Object) _jspx_page_context.findAttribute("codeSetList");
                do {
                  out.write("\r\n\t\t");
			
			index++;				
		CodeSetPO obj = (CodeSetPO) codeSetList;
			String listClass="listTableLine1";
			if(index%2 != 0){
				listClass="listTableLine2";
			}
		
                  out.write("\r\n\r\n\t<tr>\r\n\t\t<td class=\"");
                  out.print(listClass);
                  out.write('"');
                  out.write('>');
                  out.print(obj.getCodeSetOrder() );
                  out.write("&nbsp;</td>\r\n\t\t<td class=\"");
                  out.print(listClass);
                  out.write('"');
                  out.write('>');
                  out.write('第');
                  out.print(obj.getCodeSetOrder() );
                  out.write("分段&nbsp;</td>\r\n\t\t\r\n\t\t");

		 if("s".equals(obj.getCodeSetType())){
			 out.print("<td class='"+listClass+"'>文本类型&nbsp;</td>");
			 out.print("<td class='"+listClass+"'>"+obj.getCodeSetContent()+"&nbsp;</td>");
		 }else if("n".equals(obj.getCodeSetType())){
			 out.print("<td class='"+listClass+"'>数字类型&nbsp;</td>");
			 out.print("<td class='"+listClass+"'>"+obj.getTempCodeSetNum()+"&nbsp;</td>");
		 }else if("d".equals(obj.getCodeSetType())){
			 out.print("<td class='"+listClass+"'>日期类型&nbsp;</td>");
			 out.print("<td class='"+listClass+"'>"+obj.getTempCodeSetDate()+"&nbsp;</td>");
		 }else{
			 out.print("<td class='"+listClass+"'>&nbsp;</td>");
			 out.print("<td class='"+listClass+"'>&nbsp;</td>");
		 }
		
                  out.write("\r\n\t\t<td class=\"");
                  out.print(listClass);
                  out.write(" listTableLineLastTD\">\r\n\t\t\t<img src=\"/jsoa/images/modi.gif\" border=\"0\" style=\"cursor:pointer;\" title=\"修改分段\" onclick=\"modiCodeSet('");
                  out.print(obj.getCodeSetId());
                  out.write("');\"></a>&nbsp;\r\n\t\t\t");

			if("d".equals(obj.getCodeSetType())){
			
                  out.write("\r\n\t\t\t<img border=\"0\" src=\"/jsoa/images/del.gif\" style=\"cursor:pointer;\" title=\"删除分段\" onclick=\"if(confirm('删除日期分段可能造成依赖该分段数字类型发生变化，确定删除吗?')) {delCodeSet('");
                  out.print(obj.getCodeSetId() );
                  out.write("');}\"/>\r\n\t\t    ");
}else{ 
                  out.write("\r\n\t\t    <img border=\"0\" src=\"/jsoa/images/del.gif\" style=\"cursor:pointer;\" title=\"删除分段\" onclick=\"if(confirm('删除分段可能造成已使用文号格式变化，确定删除吗?')) {delCodeSet('");
                  out.print(obj.getCodeSetId() );
                  out.write("');}\"/>\r\n\t\t    ");
} 
                  out.write("\r\n\t\t</td>\r\n\t</tr>\r\n\t\t\r\n\t");
                  int evalDoAfterBody = _jspx_th_logic_005fiterate_005f0.doAfterBody();
                  codeSetList = (java.lang.Object) _jspx_page_context.findAttribute("codeSetList");
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
                if (_jspx_eval_logic_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.popBody();
                }
              }
              if (_jspx_th_logic_005fiterate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fscope_005fname_005fid.reuse(_jspx_th_logic_005fiterate_005f0);
              _jspx_th_logic_005fiterate_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_logic_005fiterate_005f0, _jsp_getInstanceManager(), _jspx_th_logic_005fiterate_005f0_reused);
            }
            out.write("\r\n</table>\r\n</div>\r\n</body>\r\n");
} 
            out.write('\r');
            out.write('\n');
            int evalDoAfterBody = _jspx_th_html_005fhtml_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_html_005fhtml_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fhtml_005fhtml.reuse(_jspx_th_html_005fhtml_005f0);
        _jspx_th_html_005fhtml_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_html_005fhtml_005f0, _jsp_getInstanceManager(), _jspx_th_html_005fhtml_005f0_reused);
      }
      out.write("\r\n<script type=\"text/javascript\">\n\tfunction addCodeSet(){\r\n\t\tJSMainWinOpen2(\"/jsoa/NewCodeAction.do?action=toAddCodeSet&codeId=\"+document.getElementById(\"codeId\").value,\"\",\"\",500,300);\r\n\t}\r\n\tfunction modiCodeSet(codeSetId){\r\n\t\tJSMainWinOpen2(\"/jsoa/NewCodeAction.do?action=toModCodeSet&codeSetId=\"+codeSetId,\"\",\"\",500,300);\r\n\t}\r\n\tfunction delCodeSet(codeSetId){\r\n\t\tlocation.href=((window.location.href).substring(0,(window.location.href).indexOf(\"/jsoa\")))+\"/jsoa/NewCodeAction.do?action=delCodeSet&codeSetId=\"+codeSetId+\"&codeId=\"+document.getElementById(\"codeId\").value;\r\n\t}\n</script>\r\n<script src=\"/jsoa/js/util.js\"></script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
