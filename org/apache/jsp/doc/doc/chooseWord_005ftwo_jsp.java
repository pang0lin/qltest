/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:05:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.doc.doc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.doc.doc.service.SenddocumentBD;
import java.util.List;
import java.util.ArrayList;

public final class chooseWord_005ftwo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-nested.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-tiles.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-logic.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-html.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-template.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-bean.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.doc.doc.service.SenddocumentBD");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);
request.setCharacterEncoding("GBK");

String corpId=session.getAttribute("corpId").toString();


      out.write("\r\n\r\n");

List list=new ArrayList();
SenddocumentBD bd=new SenddocumentBD();

if(request.getParameter("type")!=null&&request.getParameter("type").toString().equals("1")){
  	list=bd.getNoSeqWord(corpId);
}else{
 	list=bd.getNoNumWord(corpId);
}


//原来已选的(有些还没写进数据库)( 在保存之前)
String oldWordName=request.getParameter("wordName")==null?"":request.getParameter("wordName").toString();
String oldWordIds=request.getParameter("wordIds")==null?"":request.getParameter("wordIds").toString();
String [] oldWordNameArr=new String []{};
String [] oldWordIdArr=new String []{};
if(oldWordIds!=null&&oldWordIds.length()>1){
  oldWordNameArr=oldWordName.split(",");
  oldWordIdArr=oldWordIds.split(",");

}


//原始已选的 （实质保存到数据库的）  应 为可选
String dummyFileWord=request.getParameter("dummyFileWord")==null?"":request.getParameter("dummyFileWord").toString();
String dummyFileWordId=request.getParameter("dummyFileWordId")==null?"":request.getParameter("dummyFileWordId").toString();

String []  dArr=new String []{};
String [] dIdArr=new String []{};
if(dummyFileWordId!=null&&dummyFileWordId.length()>1){
  dArr=dummyFileWord.split(",");
  dIdArr=dummyFileWordId.split(",");

}


      out.write("\r\n\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=gb2312\">\r\n<meta name=\"GENERATOR\" content=\"Microsoft FrontPage 4.0\">\r\n<meta name=\"ProgId\" content=\"FrontPage.Editor.Document\">\r\n<title>选择字号</title>\r\n<link href=\"skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<script src=\"/jsoa/js/js.js\" language=\"javascript\"></script>\r\n<script language=\"javascript\" src=\"js/openEndow.js\"></script>\r\n</head>\r\n<body bgcolor=\"#B7B7B7\" onLoad=\"resizeWin(500,350);\">\r\n<table width=\"100%\" align=\"center\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"listTable\">\r\n\t<tr align=\"center\">\r\n\t\t\t<td width=\"40%\" class=\"listTableHead\">可选的</td>\r\n\t\t\t<td width=\"10%\" class=\"listTableHead\">&nbsp;</td>\r\n\t\t\t<td nowrap class=\"listTableHeadLast\">已选的</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td align=\"center\"><select size=12 name=\"field\" id=\"field\" multiple=\"true\">\r\n            ");
if(list!=null&&list.size()>0){
			 for(int i=0;i<list.size();i++){
			  Object obj[]=(Object[])list.get(i);
      out.write("\r\n\t\t\t  ");

				String temp="true";
			   	if(oldWordIdArr!=null&&oldWordIdArr.length>0){
			    for(int ii=0;ii<oldWordIdArr.length;ii++){
				    if(oldWordIdArr[ii].toString().equals(""+obj[0])){
						temp="false";			
						   }
				}
			    
			  } 
			  
			  if(temp.equals("true")){
			  
      out.write("\r\n\t\t\t  <option value=\"");
      out.print(obj[0]);
      out.write('"');
      out.write('>');
      out.print(obj[1]);
      out.write("</option>\r\n\t\t\t \r\n\t\t\t ");
}}			
			}
      out.write("\r\n\r\n             ");
//最原始的可选的不能丢
			   if(dIdArr!=null&&dIdArr.length>0){
			    for (int i=0;i<dIdArr.length;i++){
				 String temp="true";
				 //过滤到已选的
			   	if(oldWordIdArr!=null&&oldWordIdArr.length>0){
			    for(int ii=0;ii<oldWordIdArr.length;ii++){
				    if(oldWordIdArr[ii].toString().equals(""+dIdArr[i])){
						temp="false";			
				 }
				}
			    
			  } 
                 
               if(temp.equals("true")){
      out.write("\r\n\t\t\t   \r\n\t\t\t   \t  <option value=\"");
      out.print(dIdArr[i]);
      out.write('"');
      out.write('>');
      out.print(dArr[i]);
      out.write("</option>\r\n\t\t\t   \r\n\t\t\t  ");
 }
				
				}
			   }
			 			 
			 
      out.write("\r\n\r\n\t\t</select></td>\r\n\t\t<td><div align=\"center\" valign=\"center\"><input type=\"button\" class=\"btnButton2font\" onclick=\"transferOptions1()\" value=\">\" />\r\n\t\t\t<br>\r\n\t\t\t<input type=\"button\" class=\"btnButton2font\" onclick=\"transferOptionsAll1()\" value=\">>\" />\r\n\t\t\t<br>\r\n\t\t\t<input type=\"button\" class=\"btnButton2font\" onclick=\"transferOptions2()\" value=\"<\" />\r\n\t\t\t<br>\r\n\t\t\t<input type=\"button\" class=\"btnButton2font\" onclick=\"transferOptionsAll2()\" value=\"<<\" /></div></td>\r\n\t\t<td align=\"center\"><select size=12 name=\"queryField\" id=\"queryField\" multiple=\"true\">\r\n\t\t      ");
if(oldWordIdArr!=null&&oldWordIdArr.length>0)
			     for(int i=0;i<oldWordIdArr.length;i++){
				   String  wname=""+oldWordNameArr[i];
				   String  wId=""+oldWordIdArr[i];
      out.write("\r\n\t\t\t\t \r\n\t\t\t\t  <option value=\"");
      out.print(wId);
      out.write('"');
      out.write('>');
      out.print(wname);
      out.write("</option>\r\n\t\t\t\t ");
}		  
			  
      out.write("\r\n\r\n\t\t</select></td>\r\n\t</tr>\r\n\r\n\t <tr>\r\n\t\t<td><input type=\"button\" class=\"btnButton2Font\" onClick=\"javascript:chooseOk();\" value=\"保存\" />\r\n\t\t   <input type=\"button\" class=\"btnButton2Font\" onClick=\"javascript:cancel();\" value=\"退出\" />\r\n\t\t</td>\r\n     </tr>\r\n\t\r\n</table>\r\n</body>\r\n</html>\r\n\r\n<script>\r\n\r\n\r\nfunction transferOptions1(){\r\n\t//var srcSel =eval(\"document.all.\"+srcObj);\r\n\r\n\tvar srcValue = new Array();\r\n\tvar srcText  = new Array();\r\n\tvar desValue = new Array();\r\n\tvar desText  = new Array();\r\n\tnSrc = 0;\r\n\tnDes = 0;\r\n\tnLen =\tdocument.all.field.length;\r\n\tfor(i=0;i<nLen;i++){\r\n\t\t//var optObj = document.all.field.options[i];\r\n\r\n\t\tvar strValue =document.all.field.options[i].value;\r\n\t\tvar strText = document.all.field.options[i].text;\r\n\t\t \r\n\r\n\t\tif(document.all.field.options[i].selected){\r\n\t\t\tdocument.all.field.options[i].selected =false;\r\n\r\n\t\r\n\r\n\t\t\tdesValue[nDes] = strValue;\t \r\n\t\t\tdesText[nDes]=strText;\r\n\t\t\tnDes ++;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tsrcValue[nSrc] = strValue;\r\n\t\t\tsrcText[nSrc]=strText;\r\n\t\t\tnSrc ++;\r\n\t\t}\r\n\t}\r\n\r\n\twhile(document.all.field.length>0)\r\n");
      out.write("\t\tdocument.all.field.remove(0);\r\n\r\n\r\n\tfor(i=0;i<nSrc;i++){\r\n\t\tvar newOpt =document.createElement(\"OPTION\");\r\n\t\tnewOpt.value=srcValue[i];\r\n\t\tnewOpt.text =srcText[i];\r\n\t\tdocument.all.field.add(newOpt);\r\n\t}\r\n\r\n\tfor(i=0;i<nDes;i++){\r\n\t\tvar newOpt =document.createElement(\"OPTION\");\r\n\t\tnewOpt.value=desValue[i];\r\n\t\tnewOpt.text =desText[i];\r\n\t\tdocument.all.queryField.add(newOpt);\r\n\t}\r\n\r\n\tdocument.all.queryField.selectedIndex =-1;\r\n\t}\r\n\r\nfunction transferOptionsAll1(){\r\n\tvar opts =document.all.field.options;\r\n\r\n\tfor(j=0,i=0;i<opts.length;i++){\r\n\t\topts[i].selected=true;\r\n\t}\r\n\ttransferOptions1();\r\n}\r\n\r\nfunction transferOptionsAll2(){\r\n\tvar opts =document.all.queryField.options;\r\n\r\n\tfor(j=0,i=0;i<opts.length;i++){\r\n\t\topts[i].selected=true;\r\n\t}\r\n\ttransferOptions2();\r\n}\r\n\r\n\r\nfunction transferOptions2(){\r\n\r\n\r\n\r\n\tvar srcValue = new Array();\r\n\tvar srcText  = new Array();\r\n\tvar desValue = new Array();\r\n\tvar desText  = new Array();\r\n\tnSrc = 0;\r\n\tnDes = 0;\r\n\tnLen =\tdocument.all.queryField.length;\r\n\tfor(i=0;i<nLen;i++){\r\n\r\n\t\tvar strValue =document.all.queryField.options[i].value;\r\n");
      out.write("\t\tvar strText = document.all.queryField.options[i].text;\r\n\r\n\t\tif(document.all.queryField.options[i].selected){\r\n\t\t\tdocument.all.queryField.options[i].selected =false;\r\n\r\n\t\t\tdesValue[nDes] = strValue;\r\n\t\t\tdesText[nDes]=strText;\r\n\t\t\tnDes ++;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tsrcValue[nSrc] = strValue;\r\n\t\t\tsrcText[nSrc]=strText;\r\n\t\t\tnSrc ++;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\twhile(document.all.queryField.length>0)\r\n\t\tdocument.all.queryField.remove(0);\r\n\r\n\r\n\tfor(i=0;i<nSrc;i++){\r\n\t\tvar newOpt =document.createElement(\"OPTION\");\r\n\t\tnewOpt.value=srcValue[i];\r\n\t\tnewOpt.text =srcText[i];\r\n\t\tdocument.all.queryField.add(newOpt);\r\n\t}\r\n\r\n\tfor(i=0;i<nDes;i++){\r\n\t\tvar newOpt =document.createElement(\"OPTION\");\r\n\t\tnewOpt.value=desValue[i];\r\n\t\tnewOpt.text =desText[i];\r\n\t\tdocument.all.field.add(newOpt);\r\n\t}\r\n\r\n\tdocument.all.field.selectedIndex =-1;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction chooseOk(){\r\n\tvar wordVaules=\"\";\r\n\tvar wordTexts=\"\";\r\n\r\n   \tnLen =document.all.queryField.length;\r\n\tfor(i=0;i<nLen;i++){\r\n\r\n\t\tvar strValue =document.all.queryField.options[i].value;\r\n\t\tvar strText = document.all.queryField.options[i].text;\r\n");
      out.write("\r\n\t\t\r\n\t\t   wordVaules=wordVaules+strValue+\",\";\r\n\t\t   wordTexts=wordTexts+strText+\",\";\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\tif(wordTexts.length>1){\r\n\t\t wordTexts=wordTexts.substring(0,wordTexts.length-1);\r\n\t\r\n\t}\r\n\tif(wordVaules.length>1){\r\n\t\t wordVaules=wordVaules.substring(0,wordVaules.length-1);\r\n\t}\r\n\t\t \r\n opener.document.all.fileWord.value=wordTexts\r\n opener.document.all.fileWordIds.value=wordVaules\r\n window.close();\r\n}\r\n\r\nfunction  cancel(){\r\n\r\n\twindow.close();\r\n\r\n}\r\n</script>\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
