/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:48:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.routine.boardroom;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Locale;
import java.util.Calendar;

public final class boardRoomApplyLookState_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-nested.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-tiles.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-logic.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-html.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-template.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-bean.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Calendar");
    _jspx_imports_classes.add("java.util.Locale");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fhtml_005fhtml;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fname_005fid;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fhtml_005fhtml = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fname_005fid = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fhtml_005fhtml.release();
    _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fname_005fid.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");
      //  html:html
      org.apache.struts.taglib.html.HtmlTag _jspx_th_html_005fhtml_005f0 = (org.apache.struts.taglib.html.HtmlTag) _005fjspx_005ftagPool_005fhtml_005fhtml.get(org.apache.struts.taglib.html.HtmlTag.class);
      boolean _jspx_th_html_005fhtml_005f0_reused = false;
      try {
        _jspx_th_html_005fhtml_005f0.setPageContext(_jspx_page_context);
        _jspx_th_html_005fhtml_005f0.setParent(null);
        int _jspx_eval_html_005fhtml_005f0 = _jspx_th_html_005fhtml_005f0.doStartTag();
        if (_jspx_eval_html_005fhtml_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n<head>\r\n");

        response.setHeader("Cache-Control","no-store");
    	response.setHeader("Pragma","no-cache");
    	response.setDateHeader ("Expires", 0);


            out.write("\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=GBK\">\r\n<link href=\"/jsoa/skin/");
            out.print(session.getAttribute("skin"));
            out.write("/style-");
            out.print(session.getAttribute("browserVersion"));
            out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<script src=\"js/js.js\" language=\"javascript\"></script>\r\n<title>查询</title>\r\n\r\n<script language=\"JavaScript\">\r\n<!--\r\nfunction MM_openBrWindow(theURL,winName,features) { //v2.0\r\n  JSMainWinOpen(theURL,winName,features);\r\n}\r\n//-->\r\n</script>\r\n");

	String name = request.getParameter("name");
	String type = request.getParameter("type");
	if("0".equals(type)){
		type = "小型";
	}else if("1".equals(type)){
		type = "中型";
	}else if("2".equals(type)){
		type = "大型";
	}

	long[] weekDay = {0,0,0,0,0,0,0};
	if(request.getAttribute("weekDay")!=null){
		weekDay = (long[])request.getAttribute("weekDay");
	}

	Object[] obj =null;



            out.write("\r\n<body   class=\"MainFrameBox\" onload=\"resizeWin(800,600);\">\r\n<table width=\"100%\" border=0 cellpadding=\"0\" cellspacing=\"0\">\r\n<tr>\r\n<td>\r\n\r\n<table width=\"100%\" border=\"0\" cellpadding=\"10\" cellspacing=\"0\" class=\"searchBar\">\r\n  <tr>\r\n                             <td width=\"20\" nowrap></td>\r\n                              <td>\r\n                                  <font color=\"#FFFFFF\">会议室名称：</font>\r\n\t\t\t\t\t\t\t\t  <input name=\"name\" type=\"text\"  value=\"");
            out.print(name);
            out.write("\"  size=\"20\" class=\"inputText\" readonly=\"true\"/>&nbsp;\r\n                                  <font color=\"#FFFFFF\">会议室类型：</font>\r\n\t\t\t\t\t\t\t\t  <input name=\"type\" type=\"text\"  value=\"");
            out.print(type);
            out.write("\"  size=\"20\" class=\"inputText\" readonly=\"true\"/>\r\n                              </td>\r\n\t\t\t\t\t\t\t  <td width=\"16\" nowrap></td>\r\n                            </tr>\r\n                        </table>\r\n\r\n<table width=\"100%\" height=\"25\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"\">\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n</table>\r\n\r\n<table width=\"250%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"listTable outTopline\">\r\n                      <form  name=\"form1\" method=\"post\">\r\n                      <tr align=\"center\">\r\n                        <td nowrap=\"nowrap\" width=\"10%\" class=\"listTableHead\" >&nbsp;<font color=\"#FFFFFF\">日期</font>&nbsp;</td>\r\n                        <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">0：00</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">0：30</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">1：00</font>&nbsp;</td>\r\n");
            out.write("                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">1：30</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">2：00</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">2：30</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">3：00</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">3：30</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">4：00</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">4：30</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">5：00</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">5：30</font>&nbsp;</td>\r\n");
            out.write("                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">6：00</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">6：30</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">7：00</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">7：30</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">8：00</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">8：30</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">9：00</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">9：30</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">10：00</font>&nbsp;</td>\r\n");
            out.write("                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">10：30</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">11：00</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">11：30</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">12：00</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">12：30</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">13：00</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">13：30</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">14：00</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">14：30</font>&nbsp;</td>\r\n");
            out.write("                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">15：00</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">15：30</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">16：00</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">16：30</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">17：00</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">17：30</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">18：00</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">18：30</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">19：00</font>&nbsp;</td>\r\n");
            out.write("                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">19：30</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">20：00</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">20：30</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">21：00</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">21：30</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">22：00</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">22：30</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHead\">&nbsp;<font color=\"#FFFFFF\">23：00</font>&nbsp;</td>\r\n                    <td nowrap=\"nowrap\" width=\"5%\" class=\"listTableHeadLast\">&nbsp;<font color=\"#FFFFFF\">23：30</font>&nbsp;</td>\r\n");
            out.write("                      </tr>\r\n\r\n\r\n\r\n                      ");

						int index = 0;
						java.util.GregorianCalendar calendar = new java.util.GregorianCalendar(Locale.CHINESE);

						String year = "";
						String month = "";
						String day = "";
						String week = "";
                        for( int i = 0; i < weekDay.length; i ++){
						String display = "No";

						index++;
						String listClass="listTableLine1";
						if(index%2 != 0){listClass="listTableLine2";}
						calendar.setTimeInMillis(weekDay[i]);
						year = String.valueOf(calendar.get(Calendar.YEAR));
						month = String.valueOf(calendar.get(Calendar.MONTH)+1);
						if(month.length()==1){
						month = "0"+month;
						}
						day = String.valueOf(calendar.get(Calendar.DAY_OF_MONTH));
						if(day.length()==1){
						day = "0"+day;
						}
						week = year+"-"+month+"-"+day;


						
            out.write("\r\n                      <tr>\r\n\r\n                        <td width=\"10%\" align=\"left\" class=\"");
            out.print(listClass);
            out.write("\" nowrap=\"nowrap\">&nbsp;");
            out.print(week);
            out.write("&nbsp;</td>\r\n\t\t\t\t\t\t");


							int msel = 0;
							String millisecond;

							for(int j=0; j<48; j++){
							msel = msel+1800;
							if(j==0){
							msel = 0;
							}
							millisecond = String.valueOf(msel);
							int y = 0;


						
            out.write("\r\n                                                <td class=\"");
            out.print(listClass);
            out.write("\">\r\n\r\n\t\t\t\t\t\t");

						String display2 = "Yes";
						
            out.write("\r\n\t\t\t\t\t\t");
            //  logic:iterate
            org.apache.struts.taglib.logic.IterateTag _jspx_th_logic_005fiterate_005f0 = (org.apache.struts.taglib.logic.IterateTag) _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fname_005fid.get(org.apache.struts.taglib.logic.IterateTag.class);
            boolean _jspx_th_logic_005fiterate_005f0_reused = false;
            try {
              _jspx_th_logic_005fiterate_005f0.setPageContext(_jspx_page_context);
              _jspx_th_logic_005fiterate_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fhtml_005f0);
              // /routine/boardroom/boardRoomApplyLookState.jsp(181,6) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_logic_005fiterate_005f0.setId("List");
              // /routine/boardroom/boardRoomApplyLookState.jsp(181,6) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_logic_005fiterate_005f0.setName("lookStateBoardroomApplyList");
              int _jspx_eval_logic_005fiterate_005f0 = _jspx_th_logic_005fiterate_005f0.doStartTag();
              if (_jspx_eval_logic_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                java.lang.Object List = null;
                if (_jspx_eval_logic_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_logic_005fiterate_005f0);
                }
                List = (java.lang.Object) _jspx_page_context.findAttribute("List");
                do {
                  out.write("\r\n\r\n\t\t\t\t\t\t\t");

								obj = (Object[]) List;

								if(obj[0].toString().substring(0,10).equals(week) && millisecond.equals(obj[1].toString())){
									display = "Yes";
									}

								y++;

							
                  out.write("\r\n\r\n\r\n                        ");
 if("Yes".equals(display) && !"No".equals(display2)){ display2 = "No";
                  out.write("<img src=\"images/del.gif\">");
}
                  out.write("\r\n\r\n\t\t\t\t\t\t");

						if(obj[0].toString().substring(0,10).equals(week) && millisecond.equals(obj[2].toString())){
										display = "No";
									}
						
                  out.write("\r\n\t\t\t\t\t\t");
                  int evalDoAfterBody = _jspx_th_logic_005fiterate_005f0.doAfterBody();
                  List = (java.lang.Object) _jspx_page_context.findAttribute("List");
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
                if (_jspx_eval_logic_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.popBody();
                }
              }
              if (_jspx_th_logic_005fiterate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fname_005fid.reuse(_jspx_th_logic_005fiterate_005f0);
              _jspx_th_logic_005fiterate_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_logic_005fiterate_005f0, _jsp_getInstanceManager(), _jspx_th_logic_005fiterate_005f0_reused);
            }
            out.write("\r\n\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t");
}
            out.write("\r\n\r\n                      </tr>\r\n                      ");
}
            out.write("\r\n                    </form>\r\n\r\n</table>\r\n</td>\r\n</tr>\r\n</table>\r\n</body>\r\n");
            int evalDoAfterBody = _jspx_th_html_005fhtml_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_html_005fhtml_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fhtml_005fhtml.reuse(_jspx_th_html_005fhtml_005f0);
        _jspx_th_html_005fhtml_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_html_005fhtml_005f0, _jsp_getInstanceManager(), _jspx_th_html_005fhtml_005f0_reused);
      }
      out.write("\r\n<script language=\"javascript\">\r\n<!--\r\n\r\n\r\n\r\n\r\n//-->\r\n</script>\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
