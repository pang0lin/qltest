/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:55:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.info;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class informationmanager_005fplayer_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n<title>播放</title>\r\n<link rel=stylesheet type=\"text/css\" href=\"../style/cssmain.css\">\r\n<body>\r\n");


String fileServer = session.getAttribute("fileServer").toString();


      out.write('\r');
      out.write('\n');

String fileType = request.getParameter("fileType");
String path = request.getParameter("path");
String fileName = request.getParameter("fileName");

String srcLove="0000";
 if(fileName!=null && fileName.toString().length()>6 && fileName.toString().substring(4,5).equals("_")){
 	srcLove=fileName.toString().substring(0,4);
 }else{
 	srcLove="0000";
 }
path=srcLove+"/"+path;

String hostString = request.getServerName() + ":" + request.getServerPort();

if(fileType.equals("MPG") || fileType.equals("MP3") || fileType.equals("WMV") || fileType.equals("MOV") || fileType.equals("ASF") || fileType.equals("AVI") || fileType.equals("MPEG")){

      out.write("\r\n  <object classid=\"clsid:22d6f312-b0f6-11d0-94ab-0080c74c7e95\" >\r\n    <param name=\"showstatusbar\" value=\"1\">\r\n    <param name=\"filename\" value=\"http://");
      out.print(hostString);
      out.write("/jsoa/upload/");
      out.print(path);
      out.write('/');
      out.print(fileName);
      out.write("\">\r\n    <embed src=\"http://");
      out.print(hostString);
      out.write("/jsoa/upload/");
      out.print(path);
      out.write('/');
      out.print(fileName);
      out.write("\"></embed>\r\n  </object>\r\n");

}else if(fileType.equals("RM") || fileType.equals("RMVB")){

      out.write("\r\n  <object classid=\"clsid:cfcdaa03-8be4-11cf-b84b-0020afbbccfa\" width=\"400\" height=\"350\">\r\n      <param name=\"src\" value=\"http://");
      out.print(hostString);
      out.write("/jsoa/upload/");
      out.print(path);
      out.write('/');
      out.print(fileName);
      out.write("\">\r\n      <param name=\"console\" value=\"clip1\"><param name=\"controls\" value=\"imagewindow\">\r\n      <param name=\"autostart\" value=\"true\">\r\n  </object>\r\n  <object classid=\"clsid:cfcdaa03-8be4-11cf-b84b-0020afbbccfa\" height=\"32\" width=\"400\">\r\n      <param name=\"src\" value=\"http://");
      out.print(hostString);
      out.write("/jsoa/upload/");
      out.print(path);
      out.write('/');
      out.print(fileName);
      out.write("\">\r\n      <param name=\"controls\" value=\"controlpanel\"><param name=\"console\" value=\"clip1\">\r\n  </object>&nbsp;\r\n  如果不能播放请<a href=\"/jsoa/info/RealONEPlayerV6.0.11.868.exe\">下载realone播放器</a>\r\n");

}else if(fileType.equals("SWF")){

      out.write("\r\n  <object classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" width=\"400\" height=\"350\" codebase=\"/jsoa/info/SWFLASH.CAB\">\r\n      <param name=\"movie\" value=\"");
      out.print(fileServer);
      out.write("/upload/");
      out.print(path);
      out.write('/');
      out.print(fileName);
      out.write("\">\r\n      \r\n      <param name=\"quality\" value=\"high\">\r\n\r\n\t  <embed src=\"");
      out.print(fileServer);
      out.write("/upload/");
      out.print(path);
      out.write('/');
      out.print(fileName);
      out.write("\" type=\"application/x-shockwave-flash\"></embed>\r\n     \r\n      \r\n  </object>\r\n");
}else if(fileType.equals("IPX")){
      out.write("\r\n\t  <embed src=\"");
      out.print(fileServer);
      out.write("/upload/");
      out.print(path);
      out.write('/');
      out.print(fileName);
      out.write("\" width=\"364\" height=\"359\"></embed>\r\n      \r\n   &nbsp;如果不能播放请<a href=\"/jsoa/info/axIpx32.exe\">下载安装IPIX插件</a>\r\n");

}else if(fileType.equals("DWF")){

      out.write("\r\n<object id='FNDWF70' classid='clsid:B2BE75F3-9197-11CF-ABF4-08000996E931' width='600' height='400' align='center'>\r\n\t  <param name='Filename' value='");
      out.print(fileServer);
      out.write("/upload/");
      out.print(path);
      out.write('/');
      out.print(fileName);
      out.write("'>\r\n        \r\n  <param name='UserInterface' value='on'>\r\n  <param name='BackColor' value='#FFFFFF'>\r\n  <embed width='600' height='400' filename='/jsoa/upload/");
      out.print(path);
      out.write('/');
      out.print(fileName);
      out.write("'\r\nuserinterface='on'\r\nbackcolor='#FFFFFF'\r\nalign='center'\r\nname='FNDWF'\r\npluginspage='http://www.autodesk.com/prods/whip' src='");
      out.print(fileServer);
      out.write("/upload/");
      out.print(path);
      out.write('/');
      out.print(fileName);
      out.write("'></embed> </object>\r\n<br><br><font size=\"2\">如果不能浏览请<a href=\"/jsoa/info/ExpressViewerSetup.exe\">下载安装插件</font></a>\r\n");

}

      out.write("\r\n</body>\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
