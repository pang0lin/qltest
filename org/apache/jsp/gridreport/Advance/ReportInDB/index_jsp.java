/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:41:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.gridreport.Advance.ReportInDB;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.servlet.jsp.JspWriter;
import javax.servlet.http.HttpServletResponse;
import java.util.zip.DeflaterOutputStream;
import java.lang.*;
import java.io.*;
import java.sql.*;
import java.util.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.lang");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("javax.servlet.jsp.JspWriter");
    _jspx_imports_classes.add("javax.servlet.http.HttpServletResponse");
    _jspx_imports_classes.add("java.util.zip.DeflaterOutputStream");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n\t<head>\r\n\t\t<title>Web报表(B/S报表)演示　－ 服务端生成加载报表数据脚本代码</title>\r\n\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\r\n\t\t<script src=\"../../CreateControl.js\" type=\"text/javascript\"></script>\r\n\t\t<script type=\"text/javascript\">\r\n// <!CDATA[\r\n\r\nfunction window_onload() \r\n{\r\n    //将数据库表中的各个报表名称加入到下拉选择框中\r\n    var oOption;\r\n    \r\n    ");

    try
    {
        String url="jdbc:microsoft:sqlserver://localhost;DatabaseName=gridreport";
        Class.forName("com.microsoft.jdbc.sqlserver.SQLServerDriver");// Class.forName 装载驱动程序 
        Connection con=DriverManager.getConnection(url, "sa", "");    //用适当的驱动程序类与 DBMS 建立一个连接
        
        Statement stmt=con.createStatement();                         //用于发送简单的SQL语句
        ResultSet rs=stmt.executeQuery("select ReportName from Report order by ReportName");
        while( rs.next() ) 
	    {
	
      out.write("\r\n            oOption = document.createElement(\"OPTION\");\r\n            oOption.text=\"");
      out.print(rs.getString(1));
      out.write("\";\r\n            selOpenName.add(oOption);\t\r\n    ");

        } 
        rs.close();
        stmt.close();
        con.close();
    }
    catch(Exception e)
    {
        //out.println(e.toString());
    }
    
      out.write("\r\n    \r\n    selOpenName_onchange()\r\n}\r\n\r\n//根据选择的报表项目从服务器端载入报表模板\r\nfunction selOpenName_onchange() {\r\n    var ReportName = selOpenName.all(selOpenName.selectedIndex).text;\r\n    \r\n    var LoadURL = \"ReportLoadFromDB.jsp?Report=\" + ReportName;\r\n    var success = ReportDesigner.Report.LoadFromURL(LoadURL);\r\n    \r\n    if (success == true)\r\n    {\r\n        ReportDesigner.Reload();\r\n        \r\n        txtSaveName.value = ReportName;\r\n    }\r\n    else\r\n    {\r\n        alert(\"载入报表失败!\");\r\n    }\r\n}\r\n\r\n//将当前设计的报表模板保存到服务器上\r\nfunction btnSave_onclick() {\r\n    var ReportName = txtSaveName.value;\r\n    if (ReportName == \"\")\r\n    {\r\n        alert(\"没有指定报表的名称，不能进行保存！\");\r\n        return;\r\n    }\r\n\r\n    ReportDesigner.Post();\r\n    var SaveURL = \"ReportSaveToDB.jsp?Report=\" + ReportName;\r\n    var success = ReportDesigner.Report.SaveToURL(SaveURL);\r\n    \r\n    if (success == true)\r\n        alert(\"保存报表成功!\");\r\n    else\r\n        alert(\"保存报表失败!\");\r\n}\r\n\r\n//显示打开文件对话框选择一个文件，从客户端本地文件中载入报表模板\r\nfunction btnLoadLocalFile_onclick() {\r\n     var fd = new ActiveXObject(\"MSComDlg.CommonDialog\");\r\n");
      out.write("    fd.Filter = \"Grid++Report(*.grf)|*.grf\";\r\n    //fd.Filter = \"*.*\";\r\n    fd.FilterIndex = 2;\r\n    // must setting\r\n    fd.MaxFileSize = 128;\r\n    fd.ShowOpen(); //fd.ShowSave();\r\n    var FileName = fd.FileName;\r\n    if (FileName != \"\")\r\n    {\r\n        var fso = new ActiveXObject(\"Scripting.FileSystemObject\");\r\n        FileName = fso.GetFileName(FileName);\r\n        \r\n        txtSaveName.value = FileName.substr(0, FileName.length-4);\r\n      \r\n        ReportDesigner.Report.LoadFromFile(FileName);\r\n        ReportDesigner.Reload();\r\n    }\r\n}\r\n\r\n// ]]>\r\n        </script>\r\n\r\n</head>\r\n\t<body style=\"margin:0\" onload=\"return window_onload()\">\r\n        <table height=\"100%\" width=\"100%\" border=\"1\">\r\n            <tr>\r\n                <td atomicselection=\"true\" style=\"font-size: 11pt; height: 29px\">\r\n                    服务器上的报表:<select id=\"selOpenName\" name=\"selOpenName\" style=\"width: 118px\" type=\"text/javascript\" onchange=\"return selOpenName_onchange()\">\r\n                    </select>\r\n                    报表名称：<input id=\"txtSaveName\" style=\"width: 129px\" type=\"text\" />\r\n");
      out.write("                    <input id=\"btnSave\" name=\"btnSave\" type=\"button\" value=\"保存到服务器\" type=\"text/javascript\" onclick=\"return btnSave_onclick()\" />&nbsp;\r\n                    <input id=\"btnLoadLocalFile\" name=\"btnLoadLocalFile\" onclick=\"return btnLoadLocalFile_onclick()\" style=\"width: 135px\"\r\n                        type=\"button\" value=\"载入本地文件...\" /><br />\r\n                    <a href=\"ViewReport.htm\" target=\"_blank\">在插件中显示报表</a>&nbsp; <a href=\"PrintDirect.htm\" target=\"_blank\">直接打印报表</a>\r\n                </td>\r\n            </tr>\r\n            <tr height=\"100%\">\r\n                <td atomicselection=\"true\">\r\n                    <script type=\"text/javascript\"> \r\n                        CreateDesigner(\"\", \"\", \"\");\r\n                    </script>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n\t</body>\r\n</html> ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
