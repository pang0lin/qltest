/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:46:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.wap2.workitem;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.text.SimpleDateFormat;
import com.js.oa.scheme.worklog.po.WorkLogPO;
import com.js.util.util.DateHelper;
import com.js.wap.util.WapUtil;
import com.js.wap.bean.WorkDealWithBean;
import com.js.oa.jsflow.po.WFWorkPO;

public final class item_005finfo_005f3g_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.util.util.DateHelper");
    _jspx_imports_classes.add("com.js.wap.bean.WorkDealWithBean");
    _jspx_imports_classes.add("com.js.oa.scheme.worklog.po.WorkLogPO");
    _jspx_imports_classes.add("com.js.wap.util.WapUtil");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("com.js.oa.jsflow.po.WFWorkPO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n");

request.setCharacterEncoding("UTF-8");

String type=request.getParameter("type");
String path=request.getContextPath();

String workId="";
String beginIndex="0";
String status="";

if(request.getParameter("workId")!=null){
	workId=request.getParameter("workId");
	session.setAttribute("workId",workId);
}else{
	workId=session.getAttribute("workId").toString();
}
if(request.getParameter("beginIndex")!=null){
	beginIndex=request.getParameter("beginIndex");
	session.setAttribute("beginIndex",beginIndex);
}else{
	beginIndex=session.getAttribute("beginIndex").toString();
}
if(request.getParameter("status")!=null){
	status=request.getParameter("status");
	session.setAttribute("status",status);
}else{
	status=session.getAttribute("status").toString();
}
WorkDealWithBean bean=new WorkDealWithBean();
Map itemInfo=bean.getWorkDealWithSimpleInfo(workId);

Map subTable=null;
if(itemInfo!=null){
	subTable=(Map)itemInfo.get("subTableInfo");
}

String operId="",operName="";
String mainUserType="100";
String mainNextActivityId="",mainNextActivityName="";

WFWorkPO po=(WFWorkPO)itemInfo.get("workPO");

com.js.oa.jsflow.service.WorkFlowBD workFlowBD = new com.js.oa.jsflow.service.WorkFlowBD();
//String[] include_actiClass = workFlowBD.getActivityClass(po.getWorkTableId().toString(), po.getWorkRecordId().toString(), po.getWorkActivity().toString());
String activityClass=itemInfo.get("activityClass")==null?"":itemInfo.get("activityClass").toString();
String curCommField=itemInfo.get("curCommField")==null?"":itemInfo.get("curCommField").toString();
String opinionMust=itemInfo.get("opinionMust")==null?"0":itemInfo.get("opinionMust").toString();
String actiCommFieldType=itemInfo.get("actiCommFieldType")==null?"0":itemInfo.get("actiCommFieldType").toString();


//记录接收待办时间
com.js.oa.jsflow.vo.WorkLogVO workLogVO = new com.js.oa.jsflow.vo.WorkLogVO();
	workLogVO.setSendUserId(session.getAttribute("userId").toString());
	workLogVO.setSendUserName(session.getAttribute("userName").toString());
	workLogVO.setSendAction(po.getWorkCurStep()+"签收");
	workLogVO.setReceiveUserName(" ");
	workLogVO.setProcessId(po.getWorkProcessId().toString());
	workLogVO.setTableId(po.getWorkTableId().toString());
	workLogVO.setRecordId(po.getWorkRecordId().toString());
	workLogVO.setDomainId(session.getAttribute("domainId").toString());
new com.js.oa.jsflow.service.WorkFlowButtonBD().setWorkViewedDate(workId,workLogVO);


String showDoc = request.getParameter("showDoc")!=null&& "doc".equals(request.getParameter("showDoc"))?"&showDoc=doc":"";

      out.write("\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\r\n<HTML xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<HEAD>\r\n<TITLE>处理待办</TITLE>\r\n<META content=\"text/html; charset=UTF-8\" http-equiv=Content-Type>\r\n");
if(subTable!=null && subTable.size()>0){ 
      out.write("\r\n<META name=viewport content=\"user-scalable=1;\">\r\n");
}else{ 
      out.write("\r\n <META name=viewport content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=1;\"> \r\n");
} 
      out.write("\r\n<META name=apple-touch-fullscreen content=YES>\r\n<META name=apple-mobile-web-app-capable content=no>\r\n<LINK rel=apple-touch-icon href=\"");
      out.print(path);
      out.write("/wap2/images/iphone.jpg\">\r\n<LINK rel=stylesheet type=text/css href=\"");
      out.print(path);
      out.write("/wap2/css/main_3g.css\">\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(path);
      out.write("/wap2/js/cookie.js\"></SCRIPT>\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(path);
      out.write("/wap2/js/util.js\"></SCRIPT>\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(path);
      out.write("/wap2/js/frost.js\"></SCRIPT>\r\n\r\n<SCRIPT language=JavaScript>\r\n<!--\r\nfunction init(){\r\n    //...\r\n    var backUrl = \"");
      out.print(path);
      out.write("/login.jsp?action=logout\";\r\n    setTimeout(scrollTo, 100, 0, 1);\r\n}\r\n\r\nfunction gotoPage(url, flag){\r\n    if(flag){\r\n        location.href=encodeURI(url);\r\n    }\r\n}\r\n\r\nfunction findParent(node, localName)\r\n{\r\n\twhile (node && (node.nodeType != 1 || node.localName.toLowerCase() != localName))\r\n\t\tnode = node.parentNode;\r\n\treturn node;\r\n}\r\n\r\nfunction checkOnlineUser(){\r\n\tvar url = encodeURI(\"");
      out.print(path);
      out.write("/common/checkOnlineUser.jsp\");\r\n\tvar resulthtml = XmlHttpHelper.transmit(false, \"get\", \"text\", url, null, null);\r\n\t//alert(resulthtml);\r\n\tvar result = resulthtml.replace(/\\r|\\n/gm,'');//alert(result);\r\n\treturn result;\r\n}\r\n\r\nfunction displaySearch(flag){\r\n    if(flag==1){\r\n        document.all.dd.style.display=\"none\";\r\n        document.all.search.style.display=\"\";\r\n    }else{\r\n        document.all.dd.style.display=\"\";\r\n        document.all.search.style.display=\"none\";\r\n    }\r\n}\r\n//-->\r\n</SCRIPT>\r\n\r\n<META name=GENERATOR content=\"MSHTML 8.00.6001.19154\">\r\n</HEAD>\r\n\r\n<body onload=\"init();\">\r\n\t<div class=\"main\">\r\n\t\t<div id=\"top\">\r\n\t\t\t<span id=\"lp2\"><div class=\"btn_3\"><a href=\"");
      out.print(path );
      out.write("/WorkDealWithAction.do?action=list&status=");
      out.print(status );
      out.write("&beginIndex=");
      out.print(beginIndex+showDoc );
      out.write("\">返回</a></div></span>\r\n\t\t\t<span id=\"title2\"></span>\r\n\t\t</div>\r\n\t\t<form name=\"frm\" action=\"\" method=\"post\">\r\n\t\t");
if(itemInfo!=null){ 
		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm");	
	 
      out.write("\r\n\t<input type=\"hidden\" name=\"actiCommFieldType\" value=\"");
      out.print(actiCommFieldType);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"opinionMust\" value=\"");
      out.print(opinionMust);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"workId\" value=\"");
      out.print(workId);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"tableId\" value=\"");
      out.print(po.getWorkTableId());
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"recordId\" value=\"");
      out.print(po.getWorkRecordId());
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"workType\" value=\"");
      out.print(po.getWorkType());
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"processId\" value=\"");
      out.print(po.getWorkProcessId());
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"processName\" value=\"");
      out.print(po.getWorkFileType());
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"curActivityId\" value=\"");
      out.print(po.getWorkActivity());
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"curActivityName\" value=\"");
      out.print(po.getWorkCurStep());
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"submitPerson\" value=\"");
      out.print(po.getWorkSubmitPerson());
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"submitPersonId\" value=\"");
      out.print(po.getWfSubmitEmployeeId());
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"stepCount\" value=\"");
      out.print(po.getWorkStepCount());
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"remindField\" value=\"\"/>\t\r\n\t<input type=\"hidden\" name=\"isStandForWork\" value=\"");
      out.print(po.getIsStandForWork());
      out.write("\"/>\t\r\n\t<input type=\"hidden\" name=\"standForUserId\" value=\"");
      out.print(po.getStandForUserId());
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"standForUserName\" value=\"");
      out.print(po.getStandForUserName());
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"mainLinkFile\" value=\"");
      out.print(po.getWorkMainLinkFile());
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"titleFieldName\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"msgFrom\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"inWorkType\" value=\"\"/>\t\t\t\r\n\t<input type=\"hidden\" name=\"submitTime\" value=\"");
      out.print(new SimpleDateFormat("yyyy-MM-dd hh:mm:ss").format(po.getWorkSubmitTime()));
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"submitPersonTime\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"initActivity\" value=\"");
      out.print(po.getInitActivity());
      out.write("\"/>\r\n\t\r\n\t<!-- 新增表单域 -->\r\n\t<input type=\"hidden\" name=\"isSend\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"fromdesktop\" value=\"0\"/>\r\n\t<input type=\"hidden\" name=\"operName\" value=\"");
      out.print(operName);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"operId\" value=\"");
      out.print(operId);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"mainUserType\" value=\"");
      out.print(mainUserType);
      out.write("\"/><!--参与人类型-->\r\n\t<input type=\"hidden\" name=\"mainAllowStandFor\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"mainAllowCancel\" value=\"");
      out.print(po.getWorkAllowCancel() );
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"mainAllowTransition\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"mainPressType\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"mainDeadLineTime\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"mainPressMotionTime\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"mainNextActivityId\" value=\"");
      out.print(mainNextActivityId);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"mainNextActivityName\" value=\"");
      out.print(mainNextActivityName);
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"emergence\" value=\"\"/><!--缓急程度-->\r\n\t<input type=\"hidden\" name=\"needSendMsg\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"smsContent\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"dealTips\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"processDeadlineDate\" value=\"\"/>\r\n\t\r\n\t<!--阅件参数-->\r\n\t<input type=\"hidden\" name=\"mainNeedPassRound\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"mainPassRoundUserType\" value=\"\"/><!--阅件人类型-->\r\n\t<input type=\"hidden\" name=\"passRoundId\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"passRoundName\" value=\"\"/>\r\n\r\n\t<!--子流程临时workID-->\r\n\t<input type=\"hidden\" name=\"subProcTempWorkId\" value=\"\"/>\r\n\t\r\n\t<!--催办-->\r\n\t<input type=\"hidden\" name=\"pressUserId\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"pressUserName\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"pressTitle\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"pressContent\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"pressSMS\" value=\"\"/>\r\n\t\r\n\t<!--反馈-->\r\n\t<input type=\"hidden\" name=\"feedUserId\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"feedUserName\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"feedTitle\" value=\"\"/>\r\n");
      out.write("\t<input type=\"hidden\" name=\"feedContent\" value=\"\"/>\r\n\t\r\n\t<!--转办-->\r\n\t<input type=\"hidden\" name=\"transitionUser\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"transitionUserName\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"tranType\" value=\"");
      out.print(po.getTranType());
      out.write("\"/>\r\n\t<input type=\"hidden\" name=\"tranFromPersonId\" value=\"");
      out.print(po.getTranFromPersonId());
      out.write("\"/>\r\n\t\r\n\t<!--收回-->\r\n\t<input type=\"hidden\" name=\"receiveActivityId\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"receiveActivityName\" value=\"\"/>\r\n\t<input type=\"hidden\" name=\"receiveUserName\" value=\"\"/>\r\n\t\r\n\t<!--阅件-->\r\n\t<input type=\"hidden\" name=\"passLinkFile\" value=\"\"/>\r\n\t\r\n\t<!--当前节点办理方式 默认 1为多人并行-->\r\n\t<input type=\"hidden\" name=\"approveMode\" value=\"0\"/>\t\r\n\t\r\n\t<input type=\"hidden\" name=\"activityClass\" value=\"");
      out.print(activityClass);
      out.write("\">\r\n\t<input type=\"hidden\" name=\"include_commField\" value=\"");
      out.print(curCommField);
      out.write("\">\r\n\t\r\n\t\r\n\t<input type=\"hidden\" name=\"showDoc\" value=\"");
      out.print(request.getParameter("showDoc")==null?"":request.getParameter("showDoc") );
      out.write("\">\r\n\r\n\r\n\r\n     <div class=\"f_1\">");
      out.print(po.getWorkTitle() );
      out.write("</div>\r\n     <div class=\"box_2\">\r\n     \t");

     	//循环显示每一个字段的内容
     	List<String[]> fieldInfo=(List<String[]>)itemInfo.get("mainTableInfo");
     	String[] temp;
     	for(int i=0;i<fieldInfo.size();i++){
     		temp=fieldInfo.get(i);
     		if(temp[1]==null){
     		}else{
     	
      out.write(" \t\r\n\t\t\t<div class=\"list_2\">\r\n\t\t\t\t<div class=\"t1\">");
      out.print(temp[1] );
      out.write("：</div>\r\n\t\t\t\t<div class=\"t2\">");
      out.print((temp[6]==null?"":temp[6]).replace("@@curUser@@",session.getAttribute("userName")+"")
						.replace("@@curOrg@@",session.getAttribute("orgName")+"") );
      out.write("</div>\r\n\t\t\t\t<div class=\"clear\"></div>\r\n\t\t\t</div>\r\n\t\t");
}
     	}
     	//显示子表
     	if(subTable!=null && subTable.size()>0){
     		int fieldCount=0;
     		List<String> keyList=new ArrayList<String>();
     		String key;
     		Iterator it=subTable.keySet().iterator();
     		while(it.hasNext()){
     			//取得key(子表名)
     			key=it.next().toString();
     			Map<String,List<String[]>> subTableList=(Map<String,List<String[]>>)subTable.get(key);
     			
      out.write("\r\n     \t\t\t<div class=\"list_2\">\r\n\t\t\t\t\t<div class=\"t1\">");
      out.print(key );
      out.write("：</div>\r\n\t\t\t\t\t<div class=\"t2\">\r\n\t\t\t\t\t<table width=100% border=\"1\"  cellpadding=\"1\" cellspacing=\"0\" bordercolordark=\"#000000\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t");
				
				//显示子表的字段名称
				List<String[]> tableFieldInfo=subTableList.get("fieldInfo");
				fieldCount=tableFieldInfo.size();
				int eq=100/fieldCount;
				for(int i=0;i<fieldCount;i++){
					temp=tableFieldInfo.get(i);
					if(i==0){
						
      out.write("\r\n\t\t\t\t\t\t<td nowrap>");
      out.print(temp[1]);
      out.write("</td>\r\n\t\t\t\t\t\t");
	
					}else{
						
      out.write("\r\n\t\t\t\t\t\t<td nowrap>");
      out.print(temp[1]);
      out.write("</td>\r\n\t\t\t\t\t\t");

					}
				}
      out.write("\r\n\t\t\t\t</tr>\r\n\t\t\t\t\r\n\t\t\t\t");

				//显示字段值
				tableFieldInfo=subTableList.get("subTableFieldValue");
				for(int i=0;i<tableFieldInfo.size();i++){
					
      out.write("\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t");

					temp=tableFieldInfo.get(i);
					for(int j=0;j<fieldCount;j++){
						if(j==0){
							
      out.write("\r\n\t\t\t\t\t\t\t<td nowrap>");
      out.print((temp[j]==null || "".equals(temp[j]))?"&nbsp;":temp[j]);
      out.write("</td>\r\n\t\t\t\t\t\t\t");
	
						}else{
							
      out.write("\r\n\t\t\t\t\t\t\t<td nowrap>");
      out.print((temp[j]==null || "".equals(temp[j]))?"&nbsp;":temp[j]);
      out.write("</td>\r\n\t\t\t\t\t\t\t");

						}
					}
					
      out.write("\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t");

				}				
				
				if(subTableList.get("subTableSumValue")!=null){
				
      out.write("\r\n\t\t\t\t<tr>\r\n\t\t\t\t <td colspan=\"");
      out.print(fieldCount);
      out.write("\" align=\"right\">合计：");
      out.print(subTableList.get("subTableSumValue").get(0)[0] );
      out.write("</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t");
} 
      out.write("\r\n\t\t\t\t</table>\r\n\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"clear\"></div>\r\n\t\t\t\t</div>\r\n     \t\t\t");

     		}
     		
     	}
		
     	//循环显示每一个批示意见的内容
     	temp=(String[])itemInfo.get("mainCommentInfo");
     	
     	if(temp!=null){
     	
      out.write(" \t\r\n\t\t\t<div class=\"list_2\">\r\n\t\t\t\t<div class=\"t1\">");
      out.print(temp[1] );
      out.write("：</div>\r\n\t\t\t\t<div class=\"t2\">");
      out.print(temp[6] );
      out.write("</div>\r\n\t\t\t\t<div class=\"clear\"></div>\r\n\t\t\t</div>\r\n\t\t");

     	}
     	
      out.write("\r\n\t\t\r\n\t\t\t<div class=\"list_2\">\r\n\t\t\t\t<div class=\"t12\">\t\t\t\t\r\n\t\t\t\t");

				if(activityClass.equals("0")){
					//子过程节点
					out.print("当前节点为子过程节点，请先发起子流程！");
				}else{
					String operButton=itemInfo.get("operButton")==null?"":itemInfo.get("operButton").toString();
					if(operButton.indexOf(",Send,")>=0 && operButton.indexOf(",EndAutoReturn,")<0){
						
      out.write("\t\t\t\t\t\r\n\t\t\t\t\t\t<input class=\"button2\" type=\"button\" name=\"tijiao\" onclick=\"javascript:submitForm();\" value=\"");
if("bjyh".equals(com.js.util.config.SystemCommon.getCustomerName())){out.print("审批");}else{out.print("发送");} 
      out.write("\"/>\t\t\t\t\t\r\n\t\t\t\t\t\t");

					}
					if(operButton.indexOf(",End,")>=0){
						
      out.write("\r\n\t\t\t\t\t\t<input class=\"button4\" type=\"button\" name=\"tijiao\" onclick=\"javascript:endCurrStep();\" value=\"办理完毕\"/>\t\t\t\t\t\r\n\t\t\t\t\t\t");

					}
					if(operButton.indexOf(",EndAutoReturn,")>=0){
						
      out.write("\r\n\t\t\t\t\t\t<input class=\"button4\" type=\"button\" name=\"tijiao\" onclick=\"javascript:submitForm();\" value=\"办理完毕\"/>\r\n\t\t\t\t\t\t");

					}
					if(operButton.indexOf(",EndOnlyComp,")>=0){
						
      out.write("\r\n\t\t\t\t\t\t<input class=\"button4\" type=\"button\" name=\"tijiao\" onclick=\"javascript:submitForm();\" value=\"办理结束\"/>\r\n\t\t\t\t\t\t");

					}
					if(operButton.indexOf(",Tran,")>=0){
						
      out.write("\r\n\t\t\t\t\t\t<input class=\"button2\" type=\"button\" name=\"tijiao\" onclick=\"javascript:transAction();\" value=\"转办\"/>\r\n\t\t\t\t\t\t");

					}				
					if(operButton.indexOf(",Back,")>=0){
						
      out.write("\r\n\t\t\t\t\t\t<input class=\"button2\" type=\"button\" name=\"tijiao\" onclick=\"javascript:backForm();\" value=\"退回\"/>\r\n\t\t\t\t\t\t");

					}
					//自动返回节点显示【办理完毕】按钮
					if(operButton.indexOf(",Delete,")>=0){
						
      out.write("\r\n\t\t\t\t\t\t<input class=\"button2\" type=\"button\" name=\"tijiao\" onclick=\"javascript:deleteItem();\" value=\"作废\"/>\r\n\t\t\t\t\t\t");

					}
					
					//反馈
					if(operButton.indexOf(",Feedback,")>=0){
						
      out.write("\r\n\t\t\t\t\t\t<input class=\"button2\" type=\"button\" name=\"tijiao\" onclick=\"javascript:backForm();\" value=\"反馈\"/>\r\n\t\t\t\t\t\t");

					}
				}
				
      out.write("\t\t\r\n\t\t\t\t<input class=\"button2\" type=\"button\" name=\"tijiao\" onclick=\"javascript:quitToList();\" value=\"退出\"/>\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"clear\"></div>\r\n\t\t\t</div>\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t</div>\r\n\t\t<div class=\"height1\"></div>\r\n");
} 
      out.write("\r\n</form>\r\n\t\t\t\t\r\n\t</div>\r\n</body>\r\n</html>\r\n<script>\r\n//选择下一步\r\nfunction submitForm(){\r\n\tdocument.frm.action=\"");
      out.print(path);
      out.write("/wap2/workitem/item_select_act_3g.jsp\";\t\r\n\tdocument.frm.submit();\r\n}\r\n//退回\r\nfunction backForm(){\t\r\n\tdocument.frm.action=\"");
      out.print(path);
      out.write("/wap2/workitem/item_select_act_back_3g.jsp\";\r\n\tdocument.frm.submit();\r\n}\r\n//转发\r\nfunction transAction(){\r\n\tdocument.frm.action=\"");
      out.print(path);
      out.write("/wap2/workitem/item_trans_selectemp.jsp\";\r\n\tdocument.frm.submit();\r\n}\r\n//办理完毕\r\nfunction endCurrStep(){\r\n\tdocument.frm.action=\"");
      out.print(path);
      out.write("/wap2/workitem/item_endcurrentstep.jsp\";\r\n\tdocument.frm.submit();\r\n}\r\n//办理完毕自动返回\r\nfunction endAutoReturn(){\r\n\tdocument.frm.action=\"");
      out.print(path);
      out.write("/wap2/workitem/item_select_act_back_3g.jsp\";\r\n\tdocument.frm.submit();\r\n}\r\n//作废\r\nfunction deleteItem(){\r\n\tdocument.frm.action=\"");
      out.print(path);
      out.write("/wap2/workitem/item_submit_delete.jsp\";\r\n\tdocument.frm.submit();\r\n}\r\nfunction quitToList(){\r\n\tlocation.href=\"");
      out.print(path );
      out.write("/WorkDealWithAction.do?action=list&status=");
      out.print(status );
      out.write("&beginIndex=");
      out.print(beginIndex+showDoc );
      out.write("\";\r\n\t\r\n}\r\n</script>\r\n\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
