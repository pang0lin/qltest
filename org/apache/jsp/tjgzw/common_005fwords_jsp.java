/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:54:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.tjgzw;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class common_005fwords_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=GBK\">\r\n<title>常用语</title>\r\n<script src=\"/jsoa/js/jquery-1.4.2.min.js\"></script>\r\n<script type=\"text/javascript\">\r\nvar p;\r\nfunction modiorsave(id){  \r\n\tvar bt = $(\"#b\"+id);\r\n\tif(bt.val()==\"修改\"){//切换为保存操作\r\n\t\t$(\"#t\"+id).removeAttr(\"readOnly\");//textarea变为可写\r\n\t\tvar con = $(\"#t\"+id).val();\r\n\t\t$(\"#t\"+id).focus().val(con);\r\n\t\tbt.val(\"保存\");\r\n\t}else{//执行保存修改的内容的操作\r\n\t\tvar url = \"/jsoa/TjgzwAction.do\";\r\n\t\tvar v = $(\"#t\"+id).val();\r\n\t\t$.ajax({\r\n\t\t\ttype: \"POST\",\r\n\t\t    url: url,\r\n\t\t    dataType: 'json',\r\n\t\t    async:false,\r\n\t\t    data:{'type':'comonwordsmodify','id':id,'words':encodeURI(v,'UTF8')},\r\n\t\t    success: function(rs) {\r\n\t\t    \tget();\r\n\t\t    },\r\n\t\t    error: function(result, status) { //如果没有上面的捕获出错会执行这里的回调函数\r\n\t\t    },\r\n\t\t    complete: function(XMLHttpRequest, textStatus) {\r\n\t\t    }\r\n\t\t});\r\n\t}\r\n\t\r\n  \r\n} \r\nfunction setVal(){\r\n    var c = $(\"input[name='bat']\");\r\n    var s = \"\";\r\n    c.each(function(){\r\n");
      out.write("    \tif($(this).attr(\"checked\")){\r\n    \t\ts+=$(this).val()+\"\\n\";\r\n    \t}\r\n    });\r\n\r\n\twindow.opener.document.getElementById(p).value=s;\r\n    window.close(); \r\n}\r\nfunction del(id){  \r\n\tvar url = \"/jsoa/TjgzwAction.do\";\r\n\t$.ajax({\r\n\t\ttype: \"POST\",\r\n\t    url: url,\r\n\t    dataType: 'json',\r\n\t    data:{'type':'comonwordsdel','id':id+''},\r\n\t    success: function(rs) {\r\n\t    \tget();\r\n\t    },\r\n\t    error: function(result, status) { //如果没有上面的捕获出错会执行这里的回调函数\r\n\t    },\r\n\t    complete: function(XMLHttpRequest, textStatus) {\r\n\t    }\r\n\t});\r\n}\r\n\r\nfunction save(){\r\n\tvar v = $(\"#words\").val();\r\n\tif($.trim(v)==''){\r\n\t\talert(\"请输入常用语!\");\r\n\t\treturn;\r\n\t}\r\n\tvar url = \"/jsoa/TjgzwAction.do\";\r\n\t$.ajax({\r\n\t\ttype: \"POST\",\r\n\t    url: url,\r\n\t    dataType: 'json',\r\n\t    async:false,\r\n\t    data:{'type':'comonwordsadd','words':encodeURI(v,'UTF8')},\r\n\t    success: function(rs) {\r\n\t    \tget();\r\n\t    },\r\n\t    error: function(result, status) { //如果没有上面的捕获出错会执行这里的回调函数\r\n\t    },\r\n\t    complete: function(XMLHttpRequest, textStatus) {\r\n\t    }\r\n\t});\r\n}\r\nfunction get(){\r\n");
      out.write("var url = \"/jsoa/TjgzwAction.do\";\r\n$.ajax({\r\n\ttype: \"POST\",\r\n    url: url,\r\n    dataType: 'json',\r\n    async:false,\r\n    data:{'type':'comonwordsshow'},\r\n    success: function(rs) {\r\n    \tvar html=\"\";\r\n    \tvar result = rs.rs;\r\n    \tvar table = $(\"#t1\");\r\n    \ttable.html(\"\");\r\n    \tfor(var i=0;i<result.length;i++){\r\n    \t\tvar rowData = result[i];\r\n    \t\thtml+= \"<tr>\";\r\n    \t\thtml+=\"<td width=\\\"2%\\\"><input type=\\\"checkbox\\\" name=\\\"bat\\\" id=\\\"c\"+rowData.id+\"\\\" value=\\\"\"+rowData.word+\"\\\"/></td>\"\r\n    \t\thtml+=\"<td name='cont'><textarea style='width:100%;height:100%' readOnly='true' id='t\"+rowData.id+\"'>\"+rowData.word+\"</textarea></td>\";\r\n    \t\thtml+=\"<td width=\\\"10%\\\"><input type=\\\"button\\\" value=\\\"修改\\\" id='b\"+rowData.id+\"' onclick=\\\"modiorsave(\"+rowData.id+\")\\\"/><input type=\\\"button\\\" value=\\\"删除\\\" onclick=\\\"del(\"+rowData.id+\")\\\"/></td>\";\r\n    \t\thtml+= \"</tr>\";\r\n\r\n    \t}\r\n    \ttable.html(html);\r\n\r\n    },\r\n    error: function(result, status) { //如果没有上面的捕获出错会执行这里的回调函数\r\n    },\r\n    complete: function(XMLHttpRequest, textStatus) {\r\n");
      out.write("    }\r\n});\r\n}\r\n</script>\r\n<style>  \r\n.datalist{  \r\n    border:1px solid #0035a3;   /* 表格边框 */  \r\n    font-family:Arial;  \r\n    border-collapse:collapse;   /* 边框重叠 */  \r\n    background-color:#eaf5ff;   /* 表格背景色 */  \r\n    font-size:14px;  \r\n}  \r\n.datalist caption{  \r\n    padding-bottom:5px;  \r\n    font:bold 1.4em;  \r\n    text-align:left;  \r\n}  \r\n.datalist th{  \r\n    border:1px solid #0035a3;   /* 行名称边框 */  \r\n    background-color:#4bacff;   /* 行名称背景色 */  \r\n    color:#FFFFFF;              /* 行名称颜色 */  \r\n    font-weight:bold;  \r\n    padding-top:4px; padding-bottom:4px;  \r\n    padding-left:12px; padding-right:12px;  \r\n    text-align:center;  \r\n}  \r\n.datalist td{  \r\n    border:1px solid #0035a3;   /* 单元格边框 */  \r\n    text-align:left;  \r\n    padding-top:4px; padding-bottom:4px;  \r\n    padding-left:10px; padding-right:10px;  \r\n}  \r\n.datalist tr.altrow{  \r\n    background-color:#c7e5ff;   /* 隔行变色 */  \r\n}  \r\n.txtcss1 {\r\n\ttext-align: left;  /* 用于文字右对齐 */\r\n} \r\n</style> \r\n</head>\r\n\r\n\r\n<body>\r\n<div>\r\n\t<table class=\"datalist\" style=\"width: 100%\" id=\"t1\">\r\n");
      out.write("\t<tr></tr>\r\n\t");
      out.write("\r\n\t</table>\r\n\t\r\n\t \r\n\t     <input type=\"button\" value=\"确定\" style=\"margin-top: 5px;margin-right: 200px\" onclick=\"setVal()\" />\r\n\t     \r\n\t\t <textarea name=\"words\" id=\"words\" style=\"width: 30%;height: 30px;height:50px;margin-top: 5px;\" ></textarea>\r\n\t     <input type=\"button\" value=\"新增\"  onclick=\"save()\" />\r\n\r\n</div>\r\n\t\r\n</body>\r\n<script type=\"text/javascript\" >\r\n$(document).ready(function() {\r\n   get();\r\n   p = '");
      out.print( request.getParameter("p") );
      out.write("';\r\n\r\n});\r\n</script>\r\n</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
