/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:46:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.wap2;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class wapdownload_005ff_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

String pathurl = request.getContextPath();
try{ 
	String queryString=request.getQueryString();
	queryString="&"+com.js.util.util.BASE64.BASE64DecoderNoBR(queryString);
	String temp;
	int index=0;
	String informationId="",path="",FileName="",name="",type="",beginIndex="";

	//查找informationId
	index=queryString.indexOf("&informationId");
	if(index>=0){
		temp=queryString.substring(index+15);
		if(temp.indexOf("&")>=0){
			informationId=temp.substring(0,temp.indexOf("&"));
		}else{
			informationId=temp;
		}
		
	}
	//查找path
	index=queryString.indexOf("&path");
	if(index>=0){
		temp=queryString.substring(index+6);
		if(temp.indexOf("&")>=0){
			path=temp.substring(0,temp.indexOf("&"));
		}else{
			path=temp;
		}
	}
	//查找FileName
	index=queryString.indexOf("&FileName");
	if(index>=0){
		temp=queryString.substring(index+10);
		if(temp.indexOf("&")>=0){
			FileName=temp.substring(0,temp.indexOf("&"));
		}else{
			FileName=temp;
			if(!FileName.substring(4,5).equals("_"))
			{
				path="0000/"+path;
			}else
			{
				path=FileName.substring(0,4)+"/"+path;
			}
		}
	}
	//查找name
	index=queryString.indexOf("&name");
	if(index>=0){
		temp=queryString.substring(index+6);
		if(temp.indexOf("&")>=0){
			name=temp.substring(0,temp.indexOf("&"));
		}else{
			name=temp;
		}
	}
		//查找type
	index=queryString.indexOf("&type");
	if(index>=0){
		temp=queryString.substring(index+6);
		if(temp.indexOf("&")>=0){
			type=temp.substring(0,temp.indexOf("&"));
		}else{
			type=temp;
		}
	}
			//查找beginIndex
	index=queryString.indexOf("&beginIndex");
	if(index>=0){
		temp=queryString.substring(index+12);
		if(temp.indexOf("&")>=0){
			beginIndex=temp.substring(0,temp.indexOf("&"));
		}else{
			beginIndex=temp;
		}
	}
	String fanhui="";
	if("channel".equals(type)){
		fanhui=pathurl+"/wap/action/ChannelAction.do?method=infoList&beginIndex="+beginIndex;
	}else {
		fanhui=pathurl+"/wap.do?method=getDetailContent&conType="+type+"&beginIndex="+beginIndex;
	}
	//informationId,path,FileName,name;
	
  // 得到文件名字和路径
  //String informationId=request.getParameter("informationId");
  String filepath="";
  HttpServletRequest HSR=(HttpServletRequest)pageContext.getRequest();
  HttpSession session1=HSR.getSession(false);

  //String path=request.getParameter("path");
  filepath=HSR.getRealPath("/upload/")+"/"+path+"/";
  
  filepath = filepath.replaceAll("\\\\", "/");
  //System.out.println("filepath:" + filepath);
  //String Filename = request.getParameter("FileName");
  //String name = request.getParameter("name");
  //String ie=request.getHeader("User-Agent"); //得到浏览器等相关信息
 // if(ie.indexOf("MSIE")!=-1){   //这里是msie 即微软 ie浏览器
 // 	name=new String(name.getBytes("GBK"),"iso-8859-1");
 // }else{
 // 	name=new String(name.getBytes("UTF-8"),"iso-8859-1");
 // }
 System.out.println(filepath+FileName);
  java.io.File file = new java.io.File(filepath + FileName);
  if(file.exists()){
      out.write("\r\n\t <HTML xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<HEAD>\r\n<META content=\"text/html; charset=UTF-8\" http-equiv=Content-Type>\r\n<TITLE>文件下载</TITLE>\r\n<META name=viewport content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;\">\r\n<META name=apple-touch-fullscreen content=YES>\r\n<META name=apple-mobile-web-app-capable content=no>\r\n<LINK rel=apple-touch-icon href=\"");
      out.print(pathurl );
      out.write("/wap2/images/iphone.jpg\">\r\n<LINK rel=stylesheet type=text/css href=\"");
      out.print(pathurl );
      out.write("/wap2/css/main_3g.css\">\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(pathurl );
      out.write("/wap2/js/cookie.js\"></SCRIPT>\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(pathurl );
      out.write("/wap2/js/util.js\"></SCRIPT>\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(pathurl );
      out.write("/wap2/js/frost.js\"></SCRIPT>\r\n<META name=GENERATOR content=\"MSHTML 8.00.6001.19154\">\r\n\t  </head>\r\n\t  <body>\r\n\t  \t  <div id=\"top\">\r\n\t\t\t<span id=\"lp2\"><div class=\"btn_3\"><a href=\"");
      out.print(fanhui );
      out.write("\">返回</a></div></span>\r\n\t\t\t<span id=\"title2\"></span>\r\n\t\t</div>\r\n\t\t<br/>\r\n\t\t<div align=\"center\"><h3>");
      out.print(name );
      out.write("</h3></div>\r\n\t\t<br/>\r\n\t  <div id=\"msg\" align=\"center\" ><font color=\"#CC0000\"><a href=\"");
      out.print(pathurl );
      out.write("/upload/");
      out.print(path );
      out.write('/');
      out.print(FileName );
      out.write("\">点击下载</a></font></div>\r\n\t  </body>\r\n\t  </html>\r\n\t");
	
  }else{
	  response.setContentType("text/html; charset=UTF-8");
	  
      out.write("\r\n<HTML xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<HEAD>\r\n<META content=\"text/html; charset=UTF-8\" http-equiv=Content-Type>\r\n<TITLE>文件未找到</TITLE>\r\n<META name=viewport content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;\">\r\n<META name=apple-touch-fullscreen content=YES>\r\n<META name=apple-mobile-web-app-capable content=no>\r\n<LINK rel=apple-touch-icon href=\"");
      out.print(pathurl );
      out.write("/wap2/images/iphone.jpg\">\r\n<LINK rel=stylesheet type=text/css href=\"");
      out.print(pathurl );
      out.write("/wap2/css/main_3g.css\">\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(pathurl );
      out.write("/wap2/js/cookie.js\"></SCRIPT>\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(pathurl );
      out.write("/wap2/js/util.js\"></SCRIPT>\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(pathurl );
      out.write("/wap2/js/frost.js\"></SCRIPT>\r\n<META name=GENERATOR content=\"MSHTML 8.00.6001.19154\">\r\n\t  </head>\r\n\t  <body>\r\n\t  \t  <div id=\"top\">\r\n\t\t\t<span id=\"lp2\"><div class=\"btn_3\"><a href=\"");
      out.print(fanhui );
      out.write("\">返回</a></div></span>\r\n\t\t\t<span id=\"title2\"></span>\r\n\t\t</div>\r\n\t\t<br/>\r\n\t  <div id=\"msg\" align=\"center\" ><font color=\"#CC0000\"><h3>文件未找到！</h3></font></div>\r\n\t  </body>\r\n\t  </html>\r\n\t  ");
}
}catch(Exception ex){
	response.setContentType("text/html; charset=UTF-8");
	  
      out.write("\r\n<HTML xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<HEAD>\r\n<TITLE>文件未找到</TITLE>\r\n<META content=\"text/html; charset=UTF-8\" http-equiv=Content-Type>\r\n<META name=viewport content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;\">\r\n<META name=apple-touch-fullscreen content=YES>\r\n<META name=apple-mobile-web-app-capable content=no>\r\n<LINK rel=apple-touch-icon href=\"");
      out.print(pathurl );
      out.write("/wap2/images/iphone.jpg\">\r\n<LINK rel=stylesheet type=text/css href=\"");
      out.print(pathurl );
      out.write("/wap2/css/main_3g.css\">\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(pathurl );
      out.write("/wap2/js/cookie.js\"></SCRIPT>\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(pathurl );
      out.write("/wap2/js/util.js\"></SCRIPT>\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(pathurl );
      out.write("/wap2/js/frost.js\"></SCRIPT>\r\n<META name=GENERATOR content=\"MSHTML 8.00.6001.19154\">\r\n\t  </head>\r\n\t  <body>\r\n\t  <div id=\"top\">\r\n\t\t\t<span id=\"lp2\"><div class=\"btn_3\"><a href=\"");
      out.print(pathurl );
      out.write("/wap2/index_3g.jsp\">返回</a></div></span>\r\n\t\t\t<span id=\"title2\"></span>\r\n\t\t</div>\r\n\t   <div id=\"msg\"><font color=\"#CC0000\">文件未找到！</font></div>\r\n\t  </body>\r\n\t  </html>\r\n\t  ");

}
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
