/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:59:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.weixin.workflow.daibanflow;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.wap.util.WapUtil;
import java.net.URLEncoder;
import java.util.*;
import java.text.SimpleDateFormat;

public final class jsflow_005fdraftlist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-html.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.net.URLEncoder");
    _jspx_imports_classes.add("com.js.wap.util.WapUtil");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fhtml_005fhtml;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fhtml_005fhtml = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fhtml_005fhtml.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n<!DOCTYPE html>\r\n");

String app = request.getContextPath();
List list=(List)request.getAttribute("workList");
int beginIndex = Integer.parseInt(request.getParameter("beginIndex")==null ? "0" : request.getParameter("beginIndex"));
String keyword = null!=request.getAttribute("keyword") ? request.getAttribute("keyword").toString() : "";

String loginType = null!=session.getAttribute("loginType") ? session.getAttribute("loginType").toString() : "";
 
      out.write('\r');
      out.write('\n');
      //  html:html
      org.apache.struts.taglib.html.HtmlTag _jspx_th_html_005fhtml_005f0 = (org.apache.struts.taglib.html.HtmlTag) _005fjspx_005ftagPool_005fhtml_005fhtml.get(org.apache.struts.taglib.html.HtmlTag.class);
      boolean _jspx_th_html_005fhtml_005f0_reused = false;
      try {
        _jspx_th_html_005fhtml_005f0.setPageContext(_jspx_page_context);
        _jspx_th_html_005fhtml_005f0.setParent(null);
        int _jspx_eval_html_005fhtml_005f0 = _jspx_th_html_005fhtml_005f0.doStartTag();
        if (_jspx_eval_html_005fhtml_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n\t<head>\r\n\t\t<title>待发流程</title>\r\n\t\t<META content=\"text/html; charset=UTF-8\" http-equiv=Content-Type>\r\n\t\t<META name=viewport content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;\">\r\n\t\t<META name=apple-touch-fullscreen content=YES>\r\n\t\t<META name=apple-mobile-web-app-capable content=no>\r\n\t\t\r\n\t\t<link rel=\"stylesheet\" href=\"/jsoa/css/weixin/weixin_main.css\">\r\n\t\t<link rel=\"stylesheet\" href=\"/jsoa/css/weixin/search.css\">\r\n\t\t<script type=\"text/javascript\">\r\n\t\tfunction gotoPage(url, flag){\r\n\t\t    if(flag){\r\n\t\t        location.href = encodeURI(url);\r\n\t\t    }\r\n\t\t}\r\n\t\tfunction showInfo(url){\r\n\t\t\tlocation.href = url;\r\n\t\t}\r\n\t\tfunction submitForm(){\r\n\t\t\tvar k = document.getElementById(\"keys\").value;\r\n\t\t\tif(\"\" != k){\r\n\t\t\t\tk = encodeURI(k);\r\n\t\t\t}\r\n\t\t\tdocument.getElementById(\"keyword\").value = k;\r\n\t\t\tdocument.getElementById(\"searchForm\").submit();\r\n\t\t}\r\n\t\t</script>\r\n\t</head>\r\n\t");
            org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/wap2/commonImportOther.jsp", out, false);
            out.write("\r\n\t<body  class=\"MainFrameBox\" onload=\"setHeader('javascript:closeWindow(\\'gzlc\\');','待发流程')\">\r\n       <!-- 搜索 -->\r\n\t   \t<FORM id=\"searchForm\" action=\"/jsoa/weiXinWorkFlowAction.do?action=draft&moduleId=1\" method=\"post\">\r\n\t   \t\t<div class=\"sousuo\">\r\n\t\t\t\t<div class=\"sousuo-01\">\r\n\t\t   \t\t\t<INPUT type=\"hidden\" id=\"keyword\" name=\"keyword\" />\r\n\t\t   \t\t\t<INPUT type=\"text\" id=\"keys\" name=\"keys\" value=\"");
            out.print(keyword);
            out.write("\" placeholder=\"请输入标题\" />\r\n\t\t   \t\t\t<div class=\"sousuo-11\" onclick=\"javascript:submitForm();\"><img src=\"images/weixin/ss.png\"></div>\r\n\t\t   \t\t</div>\r\n\t\t   \t</div>\r\n\t   \t</FORM>\r\n\r\n       <!-- 信息列表 -->\r\n    \t<div class=\"list\">\r\n          ");

	      	if(list!=null && list.size()>0){
				SimpleDateFormat dateFormat = new SimpleDateFormat("MM-dd HH:mm");
				Object[] obj;
				String url = "";
				String userAccounts=session.getAttribute("userAccount").toString();
				String userName=session.getAttribute("userName").toString();
				for(int i=0; i<list.size(); i++){
					obj = (Object[]) list.get(i);
				
					//String userAccountStr = com.js.system.util.StaticParam.getUserAccountsByEmpId(obj[3] + "");
					url = "weixin/common/getUserAvatar.jsp?userId=" + userAccounts + "&time="+System.currentTimeMillis();
					
            out.write("\r\n\t\t\t\t\t<a style=\"text-decoration: none;\" href=\"javascript:newForm('/jsoa/weixin/workflow/daibanflow/jsflow_reopenForm.jsp?wfWorkId=");
            out.print(obj[0]);
            out.write("&processId=");
            out.print(obj[1]);
            out.write("&tableId=");
            out.print(obj[2]);
            out.write("&recordId=");
            out.print(obj[3]);
            out.write("')\" >\r\n\t\t\t\t\t\t<div class=\"item\">\r\n\t\t\t\t\t\t\t<div class=\"picture\">\r\n\t\t\t\t\t\t\t\t<img alt=\"头像\" src=\"");
            out.print(url );
            out.write("\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"content\">\r\n\t\t\t\t\t\t\t\t<div class=\"first\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">");
            out.print(obj[4].toString().length()>12 ? obj[4].toString().substring(0, 12)+"..." : obj[4].toString());
            out.write("</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"time\">");
            out.print(dateFormat.format(obj[5]));
            out.write("</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"second\">");
            out.print(userName);
            out.write("</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t    </a>  \r\n\t              \t");

	      		}
			} else{
      			
            out.write("\r\n\t\t\t\t<div class=\"item\">\r\n            \t\t<div class=\"nodata\">没有查询到数据！</div>\r\n         \t\t</div>\r\n\t\t\t\t");

      		}
      		
            out.write("\r\n  \t\t</div>\r\n     </div>\r\n     <!-- 分页 -->\r\n\t\t");

		int recordCount = Integer.parseInt(request.getAttribute(WapUtil.RECORD_COUNT) == null ? "0" : request.getAttribute(WapUtil.RECORD_COUNT).toString());
		int curNum = beginIndex/WapUtil.LIMITED + 1;	// 当前页数
		int totalNum = recordCount%WapUtil.LIMITED > 0 ? recordCount/WapUtil.LIMITED+1 : recordCount/WapUtil.LIMITED;	// 总页数
		int nextNum = (beginIndex / WapUtil.LIMITED) + 1;
		int nextIndex = nextNum * WapUtil.LIMITED;
		int upNum = (beginIndex / WapUtil.LIMITED) - 1;
		int upIndex = upNum * WapUtil.LIMITED;
		String upUrl = "#", nextUrl = "#", upUrlFont = "", nextUrlFont = "";
		if (recordCount > WapUtil.LIMITED) {
			if (upIndex >= 0){
				upUrl = app + "/weiXinWorkFlowAction.do?action=draft&moduleId=1&amp;beginIndex=" + upIndex;
				if (null != keyword && !"".equals(keyword))
					upUrl += "&keyword=" + URLEncoder.encode(URLEncoder.encode(keyword, "utf-8"), "utf-8");
			} else{
				upUrl = "javascript:void(0);";
				upUrlFont = "grayFont";
			}
			if (nextIndex < recordCount){
				nextUrl = app + "/weiXinWorkFlowAction.do?action=draft&moduleId=1&amp;beginIndex=" + nextIndex;
				if (null != keyword && !"".equals(keyword))
					nextUrl += "&keyword=" + URLEncoder.encode(URLEncoder.encode(keyword, "utf-8"), "utf-8");
			} else{
				nextUrl = "javascript:void(0);";
				nextUrlFont = "grayFont";
			}

			
            out.write("\r\n\t\t\t<div class=\"bottomDiv\">\r\n\t\t\t\t<a href=\"");
            out.print(upUrl );
            out.write("\">\r\n\t\t\t\t\t<div class=\"up ");
            out.print(upUrlFont );
            out.write("\">上一页</div>\r\n\t\t\t\t</a>\r\n\t\t\t\t<div class=\"page grayFont\">");
            out.print(curNum );
            out.write('/');
            out.print(totalNum );
            out.write("</div>\r\n\t\t\t\t<a href=\"");
            out.print(nextUrl );
            out.write("\">\r\n\t\t\t\t\t<div class=\"down ");
            out.print(nextUrlFont );
            out.write("\">下一页</div>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t\t");

		}
		
            out.write("\r\n\t\t<script language=\"javascript\">\r\n\t\tfunction newForm(url){\r\n\t\t    ");

		    if("wap".equals(loginType)){
		    	
            out.write("\r\n\t\t    \twindow.parent.location.href = url;\r\n\t\t    \t");

		    } else{
		    	
            out.write("\r\n\t\t    \tlocation.href = url;\r\n\t\t    \t");

		    }
		    
            out.write("\r\n\t\t}\r\n\t\t</script>\r\n\t</body>\r\n");
            int evalDoAfterBody = _jspx_th_html_005fhtml_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_html_005fhtml_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fhtml_005fhtml.reuse(_jspx_th_html_005fhtml_005f0);
        _jspx_th_html_005fhtml_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_html_005fhtml_005f0, _jsp_getInstanceManager(), _jspx_th_html_005fhtml_005f0_reused);
      }
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
