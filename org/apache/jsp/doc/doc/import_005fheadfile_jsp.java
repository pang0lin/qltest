/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:04:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.doc.doc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.jsupload.upload.*;
import com.js.util.util.*;
import java.util.*;
import org.apache.commons.fileupload.FileItem;
import com.js.system.util.SysSetupReader;
import com.jsupload.upload.SmartUpload;

public final class import_005fheadfile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.jsupload.upload");
    _jspx_imports_packages.add("com.js.util.util");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.jsupload.upload.SmartUpload");
    _jspx_imports_classes.add("org.apache.commons.fileupload.FileItem");
    _jspx_imports_classes.add("com.js.system.util.SysSetupReader");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n");
      com.jsupload.upload.SmartUpload myUpload = null;
      myUpload = (com.jsupload.upload.SmartUpload) _jspx_page_context.getAttribute("myUpload", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (myUpload == null){
        myUpload = new com.jsupload.upload.SmartUpload();
        _jspx_page_context.setAttribute("myUpload", myUpload, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n\r\n<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<script language=\"javascript\">\r\n");

request.setCharacterEncoding("GBK"); 
if(request.getAttribute("import")!=null){
	if("success".equals(request.getAttribute("import").toString())){

      out.write("\r\n\talert(\"导入成功！\");\r\n\topener.window.location.reload();\r\n\twindow.close();\r\n");
} else if("failure".equals(request.getAttribute("import").toString())){
      out.write("\r\n\talert(\"导入失败！\");\r\n\twindow.close();\r\n");
}
}
      out.write("\r\n</script>\r\n\r\n");

String categoryId = (String)request.getParameter("categoryId");

String mode=(String)request.getParameter("mode");
String path=(String)request.getParameter("path");
String fileNames=(String)request.getParameter("fileName");
String saveNames=(String)request.getParameter("saveName");
String fileNum=(String)request.getParameter("fileMaxNum");
String fileType=(String)request.getParameter("fileType");
int fileSize=0;
String domainId=session.getAttribute("domainId").toString();
String attachSizeLimit=SysSetupReader.getInstance().getAttachLimit(domainId);
if(!attachSizeLimit.startsWith("1")){
	Map map = (Map) session.getAttribute("ftpMap");
	String fileSizeLimitAll="0";//默认限制大小
	if(map != null && map.get("FileSizeLimitAll") != null){
	    fileSizeLimitAll = map.get("FileSizeLimitAll").toString();//配置文件限制大小
	    if(fileSizeLimitAll.startsWith("1")){//是否限制，1：限制；0，不限制
	        fileSize=Integer.parseInt(fileSizeLimitAll.substring(1));
	    }
	  }
}else{
   fileSize=Integer.parseInt(attachSizeLimit.substring(1));
}
String fileSizeMsg="";
if(fileSize/1000000>0){
    fileSizeMsg=String.valueOf(fileSize/(1024*1024))+"MB";
}else if(fileSize/1000>0){
    fileSizeMsg=String.valueOf(fileSize/1024)+"KB";
}else{
    fileSizeMsg=String.valueOf(fileSize)+"字节";
}

String saveName="";
String fileName="";
String fileExt="";
String myRandom="";
String fileSuffix="";
String filePath="";
String continueUpload="0";
if("add".equals(mode)){
    boolean tooBig=false;
    boolean notFile=false;
    boolean typeErr=false;
    boolean notAgree=false;
    boolean tooLong=false;
    int upLoadAllFileSize=0;
    myUpload.initialize(request);
    myUpload.setMAX_SIZE(fileSize);
    //附件大小，做用户邮箱容量时加上的
    int accessorySize = 0;
	
	List fileList=new ArrayList();
    try
    {
    	fileList=myUpload.getFileList();
    }
    catch(Exception e) 
    {
    	out.println("<div style=\"witdh:100%;height:100%;\" class=\"docBox\">");
    	out.println("<center style=\"padding-top:100px;\">");
    	out.println("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">");
    	out.println("<tr>");
    	out.println("<td width=\"60\"><img src=\"/jsoa/images/errorFace_excel.gif\"/></td>");
    	out.println("<td width=\"220\"><font color=\"#FF0000\">ERROR:上传失败！文件尺寸超过规定大小:"+fileSizeMsg+"</font></td>");
    	out.println("</tr>");
    	out.println("<tr>");
    	out.println("<td>&nbsp;</td>");
    	out.println("<td align=\"center\" valign=\"middle\" height=\"65\"><input type=\"button\" class=\"btnButton2font\" onclick=\"javascript:history.back(-1);\" value='返回重试'></input></td>");
    	out.println("</tr>");
    	out.println("</table>");
    	out.println("</center>");
    	out.println("</div>");
    	return;
    }
    long size = 0;
    String [] banType=SmartUpload.banType;
    for (int j=0;j<fileList.size();j++)
    {
    	FileItem fileItem=(FileItem)fileList.get(j);
    	if(fileItem.isFormField())//果如是非上传控件
    	{
    		String filedName=fileItem.getFieldName();
    		String filedContent=fileItem.getString();
    		if("continueUpload".equalsIgnoreCase(filedName))
    		{
    			continueUpload=new String(filedContent.getBytes(),"GBK");
    		}
    	}
    	else if(!fileItem.isFormField())//如果是<input type="file">
    	{
    		String fileNameTemp=fileItem.getName();
    		for(int i=0;i<banType.length;i++)
    		{
    			if(fileNameTemp.endsWith(banType[i]))
   				{
   					fileItem.delete();
   					out.println("<script>alert('上传失败！非法文件类型！');history.back(-1);</script>");
   					return;
   				}
    		}
       		upLoadAllFileSize+=fileItem.getSize();//上传总大小
       	}
    }
    if(upLoadAllFileSize==0)
    {
    	out.println("<div style=\"witdh:100%;height:100%;\" class=\"docBox\">");
    	out.println("<center style=\"padding-top:100px;\">");
    	out.println("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">");
    	out.println("<tr>");
    	out.println("<td width=\"60\"><img src=\"/jsoa/images/errorFace_excel.gif\"/></td>");
    	out.println("<td width=\"220\"><font color=\"#FF0000\">ERROR:请选择非空文件上传！</font></td>");
    	out.println("</tr>");
    	out.println("<tr>");
    	out.println("<td>&nbsp;</td>");
    	out.println("<td align=\"center\" valign=\"middle\" height=\"65\"><input type=\"button\" class=\"btnButton2font\" onclick=\"javascript:history.back(-1);\" value='返回重试'></input></td>");
    	out.println("</tr>");
    	out.println("</table>");
    	out.println("</center>");
    	out.println("</div>");
    	return;
    }
    for (int j=0;j<fileList.size();j++){
        myRandom=new com.js.util.util.Random().getRandom();
        FileItem fileItem=(FileItem)fileList.get(j);//获取上传文件
        // 忽略空的上传控件和简单form字段而不是上传域的文件域(<input type="text" />等)
	   	if (fileItem.getSize()<=0|| fileItem.isFormField()) 
	   	{
		   	continue;
	   	}
        fileName=fileItem.getName();//获取上传文件名
        if(!"".equals(fileName)&&null!=fileName)
        {
        	fileName=fileName.substring(fileName.lastIndexOf("\\") + 1);
        	fileExt=fileName.substring(fileName.lastIndexOf(".") + 1);//获取上传文件扩展名
        }
        
  	 	// 得到文件的大小
	   	size = fileItem.getSize();
	   	if ("".equals(path) || size == 0)//如果是空文件
	   	{
		   	notFile=true;
	   	}
        else if(fileSize==0 || upLoadAllFileSize<fileSize)//系统对上传文件总大小无限制,或者当前上传文件的总大小小于系统限制
        {
            accessorySize =(int)size;//获取文件大小
            fileSuffix=fileExt;
            fileSuffix=fileSuffix.toLowerCase();
            if(".exe,.bat,.jsp,.asp,.php,.aspx".indexOf(fileSuffix)>=0)//判断时候合法
            {
                notAgree=true;
            }
            else if("".equals(fileType) || fileType.indexOf(fileSuffix)>=0)//对扩展名无限制,或者当前文件扩展名符合限制
            {
                if(fileName.length()>50)//文件名太长
                {
                    fileName=fileName.substring(0,40);//截断	
                    fileName+="~1."+	fileExt;
                    tooLong=true;
                }
                filePath=request.getSession().getServletContext().getRealPath("/")+"upload/"+path+"/";
                saveName=myRandom+"."+fileExt;//生成新文件名
                myUpload.saveAs(fileItem,filePath + saveName);//保存文件
            }
            else
            {
                typeErr=true;//类型错误
            }
        }
        else
        {
            tooBig=true;//文件太大
        }
    }
    if(notFile){
      out.write("\r\n    <script LANGUAGE=\"JavaScript\">\r\n          alert(\"您导入的文件不存在或其大小为0,请重新选择文件!\");\r\n    </script>\r\n");

    }else if(tooBig){

      out.write("\r\n      <script LANGUAGE=\"JavaScript\">\r\n          alert(\"您导入的文件过大!文件最大为");
      out.print(fileSizeMsg);
      out.write("!\");\r\n      </script>\r\n");
  }else if(typeErr){
      out.write("\r\n     <script LANGUAGE=\"JavaScript\">\r\n          alert(\"您只能导入类型为");
      out.print(fileType);
      out.write("的文件!\");\r\n      </script>\r\n");
  }else if(notAgree){
      out.write("\r\n     <script LANGUAGE=\"JavaScript\">\r\n          alert(\"您只能导入类型为");
      out.print(fileType);
      out.write("的文件!\");\r\n      </script>\r\n");
  }else{ 
      out.write("\r\n    <script LANGUAGE=\"JavaScript\">\r\n    <!--\r\n\t    if(opener.document.all.");
      out.print(saveNames);
      out.write("){\r\n\t\topener.document.all.");
      out.print(saveNames);
      out.write(".value=\"");
      out.print(saveName);
      out.write("\";\r\n\t\topener.document.all.");
      out.print(fileNames);
      out.write(".value=\"");
      out.print(fileName);
      out.write("\";\t  \r\n\t\t}\r\n\r\n\t\twindow.close();\r\n\r\n\r\n        if(opener.document.all.accessorySize){\r\n            var aSize = opener.document.all.accessorySize.value;\r\n            if(opener.document.all.accessorySize.value == \"\"){\r\n                aSize = \"0\";\r\n            }\r\n            opener.document.all.accessorySize.value = parseInt(aSize) + ");
      out.print(accessorySize);
      out.write(";\r\n        }\r\n\r\n        //在调用页面的table列表中显示\r\n        var path=\"");
      out.print(path);
      out.write("\";\r\n        var fileNames=\"");
      out.print(fileNames);
      out.write("\";\r\n        var saveNames=\"");
      out.print(saveNames);
      out.write("\";\r\n        var fileNum=\"");
      out.print(fileNum);
      out.write("\";\r\n        var fileNameTemp=\"");
      out.print(fileName);
      out.write("\";\r\n\r\n\t\tvar saveName=\"");
      out.print(saveName);
      out.write("\";\r\n\r\n        ");
if(tooLong){
      out.write("\r\n            fileNameTemp+=\"~.");
      out.print(fileSuffix);
      out.write("\";\r\n        ");
}
      out.write("\r\n    //-->\r\n    </script>\r\n");
  }
}

      out.write("\r\n<html>\r\n  <HEAD><TITLE>上传文件</TITLE></HEAD>\r\n<script src=\"/jsoa/js/js.js\" language=\"javascript\"></script>\r\n<script src=\"/jsoa/js/HashMap.js\" language=\"javascript\"></script>\r\n<link href=\"/jsoa/webmail/mail.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<BODY class=\"MainFrameBox Pupwin\">\r\n\r\n<div id=\"uploadDiv\" style=\"display:block\">\r\n<TABLE width=\"100%\" height=\"100%\" valign=\"top\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"padding-left:10px;\" class=\"docBoxNoPanel\">\r\n<FORM ENCTYPE = \"multipart/form-data\" NAME =\"frm\" ACTION = \"import_headfile.jsp?categoryId=");
      out.print(categoryId);
      out.write("&path=");
      out.print(path);
      out.write("&mode=add&fileName=");
      out.print(fileNames);
      out.write("&saveName=");
      out.print(saveNames);
      out.write("&fileMaxSize=");
      out.print(fileSize);
      out.write("&fileMaxNum=");
      out.print(fileNum);
      out.write("&fileType=");
      out.print(fileType);
      out.write("\"\r\n    \t\tMETHOD=\"POST\" onsubmit=\"javascript:return check();\">\r\n\t\t  <tr>\r\n\t\t     <td height=\"50\" style=\"font-size:15px;color:#003366;padding-top:8px;\">\r\n\t\t     <b>上传本地文件</b>\r\n\t\t     </td>\r\n\t\t  </tr>\r\n\t\t  <TR valign=\"top\" style=\"padding-top:12px;\" id=\"upload1\">\r\n\t\t     <TD align=\"left\" id=\"3230\"><div id=\"div001\">请选择要导入的文件</div>\r\n\t\t\t   <div id=\"fileInputDiv\">\r\n\t\t\t    <div id=\"fileInputDiv1\" style=\"\">\r\n\t\t\t\t<input type=\"file\" name=\"photo\" id=\"photo\" size=\"30\" value=\"\" style=\"width:100%\">\t\t\t\t\r\n\t\t\t     </div>\r\n\t\t\t   </div>\r\n\t\t    </TD>\r\n\t\t  </TR>\r\n\t\t  <tr>\r\n     \t\t\t<td height=\"110\" align=\"left\"><input type=\"hidden\" name=\"continueUpload\" value=\"0\">\r\n\t \t\t\t\t<input NAME=\"submit\" VALUE=\"导入\" TYPE=\"submit\" class=\"btnButton2Font\">&nbsp;\r\n\t \t\t\t\t<input NAME=\"reset\" VALUE=\"退出\" TYPE=\"button\" onclick=\"window.close();\" class=\"btnButton2Font\">\r\n     \t\t\t</td>\r\n  \t\t\t</tr>\r\n  \t\t</form>\r\n  \t</TABLE>\r\n </div>\r\n</BODY>\r\n</HTML>\r\n  \r\n<script language=\"javascript\">\r\nvar img=null;\r\nfunction check(){\r\n    if(document.all.photo.value==\"\"){\r\n        alert(\"请选择要导入的文件!\");\r\n");
      out.write("        return false;\r\n    }\r\n}\r\nfunction oe()\r\n{\r\n}\r\nfunction orsc()\r\n{\r\n    if(img.readyState!=\"complete\")return false;\r\n}\r\n</script>\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
