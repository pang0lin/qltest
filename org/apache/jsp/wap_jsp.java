/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:38:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.util.config.SystemCommon;
import com.js.wap.util.WapUtil;
import java.net.URLEncoder;

public final class wap_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.net.URLEncoder");
    _jspx_imports_classes.add("com.js.util.config.SystemCommon");
    _jspx_imports_classes.add("com.js.wap.util.WapUtil");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n<!DOCTYPE html>\r\n\r\n\r\n");

request.setCharacterEncoding("UTF-8");
String path = request.getContextPath();
String msg = (String)request.getAttribute("ERROR");
if(null == msg) msg = "";

      out.write("\r\n<html>\r\n\t<head>\r\n\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n\t\t<title>九思IThink移动办公系统</title>\r\n\t\t\r\n\t\t<META name=\"viewport\" content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;\">\r\n\t\t<META name=\"apple-touch-fullscreen\" content=\"YES\">\r\n\t\t<META name=\"apple-mobile-web-app-capable\" content=\"no\">\r\n\t\t\r\n\t\t<link href=\"wap2/css/dl.css\" rel=\"stylesheet\" type=\"text/css\">\r\n\t\t<link href=\"css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\r\n\r\n\t</head>\r\n\t");

	String loginType = null!=session.getAttribute("loginType") ? session.getAttribute("loginType").toString() : "";
	if(!"".equals(msg) && !"on".equals(request.getParameter("validate"))){	// 有错误信息时，跳转到错误信息页面
		
      out.write("\r\n\t \t<script type=\"text/javascript\">\r\n\t    location.href=\"/jsoa/wap2/errorShow.jsp?msg='");
      out.print(URLEncoder.encode(msg));
      out.write("'\";\r\n\t \t</script>\r\n   \t\t");

   	} else if("".equals(loginType) || "wap".equals(loginType)){	// 没有错误信息时，app登录的，调用app退出地址
   		
      out.write("\r\n   \t\t<script type=\"text/javascript\">\r\n   \t\twindow.loction.href = \"/jsoa/quitappnoprompt.command\";\r\n   \t\t</script>\r\n   \t\t");

   	}
   	
      out.write("\r\n\t<body style=\" background:#f0f0f0;\" onload=\"logonInit();\">\r\n\t\t<div class=\"contenter\">\r\n\t\t\t<div class=\"top\"><img src=\"images/dl.png\"></div>\r\n\t\t\t\r\n\t\t\t<div class=\"top-text\"><span>九思协同办公系统</span></div>\r\n\t\t\t\r\n\t\t\t<div class=\"center\">\r\n\t\t\t\t<form name=\"form1\" id=\"form1\" method=\"post\" action=\"");
      out.print(request.getContextPath());
      out.write("/wap.do?method=wapLogin\">\r\n\t\t\t\t\t<input type=\"hidden\" name=\"");
      out.print(WapUtil.WAP_VERSION);
      out.write("\" value=\"");
      out.print(WapUtil.WAP_VER_3G);
      out.write("\"/>\r\n\t\t\t\t\t<input type=\"hidden\" name=\"userName\" id=\"userName\" value=\"\" /> \r\n\t\t\t\t\t<input type=\"hidden\" id=\"html5Page\" name=\"html5Page\" value=\"yes\">\r\n\t\t\t\t\t<input type=\"text\" name=\"userNameTmp\" id=\"userNameTmp\" maxlength=\"20\" class=\"form-control\" placeholder=\"账户\" aria-describedby=\"basic-addon1\">\r\n\t\t\t\t\t<input type=\"password\" name=\"userPassword\" id=\"userPassword\" class=\"form-control\" placeholder=\"密码\" aria-describedby=\"basic-addon1\"  style=\" margin-top:10px; background:url(images/mm.png) no-repeat left #FFF;\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t");

					if("chinaLife".equals(SystemCommon.getCustomerName())){
						
      out.write("\r\n\t\t\t\t\t\t<div class=\"user\">\r\n\t\t\t\t\t\t\t<input type=\"text\" class=\"codeText\" name=\"imageCode\" id=\"imageCode\" value=\"\" />&nbsp;\r\n\t\t\t\t\t\t\t<img id=\"pwdImage\" src=\"CreateImage\" alt=\"换一张\" style=\"cursor: hand;\" onClick=\"this.src='CreateImage?'+Math.random();\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t");

					}
					
      out.write("\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div class=\"wenzi\"><p id=\"msg\"></p></div>\r\n\t\t\t\r\n    \t\t<div class=\"foot\" onclick=\"javascript:loginOA();\">登录</div>\r\n\t\t</div>\r\n\t\t<div style=\"display:none;\">\r\n\t\t<iframe id=\"logonIframe\" name=\"logonIframe\" src=\"\" style=\"width:0px;height:0px;\"></iframe>\r\n\t\t</div>\r\n\t\t\r\n\t\t<script type=\"text/javascript\">\r\n\t\tfunction loginOA(){\r\n\t\t\tif(document.getElementById(\"imageCode\")!=null){\r\n\t\t\t\tif(document.getElementById(\"imageCode\").value==\"\"){\r\n\t\t\t\t\tdocument.getElementById(\"msg\").innerHTML=\"验证码不能为空！\";\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(document.getElementById(\"userNameTmp\").value!=\"\" && document.getElementById(\"userPassword\").value!=\"\"){\r\n\t\t\t\tdocument.getElementById(\"userName\").value= encodeURI(document.getElementById(\"userNameTmp\").value);\r\n\t\t\t\tdocument.getElementById(\"form1\").submit();\r\n\t\t\t}else{\r\n\t\t\t\tdocument.getElementById(\"msg\").innerHTML=\"用户名或密码不能为空！\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t</script>\r\n\t\t");

		String ie = "";	// request.getHeader("User-Agent");
		if(ie.indexOf("Windows NT") >= 0){
			
      out.write("\r\n\t\t\t<script type=\"text/javascript\">\r\n\t\t\t");

			if(request.getParameter("repeat") == null){
				
      out.write("alert(\"您使用的是电脑，无法访问手机版！\");");

			} else{
				
      out.write("document.getElementById(\"msg\").innerHTML=\"您使用的是电脑，无法访问手机版！\";");

			}
			
      out.write("\r\n\t\t\tdocument.getElementById(\"form1\").action=\"/jsoa/wap.jsp?repeat=y\";\r\n\t\t\t</script>\r\n\t\t\t");

		}
		
      out.write("\r\n\t</body>\r\n</html>\r\n<script>\r\nfunction logonInit(){\r\n\t//document.getElementById(\"logonIframe\").src=\"/jsoa/quitapp.command\";\r\n}\r\n</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
