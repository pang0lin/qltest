/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:52:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.personnel_005fmanager;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class EmpStructStatistics_005fexport_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-nested.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-tiles.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-logic.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-html.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-template.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-bean.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fhtml_005fhtml;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fscope_005fname_005fid;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fhtml_005fhtml = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fscope_005fname_005fid = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fhtml_005fhtml.release();
    _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fscope_005fname_005fid.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("application/vnd.ms-excel;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


response.setHeader("Content-disposition", "attachment;filename="+new String("人员结构分析".getBytes("GBK"),"iso8859-1")+".xls");

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");

int index = 0 ;
int countRecordCount = 0  ;
if(request.getParameter("pager.offset")!=null)
     index=Integer.parseInt(request.getParameter("pager.offset"));
int offset1 = index ;

String yearMonth = (String)request.getAttribute("yearMonth");
String year = yearMonth.substring(0, yearMonth.indexOf("-"));
String month = yearMonth.substring(yearMonth.indexOf("-")+1);

int kindCount=0;
List listPersonalKind = new ArrayList();
if(request.getAttribute("listPersonalKind") != null){
	listPersonalKind = (List)request.getAttribute("listPersonalKind");
	kindCount = listPersonalKind.size();
}

      out.write('\r');
      out.write('\n');
      //  html:html
      org.apache.struts.taglib.html.HtmlTag _jspx_th_html_005fhtml_005f0 = (org.apache.struts.taglib.html.HtmlTag) _005fjspx_005ftagPool_005fhtml_005fhtml.get(org.apache.struts.taglib.html.HtmlTag.class);
      boolean _jspx_th_html_005fhtml_005f0_reused = false;
      try {
        _jspx_th_html_005fhtml_005f0.setPageContext(_jspx_page_context);
        _jspx_th_html_005fhtml_005f0.setParent(null);
        int _jspx_eval_html_005fhtml_005f0 = _jspx_th_html_005fhtml_005f0.doStartTag();
        if (_jspx_eval_html_005fhtml_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=GBK\">\r\n<title>人员结构分析</title>\r\n<!--  STYLE\tCHANGE START -->\r\n<!--  STYLE\tCHANGE START -->\r\n<style><!--\r\n.head\r\n\t{font-size:20.0pt;\r\n\tfont-weight:700;\r\n\ttext-align:center;}\r\n-->\r\n</style>\r\n<script language=\"JavaScript\" type=\"text/JavaScript\">\r\n<!--\r\nfunction MM_openBrWindow(theURL,winName,features) { //v2.0\r\n  JSMainWinOpen(theURL,winName,features);\r\n}\r\ndocument.onkeydown=look;\r\nfunction look(){\r\n\tif(event.keyCode==13){\r\n\t\tsearch();\r\n\t}\r\n}\r\n//-->\r\n</script>\r\n<script language=\"JavaScript\" src=\"js/date0.js\"></script>\r\n</head>\r\n\r\n<body  class=\"MainFrameBox\">\r\n<!-- SEARCH\tPART -->\r\n\r\n<!-- SEARCH\tPART -->\r\n\r\n<!-- MIDDLE\tBUTTONS\t-->\r\n<table width=\"100%\"\theight=\"25\"\tborder=\"0\" cellpadding=\"0\" cellspacing=\"0\" >\r\n\t<tr height=\"30\">\r\n        <td colspan=\"28\" align=\"center\" class=\"head\">\r\n\t\t\t");
if("00".equals(month)){
            out.write("\r\n        \t");
            out.print(year);
            out.write("年人员结构分析\r\n        \t");
}else{
            out.write("\r\n        \t");
            out.print(year);
            out.write('年');
            out.print(month);
            out.write("月人员结构分析\r\n        \t");
}
            out.write("\r\n\t\t</td>\r\n\t</tr>\r\n</table>\r\n<!-- MIDDLE\tBUTTONS\t-->\r\n<br />\r\n<!-- LIST TITLE PART -->\r\n<table width=\"100%\"  border=\"1\" align=\"center\" cellpadding=\"1\" cellspacing=\"0\" bordercolorlight=\"#000000\" bordercolordark=\"#FFFFFF\">\r\n\t<tr align=\"center\">\r\n\t\t<th width=\"2%\" nowrap=\"nowrap\" rowspan=\"2\">序号</th>\r\n\t\t<th width=\"18%\" rowspan=\"2\">部门</th>\r\n\t\t<th width=\"5%\" nowrap=\"nowrap\" rowspan=\"2\">总人数</th>\r\n\t\t<th width=\"18%\" nowrap=\"nowrap\" colspan=\"6\">按学历分类</th>\r\n\t\t<th width=\"12%\" nowrap=\"nowrap\" colspan=\"4\">按职称分</th>\r\n\t\t<th width=\"12%\" nowrap=\"nowrap\" colspan=\"4\">按公司工作年限分</th>\r\n\t\t<th width=\"12%\" nowrap colspan=\"4\">按年龄分</th>\r\n\t\t<th width=\"6%\" nowrap colspan=\"2\">按性别分</th>\r\n\t\t");

			if(kindCount > 0){
		
            out.write("\r\n\t\t<th width=\"15%\" nowrap colspan=\"");
            out.print(kindCount);
            out.write("\">按人员性质分</th>\r\n\t\t");
}
            out.write("\r\n\t  </tr>\r\n\t  <tr align=\"center\">\r\n\t\t  <th width=\"3%\">硕士及以上</th>\r\n\t\t  <th width=\"3%\">本科</th>\r\n\t\t  <th width=\"3%\">专科</th>\r\n\t\t  <th width=\"3%\">中专</th>\r\n\t\t  <th width=\"3%\">高中</th>\r\n\t\t  <th width=\"3%\">初中及以下</th>\r\n\t\t  <th width=\"3%\">高级</th>\r\n\t\t  <th width=\"3%\">中级</th>\r\n\t\t  <th width=\"3%\">初级</th>\r\n\t\t  <th width=\"3%\">无</th>\r\n\t\t  <th width=\"3%\">5年以上</th>\r\n\t\t  <th width=\"3%\">3-5年</th>\r\n\t\t  <th width=\"3%\">1-3年</th>\r\n\t\t  <th width=\"3%\">1年以下</th>\r\n\t\t  <th width=\"3%\">40岁以上</th>\r\n\t\t  <th width=\"3%\">30-39岁</th>\r\n\t\t  <th width=\"3%\">20-29岁</th>\r\n\t\t  <th width=\"3%\">19岁以下</th>\r\n\t\t  <th width=\"3%\">男</th>\r\n\t\t  <th width=\"3%\">女</th>\r\n\t\t  ");

		  	if(kindCount > 0){
		  		for(int k0=0; k0<kindCount; k0++){
					Object[] _obj = (Object[])listPersonalKind.get(k0);
		  
            out.write("\r\n\t\t  <th width=\"3%\">");
            out.print(_obj[1]);
            out.write("</th>\r\n\t\t  ");
            out.write("\r\n\t\t  ");
}}
            out.write("\r\n\t  </tr>\r\n\t  ");

	  String space="";
	  int i,level;
	  
            out.write("\r\n\t  ");
            //  logic:iterate
            org.apache.struts.taglib.logic.IterateTag _jspx_th_logic_005fiterate_005f0 = (org.apache.struts.taglib.logic.IterateTag) _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fscope_005fname_005fid.get(org.apache.struts.taglib.logic.IterateTag.class);
            boolean _jspx_th_logic_005fiterate_005f0_reused = false;
            try {
              _jspx_th_logic_005fiterate_005f0.setPageContext(_jspx_page_context);
              _jspx_th_logic_005fiterate_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fhtml_005f0);
              // /personnel_manager/EmpStructStatistics_export.jsp(133,3) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_logic_005fiterate_005f0.setId("list");
              // /personnel_manager/EmpStructStatistics_export.jsp(133,3) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_logic_005fiterate_005f0.setName("list");
              // /personnel_manager/EmpStructStatistics_export.jsp(133,3) name = scope type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_logic_005fiterate_005f0.setScope("request");
              int _jspx_eval_logic_005fiterate_005f0 = _jspx_th_logic_005fiterate_005f0.doStartTag();
              if (_jspx_eval_logic_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                java.lang.Object list = null;
                if (_jspx_eval_logic_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_logic_005fiterate_005f0);
                }
                list = (java.lang.Object) _jspx_page_context.findAttribute("list");
                do {
                  out.write("\r\n        ");

		Object[] obj = (Object[])list;
		index ++;
		countRecordCount ++;
		level=Integer.parseInt(obj[22+kindCount].toString());
		//level=Integer.parseInt(obj[27].toString());
		space="";
		for(i = 0;i < level;i ++){
			space+="&nbsp;&nbsp;";
		}
        
                  out.write("\r\n\t  <tr>\r\n\t    <td>");
                  out.print(index);
                  out.write("</td>\r\n\t    <td>");
                  out.print(space);
                  out.print(obj[0]!=null?obj[0].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj[1]!=null?obj[1].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj[2]!=null?obj[2].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj[3]!=null?obj[3]:"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj[4]!=null?obj[4]:"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj[5]!=null?obj[5].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj[6]!=null?obj[6]:"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj[7]!=null?obj[7].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj[8]!=null?obj[8].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj[9]!=null?obj[9].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj[10]!=null?obj[10].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj[11]!=null?obj[11].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj[12]!=null?obj[12]:"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj[13]!=null?obj[13]:"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj[14]!=null?obj[14].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj[15]!=null?obj[15]:"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj[16]!=null?obj[16].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj[17]!=null?obj[17].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj[18]!=null?obj[18].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj[19]!=null?obj[19].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj[20]!=null?obj[20].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj[21]!=null?obj[21]:"");
                  out.write("&nbsp;</td>\r\n\t\t");

			if(kindCount>0){
				for(int k0=22; k0<22+kindCount; k0++){
		
                  out.write("\r\n\t\t<td>");
                  out.print(obj[k0]!=null?obj[k0]+"":"");
                  out.write("&nbsp;</td%>\r\n\t\t");
                  out.write("\r\n\t\t");
}}
                  out.write("\r\n\t  </tr>\r\n\t  ");
                  int evalDoAfterBody = _jspx_th_logic_005fiterate_005f0.doAfterBody();
                  list = (java.lang.Object) _jspx_page_context.findAttribute("list");
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
                if (_jspx_eval_logic_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.popBody();
                }
              }
              if (_jspx_th_logic_005fiterate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fscope_005fname_005fid.reuse(_jspx_th_logic_005fiterate_005f0);
              _jspx_th_logic_005fiterate_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_logic_005fiterate_005f0, _jsp_getInstanceManager(), _jspx_th_logic_005fiterate_005f0_reused);
            }
            out.write("\r\n\t  ");
            //  logic:iterate
            org.apache.struts.taglib.logic.IterateTag _jspx_th_logic_005fiterate_005f1 = (org.apache.struts.taglib.logic.IterateTag) _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fscope_005fname_005fid.get(org.apache.struts.taglib.logic.IterateTag.class);
            boolean _jspx_th_logic_005fiterate_005f1_reused = false;
            try {
              _jspx_th_logic_005fiterate_005f1.setPageContext(_jspx_page_context);
              _jspx_th_logic_005fiterate_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fhtml_005f0);
              // /personnel_manager/EmpStructStatistics_export.jsp(182,3) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_logic_005fiterate_005f1.setId("list2");
              // /personnel_manager/EmpStructStatistics_export.jsp(182,3) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_logic_005fiterate_005f1.setName("list2");
              // /personnel_manager/EmpStructStatistics_export.jsp(182,3) name = scope type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_logic_005fiterate_005f1.setScope("request");
              int _jspx_eval_logic_005fiterate_005f1 = _jspx_th_logic_005fiterate_005f1.doStartTag();
              if (_jspx_eval_logic_005fiterate_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                java.lang.Object list2 = null;
                if (_jspx_eval_logic_005fiterate_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_logic_005fiterate_005f1);
                }
                list2 = (java.lang.Object) _jspx_page_context.findAttribute("list2");
                do {
                  out.write("\r\n        ");

		Object[] obj2 = (Object[])list2;
        
                  out.write("\r\n\t  <tr>\r\n\t    <td align=\"center\" colspan=\"2\">合&nbsp;&nbsp;计：</td>\r\n\t\t<td>");
                  out.print(obj2[0]!=null?obj2[0].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj2[1]!=null?obj2[1].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj2[2]!=null?obj2[2].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj2[3]!=null?obj2[3].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj2[4]!=null?obj2[4].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj2[5]!=null?obj2[5].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj2[6]!=null?obj2[6].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj2[7]!=null?obj2[7].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj2[8]!=null?obj2[8].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj2[9]!=null?obj2[9].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj2[10]!=null?obj2[10].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj2[11]!=null?obj2[11].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj2[12]!=null?obj2[12].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj2[13]!=null?obj2[13].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj2[14]!=null?obj2[14].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj2[15]!=null?obj2[15].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj2[16]!=null?obj2[16].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj2[17]!=null?obj2[17].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj2[18]!=null?obj2[18].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj2[19]!=null?obj2[19].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t<td>");
                  out.print(obj2[20]!=null?obj2[20].toString():"");
                  out.write("&nbsp;</td>\r\n\t\t");

			if(kindCount>0){
				for(int k0=21; k0<21+kindCount; k0++){
		
                  out.write("\r\n\t\t<td>");
                  out.print(obj2[k0]!=null?obj2[k0]+"":"");
                  out.write("&nbsp;</td%>\r\n\t\t");
}}
                  out.write("\r\n\t\t");
                  out.write("\r\n\t  </tr>\r\n\t  ");
                  int evalDoAfterBody = _jspx_th_logic_005fiterate_005f1.doAfterBody();
                  list2 = (java.lang.Object) _jspx_page_context.findAttribute("list2");
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
                if (_jspx_eval_logic_005fiterate_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.popBody();
                }
              }
              if (_jspx_th_logic_005fiterate_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005flogic_005fiterate_0026_005fscope_005fname_005fid.reuse(_jspx_th_logic_005fiterate_005f1);
              _jspx_th_logic_005fiterate_005f1_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_logic_005fiterate_005f1, _jsp_getInstanceManager(), _jspx_th_logic_005fiterate_005f1_reused);
            }
            out.write("\r\n</table>\r\n<!-- LIST TITLE PART -->\r\n<br>\r\n<!-- PAGER -->\r\n注：该报表统计的是有入职时间的员工，如有统计数据与实际数据不相符，请核对相应部门员工是否有入职时间。\r\n<!-- PAGER -->\r\n\r\n</body>\r\n");
            int evalDoAfterBody = _jspx_th_html_005fhtml_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_html_005fhtml_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fhtml_005fhtml.reuse(_jspx_th_html_005fhtml_005f0);
        _jspx_th_html_005fhtml_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_html_005fhtml_005f0, _jsp_getInstanceManager(), _jspx_th_html_005fhtml_005f0_reused);
      }
      out.write("\r\n<script language=\"javascript\">\r\n<!--\r\n\r\n//-->\r\n</script>\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
