/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:00:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.weixin.zxdk;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class CheckinFailure_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n<html lang=\"zh-CN\">\r\n\r\n<head>\r\n<link rel=\"stylesheet\" href=\"/jsoa/css/weixin/normalize.css\">\r\n<link rel=\"stylesheet\" href=\"/jsoa/css/weixin/main.css\">\r\n<link rel=\"stylesheet\" href=\"/jsoa/css/weixin/ku.css?ver=2.09.03\">\r\n<script type=\"text/javascript\" src=\"/jsoa/js/weixin/zepto.js\"></script>\r\n<script type=\"text/javascript\" src=\"/jsoa/js/weixin/wx.js\"></script>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n<meta name=\"viewport\"\r\n\tcontent=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\" />\r\n<title></title>\r\n</head>\r\n<body style=\"vertical-align: middle;\">\r\n\t<div class=\"wraper\">\r\n\t\t<div class=\"product_logo\" style=\"width: 100%;\">\r\n\t\t\t<p>打卡失败</p>\r\n\t\t</div>\r\n       \r\n\t\t<div class=\"qw_tips\" >\r\n\t\t\t<div class=\"qw_tips_inner\" >\r\n\t\t\t\t<ul style=\"margin-top: 20px;\">\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<h3></h3>\r\n\t\t\t\t\t\t<p></p></li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<h3>原因:</h3>\r\n\t\t\t\t\t\t<p>");
      out.print(request.getAttribute("message"));
      out.write("</p></li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"mt10\" style=\"position: absolute;bottom: 1%; width: 100%; margin: 0 auto;\">\r\n                        <div class=\"inner_form_btns\">\r\n                            <div class=\"fbtns flexbox\"> \r\n                            \t<a id=\"closeWindow\" class=\"fbtn btn gray_btn flexItem\" style=\"margin-left: 5px;margin-right: 5px;\" href=\"javascript:commitTask('0')\">关&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;闭</a>\r\n                            </div>\r\n                        </div>\r\n     </div>\r\n\t\r\n\t<script>\r\n\t\tvar readyFunc = function onBridgeReady() {\r\n\t\t\tvar curid;\r\n\t\t\tvar curAudioId;\r\n\t\t\tvar playStatus = 0;\r\n\r\n\t\t\t// 关闭当前webview窗口 - closeWindow\r\n\t\t\tdocument.querySelector('#closeWindow').addEventListener('click',\r\n\t\t\t\t\tfunction(e) {\r\n\t\t\t\t\t\tWeixinJSBridge.invoke('closeWindow', {}, function(res) {\r\n\r\n\t\t\t\t\t\t\t//alert(res.err_msg);\r\n\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t//隐藏顶部右侧的分享按钮\r\n\t\t\tWeixinJSBridge.call('hideOptionMenu');\r\n\t\t\t//隐藏底部的工具栏\r\n\t\t\tWeixinJSBridge.call('hideToolbar');\r\n");
      out.write("\t\t}\r\n\r\n\t\tif (typeof WeixinJSBridge === \"undefined\") {\r\n\t\t\tif (document.addEventListener) {\r\n\t\t\t\tdocument.addEventListener('WeixinJSBridgeReady', readyFunc,\r\n\t\t\t\t\t\tfalse);\r\n\t\t\t} else if (document.attachEvent) {\r\n\t\t\t\tdocument.attachEvent('WeixinJSBridgeReady', readyFunc);\r\n\t\t\t\tdocument.attachEvent('onWeixinJSBridgeReady', readyFunc);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treadyFunc();\r\n\t\t}\r\n\t</script>\r\n\t\r\n</body>\r\n</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
