/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:46:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.wap2.workitem;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.text.SimpleDateFormat;
import com.js.oa.scheme.worklog.po.WorkLogPO;
import com.js.util.util.DateHelper;
import com.js.wap.util.WapUtil;

public final class coop_005fitemlist_005f3g_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.util.util.DateHelper");
    _jspx_imports_classes.add("com.js.oa.scheme.worklog.po.WorkLogPO");
    _jspx_imports_classes.add("com.js.wap.util.WapUtil");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\r\n");

request.setCharacterEncoding("UTF-8");
String path = request.getContextPath();

String cardTitle=(String)request.getAttribute("cardTitle");
List list=(List)request.getAttribute("itemList");
String type=request.getParameter("type");

String status=request.getParameter("status");
if(status==null || "null".equals(status)){
	status=request.getAttribute("status").toString();
}
String title_name="";
if(status.equals("10")){
   title_name="待办事项";
}else if(status.equals("202and1002")){
   title_name="已发事项";
}
int beginIndex=Integer.parseInt(request.getParameter("beginIndex")==null?"0":request.getParameter("beginIndex"));

      out.write("\r\n<HTML xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<HEAD>\r\n<TITLE>待办事项-移动办公系统</TITLE>\r\n<META content=\"text/html; charset=UTF-8\" http-equiv=Content-Type>\r\n<META name=viewport content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;\">\r\n<META name=apple-touch-fullscreen content=YES>\r\n<META name=apple-mobile-web-app-capable content=no>\r\n<LINK rel=apple-touch-icon href=\"");
      out.print(path);
      out.write("/wap2/images/iphone.jpg\">\r\n<LINK rel=stylesheet type=text/css href=\"");
      out.print(path);
      out.write("/wap2/css/main_3g.css\">\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(path);
      out.write("/wap2/js/cookie.js\"></SCRIPT>\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(path);
      out.write("/wap2/js/util.js\"></SCRIPT>\r\n<SCRIPT type=application/x-javascript src=\"");
      out.print(path);
      out.write("/wap2/js/frost.js\"></SCRIPT>\r\n\r\n<SCRIPT language=JavaScript>\r\n<!--\r\nfunction init(){\r\n    //...\r\n    var backUrl = \"");
      out.print(path);
      out.write("/login.jsp?action=logout\";\r\n    setTimeout(scrollTo, 100, 0, 1);\r\n}\r\n\r\nfunction gotoPage(url, flag){\r\n    if(flag){\r\n        location.href=encodeURI(url);\r\n    }\r\n}\r\n\r\nfunction findParent(node, localName)\r\n{\r\n\twhile (node && (node.nodeType != 1 || node.localName.toLowerCase() != localName))\r\n\t\tnode = node.parentNode;\r\n\treturn node;\r\n}\r\n\r\nfunction checkOnlineUser(){\r\n\tvar url = encodeURI(\"");
      out.print(path);
      out.write("/common/checkOnlineUser.jsp\");\r\n\tvar resulthtml = XmlHttpHelper.transmit(false, \"get\", \"text\", url, null, null);\r\n\t//alert(resulthtml);\r\n\tvar result = resulthtml.replace(/\\r|\\n/gm,'');//alert(result);\r\n\treturn result;\r\n}\r\n\r\nfunction displaySearch(flag){\r\n    if(flag==1){\r\n        document.all.dd.style.display=\"none\";\r\n        document.all.search.style.display=\"\";\r\n    }else{\r\n        document.all.dd.style.display=\"\";\r\n        document.all.search.style.display=\"none\";\r\n    }\r\n}\r\n//-->\r\n</SCRIPT>\r\n\r\n<META name=GENERATOR content=\"MSHTML 8.00.6001.19154\"></HEAD>\r\n<BODY onload=init();>\r\n   <DIV id=dd class=main>\r\n       <DIV id=top>\r\n           <SPAN id=lp><DIV class=btn_2><A href=\"");
      out.print(path);
      out.write("/wap2/index_3g.jsp\">桌面</A></DIV></SPAN>\r\n           <SPAN id=title>");
      out.print(title_name );
      out.write("</SPAN>\r\n           <A class=btn_1 href=\"");
      out.print(path);
      out.write("/WapCoopAction.do?action=listseverals\">返回</A>\r\n       </DIV>\r\n       <DIV class=height2></DIV>\r\n      ");
if(list!=null&&list.size()>0){ 
		SimpleDateFormat dateFormat = new SimpleDateFormat("MM-dd HH:mm");
		Object[] obj;
		for(int i=0;i<list.size();i++){
			obj=(Object[])list.get(i);
			String coopstatus=obj[5].toString();
			String statusStr="";
			if(coopstatus.equals("100")){
			    statusStr="办结";
			}
			String bodyId=obj[0].toString();
			String memberId=obj[6].toString();
	  
      out.write("\r\n\t   <!-- 显示一条信息 -->\r\n       <DIV class=lista1>\r\n         <DIV class=l1>\r\n            <A class=listing href=\"");
      out.print(path);
      out.write("/WapCoopAction.do?action=toDealwith&bodyId=");
      out.print(bodyId );
      out.write("&memberId=");
      out.print(memberId );
      out.write("&status=");
      out.print(status );
      out.write("&beginIndex=");
      out.print(beginIndex );
      out.write('"');
      out.write('>');
      out.print(obj[1]);
      out.write("</A>\r\n         </DIV>\r\n         <SPAN>");
      out.print(dateFormat.format(obj[2]) );
      out.write("&nbsp;&nbsp;&nbsp;&nbsp;");
      out.print(statusStr );
      out.write("</SPAN>\r\n       </DIV>\r\n       <!-- 显示一条信息结束 -->\t\r\n    ");
  }
	 } //end of if(list!=null
	 
      out.write('\r');
      out.write('\n');

int nextNum=(beginIndex/WapUtil.LIMITED)+1;
int nextIndex=nextNum*WapUtil.LIMITED;
int upNum=(beginIndex/WapUtil.LIMITED)-1;
int upIndex=upNum*WapUtil.LIMITED;

int recordCount=Integer.parseInt(request.getAttribute(WapUtil.RECORD_COUNT).toString());
String upUrl="#",nextUrl="#";
if(upIndex>=0)upUrl=path+"/WapCoopAction.do?action=list&status="+status+"&beginIndex="+upIndex;
if(nextIndex<recordCount)nextUrl=path+"/WapCoopAction.do?action=list&status="+status+"&beginIndex="+nextIndex;

      out.write("       \r\n       \r\n       <DIV class=page>\r\n       ");
if(upUrl.indexOf("#")<0){
      out.write("\r\n       <INPUT class=btn_4 onclick=\"gotoPage('");
      out.print(upUrl );
      out.write("',true);\" value=上一页 type=submit name=prev>\r\n       ");
}if(nextUrl.indexOf("#")<0){ 
      out.write(" \r\n       <INPUT class=btn_4 onclick=\"gotoPage('");
      out.print(nextUrl );
      out.write("',true);\" value=下一页 type=submit name=next>\r\n       ");
}
      out.write("\r\n       </DIV>\r\n   </DIV>\r\n   \r\n</BODY>\r\n</HTML>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
