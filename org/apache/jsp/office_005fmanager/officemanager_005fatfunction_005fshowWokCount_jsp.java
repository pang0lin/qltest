/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:01:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.office_005fmanager;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.regex.Pattern;
import com.js.oa.relproject.bean.*;
import com.js.lang.Resource;
import java.util.*;
import java.text.*;
import com.js.util.util.BrowserJudge;

public final class officemanager_005fatfunction_005fshowWokCount_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-nested.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-tiles.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-logic.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-html.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-template.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-bean.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.js.oa.relproject.bean");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.lang.Resource");
    _jspx_imports_classes.add("java.util.regex.Pattern");
    _jspx_imports_classes.add("com.js.util.util.BrowserJudge");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fhtml_005fhtml;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fhtml_005fhtml = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fhtml_005fhtml.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");

	response.setHeader("Cache-Control", "no-store");
	response.setHeader("Pragma", "no-cache");
	response.setDateHeader("Expires", 0);
	//流程
	Object listWaitFlow=request.getAttribute("listWaitFlow");
	Object listWorkWait=request.getAttribute("listWorkWait");
	Object listWorkCom=request.getAttribute("listWorkCom");

	//协同
	Object list_daifa=request.getAttribute("list_daifa");
	Object list_daiban=request.getAttribute("list_daiban");
	Object list_yifa=request.getAttribute("list_yifa");
	Object list_yiban=request.getAttribute("list_yiban");
	
    //公文
	Object listFawen=request.getAttribute("listFawen");
	Object listYIfa_gw=request.getAttribute("listYIfa_gw");
	Object processList=request.getAttribute("processList");
	Object listGWCY=request.getAttribute("listGWCY");
	//新闻
	Object news=request.getAttribute("news");
	Object newsCheck=request.getAttribute("newsCheck");
	//公告
	Object notices=request.getAttribute("notices");
	Object noticesCheck=request.getAttribute("noticesCheck");
	//知识
	Object knowledge=request.getAttribute("knowledge");
	Object knowledgeCheck=request.getAttribute("knowledgeCheck");
	

      out.write("\r\n\r\n");
      //  html:html
      org.apache.struts.taglib.html.HtmlTag _jspx_th_html_005fhtml_005f0 = (org.apache.struts.taglib.html.HtmlTag) _005fjspx_005ftagPool_005fhtml_005fhtml.get(org.apache.struts.taglib.html.HtmlTag.class);
      boolean _jspx_th_html_005fhtml_005f0_reused = false;
      try {
        _jspx_th_html_005fhtml_005f0.setPageContext(_jspx_page_context);
        _jspx_th_html_005fhtml_005f0.setParent(null);
        int _jspx_eval_html_005fhtml_005f0 = _jspx_th_html_005fhtml_005f0.doStartTag();
        if (_jspx_eval_html_005fhtml_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n<head>\r\n<title>员工工作统计</title>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=GBK\">\r\n<link\r\n\thref=\"/jsoa/skin/");
            out.print(session.getAttribute("skin"));
            out.write("/style-");
            out.print(session.getAttribute("browserVersion"));
            out.write(".css\"\r\n\trel=\"stylesheet\" type=\"text/css\" />\r\n<script language=\"javascript\" src=\"js/checkForm.js\"></script>\r\n<SCRIPT language=\"javascript\" src=\"/jsoa/js/openEndow.js\"></SCRIPT>\r\n<SCRIPT language=javascript src=\"/jsoa/js/jquery-1.4.2.min.js\"></SCRIPT>\r\n<script language=javascript src=\"/jsoa/oacollect/js/BizAjax.js\"></script>\r\n<script src=\"/jsoa/js/js.js\" language=\"javascript\"></script>\r\n</head>\r\n<body class=\"MainFrameBox Pupwin\"  >\r\n <div style=\"wdith:100%\">\r\n\t<table  width=\"100%\" border=\"0\" id=\"personinner\" cellpadding=\"0\" cellspacing=\"0\" class=\"listTable outTopline\">\r\n                        <tr align=\"center\">\r\n\t\t\t\t\t\t\t<td class=\"listTableHead\">分类 </td>\r\n\t\t\t\t\t\t\t<td class=\"listTableHead\"> 待发数量 </td>\r\n\t\t\t\t\t\t\t<td class=\"listTableHead\">在办数量</td>\r\n\t\t\t\t\t\t\t<td class=\"listTableHead\">办结数量</td>\r\n\t\t\t\t\t\t\t<td class=\"listTableHead\">已发数量</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">工作流程</td>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">&nbsp;");
            out.print(request.getAttribute("listWaitFlow") );
            out.write("</td>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">&nbsp;");
            out.print(listWorkWait );
            out.write("</td>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">&nbsp;");
            out.print(listWorkCom );
            out.write("</td>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">&nbsp;0</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">协同工作</td>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">&nbsp;");
            out.print(list_daifa );
            out.write("</td>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">&nbsp;");
            out.print(list_daiban );
            out.write("</td>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">&nbsp;");
            out.print(list_yifa );
            out.write("</td>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">&nbsp;");
            out.print(list_yiban );
            out.write("</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">公文管理</td>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">&nbsp;");
            out.print(listFawen );
            out.write("</td>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">&nbsp;");
            out.print(listYIfa_gw );
            out.write("</td>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">&nbsp;");
            out.print(processList );
            out.write("</td>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">&nbsp;");
            out.print(listGWCY );
            out.write("</td>\r\n\t\t\t\t\t\t</tr>\r\n                    </table> \r\n                    <table  width=\"100%\" border=\"0\" id=\"personinner\" cellpadding=\"0\" cellspacing=\"0\" class=\"listTable outTopline\">\r\n                        <tr align=\"center\">\r\n\t\t\t\t\t\t\t<td class=\"listTableHead\">分类 </td>\r\n\t\t\t\t\t\t\t<td class=\"listTableHead\">发布数量</td>\r\n\t\t\t\t\t\t\t<td class=\"listTableHead\"> 浏览数量 </td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">知识</td>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">&nbsp;");
            out.print(knowledge);
            out.write("</td>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">&nbsp;");
            out.print(knowledgeCheck);
            out.write("</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">新闻</td>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">&nbsp;");
            out.print(news);
            out.write("</td>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">&nbsp;");
            out.print(newsCheck );
            out.write("</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">公告</td>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">&nbsp;");
            out.print(notices);
            out.write("</td>\r\n\t\t\t\t\t\t\t<td class=\"listTableLine1\">&nbsp;");
            out.print(noticesCheck);
            out.write("</td>\r\n\t\t\t\t\t\t</tr>\r\n                    </table> \r\n\t\t\t\r\n  </div>\t\r\n</body>\r\n<script language=\"JavaScript\">\r\n\r\n</script>\r\n<script src=\"/jsoa/js/util.js\"></script>\r\n");
            int evalDoAfterBody = _jspx_th_html_005fhtml_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_html_005fhtml_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fhtml_005fhtml.reuse(_jspx_th_html_005fhtml_005f0);
        _jspx_th_html_005fhtml_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_html_005fhtml_005f0, _jsp_getInstanceManager(), _jspx_th_html_005fhtml_005f0_reused);
      }
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
