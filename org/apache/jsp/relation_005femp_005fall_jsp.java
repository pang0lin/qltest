/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:38:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.oa.personalwork.netemp.po.NetEmpPO;

public final class relation_005femp_005fall_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.oa.personalwork.netemp.po.NetEmpPO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n");

java.util.Map map=(java.util.Map)request.getAttribute("relationEmp");
String[][] supEmp=(String[][])map.get("supEmp");
String[][] underEmp=(String[][])map.get("underEmp");
String[][] netEmp=(String[][])map.get("netEmp");
String userId=request.getSession().getAttribute("userId").toString();
String superiorsName = "";
String superiorsId = "";
String underlingName = "";
String underlingId = "";
String netEmpName = "";
String netEmpId = "";
String id = "-1";
String eventRelationEmpId = "";
String eventRelationEmpName = "";
	
if(map.isEmpty()){

	com.js.system.service.usermanager.UserBD userBD = new com.js.system.service.usermanager.UserBD();

	java.util.List list = new java.util.ArrayList();
	try {
		list = userBD.selectMyUnderling(session.getAttribute("userId").toString());
	} catch (Exception e) {
		e.printStackTrace();
	}

	if (!list.isEmpty()) {
		underEmp=new String[list.size()][2];
		for (int i = 0; i < list.size(); i++) {
			Object[] obj = (Object[]) list.get(i);
			underEmp[i][0]=obj[0]+"";
			underEmp[i][1]=obj[1]+"";
		}

	}

	com.js.system.vo.usermanager.EmployeeVO employeeVO = new com.js.system.vo.usermanager.EmployeeVO();
	try {
		employeeVO = userBD.getEmployeeVO(Long.valueOf(userId));
	} catch (Exception e) {
		e.printStackTrace();
	}
	if (null != employeeVO) {

		superiorsId = employeeVO.getEmpLeaderId();
		superiorsName = employeeVO.getEmpLeaderName();
		superiorsId=superiorsId.replace("$$", ",").replace("$", "");
		if(!"".equals(superiorsId)){
			String[] suid=superiorsId.split(",");
			String[] suName=superiorsName.split(",");
			supEmp=new String[suid.length][2];
			for(int j=0;j<suid.length;j++){
				supEmp[j][0]=suid[j];
				supEmp[j][1]=suName[j];
			}
		}
	}
}

      out.write("\r\n\r\n<STYLE>\r\n  body {\r\n  \tmargin: 0px\r\n  }\r\n\r\n  #Loading {\r\n\t    position: absolute;\r\n\t    text-align:left;\r\n\t    z-index: 10;\r\n\t    background-color: #FFFFFF;\r\n\t\tborder-top-width: thin;\r\n\t\tborder-right-width: thin;\r\n\t\tborder-bottom-width: thin;\r\n\t\tborder-left-width: thin;\r\n\t\tborder-top-style: outset;\r\n\t\tborder-right-style: outset;\r\n\t\tborder-bottom-style: outset;\r\n\t\tborder-left-style: outset;\r\n\t\tborder-top-color: #CCCCCC;\r\n\t\tborder-right-color: #CCCCCC;\r\n\t\tborder-bottom-color: #CCCCCC;\r\n\t\tborder-left-color: #CCCCCC;\r\n\t\tpadding:5px;\r\n\t\r\n  }\r\n  #Loading  {filter:progid:DXImageTransform.Microsoft.Shadow \r\n(Color=#333333,Direction=120,strength=5)} \r\n  \r\n  \r\n</STYLE>\r\n\r\n\r\n<html>\r\n\t<head>\r\n\t<style type=\"text/css\">\r\n\t body{ font-size:12px;}\r\n\t.border-top{border-top:1px solid #b1c8d7;}\r\n\t.td{background-image:url(/jsoa/images/left_cent.gif); color:#2c4a77; font-weight:bold;}\r\n\t.table{border:1px solid #b1c8d7;}\r\n\t.table2{border-left:1px solid #b1c8d7;border-right:1px solid #b1c8d7;border-bottom:1px solid #b1c8d7;}\r\n\t</style>\r\n");
      out.write("\r\n  <link rel=stylesheet type=\"text/css\" href=\"/jsoa/style/cssmain.css\">    \r\n<title></title>\r\n</head>\r\n\t<body >\r\n\t<br/>\r\n\t<table width=\"98%\" align=\"center\">\r\n\t<tr>\r\n\t\t<td colspan=\"3\">\r\n\t\t\t<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"table\">\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td width=\"19\"><img src=\"/jsoa/images/left_top.gif\"/></td>\r\n\t     \t\t\t<td class=\"td\">上级人员</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</table>\r\n\t\t</td>\r\n     </tr>\r\n     ");

     if(supEmp!=null){
    	 int i=0;
    	 for(i=0;i<supEmp.length;i++){
    		 if(i%3==0){
    			 //另起一行
    			 
      out.write("\r\n    \t\t\t <tr>\r\n    \t\t\t   <td style=\"padding-left:20px;\" width=\"30%\">\r\n\t\t\t          <img src=\"/jsoa/images/superiors.gif\" border=\"0\" /> \r\n\t\t\t          <span><a href=\"/jsoa/personRelation.do?method=relationList&type=1&empId=");
      out.print(supEmp[i][0] );
      out.write('"');
      out.write('>');
      out.print(supEmp[i][1] );
      out.write("</a></span>\r\n    \t\t\t   </td>\r\n    \t\t\t ");

    		 }else if(i%3==2){
    			 
      out.write("\r\n    \t\t\t  <td  width=\"30%\">\r\n\t\t\t          <img src=\"/jsoa/images/superiors.gif\" border=\"0\" /> \r\n\t\t\t          <span><a href=\"/jsoa/personRelation.do?method=relationList&type=1&empId=");
      out.print(supEmp[i][0] );
      out.write('"');
      out.write('>');
      out.print(supEmp[i][1] );
      out.write("</a></span>\r\n\t\t\t      </td>\t\t\t\r\n\t\t        </tr>\r\n    \t\t\t ");

    		 }else{
    			 
      out.write("\r\n    \t\t\t   <td width=\"30%\">\r\n\t\t\t          <img src=\"/jsoa/images/superiors.gif\" border=\"0\" /> \r\n\t\t\t          <span><a href=\"/jsoa/personRelation.do?method=relationList&type=1&empId=");
      out.print(supEmp[i][0] );
      out.write('"');
      out.write('>');
      out.print(supEmp[i][1] );
      out.write("</a></span>\r\n    \t\t\t   </td>\r\n    \t\t\t ");

    		 }
    	 }
    	 
    	 if(i>0 && i%3<2){
    		 out.print("</tr>");
    	 }
     }
      out.write("\r\n\t\r\n\t\t\r\n\t<tr>\r\n\t\t<td colspan=\"3\">\r\n\t\t\t<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"table\">\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td width=\"19\"><img src=\"/jsoa/images/left_top.gif\"/></td>\r\n\t     \t\t\t<td class=\"td\">下级人员：</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</table>\r\n\t\t</td>\r\n\t</tr>\t\r\n\t\r\n\t");

     if(underEmp!=null){
    	 int i=0;
    	 for(i=0;i<underEmp.length;i++){
    		 if(i%3==0){
    			 //另起一行
    			 
      out.write("\r\n    \t\t\t <tr>\r\n    \t\t\t   <td style=\"padding-left:20px;\" width=\"30%\">\r\n\t\t\t          <img src=\"/jsoa/images/underling.gif\" border=\"0\" /> \r\n\t\t\t          <span><a href=\"/jsoa/personRelation.do?method=relationList&type=2&empId=");
      out.print(underEmp[i][0] );
      out.write('"');
      out.write('>');
      out.print(underEmp[i][1] );
      out.write("</a></span>\r\n    \t\t\t   </td>\r\n    \t\t\t ");

    		 }else if(i%3==2){
    			 
      out.write("\r\n    \t\t\t  <td  width=\"30%\">\r\n\t\t\t          <img src=\"/jsoa/images/underling.gif\" border=\"0\" /> \r\n\t\t\t          <span><a href=\"/jsoa/personRelation.do?method=relationList&type=2&empId=");
      out.print(underEmp[i][0] );
      out.write('"');
      out.write('>');
      out.print(underEmp[i][1] );
      out.write("</a></span>\r\n\t\t\t      </td>\t\t\t\r\n\t\t        </tr>\r\n    \t\t\t ");

    		 }else{
    			 
      out.write("\r\n    \t\t\t   <td width=\"30%\">\r\n\t\t\t          <img src=\"/jsoa/images/underling.gif\" border=\"0\" /> \r\n\t\t\t          <span><a href=\"/jsoa/personRelation.do?method=relationList&type=2&empId=");
      out.print(underEmp[i][0] );
      out.write('"');
      out.write('>');
      out.print(underEmp[i][1] );
      out.write("</a></span>\r\n    \t\t\t   </td>\r\n    \t\t\t ");

    		 }
    	 }
    	 
    	 if(i>0 && i%3<2){
    		 out.print("</tr>");
    	 }
     }
      out.write("\r\n\t\r\n\t\r\n\t\r\n\t<tr>\r\n\t\t<td colspan=\"3\">\r\n\t\t\t<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"table\">\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td width=\"19\"><img src=\"/jsoa/images/left_top.gif\"/></td>\r\n\t     \t\t\t<td class=\"td\">相关人员：</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</table>\r\n\t\t</td>\r\n\t</tr>\t\r\n\t");

     if(netEmp!=null){
    	 int i=0;
    	 for(i=0;i<netEmp.length;i++){
    		 if(i%3==0){
    			 //另起一行
    			 
      out.write("\r\n    \t\t\t <tr>\r\n    \t\t\t   <td  style=\"padding-left:20px;\" width=\"30%\">\r\n\t\t\t          <img src=\"/jsoa/images/netEmp.gif\" border=\"0\" /> \r\n\t\t\t          <span><a href=\"/jsoa/personRelation.do?method=relationList&type=3&empId=");
      out.print(netEmp[i][0] );
      out.write('"');
      out.write('>');
      out.print(netEmp[i][1] );
      out.write("</a></span>\r\n    \t\t\t   </td>\r\n    \t\t\t ");

    		 }else if(i%3==2){
    			 
      out.write("\r\n    \t\t\t  <td  width=\"30%\">\r\n\t\t\t          <img src=\"/jsoa/images/netEmp.gif\" border=\"0\" /> \r\n\t\t\t          <span><a href=\"/jsoa/personRelation.do?method=relationList&type=3&empId=");
      out.print(netEmp[i][0] );
      out.write('"');
      out.write('>');
      out.print(netEmp[i][1] );
      out.write("</a></span>\r\n\t\t\t      </td>\t\t\t\r\n\t\t        </tr>\r\n    \t\t\t ");

    		 }else{
    			 
      out.write("\r\n    \t\t\t   <td width=\"30%\">\r\n\t\t\t          <img src=\"/jsoa/images/netEmp.gif\" border=\"0\" /> \r\n\t\t\t          <span><a href=\"/jsoa/personRelation.do?method=relationList&type=3&empId=");
      out.print(netEmp[i][0] );
      out.write('"');
      out.write('>');
      out.print(netEmp[i][1] );
      out.write("</a></span>\r\n    \t\t\t   </td>\r\n    \t\t\t ");

    		 }
    	 }
    	 
    	 if(i>0 && i%3<2){
    		 out.print("</tr>");
    	 }
     }
      out.write("\r\n\t\r\n\t    \r\n     \r\n   </table>\r\n<div id=\"Loading\" style=\"display:none; position:absolute; left:354px; top:44px; width:85px; height:159px\" ondblclick=\"this.style.display='none'\">\r\nf</div>\r\n\t</body>\r\n</html>\r\n<script language=\"JavaScript\">\r\nfunction openEvent(obj){\r\n\tJSMainWinOpen('/jsoa/eventAction.do?action=selectSingleEvent&eventId='+obj);\r\n}\r\n\t\t\r\n</script>\r\n<script src=\"/jsoa/js/imenu.js\"></script>\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
