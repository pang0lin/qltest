/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:02:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.iWebRevision_jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.*;
import java.text.*;
import java.util.*;
import java.sql.*;
import DBstep.iDBManager2000.*;

public final class DocumentList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


  DBstep.iDBManager2000 ObjConnBean = new DBstep.iDBManager2000();

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("DBstep.iDBManager2000");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=gb2312");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n");
      out.write("\r\n<html>\r\n<head>\r\n<title>iWebRevision 网页签批中间件</title>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=gb2312\">\r\n<meta HTTP-EQUIV=\"Pragma\" CONTENT=\"no-cache\">\r\n<link REL=\"stylesheet\" href=\"Test.css\" type=\"text/css\">\r\n</head>\r\n<body bgcolor=\"#ffffff\">\r\n<div align=\"center\"><font size=4 color=ff0000>iWebRevision 网页签批中间件</font></div>\r\n<!-- 控件引用 -->\r\n<script src=\"iWebRevision.js\"></script>\r\n<br>\r\n<hr size=1>\r\n<div class=IptStyle>\r\n注：网页签批演示版能直接在IE的页面里进行签名和印章。正式版可实现更强大的功能，如要正式版，请与公司联系。<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;主要应用于B/S结构下各种流程的WEB审批单上进行电子签名，真迹保留。如要正确演示本示例，您必须：<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;安装iWebRevision 插件，请你在打开本页面等待几秒钟后的弹出窗口时，选择[是]按钮，才能正常运行。<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;如果不能正常自动安装iWebRevision 插件，<a href=\"InstallClient.zip\">请你在这里下载本地安装程序</a>。<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;开发和应用中遇到控件安装问题时请阅读该文档：《安装、升级和卸载详解》。<br>\r\n<br>\r\n</div>\r\n\r\n<table border=0  cellspacing='0' cellpadding='0' width=100% align=center class=TBStyle>\r\n<tr>\r\n  <td colspan=2 class=\"TDTitleStyle\" nowrap align=center>\r\n    <input type=button value=\"新建文档\"  onclick=\"javascript:location.href='DocumentEdit.jsp?EditType=3&UserName='+username.value;\">\r\n");
      out.write("    <input type=button value=\"印章管理\"  onclick=\"javascript:location.href='Signature/SignatureList.jsp'\">\r\n    <input type=button value=\"查看版本\"  onclick=\"alert('iWebRevision网页签批中间件 '+Consult.Version()+Consult.VersionEx())\">\r\n  </td>\r\n  <td colspan=4 class=\"TDTitleStyle\">用户名:<input type=text name=username size=8 value=\"演示人\"></td>\r\n</tr>\r\n\r\n<tr>\r\n  <td nowrap align=center class=\"TDTitleStyle\" height=\"25\">编号</td>\r\n  <td nowrap align=center class=\"TDTitleStyle\">主题</td>\r\n  <td nowrap align=center class=\"TDTitleStyle\">作者</td>\r\n  <td nowrap align=center class=\"TDTitleStyle\">打印份数</td>\r\n  <td nowrap align=center class=\"TDTitleStyle\">日期</td>\r\n  <td nowrap align=center class=\"TDTitleStyle\">操作</td>\r\n</tr>\r\n\r\n");

  String strSql = "",strRecordID = "";
  if (ObjConnBean.OpenConnection()) {
    ResultSet rs = null;
    Statement stmt = null;

    try {
      strSql = "select  * from Document order by DocumentID desc";
      rs = ObjConnBean.ExecuteQuery(strSql);
      while (rs.next()){
        strRecordID = rs.getString("RecordID");

      out.write("\r\n<tr>\r\n  <td nowrap align=center class=\"TDStyle\">");
      out.print(strRecordID);
      out.write("</td>\r\n  <td nowrap align=center class=\"TDStyle\">");
      out.print(rs.getString("Title"));
      out.write("</td>\r\n  <td nowrap align=center class=\"TDStyle\">");
      out.print(rs.getString("UserName"));
      out.write("</td>\r\n  <td nowrap align=center class=\"TDStyle\">");
      out.print(rs.getString("Copies"));
      out.write("</td>\r\n  <td nowrap align=center class=\"TDStyle\">");
      out.print(rs.getString("DateTime"));
      out.write("</td>\r\n  <td class=\"TDStyle\" nowrap align=center>\r\n    <input type=button onclick=\"javascript:location.href='DocumentEdit.jsp?RecordID=");
      out.print(strRecordID);
      out.write("&EditType=1&UserName='+username.value;\" value=\"签发权限\">\r\n    <input type=button onclick=\"javascript:location.href='DocumentEdit.jsp?RecordID=");
      out.print(strRecordID);
      out.write("&EditType=2&UserName='+username.value;\" value=\"会签权限\">\r\n    <input type=button onclick=\"javascript:location.href='DocumentEdit.jsp?RecordID=");
      out.print(strRecordID);
      out.write("&EditType=3&UserName='+username.value;\" value=\"审核权限\">\r\n    <input type=button onclick=\"javascript:location.href='DocumentEdit.jsp?RecordID=");
      out.print(strRecordID);
      out.write("&EditType=0&UserName='+username.value;\" value=\"禁止修改\">\r\n  </td>\r\n</tr>\r\n");

   }
  rs.close();
    }catch (SQLException e) {
      out.println(e.getMessage());
    }
    ObjConnBean.CloseConnection();
  }

      out.write("\r\n</table>\r\n</body>\r\n</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
