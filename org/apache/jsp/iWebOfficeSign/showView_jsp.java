/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:08:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.iWebOfficeSign;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.net.URLEncoder;
import java.sql.ResultSet;
import com.js.util.util.DataSourceBase;
import java.text.*;
import java.util.*;
import com.js.util.config.SystemCommon;

public final class showView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.net.URLEncoder");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("com.js.util.config.SystemCommon");
    _jspx_imports_classes.add("com.js.util.util.DataSourceBase");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n<html>\r\n<head>\r\n");

  String[] fileNames = {"","","","","","",""};
  String fileName="";
  String saveFileName="";
  String realsavefile="";
  String moduleType="information";
  String mFileType,mRecordID="";
  String queryString=request.getQueryString();
  String showFilePath = com.js.util.util.BASE64.BASE64DecoderNoBR(queryString);
  
  String downloadPath = "";
  if("shandongguotou".equals(com.js.util.config.SystemCommon.getCustomerName())){
	  String[] FilePathdatas = showFilePath.split("&");
	  String filepathgt = request.getSession().getServletContext().getRealPath("/") +"upload/" +FilePathdatas[0].substring(0,FilePathdatas[0].lastIndexOf("/")+1);
	  String FileNamegt = FilePathdatas[0].substring(FilePathdatas[0].lastIndexOf("/")+1);
	  String prefixgt = FilePathdatas[0].substring(FilePathdatas[0].lastIndexOf("."));
	  downloadPath=com.js.util.util.BASE64.BASE64EncoderNoBR(filepathgt+"&&"+FileNamegt+"&&"+prefixgt+"&&"+FilePathdatas[1]);
  }
  
  if(showFilePath.indexOf("documentOpen=1")>0){
	  //从公文中直接打开
	  moduleType="govdocumentmanager";
	  showFilePath="&"+showFilePath;
	  int index=showFilePath.indexOf("&FileName");
		if(index>=0){
			String temp=showFilePath.substring(index+10);
			if(temp.indexOf("&")>=0){
				fileName=temp.substring(0,temp.indexOf("&"));
			}else{
				fileName=temp;
			}			
		}
		saveFileName=fileName;
		int index1=showFilePath.indexOf("&name");
		if(index1>=0){
			String temp1=showFilePath.substring(index1+6);
			if(temp1.indexOf("&")>=0){
				realsavefile=temp1.substring(0,temp1.indexOf("&"));
			}else{
				realsavefile=temp1;
			}	
		}
		fileName=fileName.substring(0,4)+"-govdocumentmanager-"+fileName;
		
	  mFileType=fileName.substring(fileName.lastIndexOf(".")).toLowerCase();
  }else{
	  String[] fileNamesTemp = showFilePath.split("&");//路径，真是文件名，infoId，edit
	  for(int i=0;i<fileNamesTemp.length;i++){
		  fileNames[i] = fileNamesTemp[i];
	  }
	  fileName = fileNames[0];	
	  realsavefile=fileNames[1];
	  //得到实际的文件夹名, moduleType
	  String moduleTypeTemp=fileName.substring(fileName.indexOf("/")+1);
	  String[] fileNameArr=fileName.split("/");
	  for(int i=0;i<fileNameArr.length;i++){
		  if(fileNameArr[i].indexOf("_")>=0){
			  saveFileName=fileNameArr[i];
		  }
	  }
	  if(fileName.indexOf("/")>5){
		  moduleType=fileName.substring(0,fileName.indexOf("/"));
	  }else{
		  moduleType=moduleTypeTemp.substring(0,moduleTypeTemp.indexOf("/"));
	  }
	  	  
	  mFileType=fileName.substring(fileName.lastIndexOf("."));
	  mRecordID=fileName.replace("/","+");
	  while(mRecordID.contains("+")){
		  mRecordID = mRecordID.substring(mRecordID.indexOf("+")+1);
	  }
	  if(fileNames.length>2){
		  mRecordID = mRecordID.substring(0,mRecordID.indexOf(mFileType))+"_"+System.currentTimeMillis()+"_"+fileNames[2]+"_"+fileNames[1];
	  }else{
		  mRecordID = mRecordID.substring(0,mRecordID.indexOf(mFileType))+"_"+System.currentTimeMillis();
	  }
	  mFileType=mFileType.toLowerCase();
  }
  //System.out.println(mRecordID);
  String mEditType=showFilePath.indexOf("edit=1")>0?"1":"0";
  String mUserName=session.getAttribute("userName").toString();

  //取得编号
  if ( mRecordID==null){
     mRecordID="";	//编号为空
  }
  //取得模式
  if ( mEditType==null){
    mEditType="0";		// 0 显示  1 起草 2 批改 3 审核
  }
  //取得类型
  if ( mFileType==null){
    mFileType=".doc";
  }
  //取得用户名
  if (mUserName==null){
    mUserName="金格科技";
  }
  String mFileName = fileName;  //取得完整的文档名称
  String url = "mRecordID="+URLEncoder.encode(mRecordID)+"&mFileName="+URLEncoder.encode(mFileName.replace("/","-"))+"&mFileType="+mFileType+"&mEditType="+mEditType+"&mUserName="+mUserName+"&moduleType="+moduleType;

      out.write("\r\n<title>查看文件</title>\r\n<link rel='stylesheet' type='text/css' href='test.css'>\r\n<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n</head>\r\n<body bgcolor=\"#ffffff\"  ");
if("shandongguotou".equals(com.js.util.config.SystemCommon.getCustomerName())){
      out.write("onkeydown=\"bodyOnKeyDown()\"");
} 
      out.write(">  <!--引导和退出iWebOffice-->\r\n\r\n<table width=\"100%\"\theight=\"25\"\tborder=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"inlineBottomLine\">\r\n<tr><td>\r\n");
if("1".equals(SystemCommon.getOfficeFileDownload())){ 
      out.write("\r\n     ");

	if("shandongguotou".equals(com.js.util.config.SystemCommon.getCustomerName())){
		
      out.write("\r\n\t\t<input type=button class=\"btnButton2font\" value=\" 另存为 \" onclick=\"download();\">\r\n\t\t");

	}else{
		
      out.write("\r\n\t\t<input type=button class=\"btnButton2font\" value=\" 另存为 \" onclick=\"downloadLocal();\">\r\n\t\t");

	}
     
      out.write('\r');
      out.write('\n');
} 
      out.write('\r');
      out.write('\n');
if("1".equals(mEditType) && ("govdocumentmanager".equals(moduleType)|| "information".equals(moduleType) || "customform".equals(moduleType) || "cooperate".equals(moduleType))){ 
      out.write("\r\n<input type=button class=\"btnButton2font\" value=\"保存文档\" onclick=\"onlySaveDoc();\">\r\n<input type=button class=\"btnButton2font\" value=\"保存并返回\" onclick=\"saveAndCloseWin()\">");
} 
      out.write('\r');
      out.write('\n');
if(false){//if(showFilePath.indexOf("information/")>=0){ 
      out.write("\r\n<input type=button class=\"btnButton2font\" value=\"显示最新文件\" onclick=\"iframeSrc('");
      out.print(url );
      out.write("');\">\r\n<input type=button class=\"btnButton2font\" value=\"历史记录\" onclick=\"showHistory();\">\r\n");
} 
      out.write("\r\n<input type=button class=\"btnButton2font\" value=\" 退  出  \" onclick=\"window.close();\">\r\n</td></tr>\r\n</table>\r\n<table border=0  cellspacing='0' cellpadding='0' width=100% height=100% align=center class=TBStyle>\r\n<tr>\r\n<td id=\"historyTd\"  width=\"20%\" style=\"display:none;\" valign=\"top\">\r\n\r\n</td>\r\n  <td class=\"TDStyle\" height=100% >\r\n\t<iframe name=\"officeIframe\" id=\"officeIframe\" src=\"/jsoa/iWebOfficeSign/officeShow.jsp?");
      out.print(url );
      out.write("\" \r\n\t frameborder=no  border=0  marginwidth=0  marginheight=0  id=\"personinner\" scrolling=\"no\" width=\"100%\" height=\"96%\"></iframe>\r\n  </td>\r\n</tr>\r\n</table>\r\n\r\n<script type=\"text/javascript\">\r\nfunction downloadLocal(){\r\n\t");

	String str=com.js.util.util.BASE64.BASE64EncoderNoBR("FileName="+saveFileName+"&name="+realsavefile+"&path="+moduleType);
	
      out.write("\r\n\t//alert('");
      out.print("FileName="+saveFileName+"&name="+realsavefile+"&path="+moduleType);
      out.write("');\r\n\tvar url=\"/jsoa/public/jsp/doc_download.jsp?");
      out.print(str);
      out.write("\";\r\n\twindow.location.href=url;\r\n}\r\nfunction bodyOnKeyDown(){\r\n\tif(event.ctrlKey){\r\n\t\tif(event.keyCode==80){\r\n\t\t\tofficeIframe.WebOpenPrint();\r\n\t\t}\r\n\t}\r\n}\r\nfunction showHistory(){\r\n\tvar historyTd = document.getElementById(\"historyTd\");\r\n\tif(historyTd.style.display==\"\"){\r\n\t\thistoryTd.style.display=\"none\";\r\n\t}else{\r\n\t\tvar tdContent = ajaxContent();\r\n\t\thistoryTd.innerHTML = tdContent;\r\n\t\thistoryTd.style.display=\"\";\r\n\t}\r\n}\r\nfunction saveAndCloseWin(){\r\n\tofficeIframe.onlySaveDoc();\r\n\twindow.close();\r\n}\r\nfunction onlySaveDoc(){\r\n\tofficeIframe.onlySaveDoc();\r\n\t");
if(moduleType.equals("information")){
      out.write("\r\n\t\tdocument.getElementById(\"historyTd\").innerHTML = ajaxContent();\r\n\t");
}
      out.write("\r\n}\r\nfunction iframeSrc(url){\r\n\tdocument.getElementById(\"officeIframe\").src = ((window.location.href).substring(0,(window.location.href).indexOf(\"/jsoa\")))+\"/jsoa/iWebOfficeSign/officeShow.jsp?\"+url;\r\n}\r\n\r\nvar http_request = false;\r\nif(window.XMLHttpRequest) {\r\n\thttp_request = new XMLHttpRequest();\r\n\tif (http_request.overrideMimeType) {\r\n\t\thttp_request.overrideMimeType('text/xml');\r\n\t}\r\n} else if (window.ActiveXObject) { \r\n\ttry {\r\n\t\thttp_request = new ActiveXObject(\"Msxml2.XMLHTTP\");\r\n\t} catch (e) {\r\n\t\ttry {\r\n\t\t\thttp_request = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n\t\t} catch (e) {}\r\n\t}\r\n}\r\nfunction delHistory(historyId){\r\n\tif (http_request){\r\n\t\tvar result=\"\";\r\n\t\tvar ajaxpara = encodeURI(encodeURI(\"");
      out.print(url );
      out.write("\"));\r\n\t\tvar url = ((window.location.href).substring(0,(window.location.href).indexOf(\"/jsoa\")))+\"/jsoa/iWebOfficeSign/infoAjax.jsp?historyId=\"+historyId+\"&infoId=");
      out.print(fileNames[2] );
      out.write("&url=\"+ajaxpara;;\r\n        http_request.open(\"GET\", url, false);\r\n        http_request.send(null);\r\n        if(http_request.readyState==4){\r\n        \tif(http_request.status==200){\r\n        \t\tresult = http_request.responseText;\r\n        \t}\r\n        }\r\n        document.getElementById(\"historyTd\").innerHTML = result;\r\n\t}else{\r\n\t}\r\n}\r\nfunction ajaxContent(){\r\n\tif (http_request){\r\n\t\tvar result=\"\";\r\n\t\tvar ajaxpara = encodeURI(encodeURI(\"");
      out.print(url );
      out.write("\"));\r\n\t\tvar url = ((window.location.href).substring(0,(window.location.href).indexOf(\"/jsoa\")))+\"/jsoa/iWebOfficeSign/infoAjax.jsp?infoId=");
      out.print(fileNames[2] );
      out.write("&url=\"+ajaxpara;\r\n        http_request.open(\"GET\", url, false);\r\n        http_request.send(null);\r\n        if(http_request.readyState==4){\r\n        \tif(http_request.status==200){\r\n        \t\tresult = http_request.responseText;\r\n        \t}\r\n        }\r\n        return result;\r\n\t}else{\r\n\t\treturn \"\";\r\n\t}\r\n}\r\n\r\nfunction download(){\r\n\twindow.open(\"/jsoa/onLineShow/onLineShowToDownload.jsp?");
      out.print(downloadPath);
      out.write("\");\r\n}\r\n</script>\r\n</body>\r\n</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
