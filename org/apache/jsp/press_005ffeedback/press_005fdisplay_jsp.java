/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:54:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.press_005ffeedback;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.text.*;
import com.js.oa.pressdeal.po.OaPersonoaPressPO;
import com.js.lang.Resource;
import com.js.system.service.messages.MessagesBD;

public final class press_005fdisplay_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


   private String myTrim(String str){
     //System.out.print("str============"+str);
     String rslt =  (null==str||"".equals(str.trim())||"null".equals(str.trim()))?"":str.trim();
     //System.out.println("          rslt============"+rslt);
     return rslt;
   }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.lang.Resource");
    _jspx_imports_classes.add("com.js.oa.pressdeal.po.OaPersonoaPressPO");
    _jspx_imports_classes.add("com.js.system.service.messages.MessagesBD");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"../../../public/jsp/error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);
String local = session.getAttribute("org.apache.struts.action.LOCALE").toString();

      out.write("\r\n\r\n<html>\r\n<head>\r\n<title>\r\n");
      out.print(Resource.getValue(local,"personalwork","pressmanage.viewinfo"));
      out.write("\r\n</title>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=GBK\">\r\n");
      out.write("\r\n\r\n<script language=\"javascript\" src=\"/jsoa/js/openEndow.js\"></script>\r\n<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<link href=\"/jsoa/style/cssmain.css\" rel=\"stylesheet\" type=\"text/css\">\r\n<link rel=stylesheet type=\"text/css\" href=\"/jsoa/public/date_picker/DateObject2.css\">\r\n<SCRIPT language=javascript src=\"/jsoa/public/date_picker/DateObject.js\"></SCRIPT>\r\n<SCRIPT language=javascript src=\"/jsoa/public/date_picker/DatePicker.js\"></SCRIPT>\r\n<SCRIPT language=javascript src=\"/jsoa/public/date_picker/editlib.js\"></SCRIPT>\r\n<SCRIPT language=javascript src=\"/jsoa/public/date_picker/tree.js\"></SCRIPT>\r\n<script src=\"/jsoa/js/js.js\" language=\"javascript\"></script>\r\n<script  src=\"/jsoa/js/checkText.js\"  language=\"javascript\" ></script>\r\n<script src=\"/jsoa/js/Combox.js\"></script>\r\n\r\n</head>\r\n");
      out.write('\r');
      out.write('\n');

  OaPersonoaPressPO press = (OaPersonoaPressPO)request.getAttribute("press");
  String time_str ="";
  time_str = String.valueOf(press.getDispatchTime());
  time_str = time_str.substring(0,time_str.length()-2);
  String receivePress = String.valueOf(request.getAttribute("receivePress"));
  receivePress = (null==receivePress||"".equals(receivePress.trim())||"null".equals(receivePress.trim()))?"":receivePress.trim();
  String Offset = String.valueOf(request.getAttribute("pager.offset")); Offset = myTrim(Offset);
  String title = String.valueOf(request.getAttribute("title")); title = myTrim(title);
  String category = String.valueOf(request.getAttribute("category")); category = myTrim(category);
  String subcategory = String.valueOf(request.getAttribute("subcategory")); subcategory = myTrim(subcategory);
  String receiver_name = String.valueOf(request.getAttribute("receiver_name")); receiver_name = myTrim(receiver_name);
  String date_start = String.valueOf(request.getAttribute("date_start")); date_start = myTrim(date_start);
  String date_end = String.valueOf(request.getAttribute("date_end")); date_end = myTrim(date_end);
  String check_date = String.valueOf(request.getAttribute("check_date")); check_date = myTrim(check_date);
  String remind =request.getAttribute("remind")==null?"":request.getAttribute("remind").toString();
  String workflow =request.getAttribute("workflow")==null?"":request.getAttribute("workflow").toString();
  String[] workflowurl=null;
  String table="";
  String record="";
  String processId="";
  String urlStr="";
  String userId=session.getAttribute("userId").toString();
  if(null!=press.getWorkflowurl() && !"".equals(press.getWorkflowurl()+"")){
    workflowurl=press.getWorkflowurl().toString().split("&&");
    table=workflowurl[0]+"";
    record=workflowurl[1]+"";
    processId=workflowurl[2]+"";
    urlStr=new com.js.oa.pressdeal.bean.PressDealDoEJBBean().loadWfwordataUrl(table, record, processId, "0",userId,workflowurl,"pc");
  }
  
/////////取消网页提醒
MessagesBD messagesBD=new MessagesBD();
  messagesBD.changeMessageStatus(press.getPressId().toString(),session.getAttribute("userId").toString(),"Press","b");

      out.write("\r\n<body bgcolor=\"#ffffff\"  onload=\"resizeWin(600,400);\">\r\n<table width=\"100%\" border=0 cellpadding=\"0\" cellspacing=\"0\">\r\n<tr>\r\n<td>\r\n<table width=\"100%\" height=\"285\" border=\"0\" align=\"center\" cellpadding=\"1\" cellspacing=\"1\" class=\"docBoxNoPanel\">\r\n  <tr>\r\n    <td width=\"15%\" height=\"26\">&nbsp;&nbsp;");
      out.print(Resource.getValue(local,"personalwork","pressmanage.sender"));
      out.write("\r\n：</td>\r\n    <td><input type=\"text\" value=\"");
      out.print(press.getSendUserDep()+"."+press.getSendUsername());
      out.write("\" name=\"sender\" size=\"50\"  style=\"width:30%\"  class=\"inputText\" readonly=\"readonly\"/></td>\r\n  </tr>\r\n  <tr>\r\n    <td height=\"31\">&nbsp;&nbsp;");
      out.print(Resource.getValue(local,"personalwork","pressmanage.sendtime"));
      out.write("：</td>\r\n    <td><input type=\"text\" value=\"");
      out.print(time_str);
      out.write("\" name=\"send_time\" size=\"50\" style=\"width:30%\"  class=\"inputText\" readonly=\"readonly\"/></td>\r\n  </tr>\r\n  <tr>\r\n    <td height=\"34\">&nbsp;&nbsp;");
      out.print(Resource.getValue(local,"personalwork","pressmanage.title"));
      out.write("：</td>\r\n    <td><input type=\"text\" name=\"title\" value=\"");
      out.print(press.getTitle());
      out.write("\" size=\"50\"  style=\"width:30%\"  class=\"inputText\" readonly=\"readonly\"/></td>\r\n  </tr>\r\n  <tr>\r\n    <td height=\"34\">&nbsp;&nbsp;");
      out.print(Resource.getValue(local,"personalwork","pressmanage.receiver"));
      out.write("：</td>\r\n    <td><input type=\"text\" name=\"receiver\" value=\"");
      out.print(press.getReceiveUsernameStr());
      out.write("\" size=\"50\"  style=\"width:30%\" class=\"inputText\" readonly=\"readonly\"/></td>\r\n  </tr>\r\n  <tr>\r\n    <td height=\"146\">&nbsp;&nbsp;");
      out.print(Resource.getValue(local,"personalwork","pressmanage.presscontent"));
      out.write("：</td>\r\n    <td><textarea name=\"content\" cols=\"50\" rows=\"10\" class=\"inputTextarea\" readonly=\"readonly\">");
      out.print(press.getContent());
      out.write("</textarea></td>\r\n  </tr>\r\n  <tr>\r\n   <td colspan=\"2\">\r\n   ");
if("Y".equals(remind)){ 
      out.write("\r\n   <input type=\"button\" onclick=\"javascript:window.close();\" value=\"");
      out.print(Resource.getValue(local,"common","comm.exit"));
      out.write("\" class=\"btnButton2font\"/>\r\n   ");
} else {
      out.write("\r\n   <input type=\"button\" onclick=\"javascript:window.close();refreshParent();\" value=\"");
      out.print(Resource.getValue(local,"common","comm.exit"));
      out.write("\" class=\"btnButton2font\"/>\r\n   ");
} 
      out.write("\r\n   ");
if(urlStr!=null&&"1".equals(workflow) && !"".equals(urlStr)){ 
      out.write("\r\n     <input type=\"button\" onclick=\"javascript:doWorkflow('");
      out.print(urlStr);
      out.write("');\" value=\"办理\" class=\"btnButton2font\"/>\r\n   ");
}
      out.write("\r\n   </td>\r\n  </tr>\r\n</table>\r\n</td></tr></table>\r\n</body>\r\n</html>\r\n\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nfunction refreshParent(){\r\n  \t");

          if("receivePress".equals(receivePress)){
        
      out.write("\r\n        var url = '/jsoa/pressManageAction.do?action=receive_list'\r\n                 +'&pager.offset=");
      out.print(Offset);
      out.write("'\r\n                 +'&pressId=");
      out.print(press.getPressId());
      out.write("'\r\n                 +'&title=");
      out.print(title);
      out.write("'\r\n                 +'&category=");
      out.print(category);
      out.write("'\r\n                 +'&subcategory=");
      out.print(subcategory);
      out.write("'\r\n                 +'&receiver_name=");
      out.print(receiver_name);
      out.write("'\r\n                 +'&date_start=");
      out.print(date_start);
      out.write("'\r\n                 +'&date_end=");
      out.print(date_end);
      out.write("'\r\n                 +'&check_date=");
      out.print(check_date);
      out.write("';\r\n        window.opener.location.href = url;\r\n        ");
}
      out.write("\r\n}\r\n\r\nfunction doWorkflow(url){\r\n  JSMainWinOpen(url,'','TOP=0,LEFT=0,scrollbars=yes,resizable=yes,width=800,height=600');\r\n  //window.location.href=url;\r\n}\r\n\r\n</script>\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
