/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:08:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsflow;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.oa.jsflow.vo.SimpleFieldVO;
import com.js.lang.Resource;

public final class workflow_005factiveinfo_005frelationadd_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-nested.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-tiles.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-logic.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-html.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-template.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-bean.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.oa.jsflow.vo.SimpleFieldVO");
    _jspx_imports_classes.add("com.js.lang.Resource");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fhtml_005fhtml;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fhtml_005fform_0026_005fmethod_005faction;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fhtml_005fhtml = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fhtml_005fform_0026_005fmethod_005faction = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fhtml_005fhtml.release();
    _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.release();
    _005fjspx_005ftagPool_005fhtml_005fform_0026_005fmethod_005faction.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");

String local = session.getAttribute("org.apache.struts.action.LOCALE").toString();

      out.write('\r');
      out.write('\n');
      //  html:html
      org.apache.struts.taglib.html.HtmlTag _jspx_th_html_005fhtml_005f0 = (org.apache.struts.taglib.html.HtmlTag) _005fjspx_005ftagPool_005fhtml_005fhtml.get(org.apache.struts.taglib.html.HtmlTag.class);
      boolean _jspx_th_html_005fhtml_005f0_reused = false;
      try {
        _jspx_th_html_005fhtml_005f0.setPageContext(_jspx_page_context);
        _jspx_th_html_005fhtml_005f0.setParent(null);
        int _jspx_eval_html_005fhtml_005f0 = _jspx_th_html_005fhtml_005f0.doStartTag();
        if (_jspx_eval_html_005fhtml_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n<head>\r\n<title>");
            if (_jspx_meth_bean_005fmessage_005f0(_jspx_th_html_005fhtml_005f0, _jspx_page_context))
              return;
            out.write("</title>\r\n<script language=\"javascript\" src=\"js/checkForm.js\"></script>\r\n<link href=\"/jsoa/skin/");
            out.print(session.getAttribute("skin"));
            out.write("/style-");
            out.print(session.getAttribute("browserVersion"));
            out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<script src=\"/jsoa/js/js.js\" language=\"javascript\"></script>\r\n\r\n</head>\r\n");

	//System.out.println(request.getAttribute("formType"));
	//System.out.println(request.getRequestURI());
	int index = 0;
java.util.List fieldList = (java.util.List) request.getAttribute("fieldList");
java.util.List activityList = (java.util.List) request.getAttribute("activityList");
String activityId = request.getAttribute("activityId").toString();
String activityType = request.getAttribute("activityType").toString();

            out.write("\r\n<body  onload=\"resizeWin(750,450);\" class=\"MainFrameBox Pupwin\">\r\n<table width=\"100%\" border=\"0\" cellpadding=\"10\" cellspacing=\"0\" class=\"docBoxNoPanel\">\r\n   ");
            //  html:form
            org.apache.struts.taglib.html.FormTag _jspx_th_html_005fform_005f0 = (org.apache.struts.taglib.html.FormTag) _005fjspx_005ftagPool_005fhtml_005fform_0026_005fmethod_005faction.get(org.apache.struts.taglib.html.FormTag.class);
            boolean _jspx_th_html_005fform_005f0_reused = false;
            try {
              _jspx_th_html_005fform_005f0.setPageContext(_jspx_page_context);
              _jspx_th_html_005fform_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fhtml_005f0);
              // /jsflow/workflow_activeinfo_relationadd.jsp(32,3) name = action type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_html_005fform_005f0.setAction("/ActivityAction");
              // /jsflow/workflow_activeinfo_relationadd.jsp(32,3) name = method type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_html_005fform_005f0.setMethod("post");
              int _jspx_eval_html_005fform_005f0 = _jspx_th_html_005fform_005f0.doStartTag();
              if (_jspx_eval_html_005fform_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("\r\n       <input type=\"hidden\" name=\"action\">\r\n       <input type=\"hidden\" name=\"activityId\" value=\"");
                  out.print(activityId);
                  out.write("\">\r\n       <input type=\"hidden\" name=\"tableId\" value=\"");
                  out.print(request.getAttribute("tableId"));
                  out.write("\">\r\n       <input type=\"hidden\" name=\"processId\" value=\"");
                  out.print(request.getAttribute("processId"));
                  out.write("\">\r\n       <input type=\"hidden\" name=\"moduleId\" value=\"");
                  out.print(request.getAttribute("moduleId"));
                  out.write("\">\r\n\t<tr><td valign=\"top\"><table width=\"100%\">\r\n                            <tr>\r\n                              <td width=\"50\" nowrap>");
                  if (_jspx_meth_bean_005fmessage_005f1(_jspx_th_html_005fform_005f0, _jspx_page_context))
                    return;
                  out.write("：</td>\r\n                              <td ><table width=\"100%\" border=\"0\" cellspacing=\"1\" cellpadding=\"0\">\r\n                              ");
java.util.List fromActivityList = (java.util.List) request.getAttribute("fromActivityList");
                  out.write("\r\n                                  <tr>\r\n                                    <td width=\"44%\">\r\n                                        <input type=\"radio\" value=\"-1\" name=\"activityType\" onclick=\"checkType(this)\"\r\n                                           ");

                                           int bgActivity = 0;
                                           for(int i = 0; i < fromActivityList.size(); i ++){
                                           	Object[] fromObj = (Object[]) fromActivityList.get(i);
                                                if(fromObj[2].toString().equals("1")){
                                                	out.print("checked=\"checked\"");
                                                        bgActivity = 1;
                                                        break;
                                                }
                                           }
                  out.write(' ');
                  out.write('>');
                  if (_jspx_meth_bean_005fmessage_005f2(_jspx_th_html_005fform_005f0, _jspx_page_context))
                    return;
                  out.write("\r\n                                    </td>\r\n                                    <td width=\"56%\" height=\"22\">&nbsp;</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>\r\n                                        <input type=\"radio\" value=\"0\" name=\"activityType\" ");
if(bgActivity == 0) out.print("checked=\"checked\"");
                  out.write(" disabled=\"disabled\"  onclick=\"checkType(this)\">");
                  if (_jspx_meth_bean_005fmessage_005f3(_jspx_th_html_005fform_005f0, _jspx_page_context))
                    return;
                  out.write("\r\n                                    </td>\r\n                                    <td height=\"22\">&nbsp;</td>\r\n                                  </tr>\r\n                                  <tr id=\"fromType\" ");
if(bgActivity == 1) out.print("style=\"display:none\"");
                  out.write(">\r\n                                    <td height=\"18\" colspan=\"2\"><table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"1\" bordercolor=\"#666666\" bgcolor=\"#999999\">\r\n                                        <tr bordercolor=\"#999999\">\r\n                                          <td width=\"20%\" height=\"24\" bgcolor=\"#CCCCCC\"><font color=\"#000000\">");
                  if (_jspx_meth_bean_005fmessage_005f4(_jspx_th_html_005fform_005f0, _jspx_page_context))
                    return;
                  out.write("</font></td>\r\n                                          <td bgcolor=\"#CCCCCC\"><font color=\"#000000\">");
                  if (_jspx_meth_bean_005fmessage_005f5(_jspx_th_html_005fform_005f0, _jspx_page_context))
                    return;
                  out.write("</font></td>\r\n                                        </tr>\r\n                                        ");

                                        String startActivity = "";
                                        String endActivity = "";
                                        Object[] obj = null;
                                        Object[] fromObj = null;

                                        for(int i = 0; i < activityList.size(); i ++){
                                            obj = (Object[]) activityList.get(i);
                                            if(obj[2].toString().equals("1")){
                                                startActivity = obj[0].toString();
                                            }else if(obj[2].toString().equals("2")){
                                                endActivity = obj[0].toString();
                                            }
                                        }

                                        for(int k = 0; k < fromActivityList.size(); k ++){
                                            fromObj = (Object[]) fromActivityList.get(k);
                                            for(int i = 0; i < activityList.size(); i ++){
                                                obj = (Object[]) activityList.get(i);
                                                if(obj[1] != null){
                                                if(obj[0].equals(fromObj[0])){
                                                
                  out.write("\r\n                                                <tr bordercolor=\"#999999\" bgcolor=\"#FFFFFF\">\r\n                                                    <td>");
                  out.print(obj[1]);
                  out.write("</td>\r\n                                                    <td height=\"22\">\r\n                                                        ");
if(fromObj[5] != null && !"".equals(fromObj[5].toString())){
                  out.write("\r\n                                                        <table width=\"100%\" border=\"0\" cellspacing=\"1\" cellpadding=\"0\">\r\n                                                            <tr>\r\n                                                                <td>\r\n                                                                    ");

                                                                    SimpleFieldVO fieldVO = null;
                                                                    for(int j = 0; j < fieldList.size(); j ++ ){
                                                                        fieldVO = (SimpleFieldVO) fieldList.get(j);
                                                                        if((fieldVO.getId() + "").equals(fromObj[3])){
                                                                            out.print(fieldVO.getDisplayName());
                                                                            break;
                                                                        }
                                                                    }
                  out.write("\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    ");

                                                                    if(fromObj[4].equals("<")){
                                                                        out.print("小于(&lt;)");
                                                                    }else if(fromObj[4].equals("<=")){
                                                                        out.print("不大于(&lt;=)");
                                                                    }else if(fromObj[4].equals("<>")){
                                                                        out.print("不等于(≠)");
                                                                    }else if(fromObj[4].equals("=")){
                                                                        out.print("等于(=)");
                                                                    }else if(fromObj[4].equals(">")){
                                                                        out.print("大于(&gt;)");
                                                                    }else{
                                                                        out.print("不小于(&gt;=)");
                                                                    }
                  out.write("\r\n                                                                </td>\r\n                                                                <td>");
                  out.print(fromObj[5]);
                  out.write("</td>\r\n                                                            </tr>\r\n                                                        </table>\r\n                                                        ");
}else{
                                                            out.print("&nbsp;");
                                                        }
                  out.write("\r\n                                                    </td>\r\n                                                </tr>\r\n                                                ");

//                                                break;
                                                }
                                            }
                                        }
                                        }
					
                  out.write("\r\n                                      </table></td>\r\n                                  </tr>\r\n                                  <input type=\"hidden\" name=\"startActivity\" value=\"");
                  out.print(startActivity);
                  out.write("\">\r\n                                  \r\n                                </table></td>\r\n                            </tr>\r\n\t<tr >\r\n\t\t<td >");
                  if (_jspx_meth_bean_005fmessage_005f6(_jspx_th_html_005fform_005f0, _jspx_page_context))
                    return;
                  out.write("：</td>\r\n\t\t<td valign=\"top\">\r\n\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"1\" cellpadding=\"0\" ");
                  out.print("3".equals(request.getAttribute("activityClass"))?"disabled":"");
                  out.write(">\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td width=\"100%\" height=\"18\">\r\n\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"1\" bordercolor=\"#666666\" bgcolor=\"#999999\">\r\n\t\t\t\t\t\t\t<tr bordercolor=\"#999999\">\r\n\t\t\t\t\t\t\t\t<td width=\"100\" height=\"22\" bgcolor=\"#CCCCCC\" nowrap><font color=\"#000000\">");
                  if (_jspx_meth_bean_005fmessage_005f7(_jspx_th_html_005fform_005f0, _jspx_page_context))
                    return;
                  out.write("</font></td>\r\n\t\t\t\t\t\t\t\t<td bgcolor=\"#CCCCCC\"  ");
if(activityType.equals("1")) out.print("style='display:none'");
                  out.write('>');
                  if (_jspx_meth_bean_005fmessage_005f8(_jspx_th_html_005fform_005f0, _jspx_page_context))
                    return;
                  out.write("</td>\r\n\t\t\t\t\t\t\t\t<td width=\"25\" height=\"22\" bgcolor=\"#CCCCCC\" nowrap><font color=\"#000000\">");
                  if (_jspx_meth_bean_005fmessage_005f9(_jspx_th_html_005fform_005f0, _jspx_page_context))
                    return;
                  out.write("</font></td>\r\n\t\t\t\t\t\t\t</tr>\r\n                                        ");
java.util.List toActivityList = (java.util.List) request.getAttribute("toActivityList");
                  out.write("\r\n\t\t\t\t\t\t\t<tr bordercolor=\"#999999\" bgcolor=\"#FFFFFF\">\r\n\t\t\t\t\t\t\t\t<td>\r\n                                              <input type=\"checkbox\"  value=\"");
                  out.print(endActivity);
                  out.write("\" onclick=\"changeActivity();\" name=\"toActivityId\"\r\n                                                  ");

                                                  String toFieldId = "";
                                                  String toRelation = "";
                                                  String toCompareValue = "";
												  String expression = "";
												  String defaultActi = "";
                                                  if(toActivityList != null && toActivityList.size() > 0){
                                                      for(int i = 0; i < toActivityList.size(); i ++){
                                                          Object[] toObj = (Object[])toActivityList.get(i);
                                                          if(toObj[2].toString().equals("2")){
                                                              out.print("checked");
                                                              toFieldId = toObj[3].toString();
                                                              toRelation = toObj[4].toString();
                                                              if(toObj[5] != null){
                                                                  toCompareValue = toObj[5].toString();
                                                              }
															  if(toObj[6] != null){
                                                                  expression = toObj[6].toString();
                                                              }else{
																  expression = "";
															  }
														  }
                                                        }
                                                    }
                                                  
                  out.write('>');
                  if (_jspx_meth_bean_005fmessage_005f10(_jspx_th_html_005fform_005f0, _jspx_page_context))
                    return;
                  out.write("\r\n                                              <input type=\"hidden\" name=\"toActivityIdValue\">\r\n                                          </td>\r\n\t\t\t\t\t\t\t\t\t\t  <td height=\"22\"  ");
if(!"1".equals(request.getAttribute("formType")==null?"":request.getAttribute("formType").toString().trim()) || activityType.equals("1")) out.print("style='display:none'");
                  out.write(">\r\n\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;<input type=\"text\" name=\"expression\" class=\"inputText\" style=\"width:300\" value='");
                  out.print(expression.replaceAll("@@@@","&"));
                  out.write("'>&nbsp;<a href=\"#\" onclick=\"addExpression('");
                  out.print(index++);
                  out.write("')\">");
                  if (_jspx_meth_bean_005fmessage_005f11(_jspx_th_html_005fform_005f0, _jspx_page_context))
                    return;
                  out.write("</a>\r\n\t\t\t\t\t\t\t\t\t\t  </td>\r\n\t\t\t\t\t\t\t\t<td height=\"22\"  ");
if(activityType.equals("1") || "1".equals(request.getAttribute("formType")==null?"":request.getAttribute("formType").toString().trim())) out.print("style='display:none'");
                  out.write(">\r\n\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"1\" cellpadding=\"0\">\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n                                                <select name=\"toCondition\" onchange=\"chgToCondition(this)\">\r\n                                                    <option value=\"-1\" ");
if(toFieldId.equals("-1")) out.print("selected");
                  out.write(">发起人职务</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"-2\" ");
if(toFieldId.equals("-2")) out.print("selected");
                  out.write(">发起人职务级别</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"-3\" ");
if(toFieldId.equals("-3")) out.print("selected");
                  out.write(">上一节点办理人职务级别</option>\r\n                                                      ");

                                                      SimpleFieldVO fieldVO = null;
                                                      for(int j = 0; j < fieldList.size(); j ++ ){
                                                      	  fieldVO = (SimpleFieldVO) fieldList.get(j);
                                                      
                  out.write("\r\n                                                          <option value=\"");
                  out.print(fieldVO.getId());
                  out.write('"');
                  out.write(' ');
if((fieldVO.getId() + "").equals(toFieldId)) out.print("selected");
                  out.write('>');
                  out.print(fieldVO.getDisplayName());
                  out.write("</option>\r\n                                                      ");

                                                      }
                  out.write("\r\n                                                      <option value=\"0\" ");
if(toFieldId.equals("0")) out.print("selected");
                  out.write('>');
                  if (_jspx_meth_bean_005fmessage_005f12(_jspx_th_html_005fform_005f0, _jspx_page_context))
                    return;
                  out.write("</option>\r\n                                                  </select>\r\n                                                  <input type=\"hidden\" name=\"toConditionValue\">\r\n                                                </td>\r\n                                                <td id=\"tdToOperate\" ");
if(toFieldId.equals("0")) out.print("style='display:none'");
                  out.write(">\r\n                                                  <select name=\"toOperate\">\r\n                                                    <option value=\"<\" ");
if(toRelation.equals("<")) out.print("selected");
                  out.write(">小于(&lt;)</option>\r\n                                                    <option value=\"<=\" ");
if(toRelation.equals("<=")) out.print("selected");
                  out.write(">不大于(&lt;=)</option>\r\n                                                    <option value=\"<>\" ");
if(toRelation.equals("<>")) out.print("selected");
                  out.write(">不等于(≠)</option>\r\n                                                    <option value=\"=\" ");
if(toRelation.equals("=")) out.print("selected");
                  out.write(">等于(=)</option>\r\n                                                    <option value=\">\" ");
if(toRelation.equals(">")) out.print("selected");
                  out.write(">大于(&gt;)</option>\r\n                                                    <option value=\">=\" ");
if(toRelation.equals(">=")) out.print("selected");
                  out.write(">不小于(&gt;=)</option>\r\n                                                  </select>\r\n                                                  <input type=\"hidden\" name=\"toOperateValue\">\r\n                                                  </td>\r\n                                                <td id=\"tdToCompare\" ");
if(toFieldId.equals("0")) out.print("style='display:none'");
                  out.write(">\r\n                                                  <input type=\"text\" Class=\"css0\" name=\"toCompare\" size=\"16\" value=\"");
                  out.print(toCompareValue);
                  out.write("\">\r\n                                                  <input type=\"hidden\" name=\"toCompareValue\">\r\n                                                  </td>\r\n                                              </tr>\r\n                                            </table></td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td height=\"22\" width=\"25\"><INPUT TYPE=\"radio\" NAME=\"defaultActivity\" value=\"2\" checked></td>\r\n                                        </tr>\r\n\r\n                                        ");

					//out.println(activityList.size());
                                        for(int i = 0; i < activityList.size(); i ++){
                                            obj = (Object[]) activityList.get(i);
                                            toFieldId = "";
                                            toRelation = "";
                                            toCompareValue = "";
											expression = "";
											defaultActi = "";
                                            if(!activityId.equals(obj[0].toString()) && obj[2].toString().equals("0")){
                                                if(activityType.equals("0") || !(activityType.equals("1") && obj[3].toString().equals("2"))){
                                        
                  out.write("\r\n                                            <tr bordercolor=\"#999999\" bgcolor=\"#FFFFFF\">\r\n                                                <td>\r\n                                                    <input type=\"checkbox\" value=\"");
                  out.print(obj[0]);
                  out.write("\"  onclick=\"changeActivity();\" name=\"toActivityId\"\r\n                                                       ");

                                                       if(toActivityList != null && toActivityList.size() > 0){
                                                       for(int k = 0; k < toActivityList.size(); k ++){
                                                          Object[] toObj = (Object[])toActivityList.get(k);
                                                          if(toObj[0].toString().equals(obj[0].toString())){
                                                          	out.print("checked");
                                                                toFieldId = toObj[3].toString();
                                                                toRelation = toObj[4].toString();
                                                                if(toObj[5] != null){
                                                                    toCompareValue = toObj[5].toString();
                                                                }
																if(toObj[6] != null){
                                                                  expression = toObj[6].toString();
																}else{
																	expression = "";
																} 
															  if(toObj[7] != null && !"".equals(toObj[7]) && obj[0].toString().equals(toObj[7].toString())){
                                                                  defaultActi = "checked";
                                                              }else{
																  defaultActi = "";
															  }
                                                          }
                                                       }
                                                       }
                                                       
                  out.write(' ');
                  out.write('>');
                  out.print(obj[1]);
                  out.write("\r\n                                                    <input type=\"hidden\" name=\"toActivityIdValue\">\r\n                                                </td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td height=\"22\"  ");
if(!"1".equals(request.getAttribute("formType")==null?"":request.getAttribute("formType").toString().trim()) || activityType.equals("1")) out.print("style='display:none'");
                  out.write(">\r\n\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;<input type=\"text\" name=\"expression\" class=\"inputText\" style=\"width:300\" value='");
                  out.print(expression.replaceAll("@@@@","&"));
                  out.write("'>&nbsp;<a href=\"#\" onclick=\"addExpression('");
                  out.print(index++);
                  out.write("')\">");
                  if (_jspx_meth_bean_005fmessage_005f13(_jspx_th_html_005fform_005f0, _jspx_page_context))
                    return;
                  out.write("</a>\r\n\t\t\t\t\t\t\t\t\t\t  </td>\r\n                                          <td height=\"22\"  ");
if(activityType.equals("1") || "1".equals(request.getAttribute("formType")==null?"":request.getAttribute("formType").toString().trim())) out.print("style='display:none'");
                  out.write("><table width=\"100%\" border=\"0\" cellspacing=\"1\" cellpadding=\"0\">\r\n                                              <tr>\r\n                                                <td>\r\n                                                  <select name=\"toCondition\" onchange=\"chgToCondition(this)\">\r\n                                                      <option value=\"-1\" ");
if(toFieldId.equals("-1")) out.print("selected");
                  out.write(">发起人职务</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  <option value=\"-2\" ");
if(toFieldId.equals("-2")) out.print("selected");
                  out.write(">发起人职务级别</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  <option value=\"-3\" ");
if(toFieldId.equals("-3")) out.print("selected");
                  out.write(">上一节点办理人职务级别</option>\r\n                                                      ");

//                                                      System.out.println("fieldList size() is : " + fieldList.size());
                                                      for(int j = 0; j < fieldList.size(); j ++ ){
                                                      	  fieldVO = (SimpleFieldVO) fieldList.get(j);
                                                      
                  out.write("\r\n                                                          <option value=\"");
                  out.print(fieldVO.getId());
                  out.write('"');
                  out.write(' ');
if((fieldVO.getId() + "").equals(toFieldId)) out.print("selected");
                  out.write('>');
                  out.print(fieldVO.getDisplayName());
                  out.write("</option>\r\n                                                      ");

                                                      }
                  out.write("\r\n                                                      <option value=\"0\" ");
if(toFieldId.equals("0")) out.print("selected");
                  out.write('>');
                  if (_jspx_meth_bean_005fmessage_005f14(_jspx_th_html_005fform_005f0, _jspx_page_context))
                    return;
                  out.write("</option>\r\n                                                  </select>\r\n                                                  <input type=\"hidden\" name=\"toConditionValue\">\r\n                                                </td>\r\n                                                <td id=\"tdToOperate\" ");
if(toFieldId.equals("0")) out.print("style='display:none'");
                  out.write(">\r\n                                                  <select name=\"toOperate\">\r\n                                                    <option value=\"<\" ");
if(toRelation.equals("<")) out.print("selected");
                  out.write(">小于(&lt;)</option>\r\n                                                    <option value=\"<=\" ");
if(toRelation.equals("<=")) out.print("selected");
                  out.write(">不大于(&lt;=)</option>\r\n                                                    <option value=\"<>\" ");
if(toRelation.equals("<>")) out.print("selected");
                  out.write(">不等于(≠)</option>\r\n                                                    <option value=\"=\" ");
if(toRelation.equals("=")) out.print("selected");
                  out.write(">等于(=)</option>\r\n                                                    <option value=\">\" ");
if(toRelation.equals(">")) out.print("selected");
                  out.write(">大于(&gt;)</option>\r\n                                                    <option value=\">=\" ");
if(toRelation.equals(">=")) out.print("selected");
                  out.write(">不小于(&gt;=)</option>\r\n                                                  </select>\r\n                                                  <input type=\"hidden\" name=\"toOperateValue\">\r\n                                                  </td>\r\n                                                <td id=\"tdToCompare\" ");
if(toFieldId.equals("0")) out.print("style='display:none'");
                  out.write(">\r\n                                                  <input type=\"text\" Class=\"css0\" name=\"toCompare\" size=\"16\" value=\"");
                  out.print(toCompareValue);
                  out.write("\" >\r\n                                                  <input type=\"hidden\" name=\"toCompareValue\">\r\n                                                </td>\r\n                                              </tr>\r\n                                            </table></td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td height=\"22\"><INPUT TYPE=\"radio\" NAME=\"defaultActivity\" value=\"");
                  out.print(obj[0]);
                  out.write('"');
                  out.write(' ');
                  out.write(' ');
                  out.print(defaultActi);
                  out.write("></td>\r\n                                        </tr>\r\n                                        ");

                                            }
                                        }
                                        }
                  out.write("\r\n\r\n                                      </table></td>\r\n                                  </tr>\r\n\t\t\t\t\t\t\t\t   </table></td>\r\n                                  </tr>\r\n\t\t</table><br/>\r\n\t\t<table>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t      <td >\r\n\t\t    <button class=\"btnButton4font\" onclick=\"javascript:save();\">");
                  if (_jspx_meth_bean_005fmessage_005f15(_jspx_th_html_005fform_005f0, _jspx_page_context))
                    return;
                  out.write("</button><button class=\"btnButton2font\" onclick=\"javascript:window.location.reload();\">");
                  if (_jspx_meth_bean_005fmessage_005f16(_jspx_th_html_005fform_005f0, _jspx_page_context))
                    return;
                  out.write("</button><button class=\"btnButton2font\" onclick=\"javascript:window.close()\">");
                  if (_jspx_meth_bean_005fmessage_005f17(_jspx_th_html_005fform_005f0, _jspx_page_context))
                    return;
                  out.write("</button>\r\n\t\t  </td>\r\n        </tr>\r\n\t\t</table>\r\n\t\t</td>\r\n\t\t</tr>\r\n\t\t\r\n                          ");
                  int evalDoAfterBody = _jspx_th_html_005fform_005f0.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_html_005fform_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fhtml_005fform_0026_005fmethod_005faction.reuse(_jspx_th_html_005fform_005f0);
              _jspx_th_html_005fform_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_html_005fform_005f0, _jsp_getInstanceManager(), _jspx_th_html_005fform_005f0_reused);
            }
            out.write("\r\n                        </table>\r\n</body>\r\n<script language=\"javascript\">\r\n<!--\r\nfunction setFromActivity(){\r\n    var returnValue = true;\r\n//    if(document.all.activityType[1].checked){\r\n//\tvar fromActivityObj = document.all.fromActivityId;\r\n//        if(fromActivityObj){\r\n//            if(fromActivityObj.length){\r\n//                var len = fromActivityObj.length;\r\n//                for(var i = 0; i < len; i ++){\r\n//                    if(fromActivityObj[i].checked){\r\n//                        if(textIsEmpty(document.all.fromCompare[i])){\r\n//                            alert(\"请填写比较值！\");\r\n//                            returnValue = false;\r\n//                            break;\r\n//                        }else{\r\n//                            document.all.fromActivityIdValue[i].value = document.all.fromActivityId[i].value;\r\n//                            document.all.fromConditionValue[i].value = document.all.fromCondition[i].value;\r\n//                            document.all.fromOperateValue[i].value = document.all.fromOperate[i].value;\r\n");
            out.write("//                            document.all.fromCompareValue[i].value = document.all.fromCompare[i].value;\r\n//                        }\r\n//                    }\r\n//                }\r\n//            }else{\r\n//                if(fromActivityObj.checked){\r\n//                    if(textIsEmpty(document.all.fromCompare)){\r\n//                        alert(\"请填写比较值！\");\r\n//                        returnValue = false;\r\n//                    }else{\r\n//                        document.all.fromActivityIdValue.value = document.all.fromActivityId.value;\r\n//                        document.all.fromConditionValue.value = document.all.fromCondition.value;\r\n//                        document.all.fromOperateValue.value = document.all.fromOperate.value;\r\n//                        document.all.fromCompareValue.value = document.all.fromCompare.value;\r\n//                    }\r\n//                }\r\n//            }\r\n//        }else{\r\n//            alert(\"没有前驱节点！\");\r\n//            returnValue = false;\r\n//        }\r\n//    }\r\n    return returnValue;\r\n");
            out.write("}\r\n\r\nfunction setToActivity(){\r\n    var returnValue = true;\r\n    var toActivityObj = document.all.toActivityId;\r\n    var activityType = \"");
            out.print(activityType);
            out.write("\";\r\n\tvar formType = \"");
            out.print(request.getAttribute("formType")==null?"":request.getAttribute("formType").toString().trim());
            out.write("\";\r\n    if(toActivityObj.length){\r\n        var len = toActivityObj.length;\r\n        for(var i = 0; i < len; i ++){\r\n            if(toActivityObj[i].checked){\r\n                if(document.all.toCondition[i].value == \"0\" || activityType == \"1\"){\r\n                    document.all.toActivityIdValue[i].value = document.all.toActivityId[i].value;\r\n                    document.all.toConditionValue[i].value = document.all.toCondition[i].value;\r\n                    document.all.toOperateValue[i].value = document.all.toOperate[i].value;\r\n                    document.all.toCompareValue[i].value = document.all.toCompare[i].value;\r\n                }else{\r\n                    if(textIsEmpty(document.all.toCompare[i]) && formType!=\"1\"){\r\n                        alert(\"");
            out.print(Resource.getValue(local,"workflow","workflow.activitysetupinputcomparevalue"));
            out.write("\");\r\n                        returnValue = false;\r\n                        break;\r\n                    }else{\r\n                        document.all.toActivityIdValue[i].value = document.all.toActivityId[i].value;\r\n                        document.all.toConditionValue[i].value = document.all.toCondition[i].value;\r\n                        document.all.toOperateValue[i].value = document.all.toOperate[i].value;\r\n                        document.all.toCompareValue[i].value = document.all.toCompare[i].value;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }else{\r\n        if(toActivityObj.checked){\r\n            if(document.all.toCondition.value == \"0\" || activityType == \"1\"){\r\n                document.all.toActivityIdValue.value = document.all.toActivityId.value;\r\n                document.all.toConditionValue.value = document.all.toCondition.value;\r\n                document.all.toOperateValue.value = document.all.toOperate.value;\r\n                document.all.toCompareValue.value = document.all.toCompare.value;\r\n");
            out.write("            }else{\r\n                if(textIsEmpty(document.all.toCompare)){\r\n                    alert(\"");
            out.print(Resource.getValue(local,"workflow","workflow.activitysetupinputcomparevalue"));
            out.write("\");\r\n                    returnValue = false;\r\n                }else{\r\n                    document.all.toActivityIdValue.value = document.all.toActivityId.value;\r\n                    document.all.toConditionValue.value = document.all.toCondition.value;\r\n                    document.all.toOperateValue.value = document.all.toOperate.value;\r\n                    document.all.toCompareValue.value = document.all.toCompare.value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return returnValue;\r\n}\r\n\r\nfunction save(){\r\n    if(setFromActivity()){\r\n        if(setToActivity()){\r\n            document.all.action.value = \"relationAdd\";\r\n//            alert(\"submit\");\r\n//            alert(document.all.toActivityIdValue.value);\r\n//            alert(document.all.toConditionValue.value);\r\n//            alert(document.all.toOperateValue.value)\r\n//            alert(document.all.toCompareValue.value);\r\n            ActivityActionForm.submit();\r\n        }\r\n    }\r\n}\r\n\r\nfunction checkType(obj){\r\n    if(obj.value == -1){\r\n    \tdocument.all.fromType.style.display = 'none';\r\n");
            out.write("    }else{\r\n        document.all.fromType.style.display = '';\r\n    }\r\n\r\n}\r\n\r\nfunction chgToCondition(obj){\r\n    var toConditionValue = obj.value;\r\n    var toConditionObj = document.all.toCondition;\r\n    if(toConditionObj[0].tagName != \"OPTION\"){\r\n        var len = toConditionObj.length;\r\n        var index = 0;\r\n        for(var i = 0; i < len; i ++){\r\n            if(toConditionObj[i] == obj){\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        if(toConditionValue == 0){\r\n            document.all.tdToOperate[index].style.display = \"none\";\r\n            document.all.tdToCompare[index].style.display = \"none\";\r\n        }else{\r\n            document.all.tdToOperate[index].style.display = \"\";\r\n            document.all.tdToCompare[index].style.display = \"\";\r\n        }\r\n        for(var i = 0; i < len; i ++){\r\n            if(i != index){\r\n                if(toConditionValue == 0){\r\n                    document.all.toCondition[i].options.remove(obj.selectedIndex);\r\n                }else{\r\n");
            out.write("                    if(document.all.toCondition[i].options[document.all.toCondition[i].options.length - 1].value != 0){\r\n                        var newOption = new Option();\r\n                        newOption.value = \"0\";\r\n                        newOption.text = \"");
            out.print(Resource.getValue(local,"workflow","workflow.activitysetupnocondition"));
            out.write("\";\r\n                        document.all.toCondition[i].options.add(newOption);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }else{\r\n        if(toConditionValue == 0){\r\n            document.all.tdToOperate.style.display = \"none\";\r\n            document.all.tdToCompare.style.display = \"none\";\r\n        }else{\r\n            document.all.tdToOperate.style.display = \"\";\r\n            document.all.tdToCompare.style.display = \"\";\r\n        }\r\n    }\r\n}\r\n\r\nfunction addExpression(index){\r\n//alert(\"dddd\");\r\nJSMainWinOpen('jsflow/workflow_activeinfo_expression.jsp?index='+index,'','TOP=0,LEFT=0,scrollbars=yes,resizable=no,width=700,height=400');\r\n}\r\n\r\nfunction changeActivity(){\r\n\tvar count = document.all.toActivityId.length;\r\n\tfor(var i=0;i<count;i++){\r\n\t\tif(document.all.toActivityId[i].checked){\r\n\t\t\tdocument.all.defaultActivity[i].checked = true;\r\n\t\t}\r\n\t}\r\n}\r\n//-->\r\n</script>\r\n");
            int evalDoAfterBody = _jspx_th_html_005fhtml_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_html_005fhtml_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fhtml_005fhtml.reuse(_jspx_th_html_005fhtml_005f0);
        _jspx_th_html_005fhtml_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_html_005fhtml_005f0, _jsp_getInstanceManager(), _jspx_th_html_005fhtml_005f0_reused);
      }
      out.write("\r\n<script src=\"/jsoa/js/util.js\"></script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_bean_005fmessage_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fhtml_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  bean:message
    org.apache.struts.taglib.bean.MessageTag _jspx_th_bean_005fmessage_005f0 = (org.apache.struts.taglib.bean.MessageTag) _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.get(org.apache.struts.taglib.bean.MessageTag.class);
    boolean _jspx_th_bean_005fmessage_005f0_reused = false;
    try {
      _jspx_th_bean_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_bean_005fmessage_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fhtml_005f0);
      // /jsflow/workflow_activeinfo_relationadd.jsp(15,7) name = bundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f0.setBundle("workflow");
      // /jsflow/workflow_activeinfo_relationadd.jsp(15,7) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f0.setKey("workflow.activitysetup");
      int _jspx_eval_bean_005fmessage_005f0 = _jspx_th_bean_005fmessage_005f0.doStartTag();
      if (_jspx_th_bean_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.reuse(_jspx_th_bean_005fmessage_005f0);
      _jspx_th_bean_005fmessage_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_bean_005fmessage_005f0, _jsp_getInstanceManager(), _jspx_th_bean_005fmessage_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_bean_005fmessage_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  bean:message
    org.apache.struts.taglib.bean.MessageTag _jspx_th_bean_005fmessage_005f1 = (org.apache.struts.taglib.bean.MessageTag) _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.get(org.apache.struts.taglib.bean.MessageTag.class);
    boolean _jspx_th_bean_005fmessage_005f1_reused = false;
    try {
      _jspx_th_bean_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_bean_005fmessage_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);
      // /jsflow/workflow_activeinfo_relationadd.jsp(40,52) name = bundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f1.setBundle("workflow");
      // /jsflow/workflow_activeinfo_relationadd.jsp(40,52) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f1.setKey("workflow.activitysetupprecursor");
      int _jspx_eval_bean_005fmessage_005f1 = _jspx_th_bean_005fmessage_005f1.doStartTag();
      if (_jspx_th_bean_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.reuse(_jspx_th_bean_005fmessage_005f1);
      _jspx_th_bean_005fmessage_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_bean_005fmessage_005f1, _jsp_getInstanceManager(), _jspx_th_bean_005fmessage_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_bean_005fmessage_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  bean:message
    org.apache.struts.taglib.bean.MessageTag _jspx_th_bean_005fmessage_005f2 = (org.apache.struts.taglib.bean.MessageTag) _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.get(org.apache.struts.taglib.bean.MessageTag.class);
    boolean _jspx_th_bean_005fmessage_005f2_reused = false;
    try {
      _jspx_th_bean_005fmessage_005f2.setPageContext(_jspx_page_context);
      _jspx_th_bean_005fmessage_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);
      // /jsflow/workflow_activeinfo_relationadd.jsp(55,48) name = bundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f2.setBundle("workflow");
      // /jsflow/workflow_activeinfo_relationadd.jsp(55,48) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f2.setKey("workflow.activitysetupstart");
      int _jspx_eval_bean_005fmessage_005f2 = _jspx_th_bean_005fmessage_005f2.doStartTag();
      if (_jspx_th_bean_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.reuse(_jspx_th_bean_005fmessage_005f2);
      _jspx_th_bean_005fmessage_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_bean_005fmessage_005f2, _jsp_getInstanceManager(), _jspx_th_bean_005fmessage_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_bean_005fmessage_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  bean:message
    org.apache.struts.taglib.bean.MessageTag _jspx_th_bean_005fmessage_005f3 = (org.apache.struts.taglib.bean.MessageTag) _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.get(org.apache.struts.taglib.bean.MessageTag.class);
    boolean _jspx_th_bean_005fmessage_005f3_reused = false;
    try {
      _jspx_th_bean_005fmessage_005f3.setPageContext(_jspx_page_context);
      _jspx_th_bean_005fmessage_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);
      // /jsflow/workflow_activeinfo_relationadd.jsp(61,195) name = bundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f3.setBundle("workflow");
      // /jsflow/workflow_activeinfo_relationadd.jsp(61,195) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f3.setKey("workflow.activitysetupother");
      int _jspx_eval_bean_005fmessage_005f3 = _jspx_th_bean_005fmessage_005f3.doStartTag();
      if (_jspx_th_bean_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.reuse(_jspx_th_bean_005fmessage_005f3);
      _jspx_th_bean_005fmessage_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_bean_005fmessage_005f3, _jsp_getInstanceManager(), _jspx_th_bean_005fmessage_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_bean_005fmessage_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  bean:message
    org.apache.struts.taglib.bean.MessageTag _jspx_th_bean_005fmessage_005f4 = (org.apache.struts.taglib.bean.MessageTag) _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.get(org.apache.struts.taglib.bean.MessageTag.class);
    boolean _jspx_th_bean_005fmessage_005f4_reused = false;
    try {
      _jspx_th_bean_005fmessage_005f4.setPageContext(_jspx_page_context);
      _jspx_th_bean_005fmessage_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);
      // /jsflow/workflow_activeinfo_relationadd.jsp(68,110) name = bundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f4.setBundle("workflow");
      // /jsflow/workflow_activeinfo_relationadd.jsp(68,110) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f4.setKey("workflow.activitysetupname");
      int _jspx_eval_bean_005fmessage_005f4 = _jspx_th_bean_005fmessage_005f4.doStartTag();
      if (_jspx_th_bean_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.reuse(_jspx_th_bean_005fmessage_005f4);
      _jspx_th_bean_005fmessage_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_bean_005fmessage_005f4, _jsp_getInstanceManager(), _jspx_th_bean_005fmessage_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_bean_005fmessage_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  bean:message
    org.apache.struts.taglib.bean.MessageTag _jspx_th_bean_005fmessage_005f5 = (org.apache.struts.taglib.bean.MessageTag) _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.get(org.apache.struts.taglib.bean.MessageTag.class);
    boolean _jspx_th_bean_005fmessage_005f5_reused = false;
    try {
      _jspx_th_bean_005fmessage_005f5.setPageContext(_jspx_page_context);
      _jspx_th_bean_005fmessage_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);
      // /jsflow/workflow_activeinfo_relationadd.jsp(69,86) name = bundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f5.setBundle("workflow");
      // /jsflow/workflow_activeinfo_relationadd.jsp(69,86) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f5.setKey("workflow.activitysetupcondition");
      int _jspx_eval_bean_005fmessage_005f5 = _jspx_th_bean_005fmessage_005f5.doStartTag();
      if (_jspx_th_bean_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.reuse(_jspx_th_bean_005fmessage_005f5);
      _jspx_th_bean_005fmessage_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_bean_005fmessage_005f5, _jsp_getInstanceManager(), _jspx_th_bean_005fmessage_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_bean_005fmessage_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  bean:message
    org.apache.struts.taglib.bean.MessageTag _jspx_th_bean_005fmessage_005f6 = (org.apache.struts.taglib.bean.MessageTag) _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.get(org.apache.struts.taglib.bean.MessageTag.class);
    boolean _jspx_th_bean_005fmessage_005f6_reused = false;
    try {
      _jspx_th_bean_005fmessage_005f6.setPageContext(_jspx_page_context);
      _jspx_th_bean_005fmessage_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);
      // /jsflow/workflow_activeinfo_relationadd.jsp(148,7) name = bundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f6.setBundle("workflow");
      // /jsflow/workflow_activeinfo_relationadd.jsp(148,7) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f6.setKey("workflow.activitysetupsuccessor");
      int _jspx_eval_bean_005fmessage_005f6 = _jspx_th_bean_005fmessage_005f6.doStartTag();
      if (_jspx_th_bean_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.reuse(_jspx_th_bean_005fmessage_005f6);
      _jspx_th_bean_005fmessage_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_bean_005fmessage_005f6, _jsp_getInstanceManager(), _jspx_th_bean_005fmessage_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_bean_005fmessage_005f7(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  bean:message
    org.apache.struts.taglib.bean.MessageTag _jspx_th_bean_005fmessage_005f7 = (org.apache.struts.taglib.bean.MessageTag) _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.get(org.apache.struts.taglib.bean.MessageTag.class);
    boolean _jspx_th_bean_005fmessage_005f7_reused = false;
    try {
      _jspx_th_bean_005fmessage_005f7.setPageContext(_jspx_page_context);
      _jspx_th_bean_005fmessage_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);
      // /jsflow/workflow_activeinfo_relationadd.jsp(155,83) name = bundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f7.setBundle("workflow");
      // /jsflow/workflow_activeinfo_relationadd.jsp(155,83) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f7.setKey("workflow.activitysetupname");
      int _jspx_eval_bean_005fmessage_005f7 = _jspx_th_bean_005fmessage_005f7.doStartTag();
      if (_jspx_th_bean_005fmessage_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.reuse(_jspx_th_bean_005fmessage_005f7);
      _jspx_th_bean_005fmessage_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_bean_005fmessage_005f7, _jsp_getInstanceManager(), _jspx_th_bean_005fmessage_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_bean_005fmessage_005f8(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  bean:message
    org.apache.struts.taglib.bean.MessageTag _jspx_th_bean_005fmessage_005f8 = (org.apache.struts.taglib.bean.MessageTag) _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.get(org.apache.struts.taglib.bean.MessageTag.class);
    boolean _jspx_th_bean_005fmessage_005f8_reused = false;
    try {
      _jspx_th_bean_005fmessage_005f8.setPageContext(_jspx_page_context);
      _jspx_th_bean_005fmessage_005f8.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);
      // /jsflow/workflow_activeinfo_relationadd.jsp(156,99) name = bundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f8.setBundle("workflow");
      // /jsflow/workflow_activeinfo_relationadd.jsp(156,99) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f8.setKey("workflow.activitysetupcondition");
      int _jspx_eval_bean_005fmessage_005f8 = _jspx_th_bean_005fmessage_005f8.doStartTag();
      if (_jspx_th_bean_005fmessage_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.reuse(_jspx_th_bean_005fmessage_005f8);
      _jspx_th_bean_005fmessage_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_bean_005fmessage_005f8, _jsp_getInstanceManager(), _jspx_th_bean_005fmessage_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_bean_005fmessage_005f9(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  bean:message
    org.apache.struts.taglib.bean.MessageTag _jspx_th_bean_005fmessage_005f9 = (org.apache.struts.taglib.bean.MessageTag) _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.get(org.apache.struts.taglib.bean.MessageTag.class);
    boolean _jspx_th_bean_005fmessage_005f9_reused = false;
    try {
      _jspx_th_bean_005fmessage_005f9.setPageContext(_jspx_page_context);
      _jspx_th_bean_005fmessage_005f9.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);
      // /jsflow/workflow_activeinfo_relationadd.jsp(157,82) name = bundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f9.setBundle("workflow");
      // /jsflow/workflow_activeinfo_relationadd.jsp(157,82) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f9.setKey("workflow.activitysetupdefault");
      int _jspx_eval_bean_005fmessage_005f9 = _jspx_th_bean_005fmessage_005f9.doStartTag();
      if (_jspx_th_bean_005fmessage_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.reuse(_jspx_th_bean_005fmessage_005f9);
      _jspx_th_bean_005fmessage_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_bean_005fmessage_005f9, _jsp_getInstanceManager(), _jspx_th_bean_005fmessage_005f9_reused);
    }
    return false;
  }

  private boolean _jspx_meth_bean_005fmessage_005f10(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  bean:message
    org.apache.struts.taglib.bean.MessageTag _jspx_th_bean_005fmessage_005f10 = (org.apache.struts.taglib.bean.MessageTag) _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.get(org.apache.struts.taglib.bean.MessageTag.class);
    boolean _jspx_th_bean_005fmessage_005f10_reused = false;
    try {
      _jspx_th_bean_005fmessage_005f10.setPageContext(_jspx_page_context);
      _jspx_th_bean_005fmessage_005f10.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);
      // /jsflow/workflow_activeinfo_relationadd.jsp(187,53) name = bundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f10.setBundle("workflow");
      // /jsflow/workflow_activeinfo_relationadd.jsp(187,53) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f10.setKey("workflow.activitysetupend");
      int _jspx_eval_bean_005fmessage_005f10 = _jspx_th_bean_005fmessage_005f10.doStartTag();
      if (_jspx_th_bean_005fmessage_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.reuse(_jspx_th_bean_005fmessage_005f10);
      _jspx_th_bean_005fmessage_005f10_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_bean_005fmessage_005f10, _jsp_getInstanceManager(), _jspx_th_bean_005fmessage_005f10_reused);
    }
    return false;
  }

  private boolean _jspx_meth_bean_005fmessage_005f11(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  bean:message
    org.apache.struts.taglib.bean.MessageTag _jspx_th_bean_005fmessage_005f11 = (org.apache.struts.taglib.bean.MessageTag) _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.get(org.apache.struts.taglib.bean.MessageTag.class);
    boolean _jspx_th_bean_005fmessage_005f11_reused = false;
    try {
      _jspx_th_bean_005fmessage_005f11.setPageContext(_jspx_page_context);
      _jspx_th_bean_005fmessage_005f11.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);
      // /jsflow/workflow_activeinfo_relationadd.jsp(191,196) name = bundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f11.setBundle("workflow");
      // /jsflow/workflow_activeinfo_relationadd.jsp(191,196) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f11.setKey("workflow.activitysetupexpress");
      int _jspx_eval_bean_005fmessage_005f11 = _jspx_th_bean_005fmessage_005f11.doStartTag();
      if (_jspx_th_bean_005fmessage_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.reuse(_jspx_th_bean_005fmessage_005f11);
      _jspx_th_bean_005fmessage_005f11_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_bean_005fmessage_005f11, _jsp_getInstanceManager(), _jspx_th_bean_005fmessage_005f11_reused);
    }
    return false;
  }

  private boolean _jspx_meth_bean_005fmessage_005f12(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  bean:message
    org.apache.struts.taglib.bean.MessageTag _jspx_th_bean_005fmessage_005f12 = (org.apache.struts.taglib.bean.MessageTag) _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.get(org.apache.struts.taglib.bean.MessageTag.class);
    boolean _jspx_th_bean_005fmessage_005f12_reused = false;
    try {
      _jspx_th_bean_005fmessage_005f12.setPageContext(_jspx_page_context);
      _jspx_th_bean_005fmessage_005f12.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);
      // /jsflow/workflow_activeinfo_relationadd.jsp(209,125) name = bundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f12.setBundle("workflow");
      // /jsflow/workflow_activeinfo_relationadd.jsp(209,125) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f12.setKey("workflow.activitysetupnocondition");
      int _jspx_eval_bean_005fmessage_005f12 = _jspx_th_bean_005fmessage_005f12.doStartTag();
      if (_jspx_th_bean_005fmessage_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.reuse(_jspx_th_bean_005fmessage_005f12);
      _jspx_th_bean_005fmessage_005f12_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_bean_005fmessage_005f12, _jsp_getInstanceManager(), _jspx_th_bean_005fmessage_005f12_reused);
    }
    return false;
  }

  private boolean _jspx_meth_bean_005fmessage_005f13(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  bean:message
    org.apache.struts.taglib.bean.MessageTag _jspx_th_bean_005fmessage_005f13 = (org.apache.struts.taglib.bean.MessageTag) _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.get(org.apache.struts.taglib.bean.MessageTag.class);
    boolean _jspx_th_bean_005fmessage_005f13_reused = false;
    try {
      _jspx_th_bean_005fmessage_005f13.setPageContext(_jspx_page_context);
      _jspx_th_bean_005fmessage_005f13.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);
      // /jsflow/workflow_activeinfo_relationadd.jsp(276,196) name = bundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f13.setBundle("workflow");
      // /jsflow/workflow_activeinfo_relationadd.jsp(276,196) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f13.setKey("workflow.activitysetupexpress");
      int _jspx_eval_bean_005fmessage_005f13 = _jspx_th_bean_005fmessage_005f13.doStartTag();
      if (_jspx_th_bean_005fmessage_005f13.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.reuse(_jspx_th_bean_005fmessage_005f13);
      _jspx_th_bean_005fmessage_005f13_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_bean_005fmessage_005f13, _jsp_getInstanceManager(), _jspx_th_bean_005fmessage_005f13_reused);
    }
    return false;
  }

  private boolean _jspx_meth_bean_005fmessage_005f14(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  bean:message
    org.apache.struts.taglib.bean.MessageTag _jspx_th_bean_005fmessage_005f14 = (org.apache.struts.taglib.bean.MessageTag) _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.get(org.apache.struts.taglib.bean.MessageTag.class);
    boolean _jspx_th_bean_005fmessage_005f14_reused = false;
    try {
      _jspx_th_bean_005fmessage_005f14.setPageContext(_jspx_page_context);
      _jspx_th_bean_005fmessage_005f14.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);
      // /jsflow/workflow_activeinfo_relationadd.jsp(293,125) name = bundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f14.setBundle("workflow");
      // /jsflow/workflow_activeinfo_relationadd.jsp(293,125) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f14.setKey("workflow.activitysetupnocondition");
      int _jspx_eval_bean_005fmessage_005f14 = _jspx_th_bean_005fmessage_005f14.doStartTag();
      if (_jspx_th_bean_005fmessage_005f14.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.reuse(_jspx_th_bean_005fmessage_005f14);
      _jspx_th_bean_005fmessage_005f14_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_bean_005fmessage_005f14, _jsp_getInstanceManager(), _jspx_th_bean_005fmessage_005f14_reused);
    }
    return false;
  }

  private boolean _jspx_meth_bean_005fmessage_005f15(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  bean:message
    org.apache.struts.taglib.bean.MessageTag _jspx_th_bean_005fmessage_005f15 = (org.apache.struts.taglib.bean.MessageTag) _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.get(org.apache.struts.taglib.bean.MessageTag.class);
    boolean _jspx_th_bean_005fmessage_005f15_reused = false;
    try {
      _jspx_th_bean_005fmessage_005f15.setPageContext(_jspx_page_context);
      _jspx_th_bean_005fmessage_005f15.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);
      // /jsflow/workflow_activeinfo_relationadd.jsp(329,66) name = bundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f15.setBundle("common");
      // /jsflow/workflow_activeinfo_relationadd.jsp(329,66) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f15.setKey("comm.saveclose");
      int _jspx_eval_bean_005fmessage_005f15 = _jspx_th_bean_005fmessage_005f15.doStartTag();
      if (_jspx_th_bean_005fmessage_005f15.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.reuse(_jspx_th_bean_005fmessage_005f15);
      _jspx_th_bean_005fmessage_005f15_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_bean_005fmessage_005f15, _jsp_getInstanceManager(), _jspx_th_bean_005fmessage_005f15_reused);
    }
    return false;
  }

  private boolean _jspx_meth_bean_005fmessage_005f16(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  bean:message
    org.apache.struts.taglib.bean.MessageTag _jspx_th_bean_005fmessage_005f16 = (org.apache.struts.taglib.bean.MessageTag) _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.get(org.apache.struts.taglib.bean.MessageTag.class);
    boolean _jspx_th_bean_005fmessage_005f16_reused = false;
    try {
      _jspx_th_bean_005fmessage_005f16.setPageContext(_jspx_page_context);
      _jspx_th_bean_005fmessage_005f16.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);
      // /jsflow/workflow_activeinfo_relationadd.jsp(329,205) name = bundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f16.setBundle("common");
      // /jsflow/workflow_activeinfo_relationadd.jsp(329,205) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f16.setKey("comm.reset");
      int _jspx_eval_bean_005fmessage_005f16 = _jspx_th_bean_005fmessage_005f16.doStartTag();
      if (_jspx_th_bean_005fmessage_005f16.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.reuse(_jspx_th_bean_005fmessage_005f16);
      _jspx_th_bean_005fmessage_005f16_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_bean_005fmessage_005f16, _jsp_getInstanceManager(), _jspx_th_bean_005fmessage_005f16_reused);
    }
    return false;
  }

  private boolean _jspx_meth_bean_005fmessage_005f17(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  bean:message
    org.apache.struts.taglib.bean.MessageTag _jspx_th_bean_005fmessage_005f17 = (org.apache.struts.taglib.bean.MessageTag) _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.get(org.apache.struts.taglib.bean.MessageTag.class);
    boolean _jspx_th_bean_005fmessage_005f17_reused = false;
    try {
      _jspx_th_bean_005fmessage_005f17.setPageContext(_jspx_page_context);
      _jspx_th_bean_005fmessage_005f17.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);
      // /jsflow/workflow_activeinfo_relationadd.jsp(329,329) name = bundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f17.setBundle("common");
      // /jsflow/workflow_activeinfo_relationadd.jsp(329,329) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f17.setKey("comm.exit");
      int _jspx_eval_bean_005fmessage_005f17 = _jspx_th_bean_005fmessage_005f17.doStartTag();
      if (_jspx_th_bean_005fmessage_005f17.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fbundle_005fnobody.reuse(_jspx_th_bean_005fmessage_005f17);
      _jspx_th_bean_005fmessage_005f17_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_bean_005fmessage_005f17, _jsp_getInstanceManager(), _jspx_th_bean_005fmessage_005f17_reused);
    }
    return false;
  }
}
