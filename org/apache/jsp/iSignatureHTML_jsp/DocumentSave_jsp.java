/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:54:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.iSignatureHTML_jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.*;
import java.text.*;
import java.util.*;
import java.sql.*;
import javax.servlet.*;
import DBstep.iDBManager2000.*;

public final class DocumentSave_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


  DBstep.iDBManager2000 ObjConnBean = new DBstep.iDBManager2000();
  boolean mResult;

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("DBstep.iDBManager2000");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=gb2312");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n");
      out.write('\r');
      out.write('\n');

  //作用：此页面文件主要是保存表单基本要素信息，不会保存签章数据信息

	String DocumentID = new String(request.getParameter("DocumentID").getBytes("8859_1"));
	String XYBH = new String(request.getParameter("XYBH").getBytes("8859_1"));
	String BMJH = new String(request.getParameter("BMJH").getBytes("8859_1"));
	String JF = new String(request.getParameter("JF").getBytes("8859_1"));
	String YF= new String(request.getParameter("YF").getBytes("8859_1"));
	String HZNR = new String(request.getParameter("HZNR").getBytes("8859_1"));
	String QLZR = new String(request.getParameter("QLZR").getBytes("8859_1"));
	String CPMC = new String(request.getParameter("CPMC").getBytes("8859_1"));
	String DGSL = new String(request.getParameter("DGSL").getBytes("8859_1"));
	String DGRQ = new String(request.getParameter("DGRQ").getBytes("8859_1"));

   if (ObjConnBean.OpenConnection()){
	    String strSql = "SELECT * from HTMLDocument Where DocumentID='" + DocumentID + "'";
    	ResultSet rs = null;
    	rs = ObjConnBean.ExecuteQuery(strSql);
    	if (rs.next()) {
       		strSql = "update HTMLDocument set DocumentID='"+DocumentID+"',XYBH='"+XYBH+"',BMJH='"+BMJH+"',JF='"+JF+"',YF='"+YF+"',HZNR='"+HZNR+"',";
       		strSql = strSql + " QLZR='"+QLZR+"',CPMC='"+CPMC+"',DGSL='"+DGSL+"',DGRQ='"+DGRQ+"' where DocumentID = '"+DocumentID+"'";
		    ObjConnBean.ExecuteUpdate(strSql);
    	}else{
      		java.sql.PreparedStatement prestmt=null;
      		try{
        		String Sql="insert into HTMLDocument (DocumentID,XYBH,BMJH,JF,YF,HZNR,QLZR,CPMC,DGSL,DGRQ) values (?,?,?,?,?,?,?,?,?,?) ";
		        prestmt =ObjConnBean.Conn.prepareStatement(Sql);
        		prestmt.setString(1, DocumentID);
		        prestmt.setString(2, XYBH);
        		prestmt.setString(3, BMJH);
		        prestmt.setString(4, JF);
				prestmt.setString(5, YF);
        		prestmt.setString(6, HZNR);
		        prestmt.setString(7, QLZR);
        		prestmt.setString(8, CPMC);
		        prestmt.setString(9, DGSL);
        		prestmt.setString(10, DGRQ);
		        ObjConnBean.Conn.setAutoCommit(true);
        		prestmt.execute();
		        //ObjConnBean.Conn.commit();
        		prestmt.close();
		        mResult=true;
      		}
      		catch(SQLException e){
       	 		//System.out.println(e.toString());
        		mResult=false;
      		}
    }
  	ObjConnBean.CloseConnection();
  	response.sendRedirect("DocumentList.jsp");
  }

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
