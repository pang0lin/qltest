/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:43:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.kq;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.system.manager.service.ManagerService;
import java.util.*;
import java.text.*;

public final class kq_005fwx_005fwmjday_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

private double myRound(double number,int index){
        double temp = Math.pow(10, index);
        return Math.round(number*temp)/temp;
    } 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-nested.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-tiles.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-logic.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-html.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-template.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-bean.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.system.manager.service.ManagerService");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);
String local = session.getAttribute("org.apache.struts.action.LOCALE").toString();
int index = 0;
String range = "*0*";
if(session.getAttribute("rang")!=null && !"".equals(session.getAttribute("rang"))){
	range = (String)session.getAttribute("rang");
}
SimpleDateFormat ymd = new SimpleDateFormat("yyyy-M-d");
String year="",month="",day="";
String td = ymd.format(new Date());
String dateStr = request.getAttribute("date")==null?td:request.getAttribute("date").toString().replace("/","-");
if(!"".equalsIgnoreCase(dateStr)){
	String[] dates = dateStr.split("-");
	year = dates[0];
	month = dates[1];
	day = dates[2];
}
String shang = ymd.format(new Date(ymd.parse(dateStr).getTime()-(24*3600*1000)));
String xia = ymd.format(new Date(ymd.parse(dateStr).getTime()+(24*3600*1000)));
String[] zhuangtai = {"正常上班","正常下班","迟到","早退","上班未打卡","下班未打卡"}; 

      out.write("\r\n<head>\r\n<META HTTP-EQUIV=\"pragma\" CONTENT=\"no-cache\"> \r\n<META HTTP-EQUIV=\"Cache-Control\" CONTENT=\"no-cache, must-revalidate\"> \r\n<META HTTP-EQUIV=\"expires\" CONTENT=\"Wed, 26 Feb 1997 08:21:57 GMT\">\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=GBK\">\r\n<title>玩蟹考勤统计</title>\r\n<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<link rel=stylesheet type=\"text/css\" href=\"/jsoa/public/date_picker/DateObject2.css\">\r\n<SCRIPT language=javascript src=\"/jsoa/js/openEndow.js\"></SCRIPT>\r\n<SCRIPT language=javascript src=\"/jsoa/public/date_picker/DateObject.js\"></SCRIPT>\r\n<SCRIPT language=javascript src=\"/jsoa/public/date_picker/DatePicker.js\"></SCRIPT>\r\n<SCRIPT language=javascript src=\"/jsoa/public/date_picker/editlib.js\"></SCRIPT>\r\n<SCRIPT language=javascript src=\"/jsoa/public/date_picker/tree.js\"></SCRIPT>\r\n<script src=\"/jsoa/js/js.js\" language=\"javascript\"></script>\r\n<script src=\"/jsoa/js/util.js\"></script>\r\n</head>\r\n\r\n<body class=\"MainFrameBox\" onload=\"onloadFun()\">\r\n<table width=\"100%\" border=0 cellpadding=\"0\" cellspacing=\"0\">\r\n<tr>\r\n<td>\r\n\r\n<table width=\"100%\" height=\"25\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"inlineBottomLine\">\r\n  <tr>\r\n   <td width=\"85%\" scope=\"col\">&nbsp;  \r\n\t <b>姓名：</b><span id=\"userName\">");
      out.print(request.getAttribute("userName")+"" );
      out.write("</span> &nbsp;\r\n\t <b>工号：</b><span id=\"userNum\">");
      out.print(request.getAttribute("userNum")+"" );
      out.write("</span> &nbsp;\r\n\t <b>部门：</b><span id=\"userOrg\">");
      out.print(request.getAttribute("userOrg")+"" );
      out.write("</span>&nbsp;&nbsp;&nbsp;\r\n\t <input type=\"radio\" name=\"see\" value=\"all\" onclick=\"seeKq(this.value);\" ");
      out.print("all".equals(request.getParameter("see"))?"checked":"" );
      out.write(">全部\r\n\t <input type=\"radio\" name=\"see\" value=\"normal\" onclick=\"seeKq(this.value);\" ");
      out.print("normal".equals(request.getParameter("see"))?"checked":"" );
      out.write(">正常打卡\r\n\t <input type=\"radio\" name=\"see\" value=\"abnormal\" onclick=\"seeKq(this.value);\" ");
      out.print("abnormal".equals(request.getParameter("see"))?"checked":"" );
      out.write(">异常打卡\r\n\t <input type=\"radio\" name=\"see\" value=\"holiday\" onclick=\"seeKq(this.value);\" ");
      out.print("holiday".equals(request.getParameter("see"))?"checked":"" );
      out.write(">假期\r\n    </td>\r\n </tr>\r\n</table>\r\n\r\n<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"listTable\">\r\n     <tr align=\"center\">\r\n\t\t<td class=\"listTableHead\" width=\"200px\">打卡日期</td>\r\n\t\t<td class=\"listTableHead\" width=\"100px\">上班打卡</td>\t\r\n\t\t<td class=\"listTableHead\" width=\"100px\">下班打卡</td>\r\n\t\t<td class=\"listTableHead\" align=\"center\">说明</td>\r\n\t\t<td class=\"listTableHead\" width=\"100px\">工时(小时)</td>\r\n\t </tr>\r\n\t");
List<String[]> list = (List<String[]>)request.getAttribute("list");
      for(int i=0;i<list.size();i++){
          String[] single = list.get(i);
    	  String[] zhuang = single[5].split(",");
	      String listClass="listTableLine1";
	      if(i%2 != 0){listClass="listTableLine2";}
      out.write("\r\n\t<tr>\r\n\t<td class=\"");
      out.print(listClass);
      out.write("\" ><a href=\"javascript:more('");
      out.print(single[10] );
      out.write("')\">");
      out.print(single[10] );
      out.write("</a>&nbsp;</td>\r\n\t<td class=\"");
      out.print(listClass);
      out.write("\" align=\"center\">");
      out.print((!"0".equals(zhuang[0])&&"0".equals(single[9]))?"<font color='red'>"+single[3]+"</font>":single[3] );
      out.write("&nbsp;</td>\r\n\t<td class=\"");
      out.print(listClass);
      out.write("\" align=\"center\">");
      out.print((!"1".equals(zhuang[1])&&"0".equals(single[9]))?"<font color='red'>"+single[4]+"</font>":single[4] );
      out.write("&nbsp;</td>\r\n\t");
String thisShow = "";
	if("0".equals(single[9])){
		thisShow = ("0".equals(zhuang[0])?zhuangtai[Integer.valueOf(zhuang[0])]:"<font color='red'>"+zhuangtai[Integer.valueOf(zhuang[0])]+"</font>")
		+"/"+("1".equals(zhuang[1])?zhuangtai[Integer.valueOf(zhuang[1])]:"<font color='red'>"+zhuangtai[Integer.valueOf(zhuang[1])]+"</font>");
	}else{
		thisShow="假期";
	} 
      out.write("\r\n\t<td class=\"");
      out.print(listClass);
      out.write("\" align=\"center\">");
      out.print(thisShow );
      out.write("&nbsp;</td>\r\n\t");
double gongshi = myRound(Float.valueOf(single[6])/3600,2); 
      out.write("\r\n\t<td class=\"");
      out.print(listClass);
      out.write("\" align=\"center\">");
      out.print(gongshi==0&&"0".equals(single[9])?"<font color='red'>0</fon>":gongshi==0?"0":gongshi );
      out.write("&nbsp;</td>\r\n\t");
} 
      out.write("\r\n\t</tr>\r\n</table>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/public/page/pageUtil.jsp", out, false);
      out.write("\r\n</td></tr></table>\r\n<iframe name=\"myIframe\" id=\"myIframe\" style=\"display:none;\"></iframe>\r\n<script type=\"text/javascript\">\r\nfunction seeKq(see){\r\n\tlocation.href=((window.location.href).substring(0,(window.location.href).indexOf(\"/jsoa\")))+\"/jsoa/WxKqAction.do?action=wmjDay&empId=");
      out.print(request.getParameter("empId") );
      out.write("&flag=");
      out.print(request.getParameter("flag") );
      out.write("&date=");
      out.print(request.getParameter("date") );
      out.write("&see=\"+see;\r\n}\r\nfunction more(date){\r\n\twindow.open(((window.location.href).substring(0,(window.location.href).indexOf(\"/jsoa\")))+\"/jsoa/WxKqAction.do?action=more&empNum=");
      out.print(request.getAttribute("userNum")+"" );
      out.write("&empId=");
      out.print(request.getAttribute("userId")+"" );
      out.write("&date=\"+date);\r\n}\r\nfunction onloadFun(){\r\n\r\n}\r\n</script>\r\n</body>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
