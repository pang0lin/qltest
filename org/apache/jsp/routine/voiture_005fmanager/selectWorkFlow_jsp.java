/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:47:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.routine.voiture_005fmanager;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class selectWorkFlow_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-nested.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-tiles.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-logic.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-html.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-template.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-bean.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fhtml_005fhtml;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fhtml_005fhtml = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fhtml_005fhtml.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n");

  java.util.List voitureFlowlist = (java.util.List)request.getAttribute("voitureFlowlist") ;
  String voitureId = request.getParameter("voitureId")==null? "0":request.getParameter("voitureId");
  String carPoolId = request.getAttribute("carPoolId").toString();
  String isPC = request.getAttribute("isPC").toString();

      out.write('\r');
      out.write('\n');
      //  html:html
      org.apache.struts.taglib.html.HtmlTag _jspx_th_html_005fhtml_005f0 = (org.apache.struts.taglib.html.HtmlTag) _005fjspx_005ftagPool_005fhtml_005fhtml.get(org.apache.struts.taglib.html.HtmlTag.class);
      boolean _jspx_th_html_005fhtml_005f0_reused = false;
      try {
        _jspx_th_html_005fhtml_005f0.setPageContext(_jspx_page_context);
        _jspx_th_html_005fhtml_005f0.setParent(null);
        int _jspx_eval_html_005fhtml_005f0 = _jspx_th_html_005fhtml_005f0.doStartTag();
        if (_jspx_eval_html_005fhtml_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n<head>\r\n");

		response.setHeader("Cache-Control","no-store");
		response.setHeader("Pragma","no-cache");
		response.setDateHeader ("Expires", 0);

            out.write("\r\n<meta http-equiv=\"Content-Type\"\tcontent=\"text/html;\tcharset=GBK\">\r\n<link href=\"skin/");
            out.print(session.getAttribute("skin"));
            out.write("/style-");
            out.print(session.getAttribute("browserVersion"));
            out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<script\tsrc=\"js/js.js\" language=\"javascript\"></script>\r\n\r\n<title>选择车辆申请流程</title>\r\n\r\n\r\n\r\n\r\n<body class=\"FlowBody\">\r\n<br/>\r\n<table WIDTH=\"100%\" BORDER=\"0\" CELLPADDING=\"0\" CELLSPACING=\"1\">\r\n  <tr>\r\n    <td VALIGN=\"top\" class=main>\r\n      <table WIDTH=\"99%\" BORDER=\"0\" ALIGN=\"center\" CELLPADDING=\"1\" CELLSPACING=\"0\">\r\n        <tr>\r\n          <td HEIGHT=\"350\" VALIGN=\"top\">\t\t\t  \r\n              <table WIDTH=\"95%\" BORDER=\"0\" ALIGN=\"center\" CELLPADDING=\"0\" CELLSPACING=\"1\">\r\n                 <tr>\r\n                    <td HEIGHT=\"24\" COLSPAN=\"2\" style=\"font-size:13px;\"><b>车辆申请流程</b></td>\r\n                 </tr>\r\n\t\t\t\t\t ");

					   int kk = 0;
					   String processId,processName,processType,tableId,remindField,linkValue;
					 
					   for(int	j =	0; j < voitureFlowlist.size(); j++){
						  Object[] rfObj = (Object[])voitureFlowlist.get(j);
						  processId = String.valueOf(rfObj[2]);
						  processName = String.valueOf(rfObj[3]);
						  processType = String.valueOf(rfObj[5]);
						  tableId = String.valueOf(rfObj[4]);
						  remindField = rfObj[6]==null?"":String.valueOf(rfObj[6]);
						  linkValue="processType="+processType+"&remindField="+remindField+"&processId="+processId+"&tableId="+tableId+"&processName="+processName+"&carPoolId="+carPoolId+"&isPC="+isPC;
					  
						  if(kk%3==0){
							out.println("<tr>");
						  }
					  
            out.write("\r\n                    <td VALIGN=\"center\" height=\"22\" width=\"33%\">\r\n\t\t\t\t\t\t\r\n                      <div STYLE=\"padding-left:15px;float:left;word-break:keep-all;position:static\">\r\n\t\t\t\t\t\t\t\t<div STYLE=\"float:left;width:22px;padding-top:2px;\"><img SRC=\"images/detail.gif\" ALT=\"流程描述\" STYLE=\"cursor:'hand'\" onClick=\"MM_openBrWindow('/jsoa/jsflow/workflow_description.jsp?processId=");
            out.print(processId);
            out.write("','','TOP=0,LEFT=0,scrollbars=yes,resizable=yes,width=600,height=400')\"></div>\r\n\t\t\t\t\t\t\t\t<div STYLE=\"float:left;font-size:12px;\"><a href=\"javascript:newForm('");
            out.print(linkValue);
            out.write("');\">");
            out.print(processName);
            out.write("</a></div>\r\n                      </div>\r\n\t\t\t\t\t\t\r\n                    </td> \r\n\t\t\t\t\t");

						
						 if(kk%3==2){
							out.println("</tr>");
						 }
						 kk++;
					 }
					 if((kk-1)%3<2){
						out.println("<td  width='33%'>&nbsp;</td></tr>");
				     }
					
            out.write("\r\n               </table>               \r\n               <div><hr style=\"border:1px solid #cccccc;height:1px;width:95%;\"></div>\t\t\t                          \r\n                        \r\n \t\t  </td>\r\n        </tr>\r\n      </table>\r\n    </td>\r\n  </tr>\r\n</table>\r\n\r\n </body>\r\n ");
            int evalDoAfterBody = _jspx_th_html_005fhtml_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_html_005fhtml_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fhtml_005fhtml.reuse(_jspx_th_html_005fhtml_005f0);
        _jspx_th_html_005fhtml_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_html_005fhtml_005f0, _jsp_getInstanceManager(), _jspx_th_html_005fhtml_005f0_reused);
      }
      out.write("\r\n <script language=\"javascript\">\r\n function newForm(selProcess){\r\n\t location.href=\"VoitureApplyAction.do?flag=add&voitureId=");
      out.print(voitureId);
      out.write("&\"+selProcess+\"&moduleId=11\";\r\n}\r\n</script>\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
