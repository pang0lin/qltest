/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:03:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.eform;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class newProductPageGetData_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

 String searchFlag=request.getParameter("searchFlag");
java.util.List<java.util.Map<String, String>> list;
if("0".equals(searchFlag)){
	list = com.js.oa.eform.util.HaierSpecialModels.getNewProductInfo(null);
}else{
	java.util.HashMap<String,String> parmMap=new java.util.HashMap<String,String>();
	String tuhao=request.getParameter("tuhao");
	String lczt=request.getParameter("lczt");
	String jccjs=request.getParameter("jccjs");
	String tbr=request.getParameter("tbr");
	String tbsjs=request.getParameter("tbsjs");
	String tbsje=request.getParameter("tbsje");
	if(tuhao==null||"".equals(tuhao)){
		parmMap.put("tuhao","");
	}else{
		parmMap.put("tuhao", java.net.URLDecoder.decode(tuhao, "UTF-8"));
	}
	if(lczt==null){
		parmMap.put("lczt","");
	}else{
		parmMap.put("lczt",lczt);
	}
	if(jccjs==null){
		parmMap.put("jccjs","");
	}else{
		parmMap.put("jccjs",jccjs);
	}
	if(tbr==null||"".equals(tbr)){
		parmMap.put("tbr","");
	}else{
		parmMap.put("tbr", java.net.URLDecoder.decode(tbr, "UTF-8"));
	}
	if(tbsjs==null){
		parmMap.put("tbsjs","");
	}else{
		parmMap.put("tbsjs",tbsjs);
	}
	if(tbsje==null){
		parmMap.put("tbsje","");
	}else{
		parmMap.put("tbsje",tbsje);
	}
	list = com.js.oa.eform.util.HaierSpecialModels.getNewProductInfo(parmMap);
}
if(list!=null && list.size()>0){
	int index = 0;
    String listClass="listTableLine1";
	   for(java.util.Map<String, String> map:list){
		   index ++;
			if(index%2 != 0){
			     listClass="listTableLine2";
			}else{
			     listClass="listTableLine1";
			}
		   out.print("<tr>");
		    out.print("<td class=\""+listClass+"\">"+index+"</td>");
		    //图号
		     out.print("<td class=\""+listClass+"\">"+map.get("tuhao")+"</td>");
			//货品中文名称
			out.print("<td class=\""+listClass+"\">"+map.get("hpzwmc")+"</td>");
			//类别
			out.print("<td class=\""+listClass+"\">"+map.get("lb")+"</td>");
			//主单位
			out.print("<td class=\""+listClass+"\">"+map.get("zdw")+"</td>");
			//副单位
			out.print("<td class=\""+listClass+"\">"+map.get("fdw")+"</td>");
			//换算关系
			out.print("<td class=\""+listClass+"\">"+map.get("hsgx")+"</td>");
			//托外否
			out.print("<td class=\""+listClass+"\">"+map.get("twf")+"</td>");
			//年使用量
			out.print("<td class=\""+listClass+"\">"+map.get("nsyl")+"</td>");
			//压缩机
			out.print("<td class=\""+listClass+"\">"+map.get("ysj")+"</td>");
			//寄售标志
			out.print("<td class=\""+listClass+"\">"+map.get("xp_jsbz")+"</td>");
			//资材员
			out.print("<td class=\""+listClass+"\">"+map.get("xp_zcy")+"</td>");
			//采购批量
			out.print("<td class=\""+listClass+"\">"+map.get("xp_cgpl")+"</td>");
			//采购期
			out.print("<td class=\""+listClass+"\">"+map.get("xp_cgq")+"</td>");
			//HS编码	
			out.print("<td class=\""+listClass+"\">"+map.get("xp_hs")+"</td>");
			//预设仓库
			out.print("<td class=\""+listClass+"\">"+map.get("xp_ysck")+"</td>");
			//保管员
			out.print("<td class=\""+listClass+"\">"+map.get("xp_bgy")+"</td>");
			//安全库存
			out.print("<td class=\""+listClass+"\">"+map.get("xp_aqkc")+"</td>");
			//最大库存
			out.print("<td class=\""+listClass+"\">"+map.get("xp_zdkc")+"</td>");
			//发料类型
			out.print("<td class=\""+listClass+"\">"+map.get("xp_fllx")+"</td>");
			//计划价格
			out.print("<td class=\""+listClass+"\">"+map.get("xp_jhjg")+"</td>");
			//最小包装单位
			out.print("<td class=\""+listClass+"\">"+map.get("xp_zxbzdw")+"</td>");
			//最小包装数量
			out.print("<td class=\""+listClass+"\">"+map.get("xp_zxbzsl")+"</td>");
			//主供应商
			out.print("<td class=\""+listClass+"\">"+map.get("xp_zgys")+"</td>");
			//检查成绩书号	
			out.print("<td class=\""+listClass+"\">"+map.get("xp_jccjsh")+"</td>");
			//样品评价报告编码
			out.print("<td class=\""+listClass+"\">"+map.get("xp_pjbgbh")+"</td>");
			//是否加急	
			out.print("<td class=\""+listClass+"\">"+map.get("sfjj")+"</td>");
			//希望完成时间
			out.print("<td class=\""+listClass+"\">"+map.get("xwwcsj")+"</td>");
			//技术担当
			out.print("<td class=\""+listClass+"\">"+map.get("jsdd")+"</td>");
			//厂家
			out.print("<td class=\""+listClass+"\">"+map.get("ylp_cj")+"</td>");
			//送样时间
			out.print("<td class=\""+listClass+"\">"+map.get("ylp_sysj")+"</td>");
			//检验完成时间
			out.print("<td class=\""+listClass+"\">"+map.get("ylp_jywcsj")+"</td>");
			//样品合格否
			out.print("<td class=\""+listClass+"\">"+map.get("xp_yphgf")+"</td>");
			//检验员
			out.print("<td class=\""+listClass+"\">"+map.get("xp_jyy")+"</td>");
			//检验期
			out.print("<td class=\""+listClass+"\">"+map.get("jyq")+"</td>");
			//成本办担当
			out.print("<td class=\""+listClass+"\">"+map.get("ylp_cbbdd")+"</td>");
			//品证担当
			out.print("<td class=\""+listClass+"\">"+map.get("ylp_pzdd")+"</td>");
			//提报人
			out.print("<td class=\""+listClass+"\">"+map.get("tbr")+"</td>");
			//提报时间
			out.print("<td class=\""+listClass+"\">"+map.get("tbsj")+"</td>");
			//状态
			out.print("<td class=\""+listClass+"\">"+map.get("zt")+"</td>");
			//办理人
			out.print("<td class=\""+listClass+"\">"+map.get("blr")+"</td>");
		   out.print("</tr>");
	   }
}else{
	 out.print("<tr><td colspan=\"41\" class=\"listTableLine1\" align=\"center\">暂无数据</td></tr>");
}

      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
