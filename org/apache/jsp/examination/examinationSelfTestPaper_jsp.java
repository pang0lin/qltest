/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:04:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.examination;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.js.oa.hr.examination.service.*;
import com.js.oa.hr.examination.po.*;

public final class examinationSelfTestPaper_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-logic.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-html.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("com.js.oa.hr.examination.po");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.js.oa.hr.examination.service");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fhtml_005fform_0026_005ftarget_005fmethod_005faction;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fhtml_005fform_0026_005ftarget_005fmethod_005faction = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fhtml_005fform_0026_005ftarget_005fmethod_005faction.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n<html>\r\n<head>\r\n<title>员工自测试卷</title>\r\n<link href=\"/jsoa/style/cssmain.css\" rel=\"stylesheet\" type=\"text/css\">\r\n<script language=\"javascript\" src=\"/jsoa/js/checkForm.js\"></script>\r\n<script language=\"javascript\" src=\"/jsoa/js/openEndow.js\"></script>\r\n<link href=\"skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<script src=\"js/js.js\" language=\"javascript\"></script>\r\n");

	response.setHeader("Cache-Control","no-store");
    response.setHeader("Pragma","no-cache");
    response.setDateHeader ("Expires", 0);

      out.write("\r\n<style type=\"text/css\">\r\n<!--\r\n.STYLE1 {\r\n\tfont-size: 18px;\r\n\tfont-weight: bold;\r\n}\r\nbody{background:#c7eecf;}\r\n.padding_l{padding-left:30px;}\r\n.padding_left{padding-left:45px;}\r\n-->\r\n</style>\r\n</head>\r\n");

int subjectCount = Integer.parseInt(request.getAttribute("subjectCount").toString());
String subject[] = {"零","一","二","三","四","五","六","七","八","九","十","十一","十二","十三","十四","十五","十六"};
String examinationID = "";

      out.write("\r\n<body class=\"MainFrameBox\"  >\r\n<table width=\"100%\" border=0 cellpadding=\"0\" cellspacing=\"0\">\r\n<tr>\r\n<td>\r\n ");
      //  html:form
      org.apache.struts.taglib.html.FormTag _jspx_th_html_005fform_005f0 = (org.apache.struts.taglib.html.FormTag) _005fjspx_005ftagPool_005fhtml_005fform_0026_005ftarget_005fmethod_005faction.get(org.apache.struts.taglib.html.FormTag.class);
      boolean _jspx_th_html_005fform_005f0_reused = false;
      try {
        _jspx_th_html_005fform_005f0.setPageContext(_jspx_page_context);
        _jspx_th_html_005fform_005f0.setParent(null);
        // /examination/examinationSelfTestPaper.jsp(40,1) name = action type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_html_005fform_005f0.setAction("/ExaminationSelfTestAction.do?action=putin");
        // /examination/examinationSelfTestPaper.jsp(40,1) name = method type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_html_005fform_005f0.setMethod("post");
        // /examination/examinationSelfTestPaper.jsp(40,1) name = target type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_html_005fform_005f0.setTarget("_self");
        int _jspx_eval_html_005fform_005f0 = _jspx_th_html_005fform_005f0.doStartTag();
        if (_jspx_eval_html_005fform_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n<table width=\"100%\" height=\"100%\" border=\"0\" cellpadding=\"10\" cellspacing=\"0\" >\r\n  <tr>\r\n    <td valign=\"top\">\r\n\t<div id=\"docinfo0\" style=\"display:;\">\r\n\t   <table width=\"100%\" border=\"0\" cellpadding=\"2\" cellspacing=\"1\">\r\n\t     <tr>\r\n\t\t <td align=\"center\"><span class=\"STYLE1\">自测试卷</span></td>\r\n\t\t </tr>\r\n        ");

        for(int i = 1 ; i <= subjectCount; i ++){
			String examinationStyle = request.getAttribute("examinationStyle"+i).toString();
		
            out.write("\r\n\t\t<tr>\t     <td><strong>");
            out.print(subject[i]);
            out.write('、');
            out.print(examinationStyle.equals("1")?"单选题":examinationStyle.equals("2")?"多选题":"问答题");
            out.write("</strong></td>\r\n\t\t<tr>\r\n\t\t ");

		  String hasStock = request.getAttribute("hasStock"+i).toString();
		  if(hasStock.equals("0")){
		 
            out.write("\r\n\t\t <tr>\r\n\t\t <td>您选择的题型暂时没有试题，请与系统管理员联系！</td>\r\n\t\t <tr>\r\n\t\t ");
} else{
		 String stockSel[] = (String[])request.getAttribute("stockSel"+i);
		 for(int j = 0 ; j < stockSel.length ; j ++){
			 ExaminationStockPO po = new ExaminationStockPO();
             po = new ExaminationStockBD().load(new Long(stockSel[j]));
			 
		
            out.write("\r\n\t\t <tr>\r\n\t\t <td class=\"padding_l\">");
            out.print(j+1);
            out.write('.');
            out.write(' ');
            out.print(po.getSubject());
            out.write("</td>\r\n\t\t </tr>\r\n\t\t ");

		  if(po.getExaminationStyle().equals("1")){
		   Set examinationItem = po.getExaminationItem();
		   examinationID += "rd"+stockSel[j]+"_"+i+"_"+(j+1)+",";
		 
            out.write("\r\n\t\t  <tr>\r\n\t\t  <td class=\"padding_left\">\r\n\t\t   ");

			Iterator iter = examinationItem.iterator();
			ExaminationItemPO itempo = null;
			while(iter.hasNext()){
			itempo = (ExaminationItemPO)iter.next();
		    
            out.write("\r\n\t\t   <input type=\"radio\" name=\"rd");
            out.print(po.getExaminationID()+"_"+i);
            out.write("\" value=\"");
            out.print(itempo.getItemID());
            out.write('"');
            out.write(' ');
            out.write('>');
            out.print(itempo.getOrderCode());
            out.write('、');
            out.print(itempo.getItemOption());
            out.write(" &nbsp;&nbsp;\r\n\t\t   ");

			}
		   
            out.write("\r\n\t\t  </td>\r\n\t\t  </tr>\r\n\t\t ");
}else if(po.getExaminationStyle().equals("2")){
		   Set examinationItem = po.getExaminationItem();
		   examinationID += "cbx"+stockSel[j]+"_"+i+"_"+(j+1)+",";
		 
            out.write("\r\n\t\t  <tr>\r\n\t\t  <td class=\"padding_left\">\r\n\t\t   ");

			Iterator iter = examinationItem.iterator();
			ExaminationItemPO itempo = null;
			while(iter.hasNext()){
			itempo = (ExaminationItemPO)iter.next();
		    
            out.write("\r\n\t\t   <input type=\"checkbox\" name=\"cbx");
            out.print(po.getExaminationID()+"_"+i);
            out.write("\" value=\"");
            out.print(itempo.getItemID());
            out.write('"');
            out.write(' ');
            out.write('>');
            out.print(itempo.getOrderCode());
            out.write('、');
            out.print(itempo.getItemOption());
            out.write(" &nbsp;&nbsp;\r\n\t\t   ");

			}
		   
            out.write("\r\n\t\t  </td>\r\n\t\t  </tr>\r\n\t\t ");
}else{
		  examinationID += "ask"+stockSel[j]+"_"+i+"_"+(j+1)+",";	   
            out.write("\r\n\t\t <tr>\r\n\t\t <td class=\"padding_left\">\r\n\t\t <textarea rows=\"4\" name=\"ask");
            out.print(po.getExaminationID()+"_"+i);
            out.write("\" class=\"inputTextarea\" style=\"width:90%\" ></textarea>\r\n\t\t </td>\r\n\t\t </tr>\r\n\t\t ");
}
            out.write("\r\n         ");
}
            out.write("\r\n\t\t ");
}
            out.write("\r\n\t\t");
}
            out.write("\r\n\t\t<input type=\"hidden\" name=\"examinationID\" value=\"");
            out.print(examinationID);
            out.write("\" >\r\n\t\t<tr>\r\n\t\t<td align=\"center\" height=\"45\"><input type=\"button\" class=\"btnButton4font\" style=\"cursor:pointer\" value=\"考试完毕\" onClick=\"javascript:save('updateAndExit');\"> </td>\r\n\t\t</tr>\r\n\t   </table>\r\n\t</div>  \r\n</td>\r\n</tr>\r\n</table>\r\n");
            int evalDoAfterBody = _jspx_th_html_005fform_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_html_005fform_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fhtml_005fform_0026_005ftarget_005fmethod_005faction.reuse(_jspx_th_html_005fform_005f0);
        _jspx_th_html_005fform_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_html_005fform_005f0, _jsp_getInstanceManager(), _jspx_th_html_005fform_005f0_reused);
      }
      out.write("\r\n</body>\r\n<script language=\"javascript\">\r\nfunction save(tag){\r\n if(document.all.examinationID.value==\"\"){\r\n  alert(\"您选择的题型暂时没有试题，请与系统管理员联系！\");\r\n  //return false;\r\n  return;\r\n }\r\n \r\n if(confirm(\"答题完毕，确认提交吗？\")){\r\n   document.all.ExaminationSelfTestActionForm.submit();\r\n }\r\n\t\t  }\r\n</script>\r\n</html>\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
