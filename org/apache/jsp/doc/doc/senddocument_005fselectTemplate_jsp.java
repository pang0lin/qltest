/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:05:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.doc.doc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.doc.doc.service.SenddocumentBD;
import java.util.*;

public final class senddocument_005fselectTemplate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.doc.doc.service.SenddocumentBD");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);

String  templates=request.getParameter("templates")==null?"":request.getParameter("templates").toString();

SenddocumentBD senddocumentBD=new SenddocumentBD();
List list=senddocumentBD.getTemplateById(""+session.getAttribute("domainId"),templates);

      out.write("\r\n\r\n<head>\r\n\r\n<title>模板选择</title>\r\n<link href=\"/jsoa/skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<script src=\"/jsoa/js/js.js\" language=\"javascript\"></script>\r\n<SCRIPT language=\"javascript\" src=\"/jsoa/js/openEndow.js\"></SCRIPT>\r\n</head>\r\n\r\n<body scroll=\"no\">\r\n<table  border=\"0\" cellpadding=\"0\" cellspacing=\"0\" id=\"pup_main\">\r\n\r\n  <tr>\r\n    <td align=\"center\" valign=\"top\">\r\n\t\t<div id=\"pup_content\">\r\n\t\t  <table width=\"100%\" height=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n            <tr>\r\n            \r\n              <td valign=\"center\" align=\"left\" height=\"35\" width=\"120\">&nbsp;&nbsp;请选择模板：</label></td>\r\n              <td>&nbsp;</td>\r\n            </tr>\r\n            <tr>\r\n              <td>&nbsp;</td>\r\n              <td valign=\"top\" align=\"left\" height=\"25\">\r\n                <select size=\"1\"  id=\"multipleselect\" name=\"templateChoose\">  \r\n\t\t\t\t\t  ");
 for(int i=0;i<list.size();i++){
							Object [] obj=(Object []) list.get(i);
							String templateName=""+obj[1];
							String templateId=""+obj[0];			 
						  
      out.write("\t   \r\n\t\t\t\t\t\t  <option  value=\"");
      out.print(templateId);
      out.write('"');
      out.write('>');
      out.print(templateName);
      out.write("</option>\t\t   \r\n\t\t\t\t\t\t");
}
      out.write("\r\n\t\t\t\t\t\t\r\n\t\t\t   </select>\r\n              </td>\r\n            </tr>\r\n\t\t\t <tr><td>&nbsp;</td><td>&nbsp;</td></tr>\r\n          </table>\r\n\t\t</div>\r\n\t</td>\r\n  </tr>\r\n  <tr>\r\n    <td valign=\"top\" height=\"40\" align=\"right\"><label>\r\n      <input type=\"button\" class=\"btnButton4font\" onclick=\"chooseOk();\" value=\"确定选择\"/>\r\n\t\t     <button class=\"btnButton2font\" onClick=\"window.close();\">退出</button>&nbsp;&nbsp;\r\n    </label></td>\r\n  </tr>\r\n</table>\r\n</body>\r\n</html>\r\n\r\n<SCRIPT LANGUAGE=\"JavaScript\">\r\n\r\n  function chooseOk(){\r\n  \r\n   var choosevalue=document.all.templateChoose.value;\r\n   opener.window.document.all.Template.value=choosevalue;\r\n   window.opener.MTWordWindowDue();\r\n   window.close();\r\n  }\r\n\r\n//-->\r\n</SCRIPT>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
