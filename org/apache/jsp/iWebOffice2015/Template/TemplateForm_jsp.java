/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:44:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.iWebOffice2015.Template;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class TemplateForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


  public String LoadWordList(String domainId,String userId,String orgId){
  	String mWordList="";
    mWordList="<select name=WordList style='width:240 px;'>" ;
  	
  	DBstep.iDBManager2000 DbaObj = new DBstep.iDBManager2000();
	StringBuffer where=new StringBuffer(" where domain_id=");   //构造取签章的条件
	where.append(domainId);
	//where.append(" and (useOrgId like '%*").append(orgId).append("*%'");
	where.append(" and (useUserId like '%$").append(userId).append("$%'");
	
	//查询部门
	java.util.StringTokenizer stOrg = new java.util.StringTokenizer(orgId, "$");
	while(stOrg.hasMoreElements()){
		where.append(" or useOrgId like '%*").append(stOrg.nextElement().toString()).append("*%'");
	}
	
	//查询组
	try{
		if (DbaObj.OpenConnection()) {
			java.sql.ResultSet result = DbaObj.ExecuteQuery("select group_id from org_user_group where emp_id="+userId);
			while(result.next()){
				where.append(" or useGroupId like '%@").append(result.getString(1)).append("@%'");
			}
			result.close();
			DbaObj.CloseConnection();
		}

	}catch(Exception ex){
		System.out.println(ex.getMessage());
	}

    where.append(" or (useOrgId='' and useUserId='' and useGroupId='') or (useOrgId is null and useUserId is null and useGroupId is null) "); 
	where.append(") order by TemplateID desc");

  	String Sql = "SELECT FileName,recordid FROM template_file" + where.toString();
  	if(DbaObj.OpenConnection()){
  		try{
  			java.sql.ResultSet result=DbaObj.ExecuteQuery(Sql);
  			String tmp = "",tmp2 = "";
  			while(result.next()){
  				tmp = result.getString(1);
				tmp2 = result.getString(2);
  				mWordList=mWordList + "<option value='" + tmp2 + "'>" + tmp + "</option>\r\n";
  			}
  		}catch(Exception e){
  			e.printStackTrace();
  		}finally{
  			DbaObj.CloseConnection();
  		}
  	}
     
     mWordList=mWordList + "</select>" ;
     return (mWordList);
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=gb2312");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n");
      out.write('\r');
      out.write('\n');

String domainId=session.getAttribute("domainId").toString();
String userId=session.getAttribute("userId").toString();
//String orgId=session.getAttribute("orgId").toString();
String orgId=session.getAttribute("orgIdString").toString();

      out.write("\r\n<html>\r\n<head>\r\n<title>模板列表选择</title>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=gb2312\">\r\n<link rel='stylesheet' type='text/css' href='../test.css'>\r\n<script language=\"javascript\">\r\nfunction CheckValue(theForm)\r\n{\r\n  var mObject = window.dialogArguments;\r\n  mObject.Template=theForm.WordList.value;\r\n  window.close();\r\n  return;\r\n}\r\n</SCRIPT>\r\n</head>\r\n<body bgcolor=\"menu\">\r\n<form name=\"iForm\">\r\n<table border=0  cellspacing='0' cellpadding='0' width=100% height=100% align=\"center\">\r\n<tr>\r\n<td align=\"center\">\r\n  <table border=0  cellspacing='0' cellpadding='0'>\r\n  <tr>\r\n    <td align=\"right\" nowrap>模版名称：</td>\r\n    <td>");
      out.print(LoadWordList(domainId,userId,orgId));
      out.write("</td>\r\n  </tr>\r\n  <tr>\r\n    <td align=\"right\"  nowrap></td>\r\n    <td style=\"FONT-SIZE: 9pt;COLOR: #3333CC;\">&nbsp;</td>\r\n  </tr>\r\n  </table>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td align=center>\r\n<input type=button value=\"  确定  \" onclick=\"CheckValue(iForm);\">\r\n<input type=button value=\"  取消  \" onclick=\"window.close();\">\r\n</td>\r\n</tr>\r\n</table>\r\n</form>\r\n</body>\r\n</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
