/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:57:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.public_.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.js.oa.hr.kq.service.*;
import com.js.oa.hr.kq.po.*;
import java.text.SimpleDateFormat;

public final class record_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.js.oa.hr.kq.service");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("com.js.oa.hr.kq.po");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);
   Long domainId = request.getSession().getAttribute("domainId") == null ?
      				Long.valueOf("0") :
      				Long.valueOf(request.getSession().getAttribute("domainId").toString());
   KqSigntimeBD kqSigntimeBD =new KqSigntimeBD();
   KqSigntimePO kqSigntimePO=new KqSigntimePO();
   kqSigntimePO=kqSigntimeBD.load(domainId);
   int offset=30;
   if(null!=kqSigntimePO)
   {
   offset=kqSigntimePO.getOffset();
   }
   
   
   
    SimpleDateFormat format=new SimpleDateFormat( "yyyy-MM-dd HH:mm");
   
    Calendar calendar = Calendar.getInstance();// 获得日期对象
    calendar.setTime(new Date());
     calendar.add(Calendar.MINUTE, -offset);
     String beginDate=format.format(calendar.getTime());
    
     calendar.setTime(new Date());
     calendar.add(Calendar.MINUTE, +offset);
     String endDate=format.format(calendar.getTime());
    
     KqRecordBD kqRecordBD=new KqRecordBD();
     KqRecordPO kqRecordPO=new KqRecordPO();
     kqRecordPO=kqRecordBD.seachKqRecordByDate(Long.valueOf(session.getAttribute("userId").toString()),beginDate,endDate);
     
    
     

      out.write("\r\n\r\n\t<script language=\"javascript\">\r\n\t ");
if(null!=kqRecordPO){ 
	 
	   if(kqRecordPO.getDutyType()==2){
	   
	   
	       if(kqRecordPO.getDutyTime().before(new Date()))    
	        {
	       
      out.write("     \r\n              sAlert();\r\n           ");
}
	 
	        }else{
	  
      out.write("\r\n\t      sAlert();\r\n\t  \r\n\t ");

	      }
	 
      out.write("\r\n\t \r\n\t\r\n\tfunction sAlert(){ \r\n    var   msgw,msgh,bordercolor; \r\n    //msgw=340;//提示窗口的宽度 \r\n   // msgh=190;//提示窗口的高度 \r\n    //titleheight=25   //提示窗口标题高度 \r\n    bordercolor=\"#336699\";//提示窗口的边框颜色 \r\n    titlecolor=\"#99CCFF\";//提示窗口的标题颜色 \r\n    var   sWidth,sHeight; \r\n    sWidth=parent.document.body.offsetWidth;//浏览器工作区域内页面宽度 \r\n    sHeight=screen.height;//屏幕高度（垂直分辨率） \r\n\r\n \r\n\r\n    //背景层（大小与窗口有效区域相同，即当弹出对话框时，背景显示为放射状透明灰色） \r\n    var   bgObj=parent.document.createElement(\"div\");//创建一个div对象（背景层） \r\n \r\n    //定义div属性，即相当于 \r\n    bgObj.setAttribute(\"id\",\"bgDiv\");\r\n    bgObj.style.position=\"absolute\"; \r\n    bgObj.style.top=\"0\"; \r\n    bgObj.style.background=\"#777\"; \r\n    bgObj.style.filter=\"progid:DXImageTransform.Microsoft.Alpha(style=3,opacity=25,finishOpacity=75\"; \r\n    bgObj.style.opacity=\"0.6\"; \r\n    bgObj.style.left=\"0\"; \r\n    bgObj.style.width=sWidth   +  \"px\"; \r\n    bgObj.style.height=sHeight   +  \"px\"; \r\n    bgObj.style.zIndex   =  \"10000\"; \r\n    parent.document.body.appendChild(bgObj);//在body内添加该div对象 \r\n\r\n     \r\n    var   msgObj=parent.document.createElement(\"div\")//创建一个div对象（提示框层） \r\n");
      out.write("    //定义div属性，即相当于 \r\n    msgObj.setAttribute(\"id\",\"msgDiv\"); \r\n    msgObj.setAttribute(\"align\",\"center\"); \r\n    msgObj.style.background=\"white\"; \r\n    msgObj.style.border=\"1px   solid  \"   +   bordercolor; \r\n    msgObj.style.position   =  \"absolute\"; \r\n    msgObj.style.left   =  \"55%\"; \r\n    msgObj.style.top   =  \"50%\"; \r\n    msgObj.style.font=\"12px/1.6em   Verdana,   Geneva,   Arial,   Helvetica,   sans-serif\"; \r\n    msgObj.style.marginLeft   =  \"-225px\"   ; \r\n    msgObj.style.marginTop   =   -75+parent.document.documentElement.scrollTop+\"px\"; \r\n  //  msgObj.style.width   =   msgw   +  \"px\"; \r\n    //msgObj.style.height   =msgh   +  \"px\"; \r\n    msgObj.style.textAlign   =  \"center\"; \r\n    msgObj.style.lineHeight   =\"25px\"; \r\n    msgObj.style.zIndex   =  \"10001\"; \r\n   \r\n   \r\n     \r\n      msgObj.innerHTML= '<table width=\"344px\" height=\"194px\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" ><tr><td style=\"background:url(./images/kaoqingbj.gif); font-size:12px; line-height:22px;\" ><div style=\"padding:35px 0px 20px 35px;\"></div><div style=\"padding-left:150px;\"> <img src=\"./images/kaoqingqdk.gif\" /></div></td></tr></table>';\r\n");
      out.write("      \r\n      var table = msgObj.firstChild.firstChild;\r\n\t  var tr0 = table.childNodes[0];\r\n      var div1 = tr0.childNodes[0].firstChild;\r\n      div1.innerHTML=\"排班名称:\"+\"");
      out.print(kqRecordPO.getDutyName() );
      out.write("<br>打卡班次:第\"+\"");
      out.print(kqRecordPO.getRecordSeq() );
      out.write("次<br>打卡类型:\"+\"");
      out.print(kqRecordPO.getDutyType()==1?"上班":"下班" );
      out.write("<br>标准时间:\"+\"");
      out.print(format.format(kqRecordPO.getDutyTime()));
      out.write("\";\r\n      \r\n      var img1 = tr0.childNodes[0].childNodes[1].firstChild;\r\n      img1.style.cursor = \"pointer\";\r\n      \r\n       img1.onclick = function() {\r\n\t\t\t\r\n\t\trecord('");
      out.print(kqRecordPO.getId());
      out.write("');\r\n\t\t\t\r\n\t\t}\r\n\t\timg1.onmouseover = function() {\r\n\t\t\t\t\r\n\t\t\t\timg1.src=\"./images/kaoqingqdk_huan.gif\";\r\n\t\t\t}\r\n\t\t\timg1.onmouseout = function() {\r\n\t\t\t\t\r\n\t\t\t\timg1.src=\"./images/kaoqingqdk.gif\";\r\n\t\t\t}\r\n      \r\n      parent.document.body.appendChild(msgObj);\r\n \r\n   } \r\n   \r\n   \r\nvar xmlHttp;\r\nfunction record(id)\r\n {\r\n\r\n     try{\r\n    // Firefox, Opera 8.0+, Safari\r\n       xmlHttp=new XMLHttpRequest();\r\n      }catch (e){\r\n  // Internet Explorer\r\n          try{\r\n         xmlHttp=new ActiveXObject(\"Msxml2.XMLHTTP\");\r\n      }catch (e){\r\n      try{\r\n         xmlHttp=new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n         }catch (e){\r\n         alert(\"您的浏览器不支持AJAX！\");\r\n                  return false;\r\n               }\r\n            }\r\n      }\r\n   \r\n    xmlHttp.onreadystatechange = callback;\r\n    xmlHttp.open(\"GET\",\"/jsoa/public/jsp/record_do.jsp?id=\"+id,true);\r\n     xmlHttp.send(null);\r\n }\r\n\r\n   function callback() {\r\n    \r\n      if (xmlHttp.readyState == 4) {\r\n        if (xmlHttp.status == 200) {\r\n         // var responseText = xmlhttp.responseText;\r\n");
      out.write("           //responseText = responseText.replace(/\\s+/, '');\r\n           //  parent.document.getElementById(\"iscunzai\").value=\"0\";\r\n             removeObj()\r\n           alert(\"打卡成功！\");\r\n           \r\n         } else {\r\n             removeObj()\r\n            alert(\"出错了\");\r\n           \r\n        }\r\n    }\r\n}\r\n\t");
}
      out.write("\r\n\tfunction removeObj(){ //点击标题栏触发的事件\r\n        parent.document.body.removeChild(parent.document.getElementById(\"bgDiv\"));//删除背景层Div \r\n        parent.document.body.removeChild(parent.document.getElementById(\"msgDiv\"));//删除提示框层 \r\n    } \r\n\t</script>\r\n\t\r\n\r\n<body  onunload=\"removeObj()\" >\r\n</body>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
