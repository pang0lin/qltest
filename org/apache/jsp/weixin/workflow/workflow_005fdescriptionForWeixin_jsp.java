/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:59:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.weixin.workflow;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class workflow_005fdescriptionForWeixin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"/public/jsp/error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);

      out.write("\r\n<html>\r\n<head>\r\n<title>流程描述</title>\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style/cssmain.css\">\r\n</head>\r\n");
if("1".equals(request.getParameter("liuzhuan"))){ 
      out.write("\r\n<body bgcolor=\"white\">\r\n  <table width=\"98%\" border=\"0\" align=\"center\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t   <tr>\r\n\t     <td  valign=\"top\">\r\n\t         ");
out.print(new com.js.oa.jsflow.service.ProcessBD().getDescription(request.getParameter("processId")));
      out.write("\r\n\t     </td>\r\n\t   </tr>                    \r\n  </table>\r\n</body>\r\n");
}else{ 
      out.write("\r\n<body bgcolor=\"8A9AA2\" leftmargin=\"0\" topmargin=\"0\" >\r\n<table width=\"100%\" height=\"400\" border=0 cellpadding=\"0\" cellspacing=\"0\">\r\n<tr>\r\n<td>\r\n\r\n<table width=\"100%\" height=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n  <tr>\r\n    <td align=\"center\" valign=\"middle\"><table width=\"90%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n        <tr>\r\n          <td height=\"10\">&nbsp;</td>\r\n        </tr>\r\n      </table>\r\n      <table width=\"96%\" height=\"96%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n        <tr>\r\n          <td bgcolor=\"#FFFFFF\"><table width=\"96%\" height=\"100%\" border=\"0\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\">\r\n              <tr>\r\n                <td width=\"22\" height=\"40\" valign=\"bottom\">\r\n                \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>&nbsp;</td>\r\n                <td valign=\"top\"><table width=\"98%\" border=\"0\" align=\"center\" cellpadding=\"1\" cellspacing=\"1\">\r\n                    <tr>\r\n                      <td colspan=\"2\"  valign=\"top\">\r\n");
      out.write("                          ");
out.print(new com.js.oa.jsflow.service.ProcessBD().getDescription(request.getParameter("processId")));
      out.write("\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td colspan=\"2\" align=\"right\"  valign=\"middle\">&nbsp;</td>\r\n                    </tr>\r\n                  </table></td>\r\n                <td>&nbsp;</td>\r\n              </tr>\r\n              <tr>\r\n                <td height=\"40\" valign=\"top\">\r\n                </td>\r\n              </tr>\r\n            </table></td>\r\n          <td width=\"4\" valign=\"top\" bgcolor=\"4D565B\">\r\n\t\t  <table width=\"4\" height=\"7\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" bgcolor=\"8A9AA2\">\r\n              <tr>\r\n                <td></td>\r\n              </tr>\r\n            </table></td>\r\n        </tr>\r\n        <tr bgcolor=\"4D565B\">\r\n          <td height=\"5\" colspan=\"2\"><table width=\"7\" height=\"5\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" bgcolor=\"8A9AA2\">\r\n              <tr>\r\n                <td></td>\r\n              </tr>\r\n            </table></td>\r\n        </tr>\r\n      </table>\r\n\r\n      <table width=\"90%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n");
      out.write("        <tr>\r\n          <td height=\"10\">&nbsp;</td>\r\n        </tr>\r\n      </table></td>\r\n  </tr>\r\n</table>\r\n</td>\r\n</tr>\r\n</table>\r\n</body>\r\n");
} 
      out.write("\r\n</html>\r\n<script src=\"/jsoa/js/util.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
