/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:51:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.setup;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.system.menu.po.MenuSetPO;
import com.js.util.config.SystemCommon;

public final class systemmanager_005fmenuset_005fupdate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-nested.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-tiles.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-logic.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-html.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-template.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-bean.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.system.menu.po.MenuSetPO");
    _jspx_imports_classes.add("com.js.util.config.SystemCommon");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");

//选人 修改成全部用户
String range = "0";
String flag= request.getAttribute("flag")==null?"":request.getAttribute("flag").toString();

      out.write("\r\n<head>\r\n<title>修改模块</title>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=GBK\">\r\n<link href=\"/jsoa/style/cssmain.css\" rel=\"stylesheet\" type=\"text/css\">\r\n<link href=\"skin/");
      out.print(session.getAttribute("skin"));
      out.write("/style-");
      out.print(session.getAttribute("browserVersion"));
      out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<script src=\"js/js.js\" language=\"javascript\"></script>\r\n<SCRIPT language=javascript src=\"/jsoa/js/openEndow.js\"></SCRIPT>\r\n<script type=\"text/javascript\">\r\nvar flag=\"");
      out.print(flag);
      out.write("\";\r\nif(\"foraudit\"==flag){\r\n\talert(\"数据已提交审核管理员审核！\");\r\n}\r\n</script>\r\n");
if(request.getParameter("close")!=null){ 
      out.write("\r\n<script type=\"text/javascript\">\r\n\twindow.close();\r\n</script>\r\n");
} 
      out.write("\r\n</head>\r\n<body class=\"MainFrameBox Pupwin\" >\r\n<form action=\"MenuAction.do?action=new_update\"  method=\"post\"  name=\"form1\">  \r\n<!-- FORM -->\r\n<table width=\"100%\" height=\"100%\" border=\"0\" cellpadding=\"10\" cellspacing=\"0\" class=\"docBoxNoPanel\">\r\n  <tr>\r\n    <td valign=\"top\">\r\n\t\r\n\t\t  ");

		  MenuSetPO menuSetPO=(MenuSetPO)request.getAttribute("menuSetPO");
		
		   String menu_name="";
		   String menu_id="";
		   
		    String menu_view="";
		    String inuse="";
		    String userOrgGroup="";
		    
		      menu_name=menuSetPO.getMenuName();
		      menu_id=menuSetPO.getMenuId().toString();		      
		      
		      if(null!=menuSetPO.getMenuView() && !menuSetPO.getMenuView().equals("null"))menu_view=menuSetPO.getMenuView();
   		      
		      inuse=menuSetPO.getInUse().toString();
		      if(menuSetPO.getMenuViewUser()!=null) userOrgGroup += menuSetPO.getMenuViewUser() ;
              if(menuSetPO.getMenuViewOrg()!=null) userOrgGroup += menuSetPO.getMenuViewOrg() ;
              if(menuSetPO.getMenuViewGroup()!=null) userOrgGroup += menuSetPO.getMenuViewGroup() ;
		  
      out.write("\r\n\t\t  <table width=\"80%\" border=\"0\" >\r\n\t\t   <tr >\r\n\t\t   <td >菜单名称：</td>\r\n\t\t   <td  ><input type=\"text\"  name=\"menu_name\"  value=\"");
      out.print(menu_name);
      out.write("\"   />  \r\n\t\t   <input type=\"hidden\" name=\"menuId\" id=\"menuId\" value=\"");
      out.print(menu_id );
      out.write("\" >\r\n\t\t   </td>\r\n\t\t   </tr>\r\n\t\t   <tr >\r\n\t\t   <td >显示顺序：</td>\r\n\t\t   <td  ><input type=\"text\"   name=\"menu_order\"  value=\"");
      out.print( menuSetPO.getMenuOrder());
      out.write("\"   maxlength=\"4\"/>  \r\n\t\t   </td>\r\n\t\t   </tr>\r\n\t\t   <tr>\r\n\t\t   <td>\r\n\t\t   是否启用：\r\n\t\t   </td>\r\n\t\t   <td >\r\n\t\t   <input type=\"radio\" name=\"inuse\" value=\"1\"  ");
if(inuse.equals("1")) {
      out.write("checked");
}
      out.write(" />是\r\n\t\t   <input type=\"radio\" name=\"inuse\" value=\"0\"   ");
if(inuse.equals("0")) {
      out.write("checked");
}
      out.write(" />否\r\n\t\t   </td>\r\n\t\t \r\n\t\t   \r\n\t\t   \r\n\t\t   </tr>\r\n\t\t    <tr>\r\n\t\t        <td valign=\"middle\">用户范围：</td>\r\n\t\t        <td valign=\"left\"  >\r\n\t\t         <input type=\"hidden\" name=\"userOrgGroup\" id=\"userOrgGroup\"  value=\"");
      out.print(userOrgGroup);
      out.write("\"   checked=\"checked\"/>\r\n\t    \t     <textarea cols=\"50\" style=\"cursor:pointer\" Class=\"inputTextarea\" rows=\"5\" name=\"classUserName\" id=\"classUserName\" readonly=\"true\"  title=\"请点击选择\" onClick=\"javascript:openEndow('userOrgGroup','classUserName',form1.userOrgGroup.value,form1.classUserName.value,'user','no','orgusergroup','");
      out.print(range);
      out.write("')\">");
      out.print(menu_view );
      out.write("</textarea>\r\n\t\t       </td>\r\n\t\t    </tr>\r\n\t\t    <tr>\r\n          <td>\r\n\t\t    <input type=\"button\" class=\"btnButton4font\" style=\"cursor:pointer\" onclick=\"javascript:commit();\" value=\"保存退出\" />\r\n\t\t    <input type=\"button\" class=\"btnButton2font\" style=\"cursor:pointer\" onclick=\"javascript:window.location.href = window.location.href;\" value=\"重置\" />\r\n\t\t    <input type=\"button\" class=\"btnButton2font\" style=\"cursor:pointer\" onclick=\"javascript:window.close();\" value=\"退出\" />\r\n\t\t  </td>\r\n        </tr>\r\n     </table>\r\n\t\t \r\n\t\r\n\t<tr>\r\n\t<td>\r\n\t\r\n   \r\n\t\t\r\n</table>\r\n</form>\r\n</body>\r\n\r\n<script language=\"JavaScript\">\r\n\r\n//提交时检查\r\nfunction commit(){\r\n  var id=document.all.userOrgGroup.value;\r\n  if(id==\"\"){\r\n    document.all.classUserName.value=\"\";\r\n  }\r\n\tform1.submit();\r\n\topener.location.reload();\r\n\t");

	if(1!=SystemCommon.getAudit()){//如果开启了审计功能
	
      out.write("\r\n\talert(\"保存成功！\");\r\n\t");
}
      out.write("\r\n\t//guan();\r\n}\r\nfunction guan(){\r\n\twindow.close();\r\n}\r\n</script>\r\n<script src=\"/jsoa/js/util.js\"></script>\r\n<script src=\"/jsoa/js/js.js\" language=\"javascript\"></script>\r\n<SCRIPT language=javascript src=\"/jsoa/js/openEndow.js\"></SCRIPT>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
