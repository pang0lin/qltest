/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:40:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.portal2;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.util.util.IO2File;
import java.util.*;
import java.io.*;
import org.jdom.*;
import org.jdom.output.*;
import org.jdom.input.*;
import org.apache.log4j.*;
import org.jdom.xpath.*;
import com.js.oa.portal.util.*;

public final class saveUserData_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("org.jdom.xpath");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("org.jdom.input");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("org.jdom.output");
    _jspx_imports_packages.add("org.jdom");
    _jspx_imports_packages.add("com.js.oa.portal.util");
    _jspx_imports_packages.add("org.apache.log4j");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.util.util.IO2File");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);
request.setCharacterEncoding("UTF-8");

      out.write("\r\n\r\n");

//response.setContentType("text/xml; charset=GB2312");
Logger logger = Logger.getLogger("saveUserData.jsp");
String mode=request.getParameter("mode")==null?"":request.getParameter("mode");
String order=request.getParameter("order")==null?"":request.getParameter("order");
logger.info("mode:"+mode);

      out.write("\r\n\r\n");

String file=request.getParameter("file");
ServletContext sct = getServletConfig().getServletContext();

String url=request.getRequestURL().toString();
url=url.substring(0,url.lastIndexOf("jsoa")-1);

String path=sct.getRealPath("/")+"portal2/"+file;
if(com.js.util.config.SystemCommon.getUseClusterServer()==1){
	path=sct.getRealPath("/")+"upload/"+file;
}
IO2File.printFile("操作门户文件路径："+path,"门户",3);
logger.info("门户文件路径:"+path);

SAXBuilder builder = new SAXBuilder();

Document myDocument = builder.build(new InputStreamReader(new FileInputStream(path),"UTF-8"));
//Document myDocument = builder.build(new File(path));
Element root = myDocument.getRootElement();

if(mode.equals("pageTitle")){
	//System.out.println("pageTitle");
	//String title=new String(request.getParameter("title").getBytes("utf-8"));
	String title=request.getParameter("title");
	Element mod=(Element)XPath.selectSingleNode(root,"/result/pageTitle");
	
	//System.out.println("***********************************************************");
	//System.out.println(title);
	//System.out.println(url);
	//System.out.println("***********************************************************");
	//mod.setText(new String(title.getBytes("UTF-8"),"GBK"));
	mod.setText(title);
	

      out.write("\r\n\t'pageTitle','true'\r\n");
}else if(mode.equals("order")){//调整栏目的顺序时调用
	//System.out.println("order");
	String left=order.substring(0,order.indexOf(":"));
	String center=order.substring(order.indexOf(":")+1,order.lastIndexOf(":"));
	String right=order.substring(order.lastIndexOf(":")+1,order.length());
	
	logger.info("left=>"+left);
	logger.info("center=>"+center);
	logger.info("right=>"+right);

      out.write("\r\n\t'order','true'\r\n");
  List list=root.getChildren("mod");
	//left
	if(left!=null && !left.equals("")){
		if(left.indexOf(",")!=-1){
			String lefts[]=left.split(",");
			for(int i=0;i<lefts.length;i++){
				Element mod=(Element)XPath.selectSingleNode(root,"/result/mod[@id='"+lefts[i]+"']");
				mod.setAttribute("column","1");
				root.removeContent(mod);
				root.addContent(mod);
			}
		}else{
			Element mod=(Element)XPath.selectSingleNode(root,"/result/mod[@id='"+left+"']");
			mod.setAttribute("column","1");
			root.removeContent(mod);
			root.addContent(mod);
		}
	}
	//center
	if(center!=null && !center.equals("")){
		if(center.indexOf(",")!=-1){
			String centers[]=center.split(",");
			for(int j=0;j<centers.length;j++){
				Element mod=(Element)XPath.selectSingleNode(root,"/result/mod[@id='"+centers[j]+"']");
				mod.setAttribute("column","2");
				root.removeContent(mod);
				root.addContent(mod);
			}
		}else{
			Element mod=(Element)XPath.selectSingleNode(root,"/result/mod[@id='"+center+"']");
			mod.setAttribute("column","2");
			root.removeContent(mod);
			root.addContent(mod);
		}
	}
	//right
	if(right!=null && !right.equals("")){
		if(right.indexOf(",")!=-1){
			String rights[]=right.split(",");
			for(int j=0;j<rights.length;j++){
				Element mod=(Element)XPath.selectSingleNode(root,"/result/mod[@id='"+rights[j]+"']");
				mod.setAttribute("column","3");
				root.removeContent(mod);
				root.addContent(mod);
			}
		}else{
			Element mod=(Element)XPath.selectSingleNode(root,"/result/mod[@id='"+right+"']");
			mod.setAttribute("column","3");
			root.removeContent(mod);
			root.addContent(mod);
		}
	}
}else if(mode.equals("new")){//新增栏目时调用，配置xml文件
	String moduleRndId=request.getParameter("moduleRndId");
	String title=request.getParameter("title");
	IO2File.printFile("栏目标题："+title,"门户");
	//title=new String(title.getBytes("iso-8859-1"),"utf-8");
	String name=request.getParameter("name");
	String share=request.getParameter("share");

	String feedUrl=request.getParameter("feedUrl")==null?"":request.getParameter("feedUrl");

	String arrData=request.getParameter("arrData[feedId]")==null?"":request.getParameter("arrData[feedId]");
	String arrData_channelId=request.getParameter("arrData[channelId]")==null?"":request.getParameter("arrData[channelId]");//channelId
	String arrData_forumClassId=request.getParameter("arrData[classId]")==null?"":request.getParameter("arrData[classId]");//
	//arrData=new String(arrData.getBytes("iso-8859-1"),"utf-8");
	String arrData_color=request.getParameter("arrData[color]")==null?"red":request.getParameter("arrData[color]");
	String arrData_text=request.getParameter("arrData[text]")==null?"red":request.getParameter("arrData[text]");
	//arrData_text=new String(arrData_text.getBytes("iso-8859-1"),"utf-8");
	String openOutside=request.getParameter("arrData[openOutside]")==null?"":request.getParameter("arrData[openOutside]");//
	String imageNews=request.getParameter("arrData[imageNews]")==null?"":request.getParameter("arrData[imageNews]");//
	String coin=request.getParameter("arrData[coin]")==null?"":request.getParameter("arrData[coin]");//

	//构造mod的相关信息
	Element mod = new Element("mod");
	root.addContent(mod);
	mod.setAttribute(new Attribute("id", moduleRndId));
	mod.setAttribute(new Attribute("name", name));
	mod.setAttribute(new Attribute("share", share));
	mod.setAttribute(new Attribute("status", "1"));
	mod.setAttribute(new Attribute("column", "2"));
	//创建标题
	mod.addContent(new Element("title").addContent(title));
	//数据源信息
	Element data = new Element("data");
	Element feedId = new Element("feedId");
	if(name.equals("MyColumn")){
		feedId.addContent(arrData_channelId);
	}else if(name.equals("MyForum")){
		feedId.addContent(arrData_forumClassId);
	}else if(name.equals("FileDealList")){
		feedId.addContent(arrData_channelId);
	}else if(name.equals("RelProject")){
		feedId.addContent(arrData_channelId);
	}else{
		feedId.addContent(arrData);
	}
	IO2File.printFile("栏目数据源的Url："+feedUrl,"门户");
	feedId.setAttribute(new Attribute("url",feedUrl));
	data.addContent(feedId);
	data.addContent(new Element("nbTitles").addContent("7"));
	data.addContent(new Element("color").addContent(arrData_color));
	data.addContent(new Element("text").addContent(arrData_text));		
	data.addContent(new Element("openOutside").addContent(openOutside));
	data.addContent(new Element("imageNews").addContent(imageNews));
	data.addContent(new Element("coin").addContent(coin));
	
	//
	if(request.getParameter("arrData[town]")!=null){
		String arrData_town=request.getParameter("arrData[town]");
		String arrData_unit=request.getParameter("arrData[unit]");
		data.addContent(new Element("town").addContent(arrData_town));
		data.addContent(new Element("unit").addContent(arrData_unit));
	}

	//
	if(request.getParameter("arrData[feed]")!=null){
		String imageFeed=request.getParameter("arrData[feed]");
		data.addContent(new Element("feed").addContent(imageFeed));
	}
	mod.addContent(data);
	

      out.write("\r\n\t'new','true','");
      out.print(moduleRndId);
      out.write("'\r\n\r\n");
}else if(mode.equals("close")){//栏目删除时调用
	//System.out.println("close");
	String id=request.getParameter("id");
	Element mod=(Element)XPath.selectSingleNode(root,"/result/mod[@id='"+id+"']");
	root.removeContent(mod);
	//
	if(mod.getAttribute("name").getValue().equals("MyColumn")){
		String layoutId=((Element)XPath.selectSingleNode(root,"/result/layoutId")).getValue();//
		com.js.oa.portal.service.CustomDesktopBD cbd=new com.js.oa.portal.service.CustomDesktopBD();

		List list=(List)XPath.selectNodes(root,"/result/mod[@name='MyColumn']");//
		String existChannelIdArray="";
		for(int i =0;i<list.size();i++){
			existChannelIdArray+=((Element)list.get(i)).getChild("data").getChild("feedId").getText()+",";
		}
		cbd.setChannelOnDesktopSToLayout(layoutId,existChannelIdArray);
	}


      out.write("\r\n'close','true'\r\n");
}else if(mode.equals("module")){//选择数据来源
	//System.out.println("module");
	String id=request.getParameter("id");
	String title=request.getParameter("title");
	String share=request.getParameter("share");
    String status=request.getParameter("status");
	String feedUrl=request.getParameter("feedUrl")==null?"":request.getParameter("feedUrl");

	String arrData_feedId=request.getParameter("arrData[feedId]")==null?"":request.getParameter("arrData[feedId]");
	String arrData_channelId=request.getParameter("arrData[channelId]")==null?"":request.getParameter("arrData[channelId]");//channelId
	String arrData_forumClassId=request.getParameter("arrData[classId]")==null?"":request.getParameter("arrData[classId]");//
	//String arrData_openOutside=request.getParameter("arrData[openOutside]");
	String arrData_nbTitles=request.getParameter("arrData[nbTitles]");
	String arrData_color=request.getParameter("arrData[color]")==null?"red":request.getParameter("arrData[color]");
	String arrData_text=request.getParameter("arrData[text]")==null?"red":request.getParameter("arrData[text]");
	String openOutside=request.getParameter("arrData[openOutside]")==null?"":request.getParameter("arrData[openOutside]");//
	String imageNews=request.getParameter("arrData[imageNews]")==null?"":request.getParameter("arrData[imageNews]");//
	String coin=request.getParameter("arrData[coin]")==null?"":request.getParameter("arrData[coin]");//

	Element mod=(Element)XPath.selectSingleNode(root,"/result/mod[@id='"+id+"']");

	mod.setAttribute("status", status);
	mod.getChild("title").setText(title);

	//
	String name=mod.getAttribute("name").getValue();
	if(name.equals("MyColumn") && !arrData_channelId.equals("")){
		mod.getChild("data").getChild("feedId").setText(arrData_channelId);//channelId
		String layoutId=((Element)XPath.selectSingleNode(root,"/result/layoutId")).getValue();//
		com.js.oa.portal.service.CustomDesktopBD cbd=new com.js.oa.portal.service.CustomDesktopBD();

		List list=(List)XPath.selectNodes(root,"/result/mod[@name='MyColumn']");//
		String existChannelIdArray="";
		for(int i =0;i<list.size();i++){
			existChannelIdArray+=((Element)list.get(i)).getChild("data").getChild("feedId").getText()+",";
		}
		cbd.setChannelOnDesktopSToLayout(layoutId,existChannelIdArray);
	}else if(name.equals("MyForum") && !arrData_forumClassId.equals("")){
		mod.getChild("data").getChild("feedId").setText(arrData_forumClassId);//forumClassId
	}else if(name.equals("FileDealList")&& !arrData_channelId.equals("")){
		mod.getChild("data").getChild("feedId").setText(arrData_channelId);//channelId
	}else if(name.equals("RelProject")&& !arrData_channelId.equals("")){
		mod.getChild("data").getChild("feedId").setText(arrData_channelId);//channelId
	}else{
		mod.getChild("data").getChild("feedId").setText(arrData_feedId);
	}
	IO2File.printFile("栏目数据源的Url："+feedUrl,"门户");
	mod.getChild("data").getChild("feedId").setAttribute("url", feedUrl);
	mod.getChild("data").getChild("nbTitles").setText(arrData_nbTitles);
	mod.getChild("data").getChild("color").setText(arrData_color);
	mod.getChild("data").getChild("text").setText(arrData_text);	
	mod.getChild("data").getChild("openOutside").setText(openOutside);
	mod.getChild("data").getChild("imageNews").setText(imageNews);
	mod.getChild("data").getChild("coin").setText(coin);

	if(request.getParameter("arrData[town]")!=null){
		String arrData_town=request.getParameter("arrData[town]");
		String arrData_unit=request.getParameter("arrData[unit]");
		mod.getChild("data").getChild("town").setText(arrData_town);
		mod.getChild("data").getChild("unit").setText(arrData_unit);
	}

	if(request.getParameter("arrData[feed]")!=null){
		String imageFeed=request.getParameter("arrData[feed]");
		mod.getChild("data").getChild("feed").setText(imageFeed);
	}

      out.write("\r\n'close','true'\r\n");
}
      out.write('\r');
      out.write('\n');

XMLOutputter outputter = new XMLOutputter(Format.getPrettyFormat().setEncoding("utf-8"));
try{
	OutputStreamWriter writer = new OutputStreamWriter(new FileOutputStream(path), "UTF-8");
	outputter.output(myDocument, writer);
	writer.close();
}catch (Exception e){
	e.printStackTrace();
}

//如果集群部署，应把文件拷贝到其它server
//因ajax跨域访问的限制，不能直接拷贝到公共文件夹
if(com.js.util.config.SystemCommon.getUseClusterServer()==1){
	java.util.List list=GenerateLayout.getOtherServer();
	for(int i=0;i<list.size();i++){
		com.js.util.util.JSFile.copyToFileServer(path,list.get(i).toString());
	}
	com.js.util.util.JSFile.copyToFileServer(path,com.js.util.config.SystemCommon.getClusterServerPath());
	 
	path=path.replace("\\","/");
	//System.out.println("path:"+path);
	//com.js.util.util.JSFile.delete(path);	
}

      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
