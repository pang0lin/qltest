package com.js.db;

import com.js.util.util.SQLFormat;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.SQLWarning;
import java.sql.Statement;
import java.sql.Wrapper;

public class JSStatement {
  Statement stat = null;
  
  JSStatement(Statement statArg) {
    this.stat = statArg;
  }
  
  public void addBatch(String sql) throws SQLException {
    this.stat.addBatch(SQLFormat.toDbString(sql));
  }
  
  public void cancel() throws SQLException {
    this.stat.cancel();
  }
  
  public void clearBatch() throws SQLException {
    this.stat.clearBatch();
  }
  
  public void clearWarnings() throws SQLException {
    this.stat.clearWarnings();
  }
  
  public void close() throws SQLException {
    this.stat.close();
  }
  
  public boolean execute(String sql) throws SQLException {
    return this.stat.execute(SQLFormat.toDbString(sql));
  }
  
  public int[] executeBatch() throws SQLException {
    return this.stat.executeBatch();
  }
  
  public ResultSet executeQuery(String sql) throws SQLException {
    return null;
  }
  
  public int executeUpdate(String sql) throws SQLException {
    return this.stat.executeUpdate(SQLFormat.toDbString(sql));
  }
  
  public Connection getConnection() throws SQLException {
    return this.stat.getConnection();
  }
  
  public int getFetchDirection() throws SQLException {
    return this.stat.getFetchDirection();
  }
  
  public int getFetchSize() throws SQLException {
    return this.stat.getFetchSize();
  }
  
  public int getMaxFieldSize() throws SQLException {
    return this.stat.getMaxFieldSize();
  }
  
  public int getMaxRows() throws SQLException {
    return this.stat.getMaxRows();
  }
  
  public boolean getMoreResults() throws SQLException {
    return this.stat.getMoreResults();
  }
  
  public int getQueryTimeout() throws SQLException {
    return this.stat.getQueryTimeout();
  }
  
  public ResultSet getResultSet() throws SQLException {
    return null;
  }
  
  public int getResultSetConcurrency() throws SQLException {
    return this.stat.getResultSetConcurrency();
  }
  
  public int getResultSetType() throws SQLException {
    return this.stat.getResultSetType();
  }
  
  public int getUpdateCount() throws SQLException {
    return this.stat.getUpdateCount();
  }
  
  public SQLWarning getWarnings() throws SQLException {
    return this.stat.getWarnings();
  }
  
  public void setCursorName(String name) throws SQLException {
    this.stat.setCursorName(name);
  }
  
  public void setEscapeProcessing(boolean enable) throws SQLException {
    this.stat.setEscapeProcessing(enable);
  }
  
  public void setFetchDirection(int direction) throws SQLException {
    this.stat.setFetchDirection(direction);
  }
  
  public void setFetchSize(int rows) throws SQLException {
    this.stat.setFetchSize(rows);
  }
  
  public void setMaxFieldSize(int max) throws SQLException {
    this.stat.setMaxFieldSize(max);
  }
  
  public void setMaxRows(int max) throws SQLException {
    this.stat.setMaxRows(max);
  }
  
  public void setQueryTimeout(int seconds) throws SQLException {
    this.stat.setQueryTimeout(seconds);
  }
  
  public boolean isClosed() throws SQLException {
    return false;
  }
  
  public void setPoolable(boolean poolable) throws SQLException {
    this.stat.setPoolable(poolable);
  }
  
  public boolean isPoolable() throws SQLException {
    return false;
  }
  
  public Wrapper unWrapper(Class c) {
    return null;
  }
  
  public Wrapper isWrapperFor() {
    return null;
  }
  
  public boolean getMoreResults(int current) throws SQLException {
    throw new UnsupportedOperationException(
        "Method getMoreResults() not yet implemented.");
  }
  
  public ResultSet getGeneratedKeys() throws SQLException {
    throw new UnsupportedOperationException(
        "Method getGeneratedKeys() not yet implemented.");
  }
  
  public int executeUpdate(String sql, int autoGeneratedKeys) throws SQLException {
    throw new UnsupportedOperationException(
        "Method executeUpdate() not yet implemented.");
  }
  
  public int executeUpdate(String sql, int[] columnIndexes) throws SQLException {
    throw new UnsupportedOperationException(
        "Method executeUpdate() not yet implemented.");
  }
  
  public int executeUpdate(String sql, String[] columnNames) throws SQLException {
    throw new UnsupportedOperationException(
        "Method executeUpdate() not yet implemented.");
  }
  
  public boolean execute(String sql, int autoGeneratedKeys) throws SQLException {
    throw new UnsupportedOperationException(
        "Method execute() not yet implemented.");
  }
  
  public boolean execute(String sql, int[] columnIndexes) throws SQLException {
    throw new UnsupportedOperationException(
        "Method execute() not yet implemented.");
  }
  
  public boolean execute(String sql, String[] columnNames) throws SQLException {
    throw new UnsupportedOperationException(
        "Method execute() not yet implemented.");
  }
  
  public int getResultSetHoldability() throws SQLException {
    throw new UnsupportedOperationException(
        "Method getResultSetHoldability() not yet implemented.");
  }
}
