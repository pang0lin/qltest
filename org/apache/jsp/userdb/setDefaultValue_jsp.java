/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:43:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.userdb;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class setDefaultValue_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-nested.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-tiles.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-logic.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-html.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-template.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-bean.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fhtml_005fhtml;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fhtml_005fhtml = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fhtml_005fhtml.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);

String fieldIndex=request.getParameter("index");
String dsName="system";


      out.write('\r');
      out.write('\n');
      //  html:html
      org.apache.struts.taglib.html.HtmlTag _jspx_th_html_005fhtml_005f0 = (org.apache.struts.taglib.html.HtmlTag) _005fjspx_005ftagPool_005fhtml_005fhtml.get(org.apache.struts.taglib.html.HtmlTag.class);
      boolean _jspx_th_html_005fhtml_005f0_reused = false;
      try {
        _jspx_th_html_005fhtml_005f0.setPageContext(_jspx_page_context);
        _jspx_th_html_005fhtml_005f0.setParent(null);
        int _jspx_eval_html_005fhtml_005f0 = _jspx_th_html_005fhtml_005f0.doStartTag();
        if (_jspx_eval_html_005fhtml_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n<head>\r\n<title>设置默认值</title>\r\n<link href=\"/jsoa/skin/");
            out.print(session.getAttribute("skin"));
            out.write("/style-");
            out.print(session.getAttribute("browserVersion"));
            out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<script src=\"/jsoa/js/js.js\" language=\"javascript\"></script>\r\n<link rel=stylesheet type=\"text/css\" href=\"/jsoa/public/date_picker/DateObject2.css\">\r\n</head>\r\n<body leftmargin=\"0\" scroll=\"auto\" topmargin=\"0\" class=\"MainFrameBox Pupwin\" onLoad=\"loadData();\">\r\n<table width=\"100%\" height=\"100%\" border=\"0\" cellpadding=\"10\" cellspacing=\"0\" class=\"docBoxNoPanel\">\r\n<tr>\r\n<td valign=\"top\">\r\n\r\n <table width=\"100%\" border=\"0\" cellpadding=\"5\" cellspacing=\"0\"> \r\n     <tr>\r\n        <td width=\"60\" nowrap=\"nowrap\">数据来源：</td>\r\n        <td>\r\n        <input type=\"radio\" name=\"tableType\" id=\"tableType\" value=\"0\" checked onclick=\"changeType(0);\">固定值&nbsp;\r\n        <input type=\"radio\" name=\"tableType\" id=\"tableType\" value=\"1\" onclick=\"changeType(1);\">自定义SQL语句\r\n        <input type=\"radio\" name=\"tableType\" id=\"tableType\" value=\"2\" onclick=\"changeType(2);\">程序接口\r\n        </td>\r\n     </tr>\r\n     <tr id=\"tr_d0\" name=\"tr_d0\" style=\"display:none\">\r\n        <td nowrap=\"nowrap\">默认值：</td>\r\n        <td>\r\n");
            out.write("        <input type=\"text\" style=\"width:80%\" name=\"defaultValue\" id=\"defaultValue\"></textarea>\r\n        </td>\r\n     </tr>\r\n     <tr id=\"tr_d1\" name=\"tr_d1\" style=\"display:none\">\r\n        <td width=\"60\" nowrap=\"nowrap\" valign=top>数&nbsp;据&nbsp;源：</td>\r\n        <td>\r\n        \t<select name=\"datasourceName\" id=\"datasourceName\">\r\n        \t\t<option value=\"system\">系统默认数据源</option>\r\n        \t\t");

        		String[] userDataSourceName=com.js.util.config.SystemCommon.getUserDatasourceName();
        		if(userDataSourceName!=null){
        			for(String dataSourceName:userDataSourceName){
        				
            out.write("\r\n        \t\t\t\t<option value=\"");
            out.print(dataSourceName );
            out.write('"');
            out.write(' ');
if(dsName.equals(dataSourceName)){out.print("selected");} 
            out.write('>');
            out.print(dataSourceName );
            out.write("</option>\r\n        \t\t\t\t");

        			}
        		}
        		
            out.write("\r\n        \t</select>\r\n        </td>\r\n     </tr>\r\n     <tr id=\"tr_d1\" name=\"tr_d1\" style=\"display:none\">\r\n        <td nowrap=\"nowrap\">SQL&nbsp;语句：</td>\r\n        <td>\r\n        <textarea rows=\"4\" cols=\"50\" style=\"height:50px;width:80%\" id=\"defaultValueSQL\" name=\"defaultValueSQL\"></textarea>\r\n        </td>\r\n     </tr>\r\n     <tr id=\"tr_d2\" name=\"tr_d2\" style=\"display:none\">\r\n        <td nowrap=\"nowrap\">接口类名：</td>\r\n        <td>\r\n        <input type=\"text\" name=\"defaultClassName\" id=\"defaultClassName\" style=\"width:80%\">\r\n        </td>\r\n     </tr>\r\n     <tr id=\"tr_d2\" name=\"tr_d2\" style=\"display:none\">\r\n        <td nowrap=\"nowrap\">方&nbsp;法&nbsp;名：</td>\r\n        <td>\r\n        <input type=\"text\" name=\"defaultClassMethod\" id=\"defaultClassMethod\" style=\"width:80%\">\r\n        </td>\r\n     </tr>\r\n\t\t\t\t\t\t  \r\n\t<tr id=\"oprTR\" name=\"oprTR\" style=\"display:\">\r\n      <td colspan=2 height=\"45\" valign=\"bottom\">\r\n\t\t<input type=\"button\"  class=\"btnButton4font\" onclick=\"javascript:save();\" value=\"保存退出\"/>\r\n\t\t<input type=\"button\" class=\"btnButton2font\" onclick=\"window.location.reload();\" value=\"重置\" />\r\n");
            out.write("\t\t<input type=\"button\" class=\"btnButton2font\" onclick=\"javascript:window.close()\" value=\"退出\" />\r\n\t  </td>\r\n    </tr>\r\n\t\t\t  \t\t  \r\n </table>\r\n</td>\r\n</tr>\r\n<tr><td>&nbsp;</td></tr>\r\n</table>\r\n</body>\r\n<script language=\"javascript\">\r\n<!--\r\nfunction loadData(){\r\n\tvar valIndex=\"");
            out.print(fieldIndex);
            out.write("\"; //表示第几个字段\r\n\tvar parentValue=opener.document.getElementsByName(\"fieldDefault\")[valIndex].value;\r\n\tif(parentValue==\"\"){\t\t\r\n\t\tdocument.getElementsByName(\"tableType\")[0].checked=true;\r\n\t\tchangeType(0);\r\n\t}else if(parentValue.startWith(\"$[$[\") && parentValue.endWith(\"]]\")){\r\n\t\tdocument.getElementsByName(\"tableType\")[1].checked=true;\r\n\t\tchangeType(1);\r\n\t\t\r\n\t\tparentValue=parentValue.substring(4,parentValue.length-2);\t\t\r\n\t\tvar dataSource=parentValue.substring(0,parentValue.indexOf(\"]$[\"));\r\n\t\tvar sql=parentValue.substring(parentValue.indexOf(\"]$[\")+3,parentValue.length);\r\n\t\tdocument.getElementById(\"datasourceName\").value=dataSource;\r\n\t\tdocument.getElementById(\"defaultValueSQL\").value=sql;\r\n\t}else if(parentValue.startWith(\"@[className\") && parentValue.endWith(\"]\")){\r\n\t\tdocument.getElementsByName(\"tableType\")[2].checked=true;\r\n\t\tchangeType(2);\r\n\t\t\r\n\t\tvar valueClassName=parentValue.substring(parentValue.indexOf(\"@[className:\")+12,parentValue.indexOf(\";methodName:\"));\r\n\t\tvar valueClassMethod=parentValue.substring(parentValue.indexOf(\";methodName:\")+12,parentValue.length-1);\r\n");
            out.write("\t\tdocument.getElementById(\"defaultClassName\").value=valueClassName;\r\n\t\tdocument.getElementById(\"defaultClassMethod\").value=valueClassMethod;\r\n\t}else{\r\n\t\tdocument.getElementsByName(\"tableType\")[0].checked=true;\r\n\t\tchangeType(0);\r\n\t\tdocument.getElementById(\"defaultValue\").value=parentValue;\r\n\t}\r\n\t\t\r\n}\r\nfunction save(){\r\n\t//保存设置到前面页面\r\n\tvar valIndex=\"");
            out.print(fieldIndex);
            out.write("\"; //表示第几个字段\r\n\tvar parentObj=opener.document.getElementsByName(\"fieldDefault\")[valIndex];\r\n\t\r\n\tvar returnValue=\"\";\r\n\tvar valueType=\"0\";\r\n\tvar tableType=document.getElementsByName(\"tableType\");\r\n\tfor(var i=0;i<tableType.length;i++){\r\n\t\tif(tableType[i].checked){\r\n\t\t\tvalueType=tableType[i].value;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\r\n\tif(valueType==\"0\"){\r\n\t\treturnValue=document.getElementById(\"defaultValue\").value;\r\n\t}else if(valueType==\"1\"){\t\t\r\n\t\tif(document.getElementById(\"defaultValueSQL\").value==\"\"){\r\n\t\t\talert(\"请填写SQL语句！\");\r\n\t\t\tdocument.getElementById(\"defaultValueSQL\").focus();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturnValue=\"$[$[\"+document.getElementById(\"datasourceName\").value;\r\n\t\treturnValue+=\"]$[\"+document.getElementById(\"defaultValueSQL\").value;\r\n\t\treturnValue+=\"]]\";\r\n\t}else if(valueType==\"2\"){\t\r\n\t\tif(document.getElementById(\"defaultClassName\").value==\"\"){\r\n\t\t\talert(\"请填写接口名称！\");\r\n\t\t\tdocument.getElementById(\"defaultClassName\").focus();\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\tif(document.getElementById(\"defaultClassMethod\").value==\"\"){\r\n\t\t\talert(\"请填写方法名称！\");\r\n");
            out.write("\t\t\tdocument.getElementById(\"defaultClassMethod\").focus();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturnValue=\"@[className:\"+document.getElementById(\"defaultClassName\").value;\r\n\t\treturnValue+=\";methodName:\"+document.getElementById(\"defaultClassMethod\").value;\r\n\t\treturnValue+=\"]\";\r\n\t}\r\n\t\r\n\tparentObj.value=returnValue;\r\n\twindow.close();\r\n}\r\nfunction changeType(tag){\r\n\tvar obj;\r\n\tfor(var i=0;i<3;i++){\r\n\t\tobj=document.getElementsByName(\"tr_d\"+i);\r\n\t\tfor(var j=0;j<obj.length;j++){\r\n\t\t\tobj[j].style.display='none';\r\n\t\t}\r\n\t}\r\n\tobj=document.getElementsByName(\"tr_d\"+tag)\r\n\tfor(var i=0;i<obj.length;i++){\r\n\t\tobj[i].style.display='';\r\n\t}   \r\n}\r\nString.prototype.startWith=function(str){\r\n\tif(this.indexOf(str)==0){\r\n\t\treturn true;\r\n\t}else{\r\n\t\treturn false;\r\n\t}       \r\n} \r\nString.prototype.endWith=function(str){     \r\n    if(this.lastIndexOf(str)==(this.length-str.length)){\r\n\t\treturn true;\r\n\t}else{\r\n\t\treturn false;\r\n\t}       \r\n}  \r\n\r\n\r\n//-->\r\n</script>\r\n<script src=\"/jsoa/js/util.js\"></script>\r\n");
            int evalDoAfterBody = _jspx_th_html_005fhtml_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_html_005fhtml_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fhtml_005fhtml.reuse(_jspx_th_html_005fhtml_005f0);
        _jspx_th_html_005fhtml_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_html_005fhtml_005f0, _jsp_getInstanceManager(), _jspx_th_html_005fhtml_005f0_reused);
      }
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
