/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:58:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.weixin.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.oa.weixin.common.util.MobileUtils;

public final class weixin_005fmessageReminders_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.oa.weixin.common.util.MobileUtils");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n");
      out.write('\r');
      out.write('\n');

String userAgent = request.getHeader("USER-AGENT").toLowerCase();
if(null == userAgent){
	userAgent = "";
}


      out.write("\r\n\t<style type=\"text/css\">\r\n\t.weixin_messageBody {\r\n\t\twidth: 80%;\r\n\t\tdisplay: none;\r\n\t\tborder: 1px solid #ccc;\r\n\t\tposition: fixed;\r\n\t\ttop: 30%;\r\n\t\tleft: 10%;\r\n\t\tbackground: #fff;\r\n\t\tz-index: 999999;\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t\tborder-radius: 5px;\r\n\t\t-webkit-border-radius: 5px;\r\n\t\t-moz-border-radius: 5px;\r\n\t\tbox-shadow: 0 0 100px #fff;\r\n\t}\r\n\t.weixin_messageBody .weixin_messageTitle {\r\n\t\twidth: 94%;\r\n\t\tmargin: 3%;\r\n\t\tcolor: #09f;\r\n\t\tborder-bottom: 2px solid #09f;\r\n\t\tpadding-bottom: 3%;\r\n\t}\r\n\t.weixin_messageBody .weixin_messageContent {\r\n\t\twidth: 94%;\r\n\t\tpadding: 5% 3%;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\t.weixin_messageBody .weixin_messageButtons {\r\n\t\twidth: 100%;\r\n\t\ttext-align: center;\r\n\t\twhite-space: nowrap;\r\n\t\tdisplay: flex;\r\n\t\tdispaly: -webkit-flex;\r\n\t\tdisplay: -webkit-box;\r\n\t}\r\n\t.weixin_messageBody .weixin_messageButtons .weixin_messageButton {\r\n\t\ttext-align: center;\r\n\t\twidth: 98%;\r\n\t\tborder: 1px solid #ccc;\r\n\t\tline-height: 100%;\r\n\t\tpadding: 3%;\r\n\t\tmargin: 1%;\r\n\t\t-webkit-box-flex: 1;\r\n\t\t-webkit-flex: 1;\r\n\t\tflex: 1;\r\n");
      out.write("\t\tborder-radius: 5px;\r\n\t\t-webkit-border-radius: 5px;\r\n\t\t-moz-border-radius: 5px;\r\n\t}\r\n\t.weixin_messageMask {\r\n\t\tposition: fixed;\r\n\t\tdisplay: none;\r\n\t\ttop: 0px;\r\n\t\tleft: 0px;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tbackground: #666;\r\n\t\topacity: 0.7;/* FF 3.5及以上 */\r\n\t\tz-index: 999998;\r\n\t}\r\n\t</style>\r\n\t<script type=\"text/javascript\">\r\n\tfunction weixinMessageReminder(messageType, title, message, func){\r\n\r\n\t\tvar butString = \"<div class=\\\"weixin_messageButton\\\" style=\\\"background: #09f; color: #fff;\\\" onclick=\\\"weixinHiddenMessageBody();\" + func + \"\\\">确定</div>\";\r\n\t\tif(\"alert\" == messageType){\r\n\t\t\tbutString += \"\";\r\n\t\t}\r\n\t\tif(\"confirm\" == messageType){\r\n\t\t\tbutString += \"<div class=\\\"weixin_messageButton\\\" style=\\\"background: #efefef;\\\" onclick=\\\"weixinHiddenMessageBody()\\\">取消</div>\";\r\n\t\t}\r\n\t\t\r\n\t\t$(\"#weixin_messageTitle\").html(title);\r\n\t\t$(\"#weixin_messageContent\").html(message);\r\n\t\t$(\"#weixin_messageButtons\").html(butString);\r\n\t\t");

		if(null!=session.getAttribute("OSType") && null!=session.getAttribute("loginType") && "wap".equals(session.getAttribute("loginType").toString()) 
				&& ("iPhone".equals(session.getAttribute("OSType").toString()) || "ipad".equals(session.getAttribute("OSType").toString()))){
			
      out.write("\r\n\t\t\t//var h = ($(window).height() - $(\"#weixin_messageBody\").height())/2 + $(document).scrollTop();\r\n\t\t\tvar h = $(window).height();\r\n\t\t\t$(\"#weixin_messageBody\").css(\"top\", h/3);\r\n\t\t\t");

		}
		
      out.write("\r\n\t\t$(\"#weixin_messageBody\").show();\r\n\t\t$(\"#weixin_messageMask\").show();\r\n\t}\r\n\tfunction weixinHiddenMessageBody(){\r\n\t\t$(\"#weixin_messageBody\").hide();\r\n\t\t$(\"#weixin_messageMask\").hide();\r\n\t}\r\n\t</script>\r\n\t<div id=\"weixin_messageMask\" class=\"weixin_messageMask\" style=\"display: none;\"></div>\r\n\t<div id=\"weixin_messageBody\" class=\"weixin_messageBody\" style=\"display: none;\">\r\n\t\t<div id=\"weixin_messageTitle\" class=\"weixin_messageTitle\"></div>\r\n\t\t<div id=\"weixin_messageContent\" class=\"weixin_messageContent\"></div>\r\n\t\t<div id=\"weixin_messageButtons\" class=\"weixin_messageButtons\"></div>\r\n\t</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
