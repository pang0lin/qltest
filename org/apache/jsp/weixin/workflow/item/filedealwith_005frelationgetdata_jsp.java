/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 09:59:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.weixin.workflow.item;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.oa.weixin.common.util.WorkflowForWeiXinUtil;
import com.js.system.bean.usermanager.UserEJBBean;
import com.js.system.manager.service.ManagerService;
import java.util.*;
import java.net.URLEncoder;

public final class filedealwith_005frelationgetdata_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.oa.weixin.common.util.WorkflowForWeiXinUtil");
    _jspx_imports_classes.add("java.net.URLEncoder");
    _jspx_imports_classes.add("com.js.system.bean.usermanager.UserEJBBean");
    _jspx_imports_classes.add("com.js.system.manager.service.ManagerService");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n");
 


int j = 0;
int index=0;
String listClass="listTableLine1_xin";
Object[] listObject=null;
String action=(String)request.getParameter("action");
String fieldName=(String)request.getParameter("fieldName");
String fieldId=(String)request.getParameter("fieldId");
String flag=(String)request.getParameter("flag");
String fileType=(String)request.getParameter("fileType");
String worktitle=request.getParameter("worktitle")==null?"":WorkflowForWeiXinUtil.decordStr(request.getParameter("worktitle"));
int limited = com.js.wap.util.WapUtil.LIMITED;
int beginIndex = Integer.parseInt(request.getParameter("beginIndex") == null?"0":request.getParameter("beginIndex"));
String hql="";
Map schMap = new HashMap();
List list=new ArrayList();
com.js.oa.weixin.common.bean.WeiXinBean bean=new com.js.oa.weixin.common.bean.WeiXinBean();
if("weixinselectRelationObject".equals(action)){
     	//检索相关流程列表供选择
     	if(!"1".equals(fileType)){
		     	//我的已发流程
		     	String wfCurEmployeeId = request.getParameter("employeeId")==null?session.getAttribute("userId").toString():request.getParameter("employeeId");
		        String viewSql = "select  aaa.workFileType, aaa.workCurStep, aaa.workTitle, aaa.workDeadLine," +
		                         " aaa.workSubmitPerson, aaa.workSubmitTime, aaa.workType, aaa.workActivity," +
		                         " aaa.workTableId, aaa.workRecordId, aaa.wfWorkId, aaa.workSubmitPerson, " +
		                         " aaa.wfSubmitEmployeeId, aaa.workDoneWithDate,aaa.workMainLinkFile, aaa.workSubmitTime, aaa.workCurStep, aaa.submitOrg, aaa.workProcessId,aaa.workStatus,aaa.initActivity ";
		                 
		        String fromSql = " from com.js.oa.jsflow.po.WFWorkPO aaa,com.js.oa.jsflow.po.WFWorkFlowProcessPO proc join proc.wfPackage wfpackage ";
		        String whereSql = " where aaa.workProcessId=proc.wfWorkFlowProcessId and wfpackage.moduleId=1  and aaa.wfCurEmployeeId = " +
		                          wfCurEmployeeId + " and " +
		                          " aaa.workStatus in (1,100,101,102) and "+
		                          "  workDelete = 0";
		       /*  if(flag != null){  
		        	if("1".equals(request.getParameter("searchStatus"))){
		        		//正在办理
		        		whereSql+=" and  aaa.workDoneWithDate is null ";
		        	}else if("100".equals(request.getParameter("searchStatus"))){
		        		//办结
		        		whereSql+=" and  aaa.workDoneWithDate is not null ";
		        	}
			       
		        } */
		        if(worktitle!=null && !"".equals(worktitle)){
	        	     whereSql+=" and (aaa.workTitle like '%" +worktitle+ "%' )";
	             }
		        
		        
		        whereSql+=" order by aaa.wfWorkId desc";
		        
		        hql=viewSql+fromSql+whereSql;
		        try 
				{
					schMap=bean.getRelationData(hql, beginIndex, limited);
					list=(List)schMap.get(com.js.wap.util.WapUtil.QUERY_LIST);
				} 
				catch (Exception e) 
				{
					e.printStackTrace();
				}
		        
     	}
}




String str="";
String fileTitle="";
/*888888888888888888888888888888888888888888888888888*/
 if(list!=null ){
  for(int m=0;m<list.size();m++)
  {
	    listObject=(Object[])list.get(m);
	    
	    fileTitle=listObject[2].toString();
		if(fileTitle.startsWith("您的")){
			fileTitle=listObject[4].toString()+fileTitle.substring("您".length());
		}
		if(fileTitle.endsWith("您已办理完毕！")){
			fileTitle=fileTitle.substring(0,fileTitle.lastIndexOf("您已办理完毕！"));
		}else if(fileTitle.endsWith("正在办理中！")){
			fileTitle=fileTitle.substring(0,fileTitle.lastIndexOf("正在办理中！"));
		}else if(fileTitle.endsWith("已办理完毕！")){
			fileTitle=fileTitle.substring(0,fileTitle.lastIndexOf("已办理完毕！"));
		}
	    String batchId=listObject[8]+"-"+listObject[9]+"-"+fileTitle;
	    
		str+="<div class=\"item\">";
		str+="<div class=\"checkbox\">";
		str+="<input type=\"checkbox\" name=\"batchId\" value="+batchId+">";
		str+="</div>";
		str+="<div class=\"content\">";
		str+="<div class=\"first\">";
		str+="<div class=\"title\">"+(fileTitle.length()>15 ? fileTitle .substring(0, 15) + "..." : fileTitle)+"</div>";
		str+="<div class=\"time\">"+listObject[5].toString().substring(5, 10)+"</div>";
		str+="</div>";
		str+="<div class=\"second\">"+listObject[4]+"</div>";
		str+=" </div>";
		str+="</div>";
}}

//分页操作begin


		 int size=Integer.parseInt(schMap.get(com.js.wap.util.WapUtil.RECORD_COUNT)+"");
		int curNum = beginIndex/com.js.wap.util.WapUtil.LIMITED + 1;	// 当前页数
		int totalNum = size%com.js.wap.util.WapUtil.LIMITED > 0 ? size/com.js.wap.util.WapUtil.LIMITED+1 : size/com.js.wap.util.WapUtil.LIMITED;	// 总页数
		int upNum = (beginIndex/com.js.wap.util.WapUtil.LIMITED) - 1;
		int upIndex = upNum * com.js.wap.util.WapUtil.LIMITED;
		int nextNum = (beginIndex/com.js.wap.util.WapUtil.LIMITED) + 1;
		int nextIndex = nextNum * com.js.wap.util.WapUtil.LIMITED;

		String upUrl = "#", nextUrl = "#", upUrlFont = "", nextUrlFont = "";
		if (size > com.js.wap.util.WapUtil.LIMITED) {
			if (upIndex >= 0){
			    if (null != worktitle && !"".equals(worktitle)){
			        worktitle=URLEncoder.encode(URLEncoder.encode(worktitle, "utf-8"), "utf-8");
			    }else{
			        worktitle=""; 
			    }
				upUrl = "searchRelationObject("+upIndex+","+upIndex+",'"+worktitle+"')";
			} else{
				upUrl = "javascript:void(0);";
				upUrlFont = "grayFont";
			}
			if (nextIndex < size){
			    if (null != worktitle && !"".equals(worktitle)){
			        worktitle=URLEncoder.encode(URLEncoder.encode(worktitle, "utf-8"), "utf-8");
			    }else{
			        worktitle=""; 
			    }
			    nextUrl = "searchRelationObject("+nextIndex+","+nextIndex+",'"+worktitle+"')";
			} else{
				nextUrl = "javascript:void(0);";
				nextUrlFont = "grayFont";
			}
			
			str+="<div class=\"bottomDiv\" style=\"height: 40px; margin: 0;\">";
			str+="<a href=javascript:"+upUrl+" >";
			str+="<div class=\"up\" style=\"height: 40px; line-height: 40px;\" "+upUrlFont+">上一页</div>";
			str+="</a>";
			str+="<div class=\"page grayFont\" style=\"height: 40px; line-height: 40px;\">"+curNum+"/"+totalNum+"</div>";
			str+="<a href=javascript:"+nextUrl+">";
			str+="<div class=\"down\" style=\"height: 40px; line-height: 40px;\" "+nextUrlFont+">下一页</div>";
			str+="</a>";
			str+="</div>";
			
			} 
		
/*8888888888888888888888888888888888888888888888888888888888*/
out.write(str);



      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
