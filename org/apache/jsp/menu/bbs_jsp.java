/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:02:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.menu;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.oa.bbs.service.ForumClassBD;
import com.js.system.manager.service.ManagerService;
import com.js.lang.Resource;

public final class bbs_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.lang.Resource");
    _jspx_imports_classes.add("com.js.oa.bbs.service.ForumClassBD");
    _jspx_imports_classes.add("com.js.system.manager.service.ManagerService");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);

String module=request.getParameter("module");
String index=request.getParameter("index");  

String domainId = session.getAttribute("domainId")==null?"0":session.getAttribute("domainId").toString();
String curUserId = session.getAttribute("userId").toString();
String curOrgId = session.getAttribute("orgId").toString();
String orgIdString = session.getAttribute("orgIdString").toString() ;
String local = session.getAttribute("org.apache.struts.action.LOCALE").toString();


ManagerService mbd=new ManagerService();
String whereScopePara = mbd.getScopeFinalWhere(curUserId,curOrgId,orgIdString,"po.classUserId","po.classUserOrg","po.classUserGroup") ;

ForumClassBD bd=new ForumClassBD();
java.util.List list = bd.listMenu(whereScopePara,curUserId,domainId);


//设置menu中的[论坛管理]  ^!^
boolean  manageRight = mbd.hasRightType(curUserId,"讨论") ;


      out.write("\r\n<html>\r\n<body>\r\n <div id=\"menuObj\">\r\n\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\"  style=\"font-size:12px;\">\r\n\t\r\n\t  ");

	  Object[] obj;
	  String href="";
	  String examinYesOrNot="";
	  for(int i=0;i<list.size();i++){
		   obj = (Object[])list.get(i);			   
		   if(obj[10] != null && "1".equals(obj[10].toString())){
			   examinYesOrNot="yesExamin";
		   }else{
			   examinYesOrNot="";
		   }
		   href="/jsoa/ForumAction.do?action=list&classId="+obj[0]+"&examinYesOrNot="+examinYesOrNot;
		   
	  
      out.write("\r\n\t  <tr onmouseout=\"this.style.color='#000';\" onmouseover=\"this.style.color='orange';this.style.cursor='hand';\" onclick=\"jumpMain('");
      out.print(href);
      out.write("')\">\r\n        <td width=\"25\" height=\"23\" align=\"right\" valign=\"middle\"><img id=\"subIMG");
      out.print(index );
      out.write("_0\" src=\"/jsoa/img/right2.gif\" /></td>\r\n        <td align=\"left\" valign=\"middle\">&nbsp;");
      out.print(obj[1]);
      out.write("</td>\r\n      </tr>\r\n\t  \r\n\t  ");

	   }
	   if(manageRight) {
	   
      out.write("\r\n\t   <tr onmouseout=\"this.style.color='#000';\" onmouseover=\"this.style.color='orange';this.style.cursor='hand';\" onclick=\"jumpMain('/jsoa/ForumClassAction.do?action=list')\">\r\n        <td width=\"25\" height=\"23\" align=\"right\" valign=\"middle\"><img id=\"subIMG");
      out.print(index );
      out.write("_0\" src=\"/jsoa/img/right2.gif\" /></td>\r\n        <td align=\"left\" valign=\"middle\">&nbsp;");
      out.print(Resource.getValue(local,"bbs","bbs.bbsmanage"));
      out.write("</td>\r\n      </tr>\r\n\t   ");

	   }
		ForumClassBD forumClassBD = new ForumClassBD();
		Boolean isOwner = forumClassBD.isClassOwner(new Long(session.getAttribute("userId").toString()), new Long(session.getAttribute("domainId").toString()));
		if(Boolean.TRUE.equals(isOwner)) {
        
      out.write("\r\n        <tr onmouseout=\"this.style.color='#000';\" onmouseover=\"this.style.color='orange';this.style.cursor='hand';\" onclick=\"openURL('/jsoa/ForumAction.do?action=list&examinYesOrNot=notExamin&queryClass=none')\">\r\n        <td width=\"25\" height=\"23\" align=\"right\" valign=\"middle\"><img id=\"subIMG");
      out.print(index );
      out.write("_0\" src=\"/jsoa/img/right2.gif\" /></td>\r\n        <td align=\"left\" valign=\"middle\">&nbsp;");
      out.print(Resource.getValue(local,"bbs","bbs.forumcheck"));
      out.write("</td>\r\n      </tr>\r\n      ");
} 
      out.write("\t\r\n      \r\n      \r\n   </table>\r\n </div>\r\n</body>\r\n</html>\r\n<script>\r\nparent.subMenuTD");
      out.print(index);
      out.write(".innerHTML=document.all.menuObj.innerHTML;\r\n</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
