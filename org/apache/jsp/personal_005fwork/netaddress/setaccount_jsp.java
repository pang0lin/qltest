/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: JspC/ApacheTomcat8
 * Generated at: 2023-01-06 10:01:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.personal_005fwork.netaddress;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.js.oa.personalwork.netaddress.service.AddressBD;
import com.js.lang.Resource;

public final class setaccount_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-nested.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-tiles.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-logic.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-html.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-template.tld", Long.valueOf(1499751390000L));
    _jspx_dependants.put("/WEB-INF/tag-lib/struts-bean.tld", Long.valueOf(1499751390000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.js.oa.personalwork.netaddress.service.AddressBD");
    _jspx_imports_classes.add("com.js.lang.Resource");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fhtml_005fhtml;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fhtml_005fhtml = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fhtml_005fhtml.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"../../../public/jsp/error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");

response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);

if(request.getAttribute("oprResult")!=null){
	
      out.write("\r\n\t<script>\r\n\talert(\"帐号设置成功！\");\r\n\twindow.close();\r\n\t</script>\r\n\t");

}else{

String userId=session.getAttribute("userId").toString();
String addressId=request.getParameter("addressId");

String local = session.getAttribute("org.apache.struts.action.LOCALE").toString();
AddressBD bd=new AddressBD();
String[] account=bd.getAccount(addressId,userId);

String formelseparam=(String)request.getAttribute("formelseparam");
String elseparam=(String)request.getAttribute("elseparam");
String[] formelseparamValue=null;
String[] elseparamValue=null;

if(!"".equals(formelseparam) && formelseparam!=null){
	formelseparamValue=formelseparam.split("#&#");
}
if(!"".equals(elseparam) && elseparam!=null){
	elseparamValue=elseparam.split("#&#");
}

      out.write("\r\n<!--\r\n设置关联系统密码\r\n-->\r\n");
      //  html:html
      org.apache.struts.taglib.html.HtmlTag _jspx_th_html_005fhtml_005f0 = (org.apache.struts.taglib.html.HtmlTag) _005fjspx_005ftagPool_005fhtml_005fhtml.get(org.apache.struts.taglib.html.HtmlTag.class);
      boolean _jspx_th_html_005fhtml_005f0_reused = false;
      try {
        _jspx_th_html_005fhtml_005f0.setPageContext(_jspx_page_context);
        _jspx_th_html_005fhtml_005f0.setParent(null);
        int _jspx_eval_html_005fhtml_005f0 = _jspx_th_html_005fhtml_005f0.doStartTag();
        if (_jspx_eval_html_005fhtml_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=gb2312\">\r\n<link href=\"/jsoa/skin/");
            out.print(session.getAttribute("skin"));
            out.write("/style-");
            out.print(session.getAttribute("browserVersion"));
            out.write(".css\" rel=\"stylesheet\" type=\"text/css\" />\r\n<title>设置登录参数</title>\r\n<script language=\"JavaScript\" src=\"/jsoa/js/resource/");
            out.print(local);
            out.write("/CommonResource.js\" type=\"text/javascript\"></script>\r\n<script language=\"JavaScript\" src=\"js/date0.js\"></script>\r\n<script src=\"/jsoa/js/resource/");
            out.print(local);
            out.write("/PersonalworkResource.js\" language=\"javascript\"></script>\r\n\r\n</head>\r\n\r\n<body class=\"MainFrameBox\">\r\n\r\n\r\n<!--table width=\"100%\" border=\"0\" cellpadding=\"10\" cellspacing=\"0\" class=\"docBoxNoPanel\"-->\r\n<table width=\"100%\" border=\"0\" cellpadding=\"10\" cellspacing=\"0\" class=\"docBoxNoPanel\">\r\n <tr>\r\n    <td valign=\"top\">\r\n\t<div id=\"docinfo0\" style=\"display:;\">\r\n\t   <table width=\"100%\" id=\"fieldTable\"  border=\"0\" cellpadding=\"2\" cellspacing=\"1\">\r\n\t\t<form name=frm action=\"/jsoa/AddressAction.do?action=setaccount\"  method=\"post\">\r\n\t\t<input type=\"hidden\" name=\"addressId\" value=\"");
            out.print(addressId);
            out.write("\">\r\n\t\t<tr>\r\n\t\t  <td width=\"15%\"><input name=fieldNum type=checkbox disabled=\"disabled\">\r\n\t\t  <input type=\"hidden\" name=\"fieldId\" value=\"-1\">\r\n\t\t  <label class=\"MustFillColor\">*</label>登录帐号：</td>\r\n\t\t  <td><input type=text class=\"inputText\" maxlength=\"30\" name=\"userName\" style=\"width:175px;\" value=\"");
            out.print(account[0] );
            out.write("\"/></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t  <td><input name=fieldNum type=checkbox disabled=\"disabled\">\r\n\t\t  <input type=\"hidden\" name=\"fieldId\" value=\"-1\">\r\n\t\t  <label class=\"MustFillColor\">*</label>登录密码：</td>\r\n\t\t  <td><input type=password class=\"inputText\" maxlength=\"30\" name=\"userPass\"  style=\"width:175px;\" value=\"");
            out.print(account[1] );
            out.write("\"/></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t  <td><input name=fieldNum type=checkbox disabled=\"disabled\">\r\n\t\t  <input type=\"hidden\" name=\"fieldId\" value=\"-1\">\r\n\t\t  <label class=\"MustFillColor\">*</label>确认密码：</td>\r\n\t\t  <td><input type=password class=\"inputText\" name=\"passcon\" maxlength=\"30\"  style=\"width:175px;\" value=\"");
            out.print(account[1] );
            out.write("\"/></td>\r\n\t\t</tr>\r\n\t\t");
if(formelseparamValue!=null){
			for(int i=0;i<formelseparamValue.length;i++){
			
            out.write("\r\n\t\t<tr>\r\n\t\t  <td><input name=fieldNum type=checkbox >\r\n\t\t  <input type=\"hidden\" name=\"fieldId\" value=\"-1\">\r\n\t\t  <label class=\"MustFillColor\">*</label>");
            out.print(formelseparamValue[i] );
            out.write("：</td>\r\n\t\t  <td><input type=text class=\"inputText\" name=\"fieldName\" id=\"fieldName\" maxlength=\"30\"  style=\"width:175px;\" ");
if(elseparamValue!=null){ 
            out.write(" value=\"");
            out.print(elseparamValue[i]);
            out.write('"');
            out.write(' ');
}
            out.write("/></td>\r\n\t\t</tr>\r\n\t\t");
}}
            out.write("\r\n\t\t</form>\r\n\t</table>\r\n\t</div>\r\n\t<br/>\r\n\t<table>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"2\">\r\n\t\t\t\t<input type=\"button\" class=\"btnButton2font\" onclick=\"commit();\" value=\"确定\" />\r\n\t\t\t\t<button class=\"btnButton2font\" onclick=\"document.frm.reset();\">重置</button>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</table>\r\n</tr>\r\n</table>\r\n\r\n</body>\r\n");
            int evalDoAfterBody = _jspx_th_html_005fhtml_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_html_005fhtml_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fhtml_005fhtml.reuse(_jspx_th_html_005fhtml_005f0);
        _jspx_th_html_005fhtml_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_html_005fhtml_005f0, _jsp_getInstanceManager(), _jspx_th_html_005fhtml_005f0_reused);
      }
      out.write("\r\n<script language=\"javascript\">\r\n\r\nfunction insertFieldRow(){\r\n\tvar tableObj = findObj(\"fieldTable\",document);\r\n\tvar tableObj = tableObj.insertRow(tableObj.rows.length);\r\n\t\r\n    var fieldCell1=tableObj.insertCell(0);\r\n\tvar fieldCell2=tableObj.insertCell(1);\r\n\t\r\n\tfieldCell1.innerHTML=\"<input name=fieldNum type=checkbox><input type=\\\"hidden\\\" name=\\\"fieldId\\\" value=\\\"-1\\\"><input type=\\\"text\\\" name=\\\"fieldDesName\\\" id=\\\"fieldDesName\\\" value=\\\"\\\" style=\\\"width:70%;\\\" />\";\r\n\tfieldCell2.innerHTML=\"<input type=text style=\\\"width:18%\\\" name=\\\"fieldName\\\"  id=\\\"fieldName\\\"> \";\r\n\r\n\t\r\n}\r\nfunction findObj(theObj, theDoc){  \r\n\tvar p, i, foundObj;\r\n    if(!theDoc) theDoc = document;  if( (p = theObj.indexOf(\"?\")) > 0 && parent.frames.length)  { \r\n\t\ttheDoc = parent.frames[theObj.substring(p+1)].document;    \r\n\t\ttheObj = theObj.substring(0,p);  \r\n\t}  \r\n\tif(!(foundObj = theDoc[theObj]) && theDoc.all) \r\n\t\tfoundObj = theDoc.all[theObj]; \r\n\tfor (i=0; !foundObj && i < theDoc.forms.length; i++)     \r\n\t\tfoundObj = theDoc.forms[i][theObj];  \r\n");
      out.write("\tfor(i=0; !foundObj && theDoc.layers && i < theDoc.layers.length; i++)     \r\n\t\tfoundObj = findObj(theObj,theDoc.layers[i].document);  \r\n\tif(!foundObj && document.getElementById)\r\n\t\tfoundObj = document.getElementById(theObj);\r\n    return foundObj;\r\n\t}\r\nfunction deleteFieldRow(){\r\n\tvar tableObj=document.all.fieldTable;\r\n\tvar fieldNum=document.getElementsByName(\"fieldNum\");\r\n\tvar fieldId = document.getElementsByName(\"fieldId\");\r\n\tfor(var i=fieldNum.length-1;i>=0;i--){\r\n\t\tif(fieldNum[i].checked){\r\n\t\t\tif(fieldId[i].value==\"-1\"){\r\n\t\t\t\ttableObj.deleteRow(i);\r\n\t\t\t}else{\r\n\t\t\t\tif(confirm(\"删除参数后，数据库中该参数的数据将会丢失，确定要删除吗？\")){\r\n\t\t\t\t\ttableObj.deleteRow(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n//检查密码\r\nfunction checkPass() {\r\n    if(frm.userName.value==\"\"){\r\n        alert(\"帐号不能为空！\");\r\n        frm.userName.focus();\r\n        return false  ;\r\n    }\r\n    if(frm.userPass.value==\"\") {\r\n        alert(\"密码不能为空！\");\r\n        frm.userPass.focus();\r\n        return false ;\r\n    }\r\n\tif(frm.userPass.value==frm.passcon.value){\r\n    \treturn true ;\r\n\t}else {\r\n");
      out.write("    \talert(\"两次输入的密码不一致！\");\r\n        frm.userPass.focus();\r\n        frm.passcon.select() ;\r\n    }\r\n    return false  ;\r\n}\r\n\r\n//提交\r\nfunction commit() {\r\n    if(checkPass()==false) return false ;\r\n    frm.submit();\r\n}\r\n\r\n</script>\r\n<script src=\"/jsoa/js/util.js\"></script>\r\n");
}
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
